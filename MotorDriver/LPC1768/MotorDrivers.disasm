
LPC1768/MotorDrivers.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000024a9


Disassembly of section .text:

00000000 <__isr_vector>:
       0:	10008000 	.word	0x10008000
       4:	000024a9 	.word	0x000024a9
       8:	000024d9 	.word	0x000024d9
       c:	000024db 	.word	0x000024db
      10:	000024dd 	.word	0x000024dd
      14:	000024df 	.word	0x000024df
      18:	000024e1 	.word	0x000024e1
	...
      2c:	000024e3 	.word	0x000024e3
      30:	000024e5 	.word	0x000024e5
      34:	00000000 	.word	0x00000000
      38:	000024e7 	.word	0x000024e7
      3c:	000024e9 	.word	0x000024e9
      40:	000024eb 	.word	0x000024eb
      44:	000024eb 	.word	0x000024eb
      48:	000024eb 	.word	0x000024eb
      4c:	000024eb 	.word	0x000024eb
      50:	000024eb 	.word	0x000024eb
      54:	000024eb 	.word	0x000024eb
      58:	000024eb 	.word	0x000024eb
      5c:	000024eb 	.word	0x000024eb
      60:	000024eb 	.word	0x000024eb
      64:	000024eb 	.word	0x000024eb
      68:	000024eb 	.word	0x000024eb
      6c:	000024eb 	.word	0x000024eb
      70:	000024eb 	.word	0x000024eb
      74:	000024eb 	.word	0x000024eb
      78:	000024eb 	.word	0x000024eb
      7c:	000024eb 	.word	0x000024eb
      80:	000024eb 	.word	0x000024eb
      84:	000024eb 	.word	0x000024eb
      88:	000024eb 	.word	0x000024eb
      8c:	000024eb 	.word	0x000024eb
      90:	000024eb 	.word	0x000024eb
      94:	000024eb 	.word	0x000024eb
      98:	000024eb 	.word	0x000024eb
      9c:	000024eb 	.word	0x000024eb
      a0:	000024eb 	.word	0x000024eb
      a4:	000024eb 	.word	0x000024eb
      a8:	000024eb 	.word	0x000024eb
      ac:	000024eb 	.word	0x000024eb
      b0:	000024eb 	.word	0x000024eb
      b4:	000024eb 	.word	0x000024eb
      b8:	000024eb 	.word	0x000024eb
      bc:	000024eb 	.word	0x000024eb
      c0:	000024eb 	.word	0x000024eb
      c4:	000024eb 	.word	0x000024eb
      c8:	000024eb 	.word	0x000024eb

000000cc <__do_global_dtors_aux>:
      cc:	b510      	push	{r4, lr}
      ce:	4c05      	ldr	r4, [pc, #20]	; (e4 <__do_global_dtors_aux+0x18>)
      d0:	7823      	ldrb	r3, [r4, #0]
      d2:	b933      	cbnz	r3, e2 <__do_global_dtors_aux+0x16>
      d4:	4b04      	ldr	r3, [pc, #16]	; (e8 <__do_global_dtors_aux+0x1c>)
      d6:	b113      	cbz	r3, de <__do_global_dtors_aux+0x12>
      d8:	4804      	ldr	r0, [pc, #16]	; (ec <__do_global_dtors_aux+0x20>)
      da:	f3af 8000 	nop.w
      de:	2301      	movs	r3, #1
      e0:	7023      	strb	r3, [r4, #0]
      e2:	bd10      	pop	{r4, pc}
      e4:	100002ac 	.word	0x100002ac
      e8:	00000000 	.word	0x00000000
      ec:	0001cd24 	.word	0x0001cd24

000000f0 <frame_dummy>:
      f0:	4b08      	ldr	r3, [pc, #32]	; (114 <frame_dummy+0x24>)
      f2:	b510      	push	{r4, lr}
      f4:	b11b      	cbz	r3, fe <frame_dummy+0xe>
      f6:	4808      	ldr	r0, [pc, #32]	; (118 <frame_dummy+0x28>)
      f8:	4908      	ldr	r1, [pc, #32]	; (11c <frame_dummy+0x2c>)
      fa:	f3af 8000 	nop.w
      fe:	4808      	ldr	r0, [pc, #32]	; (120 <frame_dummy+0x30>)
     100:	6803      	ldr	r3, [r0, #0]
     102:	b903      	cbnz	r3, 106 <frame_dummy+0x16>
     104:	bd10      	pop	{r4, pc}
     106:	4b07      	ldr	r3, [pc, #28]	; (124 <frame_dummy+0x34>)
     108:	2b00      	cmp	r3, #0
     10a:	d0fb      	beq.n	104 <frame_dummy+0x14>
     10c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     110:	4718      	bx	r3
     112:	bf00      	nop
     114:	00000000 	.word	0x00000000
     118:	0001cd24 	.word	0x0001cd24
     11c:	100002b0 	.word	0x100002b0
     120:	100002ac 	.word	0x100002ac
     124:	00000000 	.word	0x00000000

00000128 <mbed::SerialBase::~SerialBase()>:
     128:	4770      	bx	lr
     12a:	bf00      	nop

0000012c <mbed::Serial::~Serial()>:
     12c:	b510      	push	{r4, lr}
     12e:	4604      	mov	r4, r0
     130:	4b06      	ldr	r3, [pc, #24]	; (14c <mbed::Serial::~Serial()+0x20>)
     132:	3048      	adds	r0, #72	; 0x48
     134:	f103 0118 	add.w	r1, r3, #24
     138:	f103 024c 	add.w	r2, r3, #76	; 0x4c
     13c:	6023      	str	r3, [r4, #0]
     13e:	64a1      	str	r1, [r4, #72]	; 0x48
     140:	64e2      	str	r2, [r4, #76]	; 0x4c
     142:	f002 f937 	bl	23b4 <mbed::Stream::~Stream()>
     146:	4620      	mov	r0, r4
     148:	bd10      	pop	{r4, pc}
     14a:	bf00      	nop
     14c:	0001a850 	.word	0x0001a850

00000150 <non-virtual thunk to mbed::Serial::~Serial()>:
     150:	f1a0 0048 	sub.w	r0, r0, #72	; 0x48
     154:	f7ff bfea 	b.w	12c <mbed::Serial::~Serial()>

00000158 <non-virtual thunk to mbed::Serial::~Serial()>:
     158:	f1a0 004c 	sub.w	r0, r0, #76	; 0x4c
     15c:	f7ff bfe6 	b.w	12c <mbed::Serial::~Serial()>

00000160 <mbed::SerialBase::~SerialBase()>:
     160:	b510      	push	{r4, lr}
     162:	4604      	mov	r4, r0
     164:	f002 f9d3 	bl	250e <operator delete(void*)>
     168:	4620      	mov	r0, r4
     16a:	bd10      	pop	{r4, pc}

0000016c <main>:
     16c:	b530      	push	{r4, r5, lr}
     16e:	f2ad 6d5c 	subw	sp, sp, #1628	; 0x65c
     172:	2300      	movs	r3, #0
     174:	a810      	add	r0, sp, #64	; 0x40
     176:	9302      	str	r3, [sp, #8]
     178:	9303      	str	r3, [sp, #12]
     17a:	9304      	str	r3, [sp, #16]
     17c:	9305      	str	r3, [sp, #20]
     17e:	f000 fa17 	bl	5b0 <Rod::Rod()>
     182:	a8d3      	add	r0, sp, #844	; 0x34c
     184:	f000 fa14 	bl	5b0 <Rod::Rod()>
     188:	a808      	add	r0, sp, #32
     18a:	f000 fa8d 	bl	6a8 <Tracker::Tracker()>
     18e:	f000 f89d 	bl	2cc <startMillis()>
     192:	4813      	ldr	r0, [pc, #76]	; (1e0 <main+0x74>)
     194:	f002 f882 	bl	229c <mbed::SerialBase::readable()>
     198:	b9a8      	cbnz	r0, 1c6 <main+0x5a>
     19a:	9d02      	ldr	r5, [sp, #8]
     19c:	9c03      	ldr	r4, [sp, #12]
     19e:	aa04      	add	r2, sp, #16
     1a0:	ab01      	add	r3, sp, #4
     1a2:	a808      	add	r0, sp, #32
     1a4:	a906      	add	r1, sp, #24
     1a6:	9506      	str	r5, [sp, #24]
     1a8:	9407      	str	r4, [sp, #28]
     1aa:	f000 fa8f 	bl	6cc <Tracker::predict(Point<int>, Point<int>&, int&)>
     1ae:	9b01      	ldr	r3, [sp, #4]
     1b0:	4602      	mov	r2, r0
     1b2:	b17b      	cbz	r3, 1d4 <main+0x68>
     1b4:	a810      	add	r0, sp, #64	; 0x40
     1b6:	9905      	ldr	r1, [sp, #20]
     1b8:	f000 fa18 	bl	5ec <Rod::take_action(int, int)>
     1bc:	4808      	ldr	r0, [pc, #32]	; (1e0 <main+0x74>)
     1be:	f002 f86d 	bl	229c <mbed::SerialBase::readable()>
     1c2:	2800      	cmp	r0, #0
     1c4:	d0e9      	beq.n	19a <main+0x2e>
     1c6:	4907      	ldr	r1, [pc, #28]	; (1e4 <main+0x78>)
     1c8:	aa02      	add	r2, sp, #8
     1ca:	ab03      	add	r3, sp, #12
     1cc:	4806      	ldr	r0, [pc, #24]	; (1e8 <main+0x7c>)
     1ce:	f002 f903 	bl	23d8 <mbed::Stream::scanf(char const*, ...)>
     1d2:	e7e2      	b.n	19a <main+0x2e>
     1d4:	a8d3      	add	r0, sp, #844	; 0x34c
     1d6:	9905      	ldr	r1, [sp, #20]
     1d8:	f000 fa08 	bl	5ec <Rod::take_action(int, int)>
     1dc:	e7d9      	b.n	192 <main+0x26>
     1de:	bf00      	nop
     1e0:	100002c8 	.word	0x100002c8
     1e4:	0001a528 	.word	0x0001a528
     1e8:	10000310 	.word	0x10000310

000001ec <mbed::Serial::~Serial()>:
     1ec:	b510      	push	{r4, lr}
     1ee:	4604      	mov	r4, r0
     1f0:	4b07      	ldr	r3, [pc, #28]	; (210 <mbed::Serial::~Serial()+0x24>)
     1f2:	3048      	adds	r0, #72	; 0x48
     1f4:	f103 0118 	add.w	r1, r3, #24
     1f8:	f103 024c 	add.w	r2, r3, #76	; 0x4c
     1fc:	6023      	str	r3, [r4, #0]
     1fe:	64a1      	str	r1, [r4, #72]	; 0x48
     200:	64e2      	str	r2, [r4, #76]	; 0x4c
     202:	f002 f8d7 	bl	23b4 <mbed::Stream::~Stream()>
     206:	4620      	mov	r0, r4
     208:	f002 f981 	bl	250e <operator delete(void*)>
     20c:	4620      	mov	r0, r4
     20e:	bd10      	pop	{r4, pc}
     210:	0001a850 	.word	0x0001a850

00000214 <non-virtual thunk to mbed::Serial::~Serial()>:
     214:	f1a0 0048 	sub.w	r0, r0, #72	; 0x48
     218:	e7e8      	b.n	1ec <mbed::Serial::~Serial()>
     21a:	bf00      	nop

0000021c <non-virtual thunk to mbed::Serial::~Serial()>:
     21c:	f1a0 004c 	sub.w	r0, r0, #76	; 0x4c
     220:	e7e4      	b.n	1ec <mbed::Serial::~Serial()>
     222:	bf00      	nop

00000224 <_GLOBAL__sub_I_pc>:
     224:	b570      	push	{r4, r5, r6, lr}
     226:	4e0c      	ldr	r6, [pc, #48]	; (258 <_GLOBAL__sub_I_pc+0x34>)
     228:	4c0c      	ldr	r4, [pc, #48]	; (25c <_GLOBAL__sub_I_pc+0x38>)
     22a:	4d0d      	ldr	r5, [pc, #52]	; (260 <_GLOBAL__sub_I_pc+0x3c>)
     22c:	4630      	mov	r0, r6
     22e:	f002 f983 	bl	2538 <std::ios_base::Init::Init()>
     232:	4622      	mov	r2, r4
     234:	4630      	mov	r0, r6
     236:	490b      	ldr	r1, [pc, #44]	; (264 <_GLOBAL__sub_I_pc+0x40>)
     238:	f002 f974 	bl	2524 <__aeabi_atexit>
     23c:	4628      	mov	r0, r5
     23e:	490a      	ldr	r1, [pc, #40]	; (268 <_GLOBAL__sub_I_pc+0x44>)
     240:	4a0a      	ldr	r2, [pc, #40]	; (26c <_GLOBAL__sub_I_pc+0x48>)
     242:	2300      	movs	r3, #0
     244:	f002 f846 	bl	22d4 <mbed::Serial::Serial(PinName, PinName, char const*)>
     248:	4628      	mov	r0, r5
     24a:	4622      	mov	r2, r4
     24c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     250:	4907      	ldr	r1, [pc, #28]	; (270 <_GLOBAL__sub_I_pc+0x4c>)
     252:	f002 b967 	b.w	2524 <__aeabi_atexit>
     256:	bf00      	nop
     258:	10000328 	.word	0x10000328
     25c:	100000c8 	.word	0x100000c8
     260:	100002c8 	.word	0x100002c8
     264:	00002649 	.word	0x00002649
     268:	2009c002 	.word	0x2009c002
     26c:	2009c003 	.word	0x2009c003
     270:	0000012d 	.word	0x0000012d

00000274 <millisTicker()>:
     274:	4a02      	ldr	r2, [pc, #8]	; (280 <millisTicker()+0xc>)
     276:	6813      	ldr	r3, [r2, #0]
     278:	3301      	adds	r3, #1
     27a:	6013      	str	r3, [r2, #0]
     27c:	4770      	bx	lr
     27e:	bf00      	nop
     280:	1000035c 	.word	0x1000035c

00000284 <mbed::Ticker::~Ticker()>:
     284:	b510      	push	{r4, lr}
     286:	4604      	mov	r4, r0
     288:	4b04      	ldr	r3, [pc, #16]	; (29c <mbed::Ticker::~Ticker()+0x18>)
     28a:	6003      	str	r3, [r0, #0]
     28c:	f002 f8c8 	bl	2420 <mbed::Ticker::detach()>
     290:	4620      	mov	r0, r4
     292:	f002 f8f5 	bl	2480 <mbed::TimerEvent::~TimerEvent()>
     296:	4620      	mov	r0, r4
     298:	bd10      	pop	{r4, pc}
     29a:	bf00      	nop
     29c:	0001a900 	.word	0x0001a900

000002a0 <mbed::Ticker::~Ticker()>:
     2a0:	b510      	push	{r4, lr}
     2a2:	4604      	mov	r4, r0
     2a4:	4b05      	ldr	r3, [pc, #20]	; (2bc <mbed::Ticker::~Ticker()+0x1c>)
     2a6:	6003      	str	r3, [r0, #0]
     2a8:	f002 f8ba 	bl	2420 <mbed::Ticker::detach()>
     2ac:	4620      	mov	r0, r4
     2ae:	f002 f8e7 	bl	2480 <mbed::TimerEvent::~TimerEvent()>
     2b2:	4620      	mov	r0, r4
     2b4:	f002 f92b 	bl	250e <operator delete(void*)>
     2b8:	4620      	mov	r0, r4
     2ba:	bd10      	pop	{r4, pc}
     2bc:	0001a900 	.word	0x0001a900

000002c0 <millis()>:
     2c0:	4b01      	ldr	r3, [pc, #4]	; (2c8 <millis()+0x8>)
     2c2:	6818      	ldr	r0, [r3, #0]
     2c4:	4770      	bx	lr
     2c6:	bf00      	nop
     2c8:	1000035c 	.word	0x1000035c

000002cc <startMillis()>:
     2cc:	b510      	push	{r4, lr}
     2ce:	4c06      	ldr	r4, [pc, #24]	; (2e8 <startMillis()+0x1c>)
     2d0:	4906      	ldr	r1, [pc, #24]	; (2ec <startMillis()+0x20>)
     2d2:	f104 0014 	add.w	r0, r4, #20
     2d6:	f001 fddd 	bl	1e94 <mbed::FunctionPointer::attach(void (*)())>
     2da:	4620      	mov	r0, r4
     2dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     2e0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
     2e4:	f002 b8a8 	b.w	2438 <mbed::Ticker::setup(unsigned long)>
     2e8:	1000032c 	.word	0x1000032c
     2ec:	00000275 	.word	0x00000275

000002f0 <_GLOBAL__sub_I__Z12millisTickerv>:
     2f0:	b510      	push	{r4, lr}
     2f2:	4c09      	ldr	r4, [pc, #36]	; (318 <_GLOBAL__sub_I__Z12millisTickerv+0x28>)
     2f4:	4620      	mov	r0, r4
     2f6:	f002 f8b1 	bl	245c <mbed::TimerEvent::TimerEvent()>
     2fa:	4620      	mov	r0, r4
     2fc:	4b07      	ldr	r3, [pc, #28]	; (31c <_GLOBAL__sub_I__Z12millisTickerv+0x2c>)
     2fe:	2100      	movs	r1, #0
     300:	f840 3b14 	str.w	r3, [r0], #20
     304:	f001 fdc0 	bl	1e88 <mbed::FunctionPointer::FunctionPointer(void (*)())>
     308:	4620      	mov	r0, r4
     30a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     30e:	4904      	ldr	r1, [pc, #16]	; (320 <_GLOBAL__sub_I__Z12millisTickerv+0x30>)
     310:	4a04      	ldr	r2, [pc, #16]	; (324 <_GLOBAL__sub_I__Z12millisTickerv+0x34>)
     312:	f002 b907 	b.w	2524 <__aeabi_atexit>
     316:	bf00      	nop
     318:	1000032c 	.word	0x1000032c
     31c:	0001a900 	.word	0x0001a900
     320:	00000285 	.word	0x00000285
     324:	100000c8 	.word	0x100000c8

00000328 <Motors::Motors()>:
     328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     32c:	4604      	mov	r4, r0
     32e:	2500      	movs	r5, #0
     330:	b082      	sub	sp, #8
     332:	4941      	ldr	r1, [pc, #260]	; (438 <Motors::Motors()+0x110>)
     334:	f000 fffe 	bl	1334 <pwmout_init>
     338:	f104 0008 	add.w	r0, r4, #8
     33c:	60a5      	str	r5, [r4, #8]
     33e:	60e5      	str	r5, [r4, #12]
     340:	6125      	str	r5, [r4, #16]
     342:	6165      	str	r5, [r4, #20]
     344:	61a5      	str	r5, [r4, #24]
     346:	61e5      	str	r5, [r4, #28]
     348:	493c      	ldr	r1, [pc, #240]	; (43c <Motors::Motors()+0x114>)
     34a:	f000 fc3b 	bl	bc4 <gpio_init_out>
     34e:	f44f 6896 	mov.w	r8, #1200	; 0x4b0
     352:	f104 0020 	add.w	r0, r4, #32
     356:	2701      	movs	r7, #1
     358:	6225      	str	r5, [r4, #32]
     35a:	6265      	str	r5, [r4, #36]	; 0x24
     35c:	62a5      	str	r5, [r4, #40]	; 0x28
     35e:	62e5      	str	r5, [r4, #44]	; 0x2c
     360:	6325      	str	r5, [r4, #48]	; 0x30
     362:	6365      	str	r5, [r4, #52]	; 0x34
     364:	4936      	ldr	r1, [pc, #216]	; (440 <Motors::Motors()+0x118>)
     366:	f000 fc2d 	bl	bc4 <gpio_init_out>
     36a:	f504 76b8 	add.w	r6, r4, #368	; 0x170
     36e:	4a35      	ldr	r2, [pc, #212]	; (444 <Motors::Motors()+0x11c>)
     370:	f04f 33ff 	mov.w	r3, #4294967295
     374:	f8cd 8000 	str.w	r8, [sp]
     378:	9701      	str	r7, [sp, #4]
     37a:	f104 0038 	add.w	r0, r4, #56	; 0x38
     37e:	4932      	ldr	r1, [pc, #200]	; (448 <Motors::Motors()+0x120>)
     380:	f000 faee 	bl	960 <QEI::QEI(PinName, PinName, PinName, int, QEI::Encoding)>
     384:	4630      	mov	r0, r6
     386:	4931      	ldr	r1, [pc, #196]	; (44c <Motors::Motors()+0x124>)
     388:	f000 ffd4 	bl	1334 <pwmout_init>
     38c:	f504 70bc 	add.w	r0, r4, #376	; 0x178
     390:	f8c4 5178 	str.w	r5, [r4, #376]	; 0x178
     394:	f8c4 517c 	str.w	r5, [r4, #380]	; 0x17c
     398:	f8c4 5180 	str.w	r5, [r4, #384]	; 0x180
     39c:	f8c4 5184 	str.w	r5, [r4, #388]	; 0x184
     3a0:	f8c4 5188 	str.w	r5, [r4, #392]	; 0x188
     3a4:	f8c4 518c 	str.w	r5, [r4, #396]	; 0x18c
     3a8:	4929      	ldr	r1, [pc, #164]	; (450 <Motors::Motors()+0x128>)
     3aa:	f000 fc0b 	bl	bc4 <gpio_init_out>
     3ae:	f504 70c8 	add.w	r0, r4, #400	; 0x190
     3b2:	f8c4 5190 	str.w	r5, [r4, #400]	; 0x190
     3b6:	f8c4 5194 	str.w	r5, [r4, #404]	; 0x194
     3ba:	f8c4 5198 	str.w	r5, [r4, #408]	; 0x198
     3be:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
     3c2:	f8c4 51a0 	str.w	r5, [r4, #416]	; 0x1a0
     3c6:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
     3ca:	4922      	ldr	r1, [pc, #136]	; (454 <Motors::Motors()+0x12c>)
     3cc:	f000 fbfa 	bl	bc4 <gpio_init_out>
     3d0:	f8cd 8000 	str.w	r8, [sp]
     3d4:	9701      	str	r7, [sp, #4]
     3d6:	f504 70d4 	add.w	r0, r4, #424	; 0x1a8
     3da:	491f      	ldr	r1, [pc, #124]	; (458 <Motors::Motors()+0x130>)
     3dc:	4a1f      	ldr	r2, [pc, #124]	; (45c <Motors::Motors()+0x134>)
     3de:	f04f 33ff 	mov.w	r3, #4294967295
     3e2:	f000 fabd 	bl	960 <QEI::QEI(PinName, PinName, PinName, int, QEI::Encoding)>
     3e6:	6962      	ldr	r2, [r4, #20]
     3e8:	68e1      	ldr	r1, [r4, #12]
     3ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
     3ec:	6011      	str	r1, [r2, #0]
     3ee:	6a61      	ldr	r1, [r4, #36]	; 0x24
     3f0:	f8d4 2184 	ldr.w	r2, [r4, #388]	; 0x184
     3f4:	6019      	str	r1, [r3, #0]
     3f6:	f8d4 117c 	ldr.w	r1, [r4, #380]	; 0x17c
     3fa:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
     3fe:	6011      	str	r1, [r2, #0]
     400:	f8d4 2194 	ldr.w	r2, [r4, #404]	; 0x194
     404:	f8df 805c 	ldr.w	r8, [pc, #92]	; 464 <Motors::Motors()+0x13c>
     408:	601a      	str	r2, [r3, #0]
     40a:	4630      	mov	r0, r6
     40c:	4641      	mov	r1, r8
     40e:	4f14      	ldr	r7, [pc, #80]	; (460 <Motors::Motors()+0x138>)
     410:	f000 ff80 	bl	1314 <pwmout_period>
     414:	4620      	mov	r0, r4
     416:	4641      	mov	r1, r8
     418:	f000 ff7c 	bl	1314 <pwmout_period>
     41c:	4630      	mov	r0, r6
     41e:	4639      	mov	r1, r7
     420:	f000 ff2a 	bl	1278 <pwmout_write>
     424:	4620      	mov	r0, r4
     426:	4639      	mov	r1, r7
     428:	f000 ff26 	bl	1278 <pwmout_write>
     42c:	4620      	mov	r0, r4
     42e:	f884 52e0 	strb.w	r5, [r4, #736]	; 0x2e0
     432:	b002      	add	sp, #8
     434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
     438:	2009c045 	.word	0x2009c045
     43c:	2009c044 	.word	0x2009c044
     440:	2009c043 	.word	0x2009c043
     444:	2009c041 	.word	0x2009c041
     448:	2009c042 	.word	0x2009c042
     44c:	2009c040 	.word	0x2009c040
     450:	2009c00b 	.word	0x2009c00b
     454:	2009c00a 	.word	0x2009c00a
     458:	2009c005 	.word	0x2009c005
     45c:	2009c004 	.word	0x2009c004
     460:	3f4ccccd 	.word	0x3f4ccccd
     464:	3ca3d70a 	.word	0x3ca3d70a

00000468 <Motors::move(int)>:
     468:	b570      	push	{r4, r5, r6, lr}
     46a:	4604      	mov	r4, r0
     46c:	f500 70d4 	add.w	r0, r0, #424	; 0x1a8
     470:	460e      	mov	r6, r1
     472:	f000 fb17 	bl	aa4 <QEI::getPulses()>
     476:	4605      	mov	r5, r0
     478:	4630      	mov	r0, r6
     47a:	f011 f969 	bl	11750 <__aeabi_i2d>
     47e:	a312      	add	r3, pc, #72	; (adr r3, 4c8 <Motors::move(int)+0x60>)
     480:	e9d3 2300 	ldrd	r2, r3, [r3]
     484:	f011 f9ca 	bl	1181c <__aeabi_dmul>
     488:	f011 fc62 	bl	11d50 <__aeabi_d2iz>
     48c:	1a28      	subs	r0, r5, r0
     48e:	2800      	cmp	r0, #0
     490:	d016      	beq.n	4c0 <Motors::move(int)+0x58>
     492:	dd0a      	ble.n	4aa <Motors::move(int)+0x42>
     494:	f8d4 2184 	ldr.w	r2, [r4, #388]	; 0x184
     498:	f8d4 117c 	ldr.w	r1, [r4, #380]	; 0x17c
     49c:	f8d4 31a0 	ldr.w	r3, [r4, #416]	; 0x1a0
     4a0:	6011      	str	r1, [r2, #0]
     4a2:	f8d4 2194 	ldr.w	r2, [r4, #404]	; 0x194
     4a6:	601a      	str	r2, [r3, #0]
     4a8:	bd70      	pop	{r4, r5, r6, pc}
     4aa:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
     4ae:	f8d4 117c 	ldr.w	r1, [r4, #380]	; 0x17c
     4b2:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
     4b6:	6011      	str	r1, [r2, #0]
     4b8:	f8d4 2194 	ldr.w	r2, [r4, #404]	; 0x194
     4bc:	601a      	str	r2, [r3, #0]
     4be:	bd70      	pop	{r4, r5, r6, pc}
     4c0:	f8d4 2184 	ldr.w	r2, [r4, #388]	; 0x184
     4c4:	e7f3      	b.n	4ae <Motors::move(int)+0x46>
     4c6:	bf00      	nop
     4c8:	42108421 	.word	0x42108421
     4cc:	40452108 	.word	0x40452108

000004d0 <Motors::hit()>:
     4d0:	b538      	push	{r3, r4, r5, lr}
     4d2:	f890 32e0 	ldrb.w	r3, [r0, #736]	; 0x2e0
     4d6:	4604      	mov	r4, r0
     4d8:	f100 0538 	add.w	r5, r0, #56	; 0x38
     4dc:	b14b      	cbz	r3, 4f2 <Motors::hit()+0x22>
     4de:	4628      	mov	r0, r5
     4e0:	f000 fae0 	bl	aa4 <QEI::getPulses()>
     4e4:	f5b0 7ff0 	cmp.w	r0, #480	; 0x1e0
     4e8:	d01f      	beq.n	52a <Motors::hit()+0x5a>
     4ea:	f894 32e0 	ldrb.w	r3, [r4, #736]	; 0x2e0
     4ee:	b97b      	cbnz	r3, 510 <Motors::hit()+0x40>
     4f0:	bd38      	pop	{r3, r4, r5, pc}
     4f2:	4628      	mov	r0, r5
     4f4:	f000 fad6 	bl	aa4 <QEI::getPulses()>
     4f8:	2800      	cmp	r0, #0
     4fa:	d1f0      	bne.n	4de <Motors::hit()+0xe>
     4fc:	6963      	ldr	r3, [r4, #20]
     4fe:	68e1      	ldr	r1, [r4, #12]
     500:	6b22      	ldr	r2, [r4, #48]	; 0x30
     502:	6019      	str	r1, [r3, #0]
     504:	6a61      	ldr	r1, [r4, #36]	; 0x24
     506:	2301      	movs	r3, #1
     508:	6011      	str	r1, [r2, #0]
     50a:	f884 32e0 	strb.w	r3, [r4, #736]	; 0x2e0
     50e:	bd38      	pop	{r3, r4, r5, pc}
     510:	4628      	mov	r0, r5
     512:	f000 fac7 	bl	aa4 <QEI::getPulses()>
     516:	b978      	cbnz	r0, 538 <Motors::hit()+0x68>
     518:	6962      	ldr	r2, [r4, #20]
     51a:	68e1      	ldr	r1, [r4, #12]
     51c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
     51e:	6011      	str	r1, [r2, #0]
     520:	6a62      	ldr	r2, [r4, #36]	; 0x24
     522:	601a      	str	r2, [r3, #0]
     524:	f884 02e0 	strb.w	r0, [r4, #736]	; 0x2e0
     528:	e7e2      	b.n	4f0 <Motors::hit()+0x20>
     52a:	69a2      	ldr	r2, [r4, #24]
     52c:	68e1      	ldr	r1, [r4, #12]
     52e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
     530:	6011      	str	r1, [r2, #0]
     532:	6a62      	ldr	r2, [r4, #36]	; 0x24
     534:	601a      	str	r2, [r3, #0]
     536:	bd38      	pop	{r3, r4, r5, pc}
     538:	bd38      	pop	{r3, r4, r5, pc}
     53a:	bf00      	nop

0000053c <_GLOBAL__sub_I__ZN6MotorsC2Ev>:
     53c:	b510      	push	{r4, lr}
     53e:	4c05      	ldr	r4, [pc, #20]	; (554 <_GLOBAL__sub_I__ZN6MotorsC2Ev+0x18>)
     540:	4620      	mov	r0, r4
     542:	f001 fff9 	bl	2538 <std::ios_base::Init::Init()>
     546:	4620      	mov	r0, r4
     548:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     54c:	4902      	ldr	r1, [pc, #8]	; (558 <_GLOBAL__sub_I__ZN6MotorsC2Ev+0x1c>)
     54e:	4a03      	ldr	r2, [pc, #12]	; (55c <_GLOBAL__sub_I__ZN6MotorsC2Ev+0x20>)
     550:	f001 bfe8 	b.w	2524 <__aeabi_atexit>
     554:	10000360 	.word	0x10000360
     558:	00002649 	.word	0x00002649
     55c:	100000c8 	.word	0x100000c8

00000560 <Player::Player(int, int, int)>:
     560:	b410      	push	{r4}
     562:	e880 000e 	stmia.w	r0, {r1, r2, r3}
     566:	f85d 4b04 	ldr.w	r4, [sp], #4
     56a:	4770      	bx	lr

0000056c <Player::update(int)>:
     56c:	6883      	ldr	r3, [r0, #8]
     56e:	4419      	add	r1, r3
     570:	6081      	str	r1, [r0, #8]
     572:	4770      	bx	lr

00000574 <Player::inRange(int)>:
     574:	6803      	ldr	r3, [r0, #0]
     576:	428b      	cmp	r3, r1
     578:	dd01      	ble.n	57e <Player::inRange(int)+0xa>
     57a:	206e      	movs	r0, #110	; 0x6e
     57c:	4770      	bx	lr
     57e:	6843      	ldr	r3, [r0, #4]
     580:	4299      	cmp	r1, r3
     582:	dcfa      	bgt.n	57a <Player::inRange(int)+0x6>
     584:	6880      	ldr	r0, [r0, #8]
     586:	1a40      	subs	r0, r0, r1
     588:	4770      	bx	lr
     58a:	bf00      	nop

0000058c <_GLOBAL__sub_I__ZN6PlayerC2Eiii>:
     58c:	b510      	push	{r4, lr}
     58e:	4c05      	ldr	r4, [pc, #20]	; (5a4 <_GLOBAL__sub_I__ZN6PlayerC2Eiii+0x18>)
     590:	4620      	mov	r0, r4
     592:	f001 ffd1 	bl	2538 <std::ios_base::Init::Init()>
     596:	4620      	mov	r0, r4
     598:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     59c:	4902      	ldr	r1, [pc, #8]	; (5a8 <_GLOBAL__sub_I__ZN6PlayerC2Eiii+0x1c>)
     59e:	4a03      	ldr	r2, [pc, #12]	; (5ac <_GLOBAL__sub_I__ZN6PlayerC2Eiii+0x20>)
     5a0:	f001 bfc0 	b.w	2524 <__aeabi_atexit>
     5a4:	10000364 	.word	0x10000364
     5a8:	00002649 	.word	0x00002649
     5ac:	100000c8 	.word	0x100000c8

000005b0 <Rod::Rod()>:
     5b0:	b510      	push	{r4, lr}
     5b2:	4604      	mov	r4, r0
     5b4:	210d      	movs	r1, #13
     5b6:	460b      	mov	r3, r1
     5b8:	222c      	movs	r2, #44	; 0x2c
     5ba:	f7ff ffd1 	bl	560 <Player::Player(int, int, int)>
     5be:	212c      	movs	r1, #44	; 0x2c
     5c0:	460b      	mov	r3, r1
     5c2:	f104 000c 	add.w	r0, r4, #12
     5c6:	224b      	movs	r2, #75	; 0x4b
     5c8:	f7ff ffca 	bl	560 <Player::Player(int, int, int)>
     5cc:	214b      	movs	r1, #75	; 0x4b
     5ce:	460b      	mov	r3, r1
     5d0:	226e      	movs	r2, #110	; 0x6e
     5d2:	f104 0018 	add.w	r0, r4, #24
     5d6:	f7ff ffc3 	bl	560 <Player::Player(int, int, int)>
     5da:	2300      	movs	r3, #0
     5dc:	6263      	str	r3, [r4, #36]	; 0x24
     5de:	f104 0028 	add.w	r0, r4, #40	; 0x28
     5e2:	f7ff fea1 	bl	328 <Motors::Motors()>
     5e6:	4620      	mov	r0, r4
     5e8:	bd10      	pop	{r4, pc}
     5ea:	bf00      	nop

000005ec <Rod::take_action(int, int)>:
     5ec:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
     5f0:	4691      	mov	r9, r2
     5f2:	4688      	mov	r8, r1
     5f4:	4605      	mov	r5, r0
     5f6:	f100 070c 	add.w	r7, r0, #12
     5fa:	f7ff ffbb 	bl	574 <Player::inRange(int)>
     5fe:	4641      	mov	r1, r8
     600:	4683      	mov	r11, r0
     602:	4638      	mov	r0, r7
     604:	f7ff ffb6 	bl	574 <Player::inRange(int)>
     608:	f105 0618 	add.w	r6, r5, #24
     60c:	4682      	mov	r10, r0
     60e:	4641      	mov	r1, r8
     610:	4630      	mov	r0, r6
     612:	f7ff ffaf 	bl	574 <Player::inRange(int)>
     616:	ea8b 72eb 	eor.w	r2, r11, r11, asr #31
     61a:	ea8a 73ea 	eor.w	r3, r10, r10, asr #31
     61e:	eba2 72eb 	sub.w	r2, r2, r11, asr #31
     622:	eba3 73ea 	sub.w	r3, r3, r10, asr #31
     626:	ea80 74e0 	eor.w	r4, r0, r0, asr #31
     62a:	429a      	cmp	r2, r3
     62c:	eba4 74e0 	sub.w	r4, r4, r0, asr #31
     630:	da1e      	bge.n	670 <Rod::take_action(int, int)+0x84>
     632:	42a2      	cmp	r2, r4
     634:	bfb4      	ite	lt
     636:	465c      	movlt	r4, r11
     638:	4604      	movge	r4, r0
     63a:	6a69      	ldr	r1, [r5, #36]	; 0x24
     63c:	f105 0828 	add.w	r8, r5, #40	; 0x28
     640:	4421      	add	r1, r4
     642:	4640      	mov	r0, r8
     644:	f7ff ff10 	bl	468 <Motors::move(int)>
     648:	4621      	mov	r1, r4
     64a:	4628      	mov	r0, r5
     64c:	f7ff ff8e 	bl	56c <Player::update(int)>
     650:	4621      	mov	r1, r4
     652:	4638      	mov	r0, r7
     654:	f7ff ff8a 	bl	56c <Player::update(int)>
     658:	4630      	mov	r0, r6
     65a:	4621      	mov	r1, r4
     65c:	f7ff ff86 	bl	56c <Player::update(int)>
     660:	6a68      	ldr	r0, [r5, #36]	; 0x24
     662:	f1b9 0f2b 	cmp.w	r9, #43	; 0x2b
     666:	4404      	add	r4, r0
     668:	626c      	str	r4, [r5, #36]	; 0x24
     66a:	dd06      	ble.n	67a <Rod::take_action(int, int)+0x8e>
     66c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
     670:	42a3      	cmp	r3, r4
     672:	bfb4      	ite	lt
     674:	4654      	movlt	r4, r10
     676:	4604      	movge	r4, r0
     678:	e7df      	b.n	63a <Rod::take_action(int, int)+0x4e>
     67a:	4640      	mov	r0, r8
     67c:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
     680:	f7ff bf26 	b.w	4d0 <Motors::hit()>

00000684 <_GLOBAL__sub_I__ZN3RodC2Ev>:
     684:	b510      	push	{r4, lr}
     686:	4c05      	ldr	r4, [pc, #20]	; (69c <_GLOBAL__sub_I__ZN3RodC2Ev+0x18>)
     688:	4620      	mov	r0, r4
     68a:	f001 ff55 	bl	2538 <std::ios_base::Init::Init()>
     68e:	4620      	mov	r0, r4
     690:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     694:	4902      	ldr	r1, [pc, #8]	; (6a0 <_GLOBAL__sub_I__ZN3RodC2Ev+0x1c>)
     696:	4a03      	ldr	r2, [pc, #12]	; (6a4 <_GLOBAL__sub_I__ZN3RodC2Ev+0x20>)
     698:	f001 bf44 	b.w	2524 <__aeabi_atexit>
     69c:	10000368 	.word	0x10000368
     6a0:	00002649 	.word	0x00002649
     6a4:	100000c8 	.word	0x100000c8

000006a8 <Tracker::Tracker()>:
     6a8:	2200      	movs	r2, #0
     6aa:	2300      	movs	r3, #0
     6ac:	2100      	movs	r1, #0
     6ae:	b510      	push	{r4, lr}
     6b0:	e9c0 2302 	strd	r2, r3, [r0, #8]
     6b4:	e9c0 2304 	strd	r2, r3, [r0, #16]
     6b8:	6001      	str	r1, [r0, #0]
     6ba:	6041      	str	r1, [r0, #4]
     6bc:	4604      	mov	r4, r0
     6be:	f7ff fdff 	bl	2c0 <millis()>
     6c2:	2301      	movs	r3, #1
     6c4:	61a0      	str	r0, [r4, #24]
     6c6:	7723      	strb	r3, [r4, #28]
     6c8:	4620      	mov	r0, r4
     6ca:	bd10      	pop	{r4, pc}

000006cc <Tracker::predict(Point<int>, Point<int>&, int&)>:
     6cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
     6d0:	4604      	mov	r4, r0
     6d2:	b087      	sub	sp, #28
     6d4:	4692      	mov	r10, r2
     6d6:	4698      	mov	r8, r3
     6d8:	460d      	mov	r5, r1
     6da:	f7ff fdf1 	bl	2c0 <millis()>
     6de:	69a3      	ldr	r3, [r4, #24]
     6e0:	7f22      	ldrb	r2, [r4, #28]
     6e2:	1ac3      	subs	r3, r0, r3
     6e4:	61a0      	str	r0, [r4, #24]
     6e6:	2a00      	cmp	r2, #0
     6e8:	f040 8093 	bne.w	812 <Heap_Size+0x12>
     6ec:	e894 0804 	ldmia.w	r4, {r2, r11}
     6f0:	4618      	mov	r0, r3
     6f2:	9200      	str	r2, [sp, #0]
     6f4:	f011 f81c 	bl	11730 <__aeabi_ui2d>
     6f8:	4606      	mov	r6, r0
     6fa:	460f      	mov	r7, r1
     6fc:	9a00      	ldr	r2, [sp, #0]
     6fe:	f8d5 9000 	ldr.w	r9, [r5]
     702:	ebc2 0009 	rsb	r0, r2, r9
     706:	f011 f823 	bl	11750 <__aeabi_i2d>
     70a:	4632      	mov	r2, r6
     70c:	463b      	mov	r3, r7
     70e:	f011 f9af 	bl	11a70 <__aeabi_ddiv>
     712:	f011 fb1d 	bl	11d50 <__aeabi_d2iz>
     716:	f011 f81b 	bl	11750 <__aeabi_i2d>
     71a:	e9cd 0100 	strd	r0, r1, [sp]
     71e:	6868      	ldr	r0, [r5, #4]
     720:	ebcb 0000 	rsb	r0, r11, r0
     724:	f011 f814 	bl	11750 <__aeabi_i2d>
     728:	4632      	mov	r2, r6
     72a:	463b      	mov	r3, r7
     72c:	f011 f9a0 	bl	11a70 <__aeabi_ddiv>
     730:	f011 fb0e 	bl	11d50 <__aeabi_d2iz>
     734:	f011 f80c 	bl	11750 <__aeabi_i2d>
     738:	2200      	movs	r2, #0
     73a:	e9cd 0102 	strd	r0, r1, [sp, #8]
     73e:	e9dd 0100 	ldrd	r0, r1, [sp]
     742:	2300      	movs	r3, #0
     744:	f011 fafa 	bl	11d3c <__aeabi_dcmpgt>
     748:	4606      	mov	r6, r0
     74a:	2800      	cmp	r0, #0
     74c:	d06a      	beq.n	824 <Heap_Size+0x24>
     74e:	f1c9 0062 	rsb	r0, r9, #98	; 0x62
     752:	f010 fffd 	bl	11750 <__aeabi_i2d>
     756:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
     75a:	4606      	mov	r6, r0
     75c:	460f      	mov	r7, r1
     75e:	e9dd 0100 	ldrd	r0, r1, [sp]
     762:	f010 fea7 	bl	114b4 <__aeabi_dsub>
     766:	2200      	movs	r2, #0
     768:	4b3e      	ldr	r3, [pc, #248]	; (864 <Heap_Size+0x64>)
     76a:	f011 f857 	bl	1181c <__aeabi_dmul>
     76e:	e9dd 2300 	ldrd	r2, r3, [sp]
     772:	f010 fea1 	bl	114b8 <__adddf3>
     776:	460b      	mov	r3, r1
     778:	4602      	mov	r2, r0
     77a:	4639      	mov	r1, r7
     77c:	4630      	mov	r0, r6
     77e:	f011 f977 	bl	11a70 <__aeabi_ddiv>
     782:	f011 fae5 	bl	11d50 <__aeabi_d2iz>
     786:	4683      	mov	r11, r0
     788:	2301      	movs	r3, #1
     78a:	f8c8 3000 	str.w	r3, [r8]
     78e:	4658      	mov	r0, r11
     790:	f010 ffde 	bl	11750 <__aeabi_i2d>
     794:	4606      	mov	r6, r0
     796:	6868      	ldr	r0, [r5, #4]
     798:	460f      	mov	r7, r1
     79a:	f010 ffd9 	bl	11750 <__aeabi_i2d>
     79e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
     7a2:	4680      	mov	r8, r0
     7a4:	4689      	mov	r9, r1
     7a6:	4630      	mov	r0, r6
     7a8:	4639      	mov	r1, r7
     7aa:	f011 f837 	bl	1181c <__aeabi_dmul>
     7ae:	4602      	mov	r2, r0
     7b0:	460b      	mov	r3, r1
     7b2:	4640      	mov	r0, r8
     7b4:	4649      	mov	r1, r9
     7b6:	f010 fe7f 	bl	114b8 <__adddf3>
     7ba:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
     7be:	4680      	mov	r8, r0
     7c0:	4689      	mov	r9, r1
     7c2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
     7c6:	f010 fe75 	bl	114b4 <__aeabi_dsub>
     7ca:	2200      	movs	r2, #0
     7cc:	4b25      	ldr	r3, [pc, #148]	; (864 <Heap_Size+0x64>)
     7ce:	f011 f825 	bl	1181c <__aeabi_dmul>
     7d2:	4602      	mov	r2, r0
     7d4:	460b      	mov	r3, r1
     7d6:	4630      	mov	r0, r6
     7d8:	4639      	mov	r1, r7
     7da:	f011 f81f 	bl	1181c <__aeabi_dmul>
     7de:	4602      	mov	r2, r0
     7e0:	460b      	mov	r3, r1
     7e2:	4640      	mov	r0, r8
     7e4:	4649      	mov	r1, r9
     7e6:	f010 fe67 	bl	114b8 <__adddf3>
     7ea:	f011 fab1 	bl	11d50 <__aeabi_d2iz>
     7ee:	e9dd 6700 	ldrd	r6, r7, [sp]
     7f2:	f8ca 0004 	str.w	r0, [r10, #4]
     7f6:	686a      	ldr	r2, [r5, #4]
     7f8:	682b      	ldr	r3, [r5, #0]
     7fa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
     7fe:	e9c4 0104 	strd	r0, r1, [r4, #16]
     802:	4658      	mov	r0, r11
     804:	e9c4 6702 	strd	r6, r7, [r4, #8]
     808:	6062      	str	r2, [r4, #4]
     80a:	6023      	str	r3, [r4, #0]
     80c:	b007      	add	sp, #28
     80e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
     812:	2600      	movs	r6, #0
     814:	e895 0003 	ldmia.w	r5, {r0, r1}
     818:	7726      	strb	r6, [r4, #28]
     81a:	4602      	mov	r2, r0
     81c:	468b      	mov	r11, r1
     81e:	e884 0003 	stmia.w	r4, {r0, r1}
     822:	e765      	b.n	6f0 <Tracker::predict(Point<int>, Point<int>&, int&)+0x24>
     824:	f1c9 0019 	rsb	r0, r9, #25
     828:	f010 ff92 	bl	11750 <__aeabi_i2d>
     82c:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
     830:	e9cd 0104 	strd	r0, r1, [sp, #16]
     834:	e9dd 0100 	ldrd	r0, r1, [sp]
     838:	f010 fe3c 	bl	114b4 <__aeabi_dsub>
     83c:	2200      	movs	r2, #0
     83e:	4b09      	ldr	r3, [pc, #36]	; (864 <Heap_Size+0x64>)
     840:	f010 ffec 	bl	1181c <__aeabi_dmul>
     844:	e9dd 2300 	ldrd	r2, r3, [sp]
     848:	f010 fe36 	bl	114b8 <__adddf3>
     84c:	4602      	mov	r2, r0
     84e:	460b      	mov	r3, r1
     850:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
     854:	f011 f90c 	bl	11a70 <__aeabi_ddiv>
     858:	f011 fa7a 	bl	11d50 <__aeabi_d2iz>
     85c:	f8c8 6000 	str.w	r6, [r8]
     860:	4683      	mov	r11, r0
     862:	e794      	b.n	78e <Tracker::predict(Point<int>, Point<int>&, int&)+0xc2>
     864:	3fe00000 	.word	0x3fe00000

00000868 <_GLOBAL__sub_I__ZN7TrackerC2Ev>:
     868:	b510      	push	{r4, lr}
     86a:	4c05      	ldr	r4, [pc, #20]	; (880 <_GLOBAL__sub_I__ZN7TrackerC2Ev+0x18>)
     86c:	4620      	mov	r0, r4
     86e:	f001 fe63 	bl	2538 <std::ios_base::Init::Init()>
     872:	4620      	mov	r0, r4
     874:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     878:	4902      	ldr	r1, [pc, #8]	; (884 <_GLOBAL__sub_I__ZN7TrackerC2Ev+0x1c>)
     87a:	4a03      	ldr	r2, [pc, #12]	; (888 <_GLOBAL__sub_I__ZN7TrackerC2Ev+0x20>)
     87c:	f001 be52 	b.w	2524 <__aeabi_atexit>
     880:	1000036c 	.word	0x1000036c
     884:	00002649 	.word	0x00002649
     888:	100000c8 	.word	0x100000c8

0000088c <QEI::index()>:
     88c:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
     890:	3301      	adds	r3, #1
     892:	f8c0 3134 	str.w	r3, [r0, #308]	; 0x134
     896:	4770      	bx	lr

00000898 <QEI::encode()>:
     898:	b538      	push	{r3, r4, r5, lr}
     89a:	4604      	mov	r4, r0
     89c:	3004      	adds	r0, #4
     89e:	f001 fb57 	bl	1f50 <mbed::InterruptIn::read()>
     8a2:	4605      	mov	r5, r0
     8a4:	f104 0064 	add.w	r0, r4, #100	; 0x64
     8a8:	f001 fb52 	bl	1f50 <mbed::InterruptIn::read()>
     8ac:	7823      	ldrb	r3, [r4, #0]
     8ae:	ea40 0045 	orr.w	r0, r0, r5, lsl #1
     8b2:	f8c4 012c 	str.w	r0, [r4, #300]	; 0x12c
     8b6:	b94b      	cbnz	r3, 8cc <QEI::encode()+0x34>
     8b8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
     8bc:	2b03      	cmp	r3, #3
     8be:	d02a      	beq.n	916 <QEI::encode()+0x7e>
     8c0:	b9fb      	cbnz	r3, 902 <QEI::encode()+0x6a>
     8c2:	2803      	cmp	r0, #3
     8c4:	d029      	beq.n	91a <QEI::encode()+0x82>
     8c6:	f8c4 0128 	str.w	r0, [r4, #296]	; 0x128
     8ca:	bd38      	pop	{r3, r4, r5, pc}
     8cc:	2b01      	cmp	r3, #1
     8ce:	d1fa      	bne.n	8c6 <QEI::encode()+0x2e>
     8d0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
     8d4:	ea80 0203 	eor.w	r2, r0, r3
     8d8:	2a03      	cmp	r2, #3
     8da:	d0f4      	beq.n	8c6 <QEI::encode()+0x2e>
     8dc:	4298      	cmp	r0, r3
     8de:	d0f2      	beq.n	8c6 <QEI::encode()+0x2e>
     8e0:	f3c0 0240 	ubfx	r2, r0, #1, #1
     8e4:	f003 0301 	and.w	r3, r3, #1
     8e8:	4293      	cmp	r3, r2
     8ea:	bf0c      	ite	eq
     8ec:	f04f 33ff 	moveq.w	r3, #4294967295
     8f0:	2301      	movne	r3, #1
     8f2:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
     8f6:	f8c4 0128 	str.w	r0, [r4, #296]	; 0x128
     8fa:	1ad3      	subs	r3, r2, r3
     8fc:	f8c4 3130 	str.w	r3, [r4, #304]	; 0x130
     900:	bd38      	pop	{r3, r4, r5, pc}
     902:	2b02      	cmp	r3, #2
     904:	d10f      	bne.n	926 <QEI::encode()+0x8e>
     906:	2801      	cmp	r0, #1
     908:	d1dd      	bne.n	8c6 <QEI::encode()+0x2e>
     90a:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
     90e:	3b01      	subs	r3, #1
     910:	f8c4 3130 	str.w	r3, [r4, #304]	; 0x130
     914:	e7d7      	b.n	8c6 <QEI::encode()+0x2e>
     916:	2800      	cmp	r0, #0
     918:	d1d5      	bne.n	8c6 <QEI::encode()+0x2e>
     91a:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
     91e:	3301      	adds	r3, #1
     920:	f8c4 3130 	str.w	r3, [r4, #304]	; 0x130
     924:	e7cf      	b.n	8c6 <QEI::encode()+0x2e>
     926:	2b01      	cmp	r3, #1
     928:	d1cd      	bne.n	8c6 <QEI::encode()+0x2e>
     92a:	2802      	cmp	r0, #2
     92c:	d0ed      	beq.n	90a <QEI::encode()+0x72>
     92e:	f8c4 0128 	str.w	r0, [r4, #296]	; 0x128
     932:	bd38      	pop	{r3, r4, r5, pc}

00000934 <void mbed::FunctionPointer::membercaller<QEI>(void*, char*)>:
     934:	460b      	mov	r3, r1
     936:	b082      	sub	sp, #8
     938:	4602      	mov	r2, r0
     93a:	6818      	ldr	r0, [r3, #0]
     93c:	466b      	mov	r3, sp
     93e:	6849      	ldr	r1, [r1, #4]
     940:	c303      	stmia	r3!, {r0, r1}
     942:	07cb      	lsls	r3, r1, #31
     944:	d506      	bpl.n	954 <void mbed::FunctionPointer::membercaller<QEI>(void*, char*)+0x20>
     946:	1048      	asrs	r0, r1, #1
     948:	5811      	ldr	r1, [r2, r0]
     94a:	9b00      	ldr	r3, [sp, #0]
     94c:	4410      	add	r0, r2
     94e:	58cb      	ldr	r3, [r1, r3]
     950:	b002      	add	sp, #8
     952:	4718      	bx	r3
     954:	9b00      	ldr	r3, [sp, #0]
     956:	eb02 0061 	add.w	r0, r2, r1, asr #1
     95a:	b002      	add	sp, #8
     95c:	4718      	bx	r3
     95e:	bf00      	nop

00000960 <QEI::QEI(PinName, PinName, PinName, int, QEI::Encoding)>:
     960:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
     964:	4604      	mov	r4, r0
     966:	4615      	mov	r5, r2
     968:	4698      	mov	r8, r3
     96a:	f100 0a04 	add.w	r10, r0, #4
     96e:	b08a      	sub	sp, #40	; 0x28
     970:	f104 0964 	add.w	r9, r4, #100	; 0x64
     974:	4650      	mov	r0, r10
     976:	9e12      	ldr	r6, [sp, #72]	; 0x48
     978:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
     97c:	f001 fabe 	bl	1efc <mbed::InterruptIn::InterruptIn(PinName)>
     980:	4629      	mov	r1, r5
     982:	4648      	mov	r0, r9
     984:	f001 faba 	bl	1efc <mbed::InterruptIn::InterruptIn(PinName)>
     988:	2500      	movs	r5, #0
     98a:	4641      	mov	r1, r8
     98c:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
     990:	f001 fab4 	bl	1efc <mbed::InterruptIn::InterruptIn(PinName)>
     994:	f8c4 6124 	str.w	r6, [r4, #292]	; 0x124
     998:	4650      	mov	r0, r10
     99a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
     99e:	7027      	strb	r7, [r4, #0]
     9a0:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
     9a4:	f001 fad4 	bl	1f50 <mbed::InterruptIn::read()>
     9a8:	4682      	mov	r10, r0
     9aa:	4648      	mov	r0, r9
     9ac:	f001 fad0 	bl	1f50 <mbed::InterruptIn::read()>
     9b0:	466a      	mov	r2, sp
     9b2:	f8df 90ec 	ldr.w	r9, [pc, #236]	; aa0 <QEI::QEI(PinName, PinName, PinName, int, QEI::Encoding)+0x140>
     9b6:	9501      	str	r5, [sp, #4]
     9b8:	f8cd 9000 	str.w	r9, [sp]
     9bc:	4e36      	ldr	r6, [pc, #216]	; (a98 <QEI::QEI(PinName, PinName, PinName, int, QEI::Encoding)+0x138>)
     9be:	ea40 034a 	orr.w	r3, r0, r10, lsl #1
     9c2:	ca03      	ldmia	r2!, {r0, r1}
     9c4:	f104 0a20 	add.w	r10, r4, #32
     9c8:	63a1      	str	r1, [r4, #56]	; 0x38
     9ca:	2101      	movs	r1, #1
     9cc:	460a      	mov	r2, r1
     9ce:	f8c4 312c 	str.w	r3, [r4, #300]	; 0x12c
     9d2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
     9d6:	6360      	str	r0, [r4, #52]	; 0x34
     9d8:	6324      	str	r4, [r4, #48]	; 0x30
     9da:	4650      	mov	r0, r10
     9dc:	62e5      	str	r5, [r4, #44]	; 0x2c
     9de:	6466      	str	r6, [r4, #68]	; 0x44
     9e0:	f000 fb9a 	bl	1118 <gpio_irq_set>
     9e4:	f8cd 9008 	str.w	r9, [sp, #8]
     9e8:	9503      	str	r5, [sp, #12]
     9ea:	ab02      	add	r3, sp, #8
     9ec:	cb03      	ldmia	r3!, {r0, r1}
     9ee:	64e4      	str	r4, [r4, #76]	; 0x4c
     9f0:	6520      	str	r0, [r4, #80]	; 0x50
     9f2:	6561      	str	r1, [r4, #84]	; 0x54
     9f4:	6626      	str	r6, [r4, #96]	; 0x60
     9f6:	64a5      	str	r5, [r4, #72]	; 0x48
     9f8:	2201      	movs	r2, #1
     9fa:	4650      	mov	r0, r10
     9fc:	2102      	movs	r1, #2
     9fe:	f000 fb8b 	bl	1118 <gpio_irq_set>
     a02:	2f01      	cmp	r7, #1
     a04:	d01c      	beq.n	a40 <QEI::QEI(PinName, PinName, PinName, int, QEI::Encoding)+0xe0>
     a06:	f1b8 3fff 	cmp.w	r8, #4294967295
     a0a:	d015      	beq.n	a38 <QEI::QEI(PinName, PinName, PinName, int, QEI::Encoding)+0xd8>
     a0c:	4b23      	ldr	r3, [pc, #140]	; (a9c <QEI::QEI(PinName, PinName, PinName, int, QEI::Encoding)+0x13c>)
     a0e:	2200      	movs	r2, #0
     a10:	9308      	str	r3, [sp, #32]
     a12:	9209      	str	r2, [sp, #36]	; 0x24
     a14:	ab08      	add	r3, sp, #32
     a16:	cb03      	ldmia	r3!, {r0, r1}
     a18:	f8c4 10f8 	str.w	r1, [r4, #248]	; 0xf8
     a1c:	2101      	movs	r1, #1
     a1e:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
     a22:	f8c4 00f4 	str.w	r0, [r4, #244]	; 0xf4
     a26:	f8c4 40f0 	str.w	r4, [r4, #240]	; 0xf0
     a2a:	f8c4 6104 	str.w	r6, [r4, #260]	; 0x104
     a2e:	460a      	mov	r2, r1
     a30:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
     a34:	f000 fb70 	bl	1118 <gpio_irq_set>
     a38:	4620      	mov	r0, r4
     a3a:	b00a      	add	sp, #40	; 0x28
     a3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
     a40:	f8cd 9010 	str.w	r9, [sp, #16]
     a44:	9505      	str	r5, [sp, #20]
     a46:	f104 0a80 	add.w	r10, r4, #128	; 0x80
     a4a:	ab04      	add	r3, sp, #16
     a4c:	cb03      	ldmia	r3!, {r0, r1}
     a4e:	463a      	mov	r2, r7
     a50:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
     a54:	f8c4 1098 	str.w	r1, [r4, #152]	; 0x98
     a58:	4650      	mov	r0, r10
     a5a:	4639      	mov	r1, r7
     a5c:	f8c4 4090 	str.w	r4, [r4, #144]	; 0x90
     a60:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
     a64:	f8c4 508c 	str.w	r5, [r4, #140]	; 0x8c
     a68:	f000 fb56 	bl	1118 <gpio_irq_set>
     a6c:	f8cd 9018 	str.w	r9, [sp, #24]
     a70:	9507      	str	r5, [sp, #28]
     a72:	ab06      	add	r3, sp, #24
     a74:	cb03      	ldmia	r3!, {r0, r1}
     a76:	f8c4 40ac 	str.w	r4, [r4, #172]	; 0xac
     a7a:	f8c4 00b0 	str.w	r0, [r4, #176]	; 0xb0
     a7e:	f8c4 10b4 	str.w	r1, [r4, #180]	; 0xb4
     a82:	f8c4 60c0 	str.w	r6, [r4, #192]	; 0xc0
     a86:	f8c4 50a8 	str.w	r5, [r4, #168]	; 0xa8
     a8a:	463a      	mov	r2, r7
     a8c:	4650      	mov	r0, r10
     a8e:	2102      	movs	r1, #2
     a90:	f000 fb42 	bl	1118 <gpio_irq_set>
     a94:	e7b7      	b.n	a06 <QEI::QEI(PinName, PinName, PinName, int, QEI::Encoding)+0xa6>
     a96:	bf00      	nop
     a98:	00000935 	.word	0x00000935
     a9c:	0000088d 	.word	0x0000088d
     aa0:	00000899 	.word	0x00000899

00000aa4 <QEI::getPulses()>:
     aa4:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
     aa8:	4770      	bx	lr
     aaa:	bf00      	nop

00000aac <_start>:
     aac:	4a07      	ldr	r2, [pc, #28]	; (acc <_start+0x20>)
     aae:	4808      	ldr	r0, [pc, #32]	; (ad0 <_start+0x24>)
     ab0:	b508      	push	{r3, lr}
     ab2:	2100      	movs	r1, #0
     ab4:	1a12      	subs	r2, r2, r0
     ab6:	f012 fe0f 	bl	136d8 <memset>
     aba:	f3af 8000 	nop.w
     abe:	f012 fc41 	bl	13344 <__libc_init_array>
     ac2:	f001 fb83 	bl	21cc <__wrap_main>
     ac6:	f011 ffbb 	bl	12a40 <exit>
     aca:	bf00      	nop
     acc:	10001b80 	.word	0x10001b80
     ad0:	100002ac 	.word	0x100002ac

00000ad4 <__wrap__isatty>:
     ad4:	2802      	cmp	r0, #2
     ad6:	dc01      	bgt.n	adc <__wrap__isatty+0x8>
     ad8:	2001      	movs	r0, #1
     ada:	4770      	bx	lr
     adc:	f001 bb3e 	b.w	215c <_isatty>

00000ae0 <__wrap_malloc>:
     ae0:	f3ef 8305 	mrs	r3, IPSR
     ae4:	b103      	cbz	r3, ae8 <__wrap_malloc+0x8>
     ae6:	be00      	bkpt	0x0000
     ae8:	f012 bd56 	b.w	13598 <malloc>

00000aec <__wrap_free>:
     aec:	f3ef 8305 	mrs	r3, IPSR
     af0:	b103      	cbz	r3, af4 <__wrap_free+0x8>
     af2:	be00      	bkpt	0x0000
     af4:	f012 bd58 	b.w	135a8 <free>

00000af8 <abort>:
     af8:	b508      	push	{r3, lr}
     afa:	2001      	movs	r0, #1
     afc:	f011 ffa0 	bl	12a40 <exit>

00000b00 <__cxa_pure_virtual>:
     b00:	b508      	push	{r3, lr}
     b02:	f7ff fff9 	bl	af8 <abort>
     b06:	bf00      	nop

00000b08 <mbed_die>:
     b08:	b500      	push	{lr}
     b0a:	b099      	sub	sp, #100	; 0x64
     b0c:	b672      	cpsid	i
     b0e:	4917      	ldr	r1, [pc, #92]	; (b6c <mbed_die+0x64>)
     b10:	4668      	mov	r0, sp
     b12:	f000 f857 	bl	bc4 <gpio_init_out>
     b16:	a806      	add	r0, sp, #24
     b18:	4915      	ldr	r1, [pc, #84]	; (b70 <mbed_die+0x68>)
     b1a:	f000 f853 	bl	bc4 <gpio_init_out>
     b1e:	a80c      	add	r0, sp, #48	; 0x30
     b20:	4914      	ldr	r1, [pc, #80]	; (b74 <mbed_die+0x6c>)
     b22:	f000 f84f 	bl	bc4 <gpio_init_out>
     b26:	a812      	add	r0, sp, #72	; 0x48
     b28:	4913      	ldr	r1, [pc, #76]	; (b78 <mbed_die+0x70>)
     b2a:	f000 f84b 	bl	bc4 <gpio_init_out>
     b2e:	9a03      	ldr	r2, [sp, #12]
     b30:	9901      	ldr	r1, [sp, #4]
     b32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
     b34:	6011      	str	r1, [r2, #0]
     b36:	9907      	ldr	r1, [sp, #28]
     b38:	9a10      	ldr	r2, [sp, #64]	; 0x40
     b3a:	6019      	str	r1, [r3, #0]
     b3c:	990d      	ldr	r1, [sp, #52]	; 0x34
     b3e:	9b15      	ldr	r3, [sp, #84]	; 0x54
     b40:	6011      	str	r1, [r2, #0]
     b42:	9a13      	ldr	r2, [sp, #76]	; 0x4c
     b44:	2096      	movs	r0, #150	; 0x96
     b46:	601a      	str	r2, [r3, #0]
     b48:	f000 f960 	bl	e0c <wait_ms>
     b4c:	9a04      	ldr	r2, [sp, #16]
     b4e:	9901      	ldr	r1, [sp, #4]
     b50:	9b09      	ldr	r3, [sp, #36]	; 0x24
     b52:	6011      	str	r1, [r2, #0]
     b54:	9907      	ldr	r1, [sp, #28]
     b56:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
     b58:	6019      	str	r1, [r3, #0]
     b5a:	990d      	ldr	r1, [sp, #52]	; 0x34
     b5c:	9b16      	ldr	r3, [sp, #88]	; 0x58
     b5e:	6011      	str	r1, [r2, #0]
     b60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
     b62:	2096      	movs	r0, #150	; 0x96
     b64:	601a      	str	r2, [r3, #0]
     b66:	f000 f951 	bl	e0c <wait_ms>
     b6a:	e7e0      	b.n	b2e <mbed_die+0x26>
     b6c:	2009c032 	.word	0x2009c032
     b70:	2009c034 	.word	0x2009c034
     b74:	2009c035 	.word	0x2009c035
     b78:	2009c037 	.word	0x2009c037

00000b7c <error>:
     b7c:	b40f      	push	{r0, r1, r2, r3}
     b7e:	b500      	push	{lr}
     b80:	4a06      	ldr	r2, [pc, #24]	; (b9c <error+0x20>)
     b82:	b083      	sub	sp, #12
     b84:	ab04      	add	r3, sp, #16
     b86:	f853 1b04 	ldr.w	r1, [r3], #4
     b8a:	6810      	ldr	r0, [r2, #0]
     b8c:	461a      	mov	r2, r3
     b8e:	68c0      	ldr	r0, [r0, #12]
     b90:	9301      	str	r3, [sp, #4]
     b92:	f012 ff73 	bl	13a7c <vfiprintf>
     b96:	2001      	movs	r0, #1
     b98:	f011 ff52 	bl	12a40 <exit>
     b9c:	100001d4 	.word	0x100001d4

00000ba0 <gpio_init_in>:
     ba0:	b538      	push	{r3, r4, r5, lr}
     ba2:	460d      	mov	r5, r1
     ba4:	4604      	mov	r4, r0
     ba6:	f000 f9b1 	bl	f0c <gpio_init>
     baa:	3501      	adds	r5, #1
     bac:	d009      	beq.n	bc2 <gpio_init_in+0x22>
     bae:	4620      	mov	r0, r4
     bb0:	2100      	movs	r1, #0
     bb2:	f000 f9cd 	bl	f50 <gpio_dir>
     bb6:	4620      	mov	r0, r4
     bb8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
     bbc:	2103      	movs	r1, #3
     bbe:	f000 b9c3 	b.w	f48 <gpio_mode>
     bc2:	bd38      	pop	{r3, r4, r5, pc}

00000bc4 <gpio_init_out>:
     bc4:	b538      	push	{r3, r4, r5, lr}
     bc6:	460d      	mov	r5, r1
     bc8:	4604      	mov	r4, r0
     bca:	f000 f99f 	bl	f0c <gpio_init>
     bce:	3501      	adds	r5, #1
     bd0:	d00c      	beq.n	bec <gpio_init_out+0x28>
     bd2:	6923      	ldr	r3, [r4, #16]
     bd4:	6862      	ldr	r2, [r4, #4]
     bd6:	4620      	mov	r0, r4
     bd8:	601a      	str	r2, [r3, #0]
     bda:	2101      	movs	r1, #1
     bdc:	f000 f9b8 	bl	f50 <gpio_dir>
     be0:	4620      	mov	r0, r4
     be2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
     be6:	2102      	movs	r1, #2
     be8:	f000 b9ae 	b.w	f48 <gpio_mode>
     bec:	bd38      	pop	{r3, r4, r5, pc}
     bee:	bf00      	nop

00000bf0 <gpio_init_out_ex>:
     bf0:	b570      	push	{r4, r5, r6, lr}
     bf2:	460d      	mov	r5, r1
     bf4:	4616      	mov	r6, r2
     bf6:	4604      	mov	r4, r0
     bf8:	f000 f988 	bl	f0c <gpio_init>
     bfc:	3501      	adds	r5, #1
     bfe:	d011      	beq.n	c24 <Stack_Size+0x24>
     c00:	b966      	cbnz	r6, c1c <Stack_Size+0x1c>
     c02:	6923      	ldr	r3, [r4, #16]
     c04:	6862      	ldr	r2, [r4, #4]
     c06:	601a      	str	r2, [r3, #0]
     c08:	4620      	mov	r0, r4
     c0a:	2101      	movs	r1, #1
     c0c:	f000 f9a0 	bl	f50 <gpio_dir>
     c10:	4620      	mov	r0, r4
     c12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     c16:	2102      	movs	r1, #2
     c18:	f000 b996 	b.w	f48 <gpio_mode>
     c1c:	68e3      	ldr	r3, [r4, #12]
     c1e:	6862      	ldr	r2, [r4, #4]
     c20:	601a      	str	r2, [r3, #0]
     c22:	e7f1      	b.n	c08 <Stack_Size+0x8>
     c24:	bd70      	pop	{r4, r5, r6, pc}
     c26:	bf00      	nop

00000c28 <mbed_interface_connected>:
     c28:	f000 b866 	b.w	cf8 <semihost_connected>

00000c2c <pinmap_pinout>:
     c2c:	1c43      	adds	r3, r0, #1
     c2e:	b510      	push	{r4, lr}
     c30:	4604      	mov	r4, r0
     c32:	d018      	beq.n	c66 <pinmap_pinout+0x3a>
     c34:	680b      	ldr	r3, [r1, #0]
     c36:	1c58      	adds	r0, r3, #1
     c38:	d104      	bne.n	c44 <pinmap_pinout+0x18>
     c3a:	e00f      	b.n	c5c <pinmap_pinout+0x30>
     c3c:	f851 3f0c 	ldr.w	r3, [r1, #12]!
     c40:	1c5a      	adds	r2, r3, #1
     c42:	d00b      	beq.n	c5c <pinmap_pinout+0x30>
     c44:	429c      	cmp	r4, r3
     c46:	d1f9      	bne.n	c3c <pinmap_pinout+0x10>
     c48:	4620      	mov	r0, r4
     c4a:	6889      	ldr	r1, [r1, #8]
     c4c:	f000 faca 	bl	11e4 <pin_function>
     c50:	4620      	mov	r0, r4
     c52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     c56:	2102      	movs	r1, #2
     c58:	f000 bae0 	b.w	121c <pin_mode>
     c5c:	4802      	ldr	r0, [pc, #8]	; (c68 <pinmap_pinout+0x3c>)
     c5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     c62:	f7ff bf8b 	b.w	b7c <error>
     c66:	bd10      	pop	{r4, pc}
     c68:	0001a530 	.word	0x0001a530

00000c6c <pinmap_merge>:
     c6c:	4288      	cmp	r0, r1
     c6e:	d00a      	beq.n	c86 <pinmap_merge+0x1a>
     c70:	1c42      	adds	r2, r0, #1
     c72:	d009      	beq.n	c88 <pinmap_merge+0x1c>
     c74:	3101      	adds	r1, #1
     c76:	d006      	beq.n	c86 <pinmap_merge+0x1a>
     c78:	b508      	push	{r3, lr}
     c7a:	4804      	ldr	r0, [pc, #16]	; (c8c <pinmap_merge+0x20>)
     c7c:	f7ff ff7e 	bl	b7c <error>
     c80:	f04f 30ff 	mov.w	r0, #4294967295
     c84:	bd08      	pop	{r3, pc}
     c86:	4770      	bx	lr
     c88:	4608      	mov	r0, r1
     c8a:	4770      	bx	lr
     c8c:	0001a544 	.word	0x0001a544

00000c90 <pinmap_find_peripheral>:
     c90:	680b      	ldr	r3, [r1, #0]
     c92:	1c5a      	adds	r2, r3, #1
     c94:	d104      	bne.n	ca0 <pinmap_find_peripheral+0x10>
     c96:	e007      	b.n	ca8 <pinmap_find_peripheral+0x18>
     c98:	f851 3f0c 	ldr.w	r3, [r1, #12]!
     c9c:	1c5a      	adds	r2, r3, #1
     c9e:	d003      	beq.n	ca8 <pinmap_find_peripheral+0x18>
     ca0:	4283      	cmp	r3, r0
     ca2:	d1f9      	bne.n	c98 <pinmap_find_peripheral+0x8>
     ca4:	6848      	ldr	r0, [r1, #4]
     ca6:	4770      	bx	lr
     ca8:	4618      	mov	r0, r3
     caa:	4770      	bx	lr

00000cac <pinmap_peripheral>:
     cac:	1c42      	adds	r2, r0, #1
     cae:	d00e      	beq.n	cce <pinmap_peripheral+0x22>
     cb0:	b508      	push	{r3, lr}
     cb2:	680b      	ldr	r3, [r1, #0]
     cb4:	1c5a      	adds	r2, r3, #1
     cb6:	d104      	bne.n	cc2 <pinmap_peripheral+0x16>
     cb8:	e00a      	b.n	cd0 <pinmap_peripheral+0x24>
     cba:	f851 3f0c 	ldr.w	r3, [r1, #12]!
     cbe:	1c5a      	adds	r2, r3, #1
     cc0:	d006      	beq.n	cd0 <pinmap_peripheral+0x24>
     cc2:	4298      	cmp	r0, r3
     cc4:	d1f9      	bne.n	cba <pinmap_peripheral+0xe>
     cc6:	6848      	ldr	r0, [r1, #4]
     cc8:	1c41      	adds	r1, r0, #1
     cca:	d001      	beq.n	cd0 <pinmap_peripheral+0x24>
     ccc:	bd08      	pop	{r3, pc}
     cce:	4770      	bx	lr
     cd0:	4802      	ldr	r0, [pc, #8]	; (cdc <pinmap_peripheral+0x30>)
     cd2:	f7ff ff53 	bl	b7c <error>
     cd6:	f04f 30ff 	mov.w	r0, #4294967295
     cda:	e7f7      	b.n	ccc <pinmap_peripheral+0x20>
     cdc:	0001a558 	.word	0x0001a558

00000ce0 <semihost_exit>:
     ce0:	b530      	push	{r4, r5, lr}
     ce2:	b085      	sub	sp, #20
     ce4:	2418      	movs	r4, #24
     ce6:	466d      	mov	r5, sp
     ce8:	4620      	mov	r0, r4
     cea:	4629      	mov	r1, r5
     cec:	beab      	bkpt	0x00ab
     cee:	4604      	mov	r4, r0
     cf0:	4620      	mov	r0, r4
     cf2:	b005      	add	sp, #20
     cf4:	bd30      	pop	{r4, r5, pc}
     cf6:	bf00      	nop

00000cf8 <semihost_connected>:
     cf8:	4b02      	ldr	r3, [pc, #8]	; (d04 <semihost_connected+0xc>)
     cfa:	6818      	ldr	r0, [r3, #0]
     cfc:	f000 0001 	and.w	r0, r0, #1
     d00:	4770      	bx	lr
     d02:	bf00      	nop
     d04:	e000edf0 	.word	0xe000edf0

00000d08 <us_ticker_set_handler>:
     d08:	b510      	push	{r4, lr}
     d0a:	4604      	mov	r4, r0
     d0c:	f000 ff8c 	bl	1c28 <us_ticker_init>
     d10:	4b01      	ldr	r3, [pc, #4]	; (d18 <us_ticker_set_handler+0x10>)
     d12:	601c      	str	r4, [r3, #0]
     d14:	bd10      	pop	{r4, pc}
     d16:	bf00      	nop
     d18:	10000374 	.word	0x10000374

00000d1c <us_ticker_irq_handler>:
     d1c:	b570      	push	{r4, r5, r6, lr}
     d1e:	f000 ffab 	bl	1c78 <us_ticker_clear_interrupt>
     d22:	4d0e      	ldr	r5, [pc, #56]	; (d5c <us_ticker_irq_handler+0x40>)
     d24:	4e0e      	ldr	r6, [pc, #56]	; (d60 <us_ticker_irq_handler+0x44>)
     d26:	682b      	ldr	r3, [r5, #0]
     d28:	b173      	cbz	r3, d48 <us_ticker_irq_handler+0x2c>
     d2a:	681c      	ldr	r4, [r3, #0]
     d2c:	f000 ff84 	bl	1c38 <us_ticker_read>
     d30:	1a20      	subs	r0, r4, r0
     d32:	2800      	cmp	r0, #0
     d34:	dc0c      	bgt.n	d50 <us_ticker_irq_handler+0x34>
     d36:	6829      	ldr	r1, [r5, #0]
     d38:	6832      	ldr	r2, [r6, #0]
     d3a:	688b      	ldr	r3, [r1, #8]
     d3c:	602b      	str	r3, [r5, #0]
     d3e:	2a00      	cmp	r2, #0
     d40:	d0f2      	beq.n	d28 <us_ticker_irq_handler+0xc>
     d42:	6848      	ldr	r0, [r1, #4]
     d44:	4790      	blx	r2
     d46:	e7ee      	b.n	d26 <us_ticker_irq_handler+0xa>
     d48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     d4c:	f000 bf8c 	b.w	1c68 <us_ticker_disable_interrupt>
     d50:	682b      	ldr	r3, [r5, #0]
     d52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     d56:	6818      	ldr	r0, [r3, #0]
     d58:	f000 bf7c 	b.w	1c54 <us_ticker_set_interrupt>
     d5c:	10000370 	.word	0x10000370
     d60:	10000374 	.word	0x10000374

00000d64 <us_ticker_insert_event>:
     d64:	b570      	push	{r4, r5, r6, lr}
     d66:	4605      	mov	r5, r0
     d68:	b672      	cpsid	i
     d6a:	4e0e      	ldr	r6, [pc, #56]	; (da4 <us_ticker_insert_event+0x40>)
     d6c:	6001      	str	r1, [r0, #0]
     d6e:	6834      	ldr	r4, [r6, #0]
     d70:	6042      	str	r2, [r0, #4]
     d72:	b184      	cbz	r4, d96 <us_ticker_insert_event+0x32>
     d74:	6823      	ldr	r3, [r4, #0]
     d76:	1acb      	subs	r3, r1, r3
     d78:	2b00      	cmp	r3, #0
     d7a:	da05      	bge.n	d88 <us_ticker_insert_event+0x24>
     d7c:	e00b      	b.n	d96 <us_ticker_insert_event+0x32>
     d7e:	681a      	ldr	r2, [r3, #0]
     d80:	1a8a      	subs	r2, r1, r2
     d82:	2a00      	cmp	r2, #0
     d84:	db03      	blt.n	d8e <us_ticker_insert_event+0x2a>
     d86:	461c      	mov	r4, r3
     d88:	68a3      	ldr	r3, [r4, #8]
     d8a:	2b00      	cmp	r3, #0
     d8c:	d1f7      	bne.n	d7e <us_ticker_insert_event+0x1a>
     d8e:	60a5      	str	r5, [r4, #8]
     d90:	60ab      	str	r3, [r5, #8]
     d92:	b662      	cpsie	i
     d94:	bd70      	pop	{r4, r5, r6, pc}
     d96:	4608      	mov	r0, r1
     d98:	6035      	str	r5, [r6, #0]
     d9a:	f000 ff5b 	bl	1c54 <us_ticker_set_interrupt>
     d9e:	4623      	mov	r3, r4
     da0:	e7f6      	b.n	d90 <us_ticker_insert_event+0x2c>
     da2:	bf00      	nop
     da4:	10000370 	.word	0x10000370

00000da8 <us_ticker_remove_event>:
     da8:	b508      	push	{r3, lr}
     daa:	b672      	cpsid	i
     dac:	4b10      	ldr	r3, [pc, #64]	; (df0 <us_ticker_remove_event+0x48>)
     dae:	681a      	ldr	r2, [r3, #0]
     db0:	4282      	cmp	r2, r0
     db2:	d011      	beq.n	dd8 <us_ticker_remove_event+0x30>
     db4:	b14a      	cbz	r2, dca <us_ticker_remove_event+0x22>
     db6:	6893      	ldr	r3, [r2, #8]
     db8:	4283      	cmp	r3, r0
     dba:	d008      	beq.n	dce <us_ticker_remove_event+0x26>
     dbc:	b12b      	cbz	r3, dca <us_ticker_remove_event+0x22>
     dbe:	689a      	ldr	r2, [r3, #8]
     dc0:	4282      	cmp	r2, r0
     dc2:	d005      	beq.n	dd0 <us_ticker_remove_event+0x28>
     dc4:	4613      	mov	r3, r2
     dc6:	2b00      	cmp	r3, #0
     dc8:	d1f9      	bne.n	dbe <us_ticker_remove_event+0x16>
     dca:	b662      	cpsie	i
     dcc:	bd08      	pop	{r3, pc}
     dce:	4613      	mov	r3, r2
     dd0:	6882      	ldr	r2, [r0, #8]
     dd2:	609a      	str	r2, [r3, #8]
     dd4:	b662      	cpsie	i
     dd6:	bd08      	pop	{r3, pc}
     dd8:	6892      	ldr	r2, [r2, #8]
     dda:	601a      	str	r2, [r3, #0]
     ddc:	b122      	cbz	r2, de8 <us_ticker_remove_event+0x40>
     dde:	6810      	ldr	r0, [r2, #0]
     de0:	f000 ff38 	bl	1c54 <us_ticker_set_interrupt>
     de4:	b662      	cpsie	i
     de6:	bd08      	pop	{r3, pc}
     de8:	f000 ff3e 	bl	1c68 <us_ticker_disable_interrupt>
     dec:	e7ed      	b.n	dca <us_ticker_remove_event+0x22>
     dee:	bf00      	nop
     df0:	10000370 	.word	0x10000370

00000df4 <wait_us>:
     df4:	b538      	push	{r3, r4, r5, lr}
     df6:	4605      	mov	r5, r0
     df8:	f000 ff1e 	bl	1c38 <us_ticker_read>
     dfc:	4604      	mov	r4, r0
     dfe:	f000 ff1b 	bl	1c38 <us_ticker_read>
     e02:	1b00      	subs	r0, r0, r4
     e04:	42a8      	cmp	r0, r5
     e06:	d3fa      	bcc.n	dfe <wait_us+0xa>
     e08:	bd38      	pop	{r3, r4, r5, pc}
     e0a:	bf00      	nop

00000e0c <wait_ms>:
     e0c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
     e10:	fb03 f000 	mul.w	r0, r3, r0
     e14:	f7ff bfee 	b.w	df4 <wait_us>

00000e18 <NVIC_SetVector>:
     e18:	4b0c      	ldr	r3, [pc, #48]	; (e4c <NVIC_SetVector+0x34>)
     e1a:	b430      	push	{r4, r5}
     e1c:	689d      	ldr	r5, [r3, #8]
     e1e:	689a      	ldr	r2, [r3, #8]
     e20:	462b      	mov	r3, r5
     e22:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
     e26:	d20c      	bcs.n	e42 <NVIC_SetVector+0x2a>
     e28:	4a09      	ldr	r2, [pc, #36]	; (e50 <NVIC_SetVector+0x38>)
     e2a:	35c4      	adds	r5, #196	; 0xc4
     e2c:	f853 4b04 	ldr.w	r4, [r3], #4
     e30:	42ab      	cmp	r3, r5
     e32:	f842 4f04 	str.w	r4, [r2, #4]!
     e36:	d1f9      	bne.n	e2c <NVIC_SetVector+0x14>
     e38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     e3c:	4613      	mov	r3, r2
     e3e:	4c03      	ldr	r4, [pc, #12]	; (e4c <NVIC_SetVector+0x34>)
     e40:	60a2      	str	r2, [r4, #8]
     e42:	3010      	adds	r0, #16
     e44:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
     e48:	bc30      	pop	{r4, r5}
     e4a:	4770      	bx	lr
     e4c:	e000ed00 	.word	0xe000ed00
     e50:	0ffffffc 	.word	0x0ffffffc

00000e54 <SystemInit>:
     e54:	4a2b      	ldr	r2, [pc, #172]	; (f04 <SystemInit+0xb0>)
     e56:	2320      	movs	r3, #32
     e58:	b4f0      	push	{r4, r5, r6, r7}
     e5a:	f8c2 31a0 	str.w	r3, [r2, #416]	; 0x1a0
     e5e:	f8d2 31a0 	ldr.w	r3, [r2, #416]	; 0x1a0
     e62:	0698      	lsls	r0, r3, #26
     e64:	d445      	bmi.n	ef2 <SystemInit+0x9e>
     e66:	4b27      	ldr	r3, [pc, #156]	; (f04 <SystemInit+0xb0>)
     e68:	2500      	movs	r5, #0
     e6a:	4619      	mov	r1, r3
     e6c:	2401      	movs	r4, #1
     e6e:	20aa      	movs	r0, #170	; 0xaa
     e70:	2255      	movs	r2, #85	; 0x55
     e72:	2702      	movs	r7, #2
     e74:	260b      	movs	r6, #11
     e76:	f8c3 7104 	str.w	r7, [r3, #260]	; 0x104
     e7a:	f8c3 51a8 	str.w	r5, [r3, #424]	; 0x1a8
     e7e:	f8c3 51ac 	str.w	r5, [r3, #428]	; 0x1ac
     e82:	f8c3 410c 	str.w	r4, [r3, #268]	; 0x10c
     e86:	f8c3 6084 	str.w	r6, [r3, #132]	; 0x84
     e8a:	f8c3 008c 	str.w	r0, [r3, #140]	; 0x8c
     e8e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
     e92:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
     e96:	f8c3 008c 	str.w	r0, [r3, #140]	; 0x8c
     e9a:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
     e9e:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
     ea2:	4a18      	ldr	r2, [pc, #96]	; (f04 <SystemInit+0xb0>)
     ea4:	015b      	lsls	r3, r3, #5
     ea6:	d5fa      	bpl.n	e9e <SystemInit+0x4a>
     ea8:	4611      	mov	r1, r2
     eaa:	2403      	movs	r4, #3
     eac:	20aa      	movs	r0, #170	; 0xaa
     eae:	2355      	movs	r3, #85	; 0x55
     eb0:	f8c2 4080 	str.w	r4, [r2, #128]	; 0x80
     eb4:	f8c2 008c 	str.w	r0, [r2, #140]	; 0x8c
     eb8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
     ebc:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
     ec0:	4a10      	ldr	r2, [pc, #64]	; (f04 <SystemInit+0xb0>)
     ec2:	f013 7f40 	tst.w	r3, #50331648	; 0x3000000
     ec6:	d0f9      	beq.n	ebc <SystemInit+0x68>
     ec8:	490f      	ldr	r1, [pc, #60]	; (f08 <SystemInit+0xb4>)
     eca:	2300      	movs	r3, #0
     ecc:	2005      	movs	r0, #5
     ece:	f8c2 0108 	str.w	r0, [r2, #264]	; 0x108
     ed2:	f8c2 10c4 	str.w	r1, [r2, #196]	; 0xc4
     ed6:	f8c2 31c8 	str.w	r3, [r2, #456]	; 0x1c8
     eda:	6813      	ldr	r3, [r2, #0]
     edc:	bcf0      	pop	{r4, r5, r6, r7}
     ede:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
     ee2:	f023 033a 	bic.w	r3, r3, #58	; 0x3a
     ee6:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
     eea:	f043 033a 	orr.w	r3, r3, #58	; 0x3a
     eee:	6013      	str	r3, [r2, #0]
     ef0:	4770      	bx	lr
     ef2:	f8d2 31a0 	ldr.w	r3, [r2, #416]	; 0x1a0
     ef6:	0659      	lsls	r1, r3, #25
     ef8:	d4b5      	bmi.n	e66 <SystemInit+0x12>
     efa:	f8d2 31a0 	ldr.w	r3, [r2, #416]	; 0x1a0
     efe:	0659      	lsls	r1, r3, #25
     f00:	d5f7      	bpl.n	ef2 <SystemInit+0x9e>
     f02:	e7b0      	b.n	e66 <SystemInit+0x12>
     f04:	400fc000 	.word	0x400fc000
     f08:	042887de 	.word	0x042887de

00000f0c <gpio_init>:
     f0c:	1c4a      	adds	r2, r1, #1
     f0e:	6001      	str	r1, [r0, #0]
     f10:	d018      	beq.n	f44 <gpio_init+0x38>
     f12:	b538      	push	{r3, r4, r5, lr}
     f14:	460c      	mov	r4, r1
     f16:	4605      	mov	r5, r0
     f18:	4608      	mov	r0, r1
     f1a:	2100      	movs	r1, #0
     f1c:	f000 f962 	bl	11e4 <pin_function>
     f20:	f024 011f 	bic.w	r1, r4, #31
     f24:	f004 021f 	and.w	r2, r4, #31
     f28:	2301      	movs	r3, #1
     f2a:	4093      	lsls	r3, r2
     f2c:	f101 0418 	add.w	r4, r1, #24
     f30:	f101 001c 	add.w	r0, r1, #28
     f34:	f101 0214 	add.w	r2, r1, #20
     f38:	60a9      	str	r1, [r5, #8]
     f3a:	606b      	str	r3, [r5, #4]
     f3c:	60ec      	str	r4, [r5, #12]
     f3e:	6128      	str	r0, [r5, #16]
     f40:	616a      	str	r2, [r5, #20]
     f42:	bd38      	pop	{r3, r4, r5, pc}
     f44:	4770      	bx	lr
     f46:	bf00      	nop

00000f48 <gpio_mode>:
     f48:	6800      	ldr	r0, [r0, #0]
     f4a:	f000 b967 	b.w	121c <pin_mode>
     f4e:	bf00      	nop

00000f50 <gpio_dir>:
     f50:	b141      	cbz	r1, f64 <gpio_dir+0x14>
     f52:	2901      	cmp	r1, #1
     f54:	d105      	bne.n	f62 <gpio_dir+0x12>
     f56:	6882      	ldr	r2, [r0, #8]
     f58:	6843      	ldr	r3, [r0, #4]
     f5a:	6811      	ldr	r1, [r2, #0]
     f5c:	430b      	orrs	r3, r1
     f5e:	6013      	str	r3, [r2, #0]
     f60:	4770      	bx	lr
     f62:	4770      	bx	lr
     f64:	6882      	ldr	r2, [r0, #8]
     f66:	6841      	ldr	r1, [r0, #4]
     f68:	6813      	ldr	r3, [r2, #0]
     f6a:	ea23 0301 	bic.w	r3, r3, r1
     f6e:	6013      	str	r3, [r2, #0]
     f70:	4770      	bx	lr
     f72:	bf00      	nop

00000f74 <handle_interrupt_in>:
     f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
     f78:	4b43      	ldr	r3, [pc, #268]	; (1088 <handle_interrupt_in+0x114>)
     f7a:	b083      	sub	sp, #12
     f7c:	f8d3 8004 	ldr.w	r8, [r3, #4]
     f80:	689f      	ldr	r7, [r3, #8]
     f82:	6a5e      	ldr	r6, [r3, #36]	; 0x24
     f84:	6a9d      	ldr	r5, [r3, #40]	; 0x28
     f86:	f1b8 0f00 	cmp.w	r8, #0
     f8a:	d022      	beq.n	fd2 <handle_interrupt_in+0x5e>
     f8c:	469a      	mov	r10, r3
     f8e:	f8df 9100 	ldr.w	r9, [pc, #256]	; 1090 <handle_interrupt_in+0x11c>
     f92:	4a3e      	ldr	r2, [pc, #248]	; (108c <handle_interrupt_in+0x118>)
     f94:	f04f 0b01 	mov.w	r11, #1
     f98:	e006      	b.n	fa8 <handle_interrupt_in+0x34>
     f9a:	fa0b f304 	lsl.w	r3, r11, r4
     f9e:	ebb8 0803 	subs.w	r8, r8, r3
     fa2:	f8ca 300c 	str.w	r3, [r10, #12]
     fa6:	d014      	beq.n	fd2 <handle_interrupt_in+0x5e>
     fa8:	fab8 f488 	clz	r4, r8
     fac:	f1c4 041f 	rsb	r4, r4, #31
     fb0:	b2e4      	uxtb	r4, r4
     fb2:	f859 0024 	ldr.w	r0, [r9, r4, lsl #2]
     fb6:	2800      	cmp	r0, #0
     fb8:	d0ef      	beq.n	f9a <handle_interrupt_in+0x26>
     fba:	6813      	ldr	r3, [r2, #0]
     fbc:	2101      	movs	r1, #1
     fbe:	9201      	str	r2, [sp, #4]
     fc0:	4798      	blx	r3
     fc2:	fa0b f304 	lsl.w	r3, r11, r4
     fc6:	ebb8 0803 	subs.w	r8, r8, r3
     fca:	9a01      	ldr	r2, [sp, #4]
     fcc:	f8ca 300c 	str.w	r3, [r10, #12]
     fd0:	d1ea      	bne.n	fa8 <handle_interrupt_in+0x34>
     fd2:	b1d7      	cbz	r7, 100a <handle_interrupt_in+0x96>
     fd4:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 1090 <handle_interrupt_in+0x11c>
     fd8:	f8df a0b0 	ldr.w	r10, [pc, #176]	; 108c <handle_interrupt_in+0x118>
     fdc:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 1088 <handle_interrupt_in+0x114>
     fe0:	e005      	b.n	fee <handle_interrupt_in+0x7a>
     fe2:	2301      	movs	r3, #1
     fe4:	40a3      	lsls	r3, r4
     fe6:	1aff      	subs	r7, r7, r3
     fe8:	f8c8 300c 	str.w	r3, [r8, #12]
     fec:	d00d      	beq.n	100a <handle_interrupt_in+0x96>
     fee:	fab7 f487 	clz	r4, r7
     ff2:	f1c4 041f 	rsb	r4, r4, #31
     ff6:	b2e4      	uxtb	r4, r4
     ff8:	f859 0024 	ldr.w	r0, [r9, r4, lsl #2]
     ffc:	2800      	cmp	r0, #0
     ffe:	d0f0      	beq.n	fe2 <handle_interrupt_in+0x6e>
    1000:	f8da 3000 	ldr.w	r3, [r10]
    1004:	2102      	movs	r1, #2
    1006:	4798      	blx	r3
    1008:	e7eb      	b.n	fe2 <handle_interrupt_in+0x6e>
    100a:	b1e6      	cbz	r6, 1046 <handle_interrupt_in+0xd2>
    100c:	f8df 8080 	ldr.w	r8, [pc, #128]	; 1090 <handle_interrupt_in+0x11c>
    1010:	f8df 9078 	ldr.w	r9, [pc, #120]	; 108c <handle_interrupt_in+0x118>
    1014:	4f1c      	ldr	r7, [pc, #112]	; (1088 <handle_interrupt_in+0x114>)
    1016:	e004      	b.n	1022 <handle_interrupt_in+0xae>
    1018:	2301      	movs	r3, #1
    101a:	40a3      	lsls	r3, r4
    101c:	1af6      	subs	r6, r6, r3
    101e:	62fb      	str	r3, [r7, #44]	; 0x2c
    1020:	d011      	beq.n	1046 <handle_interrupt_in+0xd2>
    1022:	fab6 f486 	clz	r4, r6
    1026:	f1c4 041f 	rsb	r4, r4, #31
    102a:	b2e4      	uxtb	r4, r4
    102c:	2c0f      	cmp	r4, #15
    102e:	f104 0320 	add.w	r3, r4, #32
    1032:	d8f1      	bhi.n	1018 <handle_interrupt_in+0xa4>
    1034:	f858 0023 	ldr.w	r0, [r8, r3, lsl #2]
    1038:	2800      	cmp	r0, #0
    103a:	d0ed      	beq.n	1018 <handle_interrupt_in+0xa4>
    103c:	f8d9 3000 	ldr.w	r3, [r9]
    1040:	2101      	movs	r1, #1
    1042:	4798      	blx	r3
    1044:	e7e8      	b.n	1018 <handle_interrupt_in+0xa4>
    1046:	b1dd      	cbz	r5, 1080 <handle_interrupt_in+0x10c>
    1048:	4f11      	ldr	r7, [pc, #68]	; (1090 <handle_interrupt_in+0x11c>)
    104a:	f8df 8040 	ldr.w	r8, [pc, #64]	; 108c <handle_interrupt_in+0x118>
    104e:	4e0e      	ldr	r6, [pc, #56]	; (1088 <handle_interrupt_in+0x114>)
    1050:	e004      	b.n	105c <handle_interrupt_in+0xe8>
    1052:	2301      	movs	r3, #1
    1054:	40a3      	lsls	r3, r4
    1056:	1aed      	subs	r5, r5, r3
    1058:	62f3      	str	r3, [r6, #44]	; 0x2c
    105a:	d011      	beq.n	1080 <handle_interrupt_in+0x10c>
    105c:	fab5 f485 	clz	r4, r5
    1060:	f1c4 041f 	rsb	r4, r4, #31
    1064:	b2e4      	uxtb	r4, r4
    1066:	2c0f      	cmp	r4, #15
    1068:	f104 0320 	add.w	r3, r4, #32
    106c:	d8f1      	bhi.n	1052 <handle_interrupt_in+0xde>
    106e:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
    1072:	2800      	cmp	r0, #0
    1074:	d0ed      	beq.n	1052 <handle_interrupt_in+0xde>
    1076:	f8d8 3000 	ldr.w	r3, [r8]
    107a:	2102      	movs	r1, #2
    107c:	4798      	blx	r3
    107e:	e7e8      	b.n	1052 <handle_interrupt_in+0xde>
    1080:	b003      	add	sp, #12
    1082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    1086:	bf00      	nop
    1088:	40028080 	.word	0x40028080
    108c:	10000378 	.word	0x10000378
    1090:	1000037c 	.word	0x1000037c

00001094 <gpio_irq_init>:
    1094:	f1b1 3fff 	cmp.w	r1, #4294967295
    1098:	d028      	beq.n	10ec <gpio_irq_init+0x58>
    109a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    109c:	4604      	mov	r4, r0
    109e:	461e      	mov	r6, r3
    10a0:	4b13      	ldr	r3, [pc, #76]	; (10f0 <gpio_irq_init+0x5c>)
    10a2:	f021 051f 	bic.w	r5, r1, #31
    10a6:	f001 001f 	and.w	r0, r1, #31
    10aa:	4f12      	ldr	r7, [pc, #72]	; (10f4 <gpio_irq_init+0x60>)
    10ac:	f021 015f 	bic.w	r1, r1, #95	; 0x5f
    10b0:	4299      	cmp	r1, r3
    10b2:	603a      	str	r2, [r7, #0]
    10b4:	6025      	str	r5, [r4, #0]
    10b6:	6060      	str	r0, [r4, #4]
    10b8:	d004      	beq.n	10c4 <gpio_irq_init+0x30>
    10ba:	480f      	ldr	r0, [pc, #60]	; (10f8 <gpio_irq_init+0x64>)
    10bc:	f7ff fd5e 	bl	b7c <error>
    10c0:	6825      	ldr	r5, [r4, #0]
    10c2:	6860      	ldr	r0, [r4, #4]
    10c4:	4b0a      	ldr	r3, [pc, #40]	; (10f0 <gpio_irq_init+0x5c>)
    10c6:	490d      	ldr	r1, [pc, #52]	; (10fc <gpio_irq_init+0x68>)
    10c8:	429d      	cmp	r5, r3
    10ca:	bf0c      	ite	eq
    10cc:	4602      	moveq	r2, r0
    10ce:	f100 0220 	addne.w	r2, r0, #32
    10d2:	4b0b      	ldr	r3, [pc, #44]	; (1100 <gpio_irq_init+0x6c>)
    10d4:	60a2      	str	r2, [r4, #8]
    10d6:	2015      	movs	r0, #21
    10d8:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
    10dc:	f7ff fe9c 	bl	e18 <NVIC_SetVector>
    10e0:	4b08      	ldr	r3, [pc, #32]	; (1104 <gpio_irq_init+0x70>)
    10e2:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
    10e6:	601a      	str	r2, [r3, #0]
    10e8:	2000      	movs	r0, #0
    10ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    10ec:	4608      	mov	r0, r1
    10ee:	4770      	bx	lr
    10f0:	2009c000 	.word	0x2009c000
    10f4:	10000378 	.word	0x10000378
    10f8:	0001a578 	.word	0x0001a578
    10fc:	00000f75 	.word	0x00000f75
    1100:	1000037c 	.word	0x1000037c
    1104:	e000e100 	.word	0xe000e100

00001108 <gpio_irq_free>:
    1108:	6882      	ldr	r2, [r0, #8]
    110a:	4b02      	ldr	r3, [pc, #8]	; (1114 <gpio_irq_free+0xc>)
    110c:	2100      	movs	r1, #0
    110e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    1112:	4770      	bx	lr
    1114:	1000037c 	.word	0x1000037c

00001118 <gpio_irq_set>:
    1118:	b430      	push	{r4, r5}
    111a:	6803      	ldr	r3, [r0, #0]
    111c:	4c2e      	ldr	r4, [pc, #184]	; (11d8 <gpio_irq_set+0xc0>)
    111e:	42a3      	cmp	r3, r4
    1120:	d01d      	beq.n	115e <gpio_irq_set+0x46>
    1122:	4d2e      	ldr	r5, [pc, #184]	; (11dc <gpio_irq_set+0xc4>)
    1124:	42ab      	cmp	r3, r5
    1126:	d112      	bne.n	114e <gpio_irq_set+0x36>
    1128:	6845      	ldr	r5, [r0, #4]
    112a:	2301      	movs	r3, #1
    112c:	4c2c      	ldr	r4, [pc, #176]	; (11e0 <gpio_irq_set+0xc8>)
    112e:	40ab      	lsls	r3, r5
    1130:	2901      	cmp	r1, #1
    1132:	62e3      	str	r3, [r4, #44]	; 0x2c
    1134:	d02b      	beq.n	118e <gpio_irq_set+0x76>
    1136:	492a      	ldr	r1, [pc, #168]	; (11e0 <gpio_irq_set+0xc8>)
    1138:	6840      	ldr	r0, [r0, #4]
    113a:	2301      	movs	r3, #1
    113c:	2a00      	cmp	r2, #0
    113e:	d133      	bne.n	11a8 <gpio_irq_set+0x90>
    1140:	bc30      	pop	{r4, r5}
    1142:	6b4a      	ldr	r2, [r1, #52]	; 0x34
    1144:	4083      	lsls	r3, r0
    1146:	ea22 0303 	bic.w	r3, r2, r3
    114a:	634b      	str	r3, [r1, #52]	; 0x34
    114c:	4770      	bx	lr
    114e:	2901      	cmp	r1, #1
    1150:	d016      	beq.n	1180 <gpio_irq_set+0x68>
    1152:	42a3      	cmp	r3, r4
    1154:	d00a      	beq.n	116c <gpio_irq_set+0x54>
    1156:	42ab      	cmp	r3, r5
    1158:	d0ed      	beq.n	1136 <gpio_irq_set+0x1e>
    115a:	bc30      	pop	{r4, r5}
    115c:	4770      	bx	lr
    115e:	6845      	ldr	r5, [r0, #4]
    1160:	2301      	movs	r3, #1
    1162:	4c1f      	ldr	r4, [pc, #124]	; (11e0 <gpio_irq_set+0xc8>)
    1164:	40ab      	lsls	r3, r5
    1166:	2901      	cmp	r1, #1
    1168:	60e3      	str	r3, [r4, #12]
    116a:	d025      	beq.n	11b8 <gpio_irq_set+0xa0>
    116c:	491c      	ldr	r1, [pc, #112]	; (11e0 <gpio_irq_set+0xc8>)
    116e:	6840      	ldr	r0, [r0, #4]
    1170:	2301      	movs	r3, #1
    1172:	b192      	cbz	r2, 119a <gpio_irq_set+0x82>
    1174:	bc30      	pop	{r4, r5}
    1176:	694a      	ldr	r2, [r1, #20]
    1178:	4083      	lsls	r3, r0
    117a:	4313      	orrs	r3, r2
    117c:	614b      	str	r3, [r1, #20]
    117e:	4770      	bx	lr
    1180:	42a3      	cmp	r3, r4
    1182:	d016      	beq.n	11b2 <gpio_irq_set+0x9a>
    1184:	42ab      	cmp	r3, r5
    1186:	d1e8      	bne.n	115a <gpio_irq_set+0x42>
    1188:	6843      	ldr	r3, [r0, #4]
    118a:	fa01 f303 	lsl.w	r3, r1, r3
    118e:	4914      	ldr	r1, [pc, #80]	; (11e0 <gpio_irq_set+0xc8>)
    1190:	b1ea      	cbz	r2, 11ce <gpio_irq_set+0xb6>
    1192:	6b0a      	ldr	r2, [r1, #48]	; 0x30
    1194:	4313      	orrs	r3, r2
    1196:	630b      	str	r3, [r1, #48]	; 0x30
    1198:	e7df      	b.n	115a <gpio_irq_set+0x42>
    119a:	694a      	ldr	r2, [r1, #20]
    119c:	4083      	lsls	r3, r0
    119e:	ea22 0303 	bic.w	r3, r2, r3
    11a2:	614b      	str	r3, [r1, #20]
    11a4:	bc30      	pop	{r4, r5}
    11a6:	4770      	bx	lr
    11a8:	6b4a      	ldr	r2, [r1, #52]	; 0x34
    11aa:	4083      	lsls	r3, r0
    11ac:	4313      	orrs	r3, r2
    11ae:	634b      	str	r3, [r1, #52]	; 0x34
    11b0:	e7d3      	b.n	115a <gpio_irq_set+0x42>
    11b2:	6843      	ldr	r3, [r0, #4]
    11b4:	fa01 f303 	lsl.w	r3, r1, r3
    11b8:	4909      	ldr	r1, [pc, #36]	; (11e0 <gpio_irq_set+0xc8>)
    11ba:	b11a      	cbz	r2, 11c4 <gpio_irq_set+0xac>
    11bc:	690a      	ldr	r2, [r1, #16]
    11be:	4313      	orrs	r3, r2
    11c0:	610b      	str	r3, [r1, #16]
    11c2:	e7ca      	b.n	115a <gpio_irq_set+0x42>
    11c4:	690a      	ldr	r2, [r1, #16]
    11c6:	ea22 0303 	bic.w	r3, r2, r3
    11ca:	610b      	str	r3, [r1, #16]
    11cc:	e7c5      	b.n	115a <gpio_irq_set+0x42>
    11ce:	6b0a      	ldr	r2, [r1, #48]	; 0x30
    11d0:	ea22 0303 	bic.w	r3, r2, r3
    11d4:	630b      	str	r3, [r1, #48]	; 0x30
    11d6:	e7c0      	b.n	115a <gpio_irq_set+0x42>
    11d8:	2009c000 	.word	0x2009c000
    11dc:	2009c040 	.word	0x2009c040
    11e0:	40028080 	.word	0x40028080

000011e4 <pin_function>:
    11e4:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
    11e8:	f5a0 201c 	sub.w	r0, r0, #638976	; 0x9c000
    11ec:	0903      	lsrs	r3, r0, #4
    11ee:	009b      	lsls	r3, r3, #2
    11f0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    11f4:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
    11f8:	f000 000f 	and.w	r0, r0, #15
    11fc:	b410      	push	{r4}
    11fe:	0040      	lsls	r0, r0, #1
    1200:	681c      	ldr	r4, [r3, #0]
    1202:	2203      	movs	r2, #3
    1204:	4082      	lsls	r2, r0
    1206:	ea24 0202 	bic.w	r2, r4, r2
    120a:	601a      	str	r2, [r3, #0]
    120c:	681a      	ldr	r2, [r3, #0]
    120e:	4081      	lsls	r1, r0
    1210:	430a      	orrs	r2, r1
    1212:	601a      	str	r2, [r3, #0]
    1214:	f85d 4b04 	ldr.w	r4, [sp], #4
    1218:	4770      	bx	lr
    121a:	bf00      	nop

0000121c <pin_mode>:
    121c:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
    1220:	f5a0 201c 	sub.w	r0, r0, #638976	; 0x9c000
    1224:	0943      	lsrs	r3, r0, #5
    1226:	009b      	lsls	r3, r3, #2
    1228:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    122c:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
    1230:	b430      	push	{r4, r5}
    1232:	f000 021f 	and.w	r2, r0, #31
    1236:	6e9c      	ldr	r4, [r3, #104]	; 0x68
    1238:	f3c1 0580 	ubfx	r5, r1, #2, #1
    123c:	fa05 f202 	lsl.w	r2, r5, r2
    1240:	ea24 0402 	bic.w	r4, r4, r2
    1244:	669c      	str	r4, [r3, #104]	; 0x68
    1246:	6e9c      	ldr	r4, [r3, #104]	; 0x68
    1248:	4322      	orrs	r2, r4
    124a:	669a      	str	r2, [r3, #104]	; 0x68
    124c:	b995      	cbnz	r5, 1274 <pin_mode+0x58>
    124e:	0903      	lsrs	r3, r0, #4
    1250:	009b      	lsls	r3, r3, #2
    1252:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    1256:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
    125a:	f000 000f 	and.w	r0, r0, #15
    125e:	6c1c      	ldr	r4, [r3, #64]	; 0x40
    1260:	0040      	lsls	r0, r0, #1
    1262:	2203      	movs	r2, #3
    1264:	4082      	lsls	r2, r0
    1266:	ea24 0202 	bic.w	r2, r4, r2
    126a:	641a      	str	r2, [r3, #64]	; 0x40
    126c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    126e:	4081      	lsls	r1, r0
    1270:	4311      	orrs	r1, r2
    1272:	6419      	str	r1, [r3, #64]	; 0x40
    1274:	bc30      	pop	{r4, r5}
    1276:	4770      	bx	lr

00001278 <pwmout_write>:
    1278:	b570      	push	{r4, r5, r6, lr}
    127a:	460c      	mov	r4, r1
    127c:	4605      	mov	r5, r0
    127e:	2100      	movs	r1, #0
    1280:	4620      	mov	r0, r4
    1282:	f011 f839 	bl	122f8 <__aeabi_fcmplt>
    1286:	b9f0      	cbnz	r0, 12c6 <pwmout_write+0x4e>
    1288:	4620      	mov	r0, r4
    128a:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
    128e:	f011 f851 	bl	12334 <__aeabi_fcmpgt>
    1292:	b108      	cbz	r0, 1298 <pwmout_write+0x20>
    1294:	f04f 547e 	mov.w	r4, #1065353216	; 0x3f800000
    1298:	4e0c      	ldr	r6, [pc, #48]	; (12cc <pwmout_write+0x54>)
    129a:	69b0      	ldr	r0, [r6, #24]
    129c:	f010 fe36 	bl	11f0c <__aeabi_ui2f>
    12a0:	4621      	mov	r1, r4
    12a2:	f010 fe8b 	bl	11fbc <__aeabi_fmul>
    12a6:	f011 f875 	bl	12394 <__aeabi_f2uiz>
    12aa:	69b3      	ldr	r3, [r6, #24]
    12ac:	4907      	ldr	r1, [pc, #28]	; (12cc <pwmout_write+0x54>)
    12ae:	4283      	cmp	r3, r0
    12b0:	682b      	ldr	r3, [r5, #0]
    12b2:	bf08      	it	eq
    12b4:	3001      	addeq	r0, #1
    12b6:	6018      	str	r0, [r3, #0]
    12b8:	7928      	ldrb	r0, [r5, #4]
    12ba:	6d0a      	ldr	r2, [r1, #80]	; 0x50
    12bc:	2301      	movs	r3, #1
    12be:	4083      	lsls	r3, r0
    12c0:	4313      	orrs	r3, r2
    12c2:	650b      	str	r3, [r1, #80]	; 0x50
    12c4:	bd70      	pop	{r4, r5, r6, pc}
    12c6:	2400      	movs	r4, #0
    12c8:	e7e6      	b.n	1298 <pwmout_write+0x20>
    12ca:	bf00      	nop
    12cc:	40018000 	.word	0x40018000

000012d0 <pwmout_period_us>:
    12d0:	4b0e      	ldr	r3, [pc, #56]	; (130c <pwmout_period_us+0x3c>)
    12d2:	4a0f      	ldr	r2, [pc, #60]	; (1310 <pwmout_period_us+0x40>)
    12d4:	681b      	ldr	r3, [r3, #0]
    12d6:	b410      	push	{r4}
    12d8:	fb03 f101 	mul.w	r1, r3, r1
    12dc:	2402      	movs	r4, #2
    12de:	6054      	str	r4, [r2, #4]
    12e0:	6191      	str	r1, [r2, #24]
    12e2:	6993      	ldr	r3, [r2, #24]
    12e4:	b13b      	cbz	r3, 12f6 <pwmout_period_us+0x26>
    12e6:	6800      	ldr	r0, [r0, #0]
    12e8:	6803      	ldr	r3, [r0, #0]
    12ea:	6992      	ldr	r2, [r2, #24]
    12ec:	fb03 f101 	mul.w	r1, r3, r1
    12f0:	fbb1 f1f2 	udiv	r1, r1, r2
    12f4:	6001      	str	r1, [r0, #0]
    12f6:	4b06      	ldr	r3, [pc, #24]	; (1310 <pwmout_period_us+0x40>)
    12f8:	2109      	movs	r1, #9
    12fa:	6d1a      	ldr	r2, [r3, #80]	; 0x50
    12fc:	f85d 4b04 	ldr.w	r4, [sp], #4
    1300:	f042 0201 	orr.w	r2, r2, #1
    1304:	651a      	str	r2, [r3, #80]	; 0x50
    1306:	6059      	str	r1, [r3, #4]
    1308:	4770      	bx	lr
    130a:	bf00      	nop
    130c:	1000043c 	.word	0x1000043c
    1310:	40018000 	.word	0x40018000

00001314 <pwmout_period>:
    1314:	b510      	push	{r4, lr}
    1316:	4604      	mov	r4, r0
    1318:	4608      	mov	r0, r1
    131a:	4905      	ldr	r1, [pc, #20]	; (1330 <pwmout_period+0x1c>)
    131c:	f010 fe4e 	bl	11fbc <__aeabi_fmul>
    1320:	f011 f812 	bl	12348 <__aeabi_f2iz>
    1324:	4601      	mov	r1, r0
    1326:	4620      	mov	r0, r4
    1328:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    132c:	f7ff bfd0 	b.w	12d0 <pwmout_period_us>
    1330:	49742400 	.word	0x49742400

00001334 <pwmout_init>:
    1334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1336:	460e      	mov	r6, r1
    1338:	4d1e      	ldr	r5, [pc, #120]	; (13b4 <pwmout_init+0x80>)
    133a:	4604      	mov	r4, r0
    133c:	4629      	mov	r1, r5
    133e:	4630      	mov	r0, r6
    1340:	f7ff fcb4 	bl	cac <pinmap_peripheral>
    1344:	491c      	ldr	r1, [pc, #112]	; (13b8 <pwmout_init+0x84>)
    1346:	4f1d      	ldr	r7, [pc, #116]	; (13bc <pwmout_init+0x88>)
    1348:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    134c:	b2c2      	uxtb	r2, r0
    134e:	f857 7022 	ldr.w	r7, [r7, r2, lsl #2]
    1352:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    1356:	7120      	strb	r0, [r4, #4]
    1358:	6027      	str	r7, [r4, #0]
    135a:	f8c1 30c4 	str.w	r3, [r1, #196]	; 0xc4
    135e:	f8d1 01a8 	ldr.w	r0, [r1, #424]	; 0x1a8
    1362:	4b17      	ldr	r3, [pc, #92]	; (13c0 <pwmout_init+0x8c>)
    1364:	f04f 0e00 	mov.w	lr, #0
    1368:	f420 5040 	bic.w	r0, r0, #12288	; 0x3000
    136c:	2702      	movs	r7, #2
    136e:	f8c1 01a8 	str.w	r0, [r1, #424]	; 0x1a8
    1372:	f8c3 e00c 	str.w	lr, [r3, #12]
    1376:	615f      	str	r7, [r3, #20]
    1378:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
    137a:	2001      	movs	r0, #1
    137c:	3208      	adds	r2, #8
    137e:	fa00 f202 	lsl.w	r2, r0, r2
    1382:	430a      	orrs	r2, r1
    1384:	490f      	ldr	r1, [pc, #60]	; (13c4 <pwmout_init+0x90>)
    1386:	64da      	str	r2, [r3, #76]	; 0x4c
    1388:	680b      	ldr	r3, [r1, #0]
    138a:	490f      	ldr	r1, [pc, #60]	; (13c8 <pwmout_init+0x94>)
    138c:	4a0f      	ldr	r2, [pc, #60]	; (13cc <pwmout_init+0x98>)
    138e:	fba1 1303 	umull	r1, r3, r1, r3
    1392:	4620      	mov	r0, r4
    1394:	0d1b      	lsrs	r3, r3, #20
    1396:	f644 6120 	movw	r1, #20000	; 0x4e20
    139a:	6013      	str	r3, [r2, #0]
    139c:	f7ff ff98 	bl	12d0 <pwmout_period_us>
    13a0:	4620      	mov	r0, r4
    13a2:	2100      	movs	r1, #0
    13a4:	f7ff ff68 	bl	1278 <pwmout_write>
    13a8:	4630      	mov	r0, r6
    13aa:	4629      	mov	r1, r5
    13ac:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    13b0:	f7ff bc3c 	b.w	c2c <pinmap_pinout>
    13b4:	0001a5a8 	.word	0x0001a5a8
    13b8:	400fc000 	.word	0x400fc000
    13bc:	100000d0 	.word	0x100000d0
    13c0:	40018000 	.word	0x40018000
    13c4:	100000cc 	.word	0x100000cc
    13c8:	431bde83 	.word	0x431bde83
    13cc:	1000043c 	.word	0x1000043c

000013d0 <uart2_irq>:
    13d0:	4b17      	ldr	r3, [pc, #92]	; (1430 <uart2_irq+0x60>)
    13d2:	6899      	ldr	r1, [r3, #8]
    13d4:	f3c1 0142 	ubfx	r1, r1, #1, #3
    13d8:	2901      	cmp	r1, #1
    13da:	d018      	beq.n	140e <uart2_irq+0x3e>
    13dc:	2902      	cmp	r1, #2
    13de:	d114      	bne.n	140a <uart2_irq+0x3a>
    13e0:	4a14      	ldr	r2, [pc, #80]	; (1434 <uart2_irq+0x64>)
    13e2:	6f51      	ldr	r1, [r2, #116]	; 0x74
    13e4:	3101      	adds	r1, #1
    13e6:	d006      	beq.n	13f6 <uart2_irq+0x26>
    13e8:	f8d2 1080 	ldr.w	r1, [r2, #128]	; 0x80
    13ec:	6f90      	ldr	r0, [r2, #120]	; 0x78
    13ee:	6008      	str	r0, [r1, #0]
    13f0:	f892 10a6 	ldrb.w	r1, [r2, #166]	; 0xa6
    13f4:	b191      	cbz	r1, 141c <uart2_irq+0x4c>
    13f6:	6f10      	ldr	r0, [r2, #112]	; 0x70
    13f8:	4b0e      	ldr	r3, [pc, #56]	; (1434 <uart2_irq+0x64>)
    13fa:	b1b8      	cbz	r0, 142c <uart2_irq+0x5c>
    13fc:	f893 30a6 	ldrb.w	r3, [r3, #166]	; 0xa6
    1400:	b123      	cbz	r3, 140c <uart2_irq+0x3c>
    1402:	4b0d      	ldr	r3, [pc, #52]	; (1438 <uart2_irq+0x68>)
    1404:	2100      	movs	r1, #0
    1406:	681b      	ldr	r3, [r3, #0]
    1408:	4718      	bx	r3
    140a:	4770      	bx	lr
    140c:	4770      	bx	lr
    140e:	4b09      	ldr	r3, [pc, #36]	; (1434 <uart2_irq+0x64>)
    1410:	6f18      	ldr	r0, [r3, #112]	; 0x70
    1412:	2800      	cmp	r0, #0
    1414:	d0fa      	beq.n	140c <uart2_irq+0x3c>
    1416:	4b08      	ldr	r3, [pc, #32]	; (1438 <uart2_irq+0x68>)
    1418:	681b      	ldr	r3, [r3, #0]
    141a:	4718      	bx	r3
    141c:	6859      	ldr	r1, [r3, #4]
    141e:	f021 0101 	bic.w	r1, r1, #1
    1422:	6059      	str	r1, [r3, #4]
    1424:	6f10      	ldr	r0, [r2, #112]	; 0x70
    1426:	4b03      	ldr	r3, [pc, #12]	; (1434 <uart2_irq+0x64>)
    1428:	2800      	cmp	r0, #0
    142a:	d1e7      	bne.n	13fc <uart2_irq+0x2c>
    142c:	4770      	bx	lr
    142e:	bf00      	nop
    1430:	40098000 	.word	0x40098000
    1434:	10000448 	.word	0x10000448
    1438:	10000444 	.word	0x10000444

0000143c <serial_irq_set_internal>:
    143c:	b570      	push	{r4, r5, r6, lr}
    143e:	6803      	ldr	r3, [r0, #0]
    1440:	4c28      	ldr	r4, [pc, #160]	; (14e4 <serial_irq_set_internal+0xa8>)
    1442:	42a3      	cmp	r3, r4
    1444:	d047      	beq.n	14d6 <serial_irq_set_internal+0x9a>
    1446:	dd3f      	ble.n	14c8 <serial_irq_set_internal+0x8c>
    1448:	4c27      	ldr	r4, [pc, #156]	; (14e8 <serial_irq_set_internal+0xac>)
    144a:	42a3      	cmp	r3, r4
    144c:	d029      	beq.n	14a2 <serial_irq_set_internal+0x66>
    144e:	f504 4480 	add.w	r4, r4, #16384	; 0x4000
    1452:	42a3      	cmp	r3, r4
    1454:	d142      	bne.n	14dc <serial_irq_set_internal+0xa0>
    1456:	4c25      	ldr	r4, [pc, #148]	; (14ec <serial_irq_set_internal+0xb0>)
    1458:	2608      	movs	r6, #8
    145a:	bb32      	cbnz	r2, 14aa <serial_irq_set_internal+0x6e>
    145c:	2901      	cmp	r1, #1
    145e:	d00b      	beq.n	1478 <serial_irq_set_internal+0x3c>
    1460:	6842      	ldr	r2, [r0, #4]
    1462:	4c23      	ldr	r4, [pc, #140]	; (14f0 <serial_irq_set_internal+0xb4>)
    1464:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
    1468:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
    146c:	f892 4036 	ldrb.w	r4, [r2, #54]	; 0x36
    1470:	3230      	adds	r2, #48	; 0x30
    1472:	7952      	ldrb	r2, [r2, #5]
    1474:	42d4      	cmn	r4, r2
    1476:	d113      	bne.n	14a0 <serial_irq_set_internal+0x64>
    1478:	fab1 f481 	clz	r4, r1
    147c:	685d      	ldr	r5, [r3, #4]
    147e:	2201      	movs	r2, #1
    1480:	fa02 f101 	lsl.w	r1, r2, r1
    1484:	ea25 0101 	bic.w	r1, r5, r1
    1488:	6059      	str	r1, [r3, #4]
    148a:	6803      	ldr	r3, [r0, #0]
    148c:	0964      	lsrs	r4, r4, #5
    148e:	685b      	ldr	r3, [r3, #4]
    1490:	fa02 f104 	lsl.w	r1, r2, r4
    1494:	4219      	tst	r1, r3
    1496:	d103      	bne.n	14a0 <serial_irq_set_internal+0x64>
    1498:	4b16      	ldr	r3, [pc, #88]	; (14f4 <serial_irq_set_internal+0xb8>)
    149a:	40b2      	lsls	r2, r6
    149c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    14a0:	bd70      	pop	{r4, r5, r6, pc}
    14a2:	4c15      	ldr	r4, [pc, #84]	; (14f8 <serial_irq_set_internal+0xbc>)
    14a4:	2607      	movs	r6, #7
    14a6:	2a00      	cmp	r2, #0
    14a8:	d0d8      	beq.n	145c <serial_irq_set_internal+0x20>
    14aa:	685a      	ldr	r2, [r3, #4]
    14ac:	2501      	movs	r5, #1
    14ae:	fa05 f101 	lsl.w	r1, r5, r1
    14b2:	430a      	orrs	r2, r1
    14b4:	b276      	sxtb	r6, r6
    14b6:	605a      	str	r2, [r3, #4]
    14b8:	4621      	mov	r1, r4
    14ba:	4630      	mov	r0, r6
    14bc:	f7ff fcac 	bl	e18 <NVIC_SetVector>
    14c0:	4b0c      	ldr	r3, [pc, #48]	; (14f4 <serial_irq_set_internal+0xb8>)
    14c2:	40b5      	lsls	r5, r6
    14c4:	601d      	str	r5, [r3, #0]
    14c6:	bd70      	pop	{r4, r5, r6, pc}
    14c8:	f5a4 4480 	sub.w	r4, r4, #16384	; 0x4000
    14cc:	42a3      	cmp	r3, r4
    14ce:	d105      	bne.n	14dc <serial_irq_set_internal+0xa0>
    14d0:	4c0a      	ldr	r4, [pc, #40]	; (14fc <serial_irq_set_internal+0xc0>)
    14d2:	2605      	movs	r6, #5
    14d4:	e7c1      	b.n	145a <serial_irq_set_internal+0x1e>
    14d6:	4c0a      	ldr	r4, [pc, #40]	; (1500 <serial_irq_set_internal+0xc4>)
    14d8:	2606      	movs	r6, #6
    14da:	e7be      	b.n	145a <serial_irq_set_internal+0x1e>
    14dc:	2400      	movs	r4, #0
    14de:	4626      	mov	r6, r4
    14e0:	e7bb      	b.n	145a <serial_irq_set_internal+0x1e>
    14e2:	bf00      	nop
    14e4:	40010000 	.word	0x40010000
    14e8:	40098000 	.word	0x40098000
    14ec:	00001505 	.word	0x00001505
    14f0:	10000448 	.word	0x10000448
    14f4:	e000e100 	.word	0xe000e100
    14f8:	000013d1 	.word	0x000013d1
    14fc:	00001579 	.word	0x00001579
    1500:	000015e1 	.word	0x000015e1

00001504 <uart3_irq>:
    1504:	4b19      	ldr	r3, [pc, #100]	; (156c <uart3_irq+0x68>)
    1506:	6899      	ldr	r1, [r3, #8]
    1508:	f3c1 0142 	ubfx	r1, r1, #1, #3
    150c:	2901      	cmp	r1, #1
    150e:	d01b      	beq.n	1548 <uart3_irq+0x44>
    1510:	2902      	cmp	r1, #2
    1512:	d117      	bne.n	1544 <uart3_irq+0x40>
    1514:	4a16      	ldr	r2, [pc, #88]	; (1570 <uart3_irq+0x6c>)
    1516:	f8d2 10ac 	ldr.w	r1, [r2, #172]	; 0xac
    151a:	3101      	adds	r1, #1
    151c:	d007      	beq.n	152e <uart3_irq+0x2a>
    151e:	f8d2 10b8 	ldr.w	r1, [r2, #184]	; 0xb8
    1522:	f8d2 00b0 	ldr.w	r0, [r2, #176]	; 0xb0
    1526:	6008      	str	r0, [r1, #0]
    1528:	f892 10de 	ldrb.w	r1, [r2, #222]	; 0xde
    152c:	b1a1      	cbz	r1, 1558 <uart3_irq+0x54>
    152e:	f8d2 00a8 	ldr.w	r0, [r2, #168]	; 0xa8
    1532:	4b0f      	ldr	r3, [pc, #60]	; (1570 <uart3_irq+0x6c>)
    1534:	b1c8      	cbz	r0, 156a <uart3_irq+0x66>
    1536:	f893 30de 	ldrb.w	r3, [r3, #222]	; 0xde
    153a:	b123      	cbz	r3, 1546 <uart3_irq+0x42>
    153c:	4b0d      	ldr	r3, [pc, #52]	; (1574 <uart3_irq+0x70>)
    153e:	2100      	movs	r1, #0
    1540:	681b      	ldr	r3, [r3, #0]
    1542:	4718      	bx	r3
    1544:	4770      	bx	lr
    1546:	4770      	bx	lr
    1548:	4b09      	ldr	r3, [pc, #36]	; (1570 <uart3_irq+0x6c>)
    154a:	f8d3 00a8 	ldr.w	r0, [r3, #168]	; 0xa8
    154e:	2800      	cmp	r0, #0
    1550:	d0f9      	beq.n	1546 <uart3_irq+0x42>
    1552:	4b08      	ldr	r3, [pc, #32]	; (1574 <uart3_irq+0x70>)
    1554:	681b      	ldr	r3, [r3, #0]
    1556:	4718      	bx	r3
    1558:	6859      	ldr	r1, [r3, #4]
    155a:	f021 0101 	bic.w	r1, r1, #1
    155e:	6059      	str	r1, [r3, #4]
    1560:	f8d2 00a8 	ldr.w	r0, [r2, #168]	; 0xa8
    1564:	4b02      	ldr	r3, [pc, #8]	; (1570 <uart3_irq+0x6c>)
    1566:	2800      	cmp	r0, #0
    1568:	d1e5      	bne.n	1536 <uart3_irq+0x32>
    156a:	4770      	bx	lr
    156c:	4009c000 	.word	0x4009c000
    1570:	10000448 	.word	0x10000448
    1574:	10000444 	.word	0x10000444

00001578 <uart0_irq>:
    1578:	4b16      	ldr	r3, [pc, #88]	; (15d4 <uart0_irq+0x5c>)
    157a:	6899      	ldr	r1, [r3, #8]
    157c:	f3c1 0142 	ubfx	r1, r1, #1, #3
    1580:	2901      	cmp	r1, #1
    1582:	d017      	beq.n	15b4 <uart0_irq+0x3c>
    1584:	2902      	cmp	r1, #2
    1586:	d113      	bne.n	15b0 <uart0_irq+0x38>
    1588:	4a13      	ldr	r2, [pc, #76]	; (15d8 <uart0_irq+0x60>)
    158a:	6851      	ldr	r1, [r2, #4]
    158c:	3101      	adds	r1, #1
    158e:	d005      	beq.n	159c <uart0_irq+0x24>
    1590:	6911      	ldr	r1, [r2, #16]
    1592:	6890      	ldr	r0, [r2, #8]
    1594:	6008      	str	r0, [r1, #0]
    1596:	f892 1036 	ldrb.w	r1, [r2, #54]	; 0x36
    159a:	b191      	cbz	r1, 15c2 <uart0_irq+0x4a>
    159c:	6810      	ldr	r0, [r2, #0]
    159e:	4b0e      	ldr	r3, [pc, #56]	; (15d8 <uart0_irq+0x60>)
    15a0:	b1b8      	cbz	r0, 15d2 <uart0_irq+0x5a>
    15a2:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
    15a6:	b123      	cbz	r3, 15b2 <uart0_irq+0x3a>
    15a8:	4b0c      	ldr	r3, [pc, #48]	; (15dc <uart0_irq+0x64>)
    15aa:	2100      	movs	r1, #0
    15ac:	681b      	ldr	r3, [r3, #0]
    15ae:	4718      	bx	r3
    15b0:	4770      	bx	lr
    15b2:	4770      	bx	lr
    15b4:	4b08      	ldr	r3, [pc, #32]	; (15d8 <uart0_irq+0x60>)
    15b6:	6818      	ldr	r0, [r3, #0]
    15b8:	2800      	cmp	r0, #0
    15ba:	d0fa      	beq.n	15b2 <uart0_irq+0x3a>
    15bc:	4b07      	ldr	r3, [pc, #28]	; (15dc <uart0_irq+0x64>)
    15be:	681b      	ldr	r3, [r3, #0]
    15c0:	4718      	bx	r3
    15c2:	6859      	ldr	r1, [r3, #4]
    15c4:	f021 0101 	bic.w	r1, r1, #1
    15c8:	6059      	str	r1, [r3, #4]
    15ca:	6810      	ldr	r0, [r2, #0]
    15cc:	4b02      	ldr	r3, [pc, #8]	; (15d8 <uart0_irq+0x60>)
    15ce:	2800      	cmp	r0, #0
    15d0:	d1e7      	bne.n	15a2 <uart0_irq+0x2a>
    15d2:	4770      	bx	lr
    15d4:	4000c000 	.word	0x4000c000
    15d8:	10000448 	.word	0x10000448
    15dc:	10000444 	.word	0x10000444

000015e0 <uart1_irq>:
    15e0:	4b16      	ldr	r3, [pc, #88]	; (163c <uart1_irq+0x5c>)
    15e2:	6899      	ldr	r1, [r3, #8]
    15e4:	f3c1 0142 	ubfx	r1, r1, #1, #3
    15e8:	2901      	cmp	r1, #1
    15ea:	d017      	beq.n	161c <uart1_irq+0x3c>
    15ec:	2902      	cmp	r1, #2
    15ee:	d113      	bne.n	1618 <uart1_irq+0x38>
    15f0:	4a13      	ldr	r2, [pc, #76]	; (1640 <uart1_irq+0x60>)
    15f2:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
    15f4:	3101      	adds	r1, #1
    15f6:	d005      	beq.n	1604 <uart1_irq+0x24>
    15f8:	6c91      	ldr	r1, [r2, #72]	; 0x48
    15fa:	6c10      	ldr	r0, [r2, #64]	; 0x40
    15fc:	6008      	str	r0, [r1, #0]
    15fe:	f892 106e 	ldrb.w	r1, [r2, #110]	; 0x6e
    1602:	b191      	cbz	r1, 162a <uart1_irq+0x4a>
    1604:	6b90      	ldr	r0, [r2, #56]	; 0x38
    1606:	4b0e      	ldr	r3, [pc, #56]	; (1640 <uart1_irq+0x60>)
    1608:	b1b8      	cbz	r0, 163a <uart1_irq+0x5a>
    160a:	f893 306e 	ldrb.w	r3, [r3, #110]	; 0x6e
    160e:	b123      	cbz	r3, 161a <uart1_irq+0x3a>
    1610:	4b0c      	ldr	r3, [pc, #48]	; (1644 <uart1_irq+0x64>)
    1612:	2100      	movs	r1, #0
    1614:	681b      	ldr	r3, [r3, #0]
    1616:	4718      	bx	r3
    1618:	4770      	bx	lr
    161a:	4770      	bx	lr
    161c:	4b08      	ldr	r3, [pc, #32]	; (1640 <uart1_irq+0x60>)
    161e:	6b98      	ldr	r0, [r3, #56]	; 0x38
    1620:	2800      	cmp	r0, #0
    1622:	d0fa      	beq.n	161a <uart1_irq+0x3a>
    1624:	4b07      	ldr	r3, [pc, #28]	; (1644 <uart1_irq+0x64>)
    1626:	681b      	ldr	r3, [r3, #0]
    1628:	4718      	bx	r3
    162a:	6859      	ldr	r1, [r3, #4]
    162c:	f021 0101 	bic.w	r1, r1, #1
    1630:	6059      	str	r1, [r3, #4]
    1632:	6b90      	ldr	r0, [r2, #56]	; 0x38
    1634:	4b02      	ldr	r3, [pc, #8]	; (1640 <uart1_irq+0x60>)
    1636:	2800      	cmp	r0, #0
    1638:	d1e7      	bne.n	160a <uart1_irq+0x2a>
    163a:	4770      	bx	lr
    163c:	40010000 	.word	0x40010000
    1640:	10000448 	.word	0x10000448
    1644:	10000444 	.word	0x10000444

00001648 <serial_baud>:
    1648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    164c:	6802      	ldr	r2, [r0, #0]
    164e:	4b6a      	ldr	r3, [pc, #424]	; (17f8 <serial_baud+0x1b0>)
    1650:	b089      	sub	sp, #36	; 0x24
    1652:	429a      	cmp	r2, r3
    1654:	9007      	str	r0, [sp, #28]
    1656:	9206      	str	r2, [sp, #24]
    1658:	f000 80bc 	beq.w	17d4 <serial_baud+0x18c>
    165c:	f340 80a7 	ble.w	17ae <serial_baud+0x166>
    1660:	4b66      	ldr	r3, [pc, #408]	; (17fc <serial_baud+0x1b4>)
    1662:	9806      	ldr	r0, [sp, #24]
    1664:	4298      	cmp	r0, r3
    1666:	f000 8089 	beq.w	177c <serial_baud+0x134>
    166a:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    166e:	4298      	cmp	r0, r3
    1670:	d10c      	bne.n	168c <serial_baud+0x44>
    1672:	4b63      	ldr	r3, [pc, #396]	; (1800 <serial_baud+0x1b8>)
    1674:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
    1678:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
    167c:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    1680:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
    1684:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
    1688:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    168c:	4a5d      	ldr	r2, [pc, #372]	; (1804 <serial_baud+0x1bc>)
    168e:	010b      	lsls	r3, r1, #4
    1690:	6812      	ldr	r2, [r2, #0]
    1692:	fbb2 f0f3 	udiv	r0, r2, r3
    1696:	fb03 2310 	mls	r3, r3, r0, r2
    169a:	9203      	str	r2, [sp, #12]
    169c:	b280      	uxth	r0, r0
    169e:	2b00      	cmp	r3, #0
    16a0:	f000 8083 	beq.w	17aa <serial_baud+0x162>
    16a4:	9b03      	ldr	r3, [sp, #12]
    16a6:	f04f 0801 	mov.w	r8, #1
    16aa:	005a      	lsls	r2, r3, #1
    16ac:	009c      	lsls	r4, r3, #2
    16ae:	4694      	mov	r12, r2
    16b0:	46a2      	mov	r10, r4
    16b2:	46c3      	mov	r11, r8
    16b4:	468e      	mov	lr, r1
    16b6:	4699      	mov	r9, r3
    16b8:	2300      	movs	r3, #0
    16ba:	9204      	str	r2, [sp, #16]
    16bc:	9405      	str	r4, [sp, #20]
    16be:	9000      	str	r0, [sp, #0]
    16c0:	9102      	str	r1, [sp, #8]
    16c2:	9301      	str	r3, [sp, #4]
    16c4:	2400      	movs	r4, #0
    16c6:	4625      	mov	r5, r4
    16c8:	9e02      	ldr	r6, [sp, #8]
    16ca:	fa5f f788 	uxtb.w	r7, r8
    16ce:	f1bc 0f00 	cmp.w	r12, #0
    16d2:	bfb5      	itete	lt
    16d4:	fbbc f0f6 	udivlt	r0, r12, r6
    16d8:	fbba f0f6 	udivge	r0, r10, r6
    16dc:	0900      	lsrlt	r0, r0, #4
    16de:	0940      	lsrge	r0, r0, #5
    16e0:	3001      	adds	r0, #1
    16e2:	f3c0 004f 	ubfx	r0, r0, #1, #16
    16e6:	eb08 0204 	add.w	r2, r8, r4
    16ea:	2800      	cmp	r0, #0
    16ec:	d154      	bne.n	1798 <serial_baud+0x150>
    16ee:	2c00      	cmp	r4, #0
    16f0:	d07e      	beq.n	17f0 <serial_baud+0x1a8>
    16f2:	2002      	movs	r0, #2
    16f4:	4603      	mov	r3, r0
    16f6:	fb03 f302 	mul.w	r3, r3, r2
    16fa:	00db      	lsls	r3, r3, #3
    16fc:	fbb9 f3f3 	udiv	r3, r9, r3
    1700:	3301      	adds	r3, #1
    1702:	ebc1 0353 	rsb	r3, r1, r3, lsr #1
    1706:	2b00      	cmp	r3, #0
    1708:	bfb8      	it	lt
    170a:	425b      	neglt	r3, r3
    170c:	4573      	cmp	r3, lr
    170e:	da05      	bge.n	171c <serial_baud+0xd4>
    1710:	428b      	cmp	r3, r1
    1712:	d046      	beq.n	17a2 <serial_baud+0x15a>
    1714:	469e      	mov	lr, r3
    1716:	46bb      	mov	r11, r7
    1718:	e88d 0021 	stmia.w	sp, {r0, r5}
    171c:	3401      	adds	r4, #1
    171e:	b2e5      	uxtb	r5, r4
    1720:	42bd      	cmp	r5, r7
    1722:	440e      	add	r6, r1
    1724:	d3d3      	bcc.n	16ce <serial_baud+0x86>
    1726:	9b03      	ldr	r3, [sp, #12]
    1728:	f108 0801 	add.w	r8, r8, #1
    172c:	4499      	add	r9, r3
    172e:	9b04      	ldr	r3, [sp, #16]
    1730:	f1b8 0f10 	cmp.w	r8, #16
    1734:	449c      	add	r12, r3
    1736:	9b05      	ldr	r3, [sp, #20]
    1738:	449a      	add	r10, r3
    173a:	9b02      	ldr	r3, [sp, #8]
    173c:	440b      	add	r3, r1
    173e:	9302      	str	r3, [sp, #8]
    1740:	d1c0      	bne.n	16c4 <serial_baud+0x7c>
    1742:	9b01      	ldr	r3, [sp, #4]
    1744:	9800      	ldr	r0, [sp, #0]
    1746:	ea43 150b 	orr.w	r5, r3, r11, lsl #4
    174a:	b2ed      	uxtb	r5, r5
    174c:	9906      	ldr	r1, [sp, #24]
    174e:	f3c0 2207 	ubfx	r2, r0, #8, #8
    1752:	7b0b      	ldrb	r3, [r1, #12]
    1754:	b2c0      	uxtb	r0, r0
    1756:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    175a:	730b      	strb	r3, [r1, #12]
    175c:	9907      	ldr	r1, [sp, #28]
    175e:	680b      	ldr	r3, [r1, #0]
    1760:	711a      	strb	r2, [r3, #4]
    1762:	680b      	ldr	r3, [r1, #0]
    1764:	7018      	strb	r0, [r3, #0]
    1766:	680b      	ldr	r3, [r1, #0]
    1768:	f883 5028 	strb.w	r5, [r3, #40]	; 0x28
    176c:	680a      	ldr	r2, [r1, #0]
    176e:	7b13      	ldrb	r3, [r2, #12]
    1770:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    1774:	7313      	strb	r3, [r2, #12]
    1776:	b009      	add	sp, #36	; 0x24
    1778:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    177c:	4b20      	ldr	r3, [pc, #128]	; (1800 <serial_baud+0x1b8>)
    177e:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
    1782:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
    1786:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    178a:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
    178e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
    1792:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    1796:	e779      	b.n	168c <serial_baud+0x44>
    1798:	2c00      	cmp	r4, #0
    179a:	d0ab      	beq.n	16f4 <serial_baud+0xac>
    179c:	2801      	cmp	r0, #1
    179e:	d8a9      	bhi.n	16f4 <serial_baud+0xac>
    17a0:	e7a7      	b.n	16f2 <serial_baud+0xaa>
    17a2:	ea45 1507 	orr.w	r5, r5, r7, lsl #4
    17a6:	b2ed      	uxtb	r5, r5
    17a8:	e7d0      	b.n	174c <serial_baud+0x104>
    17aa:	2510      	movs	r5, #16
    17ac:	e7ce      	b.n	174c <serial_baud+0x104>
    17ae:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
    17b2:	429a      	cmp	r2, r3
    17b4:	f47f af6a 	bne.w	168c <serial_baud+0x44>
    17b8:	4b11      	ldr	r3, [pc, #68]	; (1800 <serial_baud+0x1b8>)
    17ba:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
    17be:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
    17c2:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    17c6:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
    17ca:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    17ce:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    17d2:	e75b      	b.n	168c <serial_baud+0x44>
    17d4:	4b0a      	ldr	r3, [pc, #40]	; (1800 <serial_baud+0x1b8>)
    17d6:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
    17da:	f422 7240 	bic.w	r2, r2, #768	; 0x300
    17de:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    17e2:	f8d3 21a8 	ldr.w	r2, [r3, #424]	; 0x1a8
    17e6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
    17ea:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    17ee:	e74d      	b.n	168c <serial_baud+0x44>
    17f0:	2001      	movs	r0, #1
    17f2:	4603      	mov	r3, r0
    17f4:	e77f      	b.n	16f6 <serial_baud+0xae>
    17f6:	bf00      	nop
    17f8:	40010000 	.word	0x40010000
    17fc:	40098000 	.word	0x40098000
    1800:	400fc000 	.word	0x400fc000
    1804:	100000cc 	.word	0x100000cc

00001808 <serial_irq_handler>:
    1808:	6843      	ldr	r3, [r0, #4]
    180a:	b410      	push	{r4}
    180c:	4804      	ldr	r0, [pc, #16]	; (1820 <serial_irq_handler+0x18>)
    180e:	4c05      	ldr	r4, [pc, #20]	; (1824 <serial_irq_handler+0x1c>)
    1810:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
    1814:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
    1818:	6001      	str	r1, [r0, #0]
    181a:	f85d 4b04 	ldr.w	r4, [sp], #4
    181e:	4770      	bx	lr
    1820:	10000444 	.word	0x10000444
    1824:	10000448 	.word	0x10000448

00001828 <serial_getc>:
    1828:	6802      	ldr	r2, [r0, #0]
    182a:	7d13      	ldrb	r3, [r2, #20]
    182c:	07db      	lsls	r3, r3, #31
    182e:	d5fc      	bpl.n	182a <serial_getc+0x2>
    1830:	6843      	ldr	r3, [r0, #4]
    1832:	4909      	ldr	r1, [pc, #36]	; (1858 <serial_getc+0x30>)
    1834:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
    1838:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
    183c:	6859      	ldr	r1, [r3, #4]
    183e:	7810      	ldrb	r0, [r2, #0]
    1840:	3101      	adds	r1, #1
    1842:	b2c0      	uxtb	r0, r0
    1844:	d006      	beq.n	1854 <serial_getc+0x2c>
    1846:	6959      	ldr	r1, [r3, #20]
    1848:	689b      	ldr	r3, [r3, #8]
    184a:	600b      	str	r3, [r1, #0]
    184c:	6853      	ldr	r3, [r2, #4]
    184e:	f043 0301 	orr.w	r3, r3, #1
    1852:	6053      	str	r3, [r2, #4]
    1854:	4770      	bx	lr
    1856:	bf00      	nop
    1858:	10000448 	.word	0x10000448

0000185c <serial_readable>:
    185c:	6803      	ldr	r3, [r0, #0]
    185e:	7d18      	ldrb	r0, [r3, #20]
    1860:	f000 0001 	and.w	r0, r0, #1
    1864:	4770      	bx	lr
    1866:	bf00      	nop

00001868 <serial_writable>:
    1868:	6843      	ldr	r3, [r0, #4]
    186a:	4a17      	ldr	r2, [pc, #92]	; (18c8 <serial_writable+0x60>)
    186c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
    1870:	00db      	lsls	r3, r3, #3
    1872:	18d1      	adds	r1, r2, r3
    1874:	b410      	push	{r4}
    1876:	69cc      	ldr	r4, [r1, #28]
    1878:	3401      	adds	r4, #1
    187a:	d011      	beq.n	18a0 <serial_writable+0x38>
    187c:	460b      	mov	r3, r1
    187e:	6b0a      	ldr	r2, [r1, #48]	; 0x30
    1880:	331c      	adds	r3, #28
    1882:	685b      	ldr	r3, [r3, #4]
    1884:	6812      	ldr	r2, [r2, #0]
    1886:	421a      	tst	r2, r3
    1888:	d003      	beq.n	1892 <serial_writable+0x2a>
    188a:	2000      	movs	r0, #0
    188c:	f85d 4b04 	ldr.w	r4, [sp], #4
    1890:	4770      	bx	lr
    1892:	6803      	ldr	r3, [r0, #0]
    1894:	f85d 4b04 	ldr.w	r4, [sp], #4
    1898:	7d18      	ldrb	r0, [r3, #20]
    189a:	f3c0 1080 	ubfx	r0, r0, #6, #1
    189e:	4770      	bx	lr
    18a0:	6803      	ldr	r3, [r0, #0]
    18a2:	7d1b      	ldrb	r3, [r3, #20]
    18a4:	069b      	lsls	r3, r3, #26
    18a6:	d408      	bmi.n	18ba <serial_writable+0x52>
    18a8:	f891 0034 	ldrb.w	r0, [r1, #52]	; 0x34
    18ac:	f85d 4b04 	ldr.w	r4, [sp], #4
    18b0:	280f      	cmp	r0, #15
    18b2:	bf8c      	ite	hi
    18b4:	2000      	movhi	r0, #0
    18b6:	2001      	movls	r0, #1
    18b8:	4770      	bx	lr
    18ba:	2300      	movs	r3, #0
    18bc:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
    18c0:	2001      	movs	r0, #1
    18c2:	f85d 4b04 	ldr.w	r4, [sp], #4
    18c6:	4770      	bx	lr
    18c8:	10000448 	.word	0x10000448

000018cc <serial_putc>:
    18cc:	b538      	push	{r3, r4, r5, lr}
    18ce:	4604      	mov	r4, r0
    18d0:	460d      	mov	r5, r1
    18d2:	4620      	mov	r0, r4
    18d4:	f7ff ffc8 	bl	1868 <serial_writable>
    18d8:	2800      	cmp	r0, #0
    18da:	d0fa      	beq.n	18d2 <serial_putc+0x6>
    18dc:	6823      	ldr	r3, [r4, #0]
    18de:	b2ed      	uxtb	r5, r5
    18e0:	701d      	strb	r5, [r3, #0]
    18e2:	6863      	ldr	r3, [r4, #4]
    18e4:	4a05      	ldr	r2, [pc, #20]	; (18fc <serial_putc+0x30>)
    18e6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
    18ea:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
    18ee:	f893 2034 	ldrb.w	r2, [r3, #52]	; 0x34
    18f2:	3201      	adds	r2, #1
    18f4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    18f8:	bd38      	pop	{r3, r4, r5, pc}
    18fa:	bf00      	nop
    18fc:	10000448 	.word	0x10000448

00001900 <serial_set_flow_control>:
    1900:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    1904:	4604      	mov	r4, r0
    1906:	4846      	ldr	r0, [pc, #280]	; (1a20 <serial_set_flow_control+0x120>)
    1908:	6825      	ldr	r5, [r4, #0]
    190a:	b083      	sub	sp, #12
    190c:	4285      	cmp	r5, r0
    190e:	460f      	mov	r7, r1
    1910:	4691      	mov	r9, r2
    1912:	9301      	str	r3, [sp, #4]
    1914:	d043      	beq.n	199e <serial_set_flow_control+0x9e>
    1916:	f8d4 a004 	ldr.w	r10, [r4, #4]
    191a:	2500      	movs	r5, #0
    191c:	4653      	mov	r3, r10
    191e:	4e41      	ldr	r6, [pc, #260]	; (1a24 <serial_set_flow_control+0x124>)
    1920:	ea4f 08ca 	mov.w	r8, r10, lsl #3
    1924:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
    1928:	ebca 0e08 	rsb	lr, r10, r8
    192c:	2000      	movs	r0, #0
    192e:	eb06 0ece 	add.w	lr, r6, lr, lsl #3
    1932:	f04f 3bff 	mov.w	r11, #4294967295
    1936:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
    193a:	4601      	mov	r1, r0
    193c:	4602      	mov	r2, r0
    193e:	f883 0035 	strb.w	r0, [r3, #53]	; 0x35
    1942:	f8ce b01c 	str.w	r11, [lr, #28]
    1946:	4620      	mov	r0, r4
    1948:	f8ce b004 	str.w	r11, [lr, #4]
    194c:	f7ff fd76 	bl	143c <serial_irq_set_internal>
    1950:	b917      	cbnz	r7, 1958 <serial_set_flow_control+0x58>
    1952:	b003      	add	sp, #12
    1954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    1958:	4933      	ldr	r1, [pc, #204]	; (1a28 <serial_set_flow_control+0x128>)
    195a:	4648      	mov	r0, r9
    195c:	f7ff f998 	bl	c90 <pinmap_find_peripheral>
    1960:	4932      	ldr	r1, [pc, #200]	; (1a2c <serial_set_flow_control+0x12c>)
    1962:	4683      	mov	r11, r0
    1964:	9801      	ldr	r0, [sp, #4]
    1966:	f7ff f993 	bl	c90 <pinmap_find_peripheral>
    196a:	1ebb      	subs	r3, r7, #2
    196c:	2b01      	cmp	r3, #1
    196e:	d937      	bls.n	19e0 <serial_set_flow_control+0xe0>
    1970:	2f01      	cmp	r7, #1
    1972:	d1ee      	bne.n	1952 <serial_set_flow_control+0x52>
    1974:	f1b9 3fff 	cmp.w	r9, #4294967295
    1978:	d0eb      	beq.n	1952 <serial_set_flow_control+0x52>
    197a:	4b29      	ldr	r3, [pc, #164]	; (1a20 <serial_set_flow_control+0x120>)
    197c:	6822      	ldr	r2, [r4, #0]
    197e:	2107      	movs	r1, #7
    1980:	459b      	cmp	r11, r3
    1982:	7211      	strb	r1, [r2, #8]
    1984:	d113      	bne.n	19ae <serial_set_flow_control+0xae>
    1986:	b195      	cbz	r5, 19ae <serial_set_flow_control+0xae>
    1988:	4648      	mov	r0, r9
    198a:	7c2b      	ldrb	r3, [r5, #16]
    198c:	4926      	ldr	r1, [pc, #152]	; (1a28 <serial_set_flow_control+0x128>)
    198e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    1992:	742b      	strb	r3, [r5, #16]
    1994:	b003      	add	sp, #12
    1996:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    199a:	f7ff b947 	b.w	c2c <pinmap_pinout>
    199e:	7c2b      	ldrb	r3, [r5, #16]
    19a0:	f8d4 a004 	ldr.w	r10, [r4, #4]
    19a4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    19a8:	742b      	strb	r3, [r5, #16]
    19aa:	6863      	ldr	r3, [r4, #4]
    19ac:	e7b7      	b.n	191e <serial_set_flow_control+0x1e>
    19ae:	ebca 0808 	rsb	r8, r10, r8
    19b2:	eb06 00c8 	add.w	r0, r6, r8, lsl #3
    19b6:	4649      	mov	r1, r9
    19b8:	2501      	movs	r5, #1
    19ba:	3004      	adds	r0, #4
    19bc:	2200      	movs	r2, #0
    19be:	f7ff f917 	bl	bf0 <gpio_init_out_ex>
    19c2:	4620      	mov	r0, r4
    19c4:	462a      	mov	r2, r5
    19c6:	6863      	ldr	r3, [r4, #4]
    19c8:	2100      	movs	r1, #0
    19ca:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
    19ce:	eb06 06c3 	add.w	r6, r6, r3, lsl #3
    19d2:	f886 5035 	strb.w	r5, [r6, #53]	; 0x35
    19d6:	b003      	add	sp, #12
    19d8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    19dc:	f7ff bd2e 	b.w	143c <serial_irq_set_internal>
    19e0:	9b01      	ldr	r3, [sp, #4]
    19e2:	3301      	adds	r3, #1
    19e4:	d00a      	beq.n	19fc <serial_set_flow_control+0xfc>
    19e6:	4b0e      	ldr	r3, [pc, #56]	; (1a20 <serial_set_flow_control+0x120>)
    19e8:	4298      	cmp	r0, r3
    19ea:	d00d      	beq.n	1a08 <serial_set_flow_control+0x108>
    19ec:	ebca 0008 	rsb	r0, r10, r8
    19f0:	eb06 00c0 	add.w	r0, r6, r0, lsl #3
    19f4:	9901      	ldr	r1, [sp, #4]
    19f6:	301c      	adds	r0, #28
    19f8:	f7ff f8d2 	bl	ba0 <gpio_init_in>
    19fc:	2f03      	cmp	r7, #3
    19fe:	d1a8      	bne.n	1952 <serial_set_flow_control+0x52>
    1a00:	f1b9 3fff 	cmp.w	r9, #4294967295
    1a04:	d1b9      	bne.n	197a <serial_set_flow_control+0x7a>
    1a06:	e7a4      	b.n	1952 <serial_set_flow_control+0x52>
    1a08:	2d00      	cmp	r5, #0
    1a0a:	d0ef      	beq.n	19ec <serial_set_flow_control+0xec>
    1a0c:	7c2b      	ldrb	r3, [r5, #16]
    1a0e:	9801      	ldr	r0, [sp, #4]
    1a10:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    1a14:	742b      	strb	r3, [r5, #16]
    1a16:	4905      	ldr	r1, [pc, #20]	; (1a2c <serial_set_flow_control+0x12c>)
    1a18:	f7ff f908 	bl	c2c <pinmap_pinout>
    1a1c:	e7ee      	b.n	19fc <serial_set_flow_control+0xfc>
    1a1e:	bf00      	nop
    1a20:	40010000 	.word	0x40010000
    1a24:	10000448 	.word	0x10000448
    1a28:	0001a65c 	.word	0x0001a65c
    1a2c:	0001a758 	.word	0x0001a758

00001a30 <serial_init>:
    1a30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1a34:	4605      	mov	r5, r0
    1a36:	460f      	mov	r7, r1
    1a38:	4608      	mov	r0, r1
    1a3a:	4959      	ldr	r1, [pc, #356]	; (1ba0 <serial_init+0x170>)
    1a3c:	4616      	mov	r6, r2
    1a3e:	f7ff f935 	bl	cac <pinmap_peripheral>
    1a42:	4958      	ldr	r1, [pc, #352]	; (1ba4 <serial_init+0x174>)
    1a44:	4604      	mov	r4, r0
    1a46:	4630      	mov	r0, r6
    1a48:	f7ff f930 	bl	cac <pinmap_peripheral>
    1a4c:	4601      	mov	r1, r0
    1a4e:	4620      	mov	r0, r4
    1a50:	f7ff f90c 	bl	c6c <pinmap_merge>
    1a54:	4b54      	ldr	r3, [pc, #336]	; (1ba8 <serial_init+0x178>)
    1a56:	4604      	mov	r4, r0
    1a58:	4298      	cmp	r0, r3
    1a5a:	6028      	str	r0, [r5, #0]
    1a5c:	d07f      	beq.n	1b5e <serial_init+0x12e>
    1a5e:	d96f      	bls.n	1b40 <serial_init+0x110>
    1a60:	4b52      	ldr	r3, [pc, #328]	; (1bac <serial_init+0x17c>)
    1a62:	4298      	cmp	r0, r3
    1a64:	d04b      	beq.n	1afe <serial_init+0xce>
    1a66:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    1a6a:	4298      	cmp	r0, r3
    1a6c:	d106      	bne.n	1a7c <serial_init+0x4c>
    1a6e:	4a50      	ldr	r2, [pc, #320]	; (1bb0 <serial_init+0x180>)
    1a70:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    1a74:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
    1a78:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
    1a7c:	2301      	movs	r3, #1
    1a7e:	7223      	strb	r3, [r4, #8]
    1a80:	682b      	ldr	r3, [r5, #0]
    1a82:	f04f 0800 	mov.w	r8, #0
    1a86:	f8c3 8004 	str.w	r8, [r3, #4]
    1a8a:	4628      	mov	r0, r5
    1a8c:	f44f 5116 	mov.w	r1, #9600	; 0x2580
    1a90:	f7ff fdda 	bl	1648 <serial_baud>
    1a94:	682b      	ldr	r3, [r5, #0]
    1a96:	2203      	movs	r2, #3
    1a98:	731a      	strb	r2, [r3, #12]
    1a9a:	4638      	mov	r0, r7
    1a9c:	4940      	ldr	r1, [pc, #256]	; (1ba0 <serial_init+0x170>)
    1a9e:	f7ff f8c5 	bl	c2c <pinmap_pinout>
    1aa2:	4630      	mov	r0, r6
    1aa4:	493f      	ldr	r1, [pc, #252]	; (1ba4 <serial_init+0x174>)
    1aa6:	f7ff f8c1 	bl	c2c <pinmap_pinout>
    1aaa:	1c7a      	adds	r2, r7, #1
    1aac:	d003      	beq.n	1ab6 <serial_init+0x86>
    1aae:	4638      	mov	r0, r7
    1ab0:	4641      	mov	r1, r8
    1ab2:	f7ff fbb3 	bl	121c <pin_mode>
    1ab6:	1c73      	adds	r3, r6, #1
    1ab8:	d003      	beq.n	1ac2 <serial_init+0x92>
    1aba:	4630      	mov	r0, r6
    1abc:	2100      	movs	r1, #0
    1abe:	f7ff fbad 	bl	121c <pin_mode>
    1ac2:	4b39      	ldr	r3, [pc, #228]	; (1ba8 <serial_init+0x178>)
    1ac4:	429c      	cmp	r4, r3
    1ac6:	d047      	beq.n	1b58 <serial_init+0x128>
    1ac8:	d921      	bls.n	1b0e <serial_init+0xde>
    1aca:	4b38      	ldr	r3, [pc, #224]	; (1bac <serial_init+0x17c>)
    1acc:	429c      	cmp	r4, r3
    1ace:	d063      	beq.n	1b98 <serial_init+0x168>
    1ad0:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
    1ad4:	429c      	cmp	r4, r3
    1ad6:	d14a      	bne.n	1b6e <serial_init+0x13e>
    1ad8:	2303      	movs	r3, #3
    1ada:	606b      	str	r3, [r5, #4]
    1adc:	4c35      	ldr	r4, [pc, #212]	; (1bb4 <serial_init+0x184>)
    1ade:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
    1ae2:	f04f 36ff 	mov.w	r6, #4294967295
    1ae6:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
    1aea:	4628      	mov	r0, r5
    1aec:	4632      	mov	r2, r6
    1aee:	4633      	mov	r3, r6
    1af0:	6066      	str	r6, [r4, #4]
    1af2:	61e6      	str	r6, [r4, #28]
    1af4:	2100      	movs	r1, #0
    1af6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    1afa:	f7ff bf01 	b.w	1900 <serial_set_flow_control>
    1afe:	4a2c      	ldr	r2, [pc, #176]	; (1bb0 <serial_init+0x180>)
    1b00:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    1b04:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
    1b08:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
    1b0c:	e7b6      	b.n	1a7c <serial_init+0x4c>
    1b0e:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
    1b12:	429c      	cmp	r4, r3
    1b14:	d12b      	bne.n	1b6e <serial_init+0x13e>
    1b16:	4e27      	ldr	r6, [pc, #156]	; (1bb4 <serial_init+0x184>)
    1b18:	f04f 34ff 	mov.w	r4, #4294967295
    1b1c:	2100      	movs	r1, #0
    1b1e:	6069      	str	r1, [r5, #4]
    1b20:	4622      	mov	r2, r4
    1b22:	4623      	mov	r3, r4
    1b24:	4628      	mov	r0, r5
    1b26:	6074      	str	r4, [r6, #4]
    1b28:	61f4      	str	r4, [r6, #28]
    1b2a:	f7ff fee9 	bl	1900 <serial_set_flow_control>
    1b2e:	4b22      	ldr	r3, [pc, #136]	; (1bb8 <serial_init+0x188>)
    1b30:	2201      	movs	r2, #1
    1b32:	601a      	str	r2, [r3, #0]
    1b34:	6828      	ldr	r0, [r5, #0]
    1b36:	6869      	ldr	r1, [r5, #4]
    1b38:	4b20      	ldr	r3, [pc, #128]	; (1bbc <serial_init+0x18c>)
    1b3a:	c303      	stmia	r3!, {r0, r1}
    1b3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1b40:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
    1b44:	4298      	cmp	r0, r3
    1b46:	d199      	bne.n	1a7c <serial_init+0x4c>
    1b48:	4a19      	ldr	r2, [pc, #100]	; (1bb0 <serial_init+0x180>)
    1b4a:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    1b4e:	f043 0308 	orr.w	r3, r3, #8
    1b52:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
    1b56:	e791      	b.n	1a7c <serial_init+0x4c>
    1b58:	2301      	movs	r3, #1
    1b5a:	606b      	str	r3, [r5, #4]
    1b5c:	e7be      	b.n	1adc <serial_init+0xac>
    1b5e:	4a14      	ldr	r2, [pc, #80]	; (1bb0 <serial_init+0x180>)
    1b60:	f8d2 30c4 	ldr.w	r3, [r2, #196]	; 0xc4
    1b64:	f043 0310 	orr.w	r3, r3, #16
    1b68:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
    1b6c:	e786      	b.n	1a7c <serial_init+0x4c>
    1b6e:	686e      	ldr	r6, [r5, #4]
    1b70:	4b10      	ldr	r3, [pc, #64]	; (1bb4 <serial_init+0x184>)
    1b72:	ebc6 06c6 	rsb	r6, r6, r6, lsl #3
    1b76:	f04f 37ff 	mov.w	r7, #4294967295
    1b7a:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
    1b7e:	463a      	mov	r2, r7
    1b80:	463b      	mov	r3, r7
    1b82:	4628      	mov	r0, r5
    1b84:	2100      	movs	r1, #0
    1b86:	6077      	str	r7, [r6, #4]
    1b88:	61f7      	str	r7, [r6, #28]
    1b8a:	f7ff feb9 	bl	1900 <serial_set_flow_control>
    1b8e:	4b0c      	ldr	r3, [pc, #48]	; (1bc0 <serial_init+0x190>)
    1b90:	429c      	cmp	r4, r3
    1b92:	d0cc      	beq.n	1b2e <serial_init+0xfe>
    1b94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1b98:	2302      	movs	r3, #2
    1b9a:	606b      	str	r3, [r5, #4]
    1b9c:	e79e      	b.n	1adc <serial_init+0xac>
    1b9e:	bf00      	nop
    1ba0:	0001a6ec 	.word	0x0001a6ec
    1ba4:	0001a680 	.word	0x0001a680
    1ba8:	40010000 	.word	0x40010000
    1bac:	40098000 	.word	0x40098000
    1bb0:	400fc000 	.word	0x400fc000
    1bb4:	10000448 	.word	0x10000448
    1bb8:	10000440 	.word	0x10000440
    1bbc:	10001b74 	.word	0x10001b74
    1bc0:	4000c000 	.word	0x4000c000

00001bc4 <us_ticker_init.part.0>:
    1bc4:	b538      	push	{r3, r4, r5, lr}
    1bc6:	4912      	ldr	r1, [pc, #72]	; (1c10 <us_ticker_init.part.0+0x4c>)
    1bc8:	4b12      	ldr	r3, [pc, #72]	; (1c14 <us_ticker_init.part.0+0x50>)
    1bca:	2401      	movs	r4, #1
    1bcc:	601c      	str	r4, [r3, #0]
    1bce:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    1bd2:	4a11      	ldr	r2, [pc, #68]	; (1c18 <us_ticker_init.part.0+0x54>)
    1bd4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
    1bd8:	4810      	ldr	r0, [pc, #64]	; (1c1c <us_ticker_init.part.0+0x58>)
    1bda:	2500      	movs	r5, #0
    1bdc:	f8c1 30c4 	str.w	r3, [r1, #196]	; 0xc4
    1be0:	6715      	str	r5, [r2, #112]	; 0x70
    1be2:	6803      	ldr	r3, [r0, #0]
    1be4:	f101 7143 	add.w	r1, r1, #51118080	; 0x30c0000
    1be8:	f501 51f4 	add.w	r1, r1, #7808	; 0x1e80
    1bec:	3103      	adds	r1, #3
    1bee:	089b      	lsrs	r3, r3, #2
    1bf0:	fba1 1303 	umull	r1, r3, r1, r3
    1bf4:	0c9b      	lsrs	r3, r3, #18
    1bf6:	3b01      	subs	r3, #1
    1bf8:	2102      	movs	r1, #2
    1bfa:	6051      	str	r1, [r2, #4]
    1bfc:	2004      	movs	r0, #4
    1bfe:	60d3      	str	r3, [r2, #12]
    1c00:	4907      	ldr	r1, [pc, #28]	; (1c20 <us_ticker_init.part.0+0x5c>)
    1c02:	6054      	str	r4, [r2, #4]
    1c04:	f7ff f908 	bl	e18 <NVIC_SetVector>
    1c08:	4b06      	ldr	r3, [pc, #24]	; (1c24 <us_ticker_init.part.0+0x60>)
    1c0a:	2210      	movs	r2, #16
    1c0c:	601a      	str	r2, [r3, #0]
    1c0e:	bd38      	pop	{r3, r4, r5, pc}
    1c10:	400fc000 	.word	0x400fc000
    1c14:	10000528 	.word	0x10000528
    1c18:	40094000 	.word	0x40094000
    1c1c:	100000cc 	.word	0x100000cc
    1c20:	00000d1d 	.word	0x00000d1d
    1c24:	e000e100 	.word	0xe000e100

00001c28 <us_ticker_init>:
    1c28:	4b02      	ldr	r3, [pc, #8]	; (1c34 <us_ticker_init+0xc>)
    1c2a:	681b      	ldr	r3, [r3, #0]
    1c2c:	b103      	cbz	r3, 1c30 <us_ticker_init+0x8>
    1c2e:	4770      	bx	lr
    1c30:	f7ff bfc8 	b.w	1bc4 <us_ticker_init.part.0>
    1c34:	10000528 	.word	0x10000528

00001c38 <us_ticker_read>:
    1c38:	b508      	push	{r3, lr}
    1c3a:	4b04      	ldr	r3, [pc, #16]	; (1c4c <us_ticker_read+0x14>)
    1c3c:	681b      	ldr	r3, [r3, #0]
    1c3e:	b90b      	cbnz	r3, 1c44 <us_ticker_read+0xc>
    1c40:	f7ff ffc0 	bl	1bc4 <us_ticker_init.part.0>
    1c44:	4b02      	ldr	r3, [pc, #8]	; (1c50 <us_ticker_read+0x18>)
    1c46:	6898      	ldr	r0, [r3, #8]
    1c48:	bd08      	pop	{r3, pc}
    1c4a:	bf00      	nop
    1c4c:	10000528 	.word	0x10000528
    1c50:	40094000 	.word	0x40094000

00001c54 <us_ticker_set_interrupt>:
    1c54:	4b03      	ldr	r3, [pc, #12]	; (1c64 <us_ticker_set_interrupt+0x10>)
    1c56:	6198      	str	r0, [r3, #24]
    1c58:	695a      	ldr	r2, [r3, #20]
    1c5a:	f042 0201 	orr.w	r2, r2, #1
    1c5e:	615a      	str	r2, [r3, #20]
    1c60:	4770      	bx	lr
    1c62:	bf00      	nop
    1c64:	40094000 	.word	0x40094000

00001c68 <us_ticker_disable_interrupt>:
    1c68:	4a02      	ldr	r2, [pc, #8]	; (1c74 <us_ticker_disable_interrupt+0xc>)
    1c6a:	6953      	ldr	r3, [r2, #20]
    1c6c:	f023 0301 	bic.w	r3, r3, #1
    1c70:	6153      	str	r3, [r2, #20]
    1c72:	4770      	bx	lr
    1c74:	40094000 	.word	0x40094000

00001c78 <us_ticker_clear_interrupt>:
    1c78:	4b01      	ldr	r3, [pc, #4]	; (1c80 <us_ticker_clear_interrupt+0x8>)
    1c7a:	2201      	movs	r2, #1
    1c7c:	601a      	str	r2, [r3, #0]
    1c7e:	4770      	bx	lr
    1c80:	40094000 	.word	0x40094000

00001c84 <mbed::FileBase::~FileBase()>:
    1c84:	4a09      	ldr	r2, [pc, #36]	; (1cac <mbed::FileBase::~FileBase()+0x28>)
    1c86:	6883      	ldr	r3, [r0, #8]
    1c88:	6002      	str	r2, [r0, #0]
    1c8a:	b153      	cbz	r3, 1ca2 <mbed::FileBase::~FileBase()+0x1e>
    1c8c:	4b08      	ldr	r3, [pc, #32]	; (1cb0 <mbed::FileBase::~FileBase()+0x2c>)
    1c8e:	681a      	ldr	r2, [r3, #0]
    1c90:	4282      	cmp	r2, r0
    1c92:	d101      	bne.n	1c98 <mbed::FileBase::~FileBase()+0x14>
    1c94:	e006      	b.n	1ca4 <mbed::FileBase::~FileBase()+0x20>
    1c96:	461a      	mov	r2, r3
    1c98:	6853      	ldr	r3, [r2, #4]
    1c9a:	4283      	cmp	r3, r0
    1c9c:	d1fb      	bne.n	1c96 <mbed::FileBase::~FileBase()+0x12>
    1c9e:	6843      	ldr	r3, [r0, #4]
    1ca0:	6053      	str	r3, [r2, #4]
    1ca2:	4770      	bx	lr
    1ca4:	6842      	ldr	r2, [r0, #4]
    1ca6:	601a      	str	r2, [r3, #0]
    1ca8:	4770      	bx	lr
    1caa:	bf00      	nop
    1cac:	0001a788 	.word	0x0001a788
    1cb0:	1000052c 	.word	0x1000052c

00001cb4 <mbed::FileBase::~FileBase()>:
    1cb4:	4a0c      	ldr	r2, [pc, #48]	; (1ce8 <mbed::FileBase::~FileBase()+0x34>)
    1cb6:	6883      	ldr	r3, [r0, #8]
    1cb8:	b510      	push	{r4, lr}
    1cba:	4604      	mov	r4, r0
    1cbc:	6002      	str	r2, [r0, #0]
    1cbe:	b153      	cbz	r3, 1cd6 <mbed::FileBase::~FileBase()+0x22>
    1cc0:	4b0a      	ldr	r3, [pc, #40]	; (1cec <mbed::FileBase::~FileBase()+0x38>)
    1cc2:	681a      	ldr	r2, [r3, #0]
    1cc4:	4290      	cmp	r0, r2
    1cc6:	d101      	bne.n	1ccc <mbed::FileBase::~FileBase()+0x18>
    1cc8:	e00a      	b.n	1ce0 <mbed::FileBase::~FileBase()+0x2c>
    1cca:	461a      	mov	r2, r3
    1ccc:	6853      	ldr	r3, [r2, #4]
    1cce:	429c      	cmp	r4, r3
    1cd0:	d1fb      	bne.n	1cca <mbed::FileBase::~FileBase()+0x16>
    1cd2:	6863      	ldr	r3, [r4, #4]
    1cd4:	6053      	str	r3, [r2, #4]
    1cd6:	4620      	mov	r0, r4
    1cd8:	f000 fc19 	bl	250e <operator delete(void*)>
    1cdc:	4620      	mov	r0, r4
    1cde:	bd10      	pop	{r4, pc}
    1ce0:	6842      	ldr	r2, [r0, #4]
    1ce2:	601a      	str	r2, [r3, #0]
    1ce4:	e7f7      	b.n	1cd6 <mbed::FileBase::~FileBase()+0x22>
    1ce6:	bf00      	nop
    1ce8:	0001a788 	.word	0x0001a788
    1cec:	1000052c 	.word	0x1000052c

00001cf0 <mbed::FileBase::FileBase(char const*, mbed::PathType)>:
    1cf0:	b410      	push	{r4}
    1cf2:	4c07      	ldr	r4, [pc, #28]	; (1d10 <mbed::FileBase::FileBase(char const*, mbed::PathType)+0x20>)
    1cf4:	2300      	movs	r3, #0
    1cf6:	7302      	strb	r2, [r0, #12]
    1cf8:	6081      	str	r1, [r0, #8]
    1cfa:	6004      	str	r4, [r0, #0]
    1cfc:	6043      	str	r3, [r0, #4]
    1cfe:	b119      	cbz	r1, 1d08 <mbed::FileBase::FileBase(char const*, mbed::PathType)+0x18>
    1d00:	4b04      	ldr	r3, [pc, #16]	; (1d14 <mbed::FileBase::FileBase(char const*, mbed::PathType)+0x24>)
    1d02:	681a      	ldr	r2, [r3, #0]
    1d04:	6018      	str	r0, [r3, #0]
    1d06:	6042      	str	r2, [r0, #4]
    1d08:	f85d 4b04 	ldr.w	r4, [sp], #4
    1d0c:	4770      	bx	lr
    1d0e:	bf00      	nop
    1d10:	0001a788 	.word	0x0001a788
    1d14:	1000052c 	.word	0x1000052c

00001d18 <mbed::FileBase::lookup(char const*, unsigned int)>:
    1d18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1d1a:	4b0b      	ldr	r3, [pc, #44]	; (1d48 <mbed::FileBase::lookup(char const*, unsigned int)+0x30>)
    1d1c:	4607      	mov	r7, r0
    1d1e:	681c      	ldr	r4, [r3, #0]
    1d20:	460e      	mov	r6, r1
    1d22:	b17c      	cbz	r4, 1d44 <mbed::FileBase::lookup(char const*, unsigned int)+0x2c>
    1d24:	68a5      	ldr	r5, [r4, #8]
    1d26:	b155      	cbz	r5, 1d3e <mbed::FileBase::lookup(char const*, unsigned int)+0x26>
    1d28:	4628      	mov	r0, r5
    1d2a:	4639      	mov	r1, r7
    1d2c:	4632      	mov	r2, r6
    1d2e:	f013 fa3b 	bl	151a8 <strncmp>
    1d32:	b920      	cbnz	r0, 1d3e <mbed::FileBase::lookup(char const*, unsigned int)+0x26>
    1d34:	4628      	mov	r0, r5
    1d36:	f013 fa2f 	bl	15198 <strlen>
    1d3a:	42b0      	cmp	r0, r6
    1d3c:	d002      	beq.n	1d44 <mbed::FileBase::lookup(char const*, unsigned int)+0x2c>
    1d3e:	6864      	ldr	r4, [r4, #4]
    1d40:	2c00      	cmp	r4, #0
    1d42:	d1ef      	bne.n	1d24 <mbed::FileBase::lookup(char const*, unsigned int)+0xc>
    1d44:	4620      	mov	r0, r4
    1d46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1d48:	1000052c 	.word	0x1000052c

00001d4c <mbed::FileBase::getPathType()>:
    1d4c:	7b00      	ldrb	r0, [r0, #12]
    1d4e:	4770      	bx	lr

00001d50 <mbed::FileHandle::flen()>:
    1d50:	6803      	ldr	r3, [r0, #0]
    1d52:	b570      	push	{r4, r5, r6, lr}
    1d54:	691b      	ldr	r3, [r3, #16]
    1d56:	2100      	movs	r1, #0
    1d58:	2201      	movs	r2, #1
    1d5a:	4604      	mov	r4, r0
    1d5c:	4798      	blx	r3
    1d5e:	1c43      	adds	r3, r0, #1
    1d60:	4606      	mov	r6, r0
    1d62:	d00e      	beq.n	1d82 <mbed::FileHandle::flen()+0x32>
    1d64:	6823      	ldr	r3, [r4, #0]
    1d66:	4620      	mov	r0, r4
    1d68:	691b      	ldr	r3, [r3, #16]
    1d6a:	2100      	movs	r1, #0
    1d6c:	2202      	movs	r2, #2
    1d6e:	4798      	blx	r3
    1d70:	4605      	mov	r5, r0
    1d72:	6823      	ldr	r3, [r4, #0]
    1d74:	4631      	mov	r1, r6
    1d76:	691b      	ldr	r3, [r3, #16]
    1d78:	4620      	mov	r0, r4
    1d7a:	2200      	movs	r2, #0
    1d7c:	4798      	blx	r3
    1d7e:	4628      	mov	r0, r5
    1d80:	bd70      	pop	{r4, r5, r6, pc}
    1d82:	bd70      	pop	{r4, r5, r6, pc}

00001d84 <mbed::FileLike::FileLike(char const*)>:
    1d84:	b510      	push	{r4, lr}
    1d86:	4604      	mov	r4, r0
    1d88:	4b06      	ldr	r3, [pc, #24]	; (1da4 <mbed::FileLike::FileLike(char const*)+0x20>)
    1d8a:	2200      	movs	r2, #0
    1d8c:	f840 3b04 	str.w	r3, [r0], #4
    1d90:	f7ff ffae 	bl	1cf0 <mbed::FileBase::FileBase(char const*, mbed::PathType)>
    1d94:	4b04      	ldr	r3, [pc, #16]	; (1da8 <mbed::FileLike::FileLike(char const*)+0x24>)
    1d96:	4620      	mov	r0, r4
    1d98:	f103 0208 	add.w	r2, r3, #8
    1d9c:	3334      	adds	r3, #52	; 0x34
    1d9e:	e884 000c 	stmia.w	r4, {r2, r3}
    1da2:	bd10      	pop	{r4, pc}
    1da4:	0001a800 	.word	0x0001a800
    1da8:	0001a790 	.word	0x0001a790

00001dac <mbed::FileLike::~FileLike()>:
    1dac:	b510      	push	{r4, lr}
    1dae:	4604      	mov	r4, r0
    1db0:	4b06      	ldr	r3, [pc, #24]	; (1dcc <mbed::FileLike::~FileLike()+0x20>)
    1db2:	f103 0208 	add.w	r2, r3, #8
    1db6:	3334      	adds	r3, #52	; 0x34
    1db8:	6022      	str	r2, [r4, #0]
    1dba:	f840 3f04 	str.w	r3, [r0, #4]!
    1dbe:	f7ff ff61 	bl	1c84 <mbed::FileBase::~FileBase()>
    1dc2:	4620      	mov	r0, r4
    1dc4:	f000 f8d8 	bl	1f78 <mbed::FileHandle::~FileHandle()>
    1dc8:	4620      	mov	r0, r4
    1dca:	bd10      	pop	{r4, pc}
    1dcc:	0001a790 	.word	0x0001a790

00001dd0 <mbed::FilePath::FilePath(char const*)>:
    1dd0:	b538      	push	{r3, r4, r5, lr}
    1dd2:	2300      	movs	r3, #0
    1dd4:	6003      	str	r3, [r0, #0]
    1dd6:	6043      	str	r3, [r0, #4]
    1dd8:	780a      	ldrb	r2, [r1, #0]
    1dda:	4604      	mov	r4, r0
    1ddc:	2a2f      	cmp	r2, #47	; 0x2f
    1dde:	d001      	beq.n	1de4 <mbed::FilePath::FilePath(char const*)+0x14>
    1de0:	4620      	mov	r0, r4
    1de2:	bd38      	pop	{r3, r4, r5, pc}
    1de4:	784a      	ldrb	r2, [r1, #1]
    1de6:	2a00      	cmp	r2, #0
    1de8:	d0fa      	beq.n	1de0 <mbed::FilePath::FilePath(char const*)+0x10>
    1dea:	1c48      	adds	r0, r1, #1
    1dec:	6020      	str	r0, [r4, #0]
    1dee:	784d      	ldrb	r5, [r1, #1]
    1df0:	2d2f      	cmp	r5, #47	; 0x2f
    1df2:	d013      	beq.n	1e1c <mbed::FilePath::FilePath(char const*)+0x4c>
    1df4:	b185      	cbz	r5, 1e18 <mbed::FilePath::FilePath(char const*)+0x48>
    1df6:	4603      	mov	r3, r0
    1df8:	e000      	b.n	1dfc <mbed::FilePath::FilePath(char const*)+0x2c>
    1dfa:	b16a      	cbz	r2, 1e18 <mbed::FilePath::FilePath(char const*)+0x48>
    1dfc:	1a5d      	subs	r5, r3, r1
    1dfe:	3301      	adds	r3, #1
    1e00:	6023      	str	r3, [r4, #0]
    1e02:	781a      	ldrb	r2, [r3, #0]
    1e04:	2a2f      	cmp	r2, #47	; 0x2f
    1e06:	d1f8      	bne.n	1dfa <mbed::FilePath::FilePath(char const*)+0x2a>
    1e08:	4629      	mov	r1, r5
    1e0a:	3301      	adds	r3, #1
    1e0c:	6023      	str	r3, [r4, #0]
    1e0e:	f7ff ff83 	bl	1d18 <mbed::FileBase::lookup(char const*, unsigned int)>
    1e12:	6060      	str	r0, [r4, #4]
    1e14:	4620      	mov	r0, r4
    1e16:	bd38      	pop	{r3, r4, r5, pc}
    1e18:	4629      	mov	r1, r5
    1e1a:	e7f8      	b.n	1e0e <mbed::FilePath::FilePath(char const*)+0x3e>
    1e1c:	4619      	mov	r1, r3
    1e1e:	4603      	mov	r3, r0
    1e20:	e7f3      	b.n	1e0a <mbed::FilePath::FilePath(char const*)+0x3a>
    1e22:	bf00      	nop

00001e24 <mbed::FilePath::fileName()>:
    1e24:	6800      	ldr	r0, [r0, #0]
    1e26:	4770      	bx	lr

00001e28 <mbed::FilePath::fileSystem()>:
    1e28:	6843      	ldr	r3, [r0, #4]
    1e2a:	b143      	cbz	r3, 1e3e <mbed::FilePath::fileSystem()+0x16>
    1e2c:	b510      	push	{r4, lr}
    1e2e:	4604      	mov	r4, r0
    1e30:	4618      	mov	r0, r3
    1e32:	f7ff ff8b 	bl	1d4c <mbed::FileBase::getPathType()>
    1e36:	2801      	cmp	r0, #1
    1e38:	d103      	bne.n	1e42 <mbed::FilePath::fileSystem()+0x1a>
    1e3a:	6860      	ldr	r0, [r4, #4]
    1e3c:	bd10      	pop	{r4, pc}
    1e3e:	2000      	movs	r0, #0
    1e40:	4770      	bx	lr
    1e42:	2000      	movs	r0, #0
    1e44:	bd10      	pop	{r4, pc}
    1e46:	bf00      	nop

00001e48 <mbed::FilePath::isFile()>:
    1e48:	6840      	ldr	r0, [r0, #4]
    1e4a:	b130      	cbz	r0, 1e5a <mbed::FilePath::isFile()+0x12>
    1e4c:	b508      	push	{r3, lr}
    1e4e:	f7ff ff7d 	bl	1d4c <mbed::FileBase::getPathType()>
    1e52:	fab0 f080 	clz	r0, r0
    1e56:	0940      	lsrs	r0, r0, #5
    1e58:	bd08      	pop	{r3, pc}
    1e5a:	4770      	bx	lr

00001e5c <mbed::FilePath::file()>:
    1e5c:	6843      	ldr	r3, [r0, #4]
    1e5e:	b14b      	cbz	r3, 1e74 <mbed::FilePath::file()+0x18>
    1e60:	b510      	push	{r4, lr}
    1e62:	4604      	mov	r4, r0
    1e64:	4618      	mov	r0, r3
    1e66:	f7ff ff71 	bl	1d4c <mbed::FileBase::getPathType()>
    1e6a:	b928      	cbnz	r0, 1e78 <mbed::FilePath::file()+0x1c>
    1e6c:	6860      	ldr	r0, [r4, #4]
    1e6e:	b118      	cbz	r0, 1e78 <mbed::FilePath::file()+0x1c>
    1e70:	3804      	subs	r0, #4
    1e72:	bd10      	pop	{r4, pc}
    1e74:	2000      	movs	r0, #0
    1e76:	4770      	bx	lr
    1e78:	2000      	movs	r0, #0
    1e7a:	bd10      	pop	{r4, pc}

00001e7c <mbed::FilePath::exists()>:
    1e7c:	6840      	ldr	r0, [r0, #4]
    1e7e:	3000      	adds	r0, #0
    1e80:	bf18      	it	ne
    1e82:	2001      	movne	r0, #1
    1e84:	4770      	bx	lr
    1e86:	bf00      	nop

00001e88 <mbed::FunctionPointer::FunctionPointer(void (*)())>:
    1e88:	2200      	movs	r2, #0
    1e8a:	e880 0006 	stmia.w	r0, {r1, r2}
    1e8e:	6182      	str	r2, [r0, #24]
    1e90:	4770      	bx	lr
    1e92:	bf00      	nop

00001e94 <mbed::FunctionPointer::attach(void (*)())>:
    1e94:	2300      	movs	r3, #0
    1e96:	e880 000a 	stmia.w	r0, {r1, r3}
    1e9a:	4770      	bx	lr

00001e9c <mbed::FunctionPointer::call()>:
    1e9c:	6803      	ldr	r3, [r0, #0]
    1e9e:	4601      	mov	r1, r0
    1ea0:	b103      	cbz	r3, 1ea4 <mbed::FunctionPointer::call()+0x8>
    1ea2:	4718      	bx	r3
    1ea4:	6840      	ldr	r0, [r0, #4]
    1ea6:	b110      	cbz	r0, 1eae <mbed::FunctionPointer::call()+0x12>
    1ea8:	698b      	ldr	r3, [r1, #24]
    1eaa:	3108      	adds	r1, #8
    1eac:	4718      	bx	r3
    1eae:	4770      	bx	lr

00001eb0 <mbed::InterruptIn::~InterruptIn()>:
    1eb0:	b510      	push	{r4, lr}
    1eb2:	4604      	mov	r4, r0
    1eb4:	4b03      	ldr	r3, [pc, #12]	; (1ec4 <mbed::InterruptIn::~InterruptIn()+0x14>)
    1eb6:	f840 3b1c 	str.w	r3, [r0], #28
    1eba:	f7ff f925 	bl	1108 <gpio_irq_free>
    1ebe:	4620      	mov	r0, r4
    1ec0:	bd10      	pop	{r4, pc}
    1ec2:	bf00      	nop
    1ec4:	0001a7d8 	.word	0x0001a7d8

00001ec8 <mbed::InterruptIn::~InterruptIn()>:
    1ec8:	b510      	push	{r4, lr}
    1eca:	4604      	mov	r4, r0
    1ecc:	4b04      	ldr	r3, [pc, #16]	; (1ee0 <mbed::InterruptIn::~InterruptIn()+0x18>)
    1ece:	f840 3b1c 	str.w	r3, [r0], #28
    1ed2:	f7ff f919 	bl	1108 <gpio_irq_free>
    1ed6:	4620      	mov	r0, r4
    1ed8:	f000 fb19 	bl	250e <operator delete(void*)>
    1edc:	4620      	mov	r0, r4
    1ede:	bd10      	pop	{r4, pc}
    1ee0:	0001a7d8 	.word	0x0001a7d8

00001ee4 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)>:
    1ee4:	2901      	cmp	r1, #1
    1ee6:	d005      	beq.n	1ef4 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0x10>
    1ee8:	2902      	cmp	r1, #2
    1eea:	d102      	bne.n	1ef2 <mbed::InterruptIn::_irq_handler(unsigned long, gpio_irq_event)+0xe>
    1eec:	3044      	adds	r0, #68	; 0x44
    1eee:	f7ff bfd5 	b.w	1e9c <mbed::FunctionPointer::call()>
    1ef2:	4770      	bx	lr
    1ef4:	3028      	adds	r0, #40	; 0x28
    1ef6:	f7ff bfd1 	b.w	1e9c <mbed::FunctionPointer::call()>
    1efa:	bf00      	nop

00001efc <mbed::InterruptIn::InterruptIn(PinName)>:
    1efc:	b570      	push	{r4, r5, r6, lr}
    1efe:	4604      	mov	r4, r0
    1f00:	460e      	mov	r6, r1
    1f02:	4b11      	ldr	r3, [pc, #68]	; (1f48 <mbed::InterruptIn::InterruptIn(PinName)+0x4c>)
    1f04:	2500      	movs	r5, #0
    1f06:	e880 0028 	stmia.w	r0, {r3, r5}
    1f0a:	6085      	str	r5, [r0, #8]
    1f0c:	60c5      	str	r5, [r0, #12]
    1f0e:	6105      	str	r5, [r0, #16]
    1f10:	6145      	str	r5, [r0, #20]
    1f12:	6185      	str	r5, [r0, #24]
    1f14:	61c5      	str	r5, [r0, #28]
    1f16:	6205      	str	r5, [r0, #32]
    1f18:	6245      	str	r5, [r0, #36]	; 0x24
    1f1a:	4629      	mov	r1, r5
    1f1c:	3028      	adds	r0, #40	; 0x28
    1f1e:	f7ff ffb3 	bl	1e88 <mbed::FunctionPointer::FunctionPointer(void (*)())>
    1f22:	4629      	mov	r1, r5
    1f24:	f104 0044 	add.w	r0, r4, #68	; 0x44
    1f28:	f7ff ffae 	bl	1e88 <mbed::FunctionPointer::FunctionPointer(void (*)())>
    1f2c:	4631      	mov	r1, r6
    1f2e:	4623      	mov	r3, r4
    1f30:	4a06      	ldr	r2, [pc, #24]	; (1f4c <mbed::InterruptIn::InterruptIn(PinName)+0x50>)
    1f32:	f104 001c 	add.w	r0, r4, #28
    1f36:	f7ff f8ad 	bl	1094 <gpio_irq_init>
    1f3a:	1d20      	adds	r0, r4, #4
    1f3c:	4631      	mov	r1, r6
    1f3e:	f7fe fe2f 	bl	ba0 <gpio_init_in>
    1f42:	4620      	mov	r0, r4
    1f44:	bd70      	pop	{r4, r5, r6, pc}
    1f46:	bf00      	nop
    1f48:	0001a7d8 	.word	0x0001a7d8
    1f4c:	00001ee5 	.word	0x00001ee5

00001f50 <mbed::InterruptIn::read()>:
    1f50:	6982      	ldr	r2, [r0, #24]
    1f52:	6883      	ldr	r3, [r0, #8]
    1f54:	6812      	ldr	r2, [r2, #0]
    1f56:	421a      	tst	r2, r3
    1f58:	bf14      	ite	ne
    1f5a:	2001      	movne	r0, #1
    1f5c:	2000      	moveq	r0, #0
    1f5e:	4770      	bx	lr

00001f60 <init_serial() [clone .part.0]>:
    1f60:	4802      	ldr	r0, [pc, #8]	; (1f6c <init_serial() [clone .part.0]+0xc>)
    1f62:	4903      	ldr	r1, [pc, #12]	; (1f70 <init_serial() [clone .part.0]+0x10>)
    1f64:	4a03      	ldr	r2, [pc, #12]	; (1f74 <init_serial() [clone .part.0]+0x14>)
    1f66:	f7ff bd63 	b.w	1a30 <serial_init>
    1f6a:	bf00      	nop
    1f6c:	10001b74 	.word	0x10001b74
    1f70:	2009c002 	.word	0x2009c002
    1f74:	2009c003 	.word	0x2009c003

00001f78 <mbed::FileHandle::~FileHandle()>:
    1f78:	4a08      	ldr	r2, [pc, #32]	; (1f9c <mbed::FileHandle::~FileHandle()+0x24>)
    1f7a:	4b09      	ldr	r3, [pc, #36]	; (1fa0 <mbed::FileHandle::~FileHandle()+0x28>)
    1f7c:	b410      	push	{r4}
    1f7e:	6002      	str	r2, [r0, #0]
    1f80:	f503 7180 	add.w	r1, r3, #256	; 0x100
    1f84:	2400      	movs	r4, #0
    1f86:	f853 2f04 	ldr.w	r2, [r3, #4]!
    1f8a:	4282      	cmp	r2, r0
    1f8c:	bf08      	it	eq
    1f8e:	601c      	streq	r4, [r3, #0]
    1f90:	428b      	cmp	r3, r1
    1f92:	d1f8      	bne.n	1f86 <mbed::FileHandle::~FileHandle()+0xe>
    1f94:	f85d 4b04 	ldr.w	r4, [sp], #4
    1f98:	4770      	bx	lr
    1f9a:	bf00      	nop
    1f9c:	0001a800 	.word	0x0001a800
    1fa0:	1000052c 	.word	0x1000052c

00001fa4 <_open>:
    1fa4:	b5f0      	push	{r4, r5, r6, r7, lr}
    1fa6:	460e      	mov	r6, r1
    1fa8:	b085      	sub	sp, #20
    1faa:	4937      	ldr	r1, [pc, #220]	; (2088 <_open+0xe4>)
    1fac:	4605      	mov	r5, r0
    1fae:	f012 fc48 	bl	14842 <strcmp>
    1fb2:	b928      	cbnz	r0, 1fc0 <_open+0x1c>
    1fb4:	4b35      	ldr	r3, [pc, #212]	; (208c <_open+0xe8>)
    1fb6:	681b      	ldr	r3, [r3, #0]
    1fb8:	2b00      	cmp	r3, #0
    1fba:	d042      	beq.n	2042 <_open+0x9e>
    1fbc:	b005      	add	sp, #20
    1fbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1fc0:	4628      	mov	r0, r5
    1fc2:	4933      	ldr	r1, [pc, #204]	; (2090 <_open+0xec>)
    1fc4:	f012 fc3d 	bl	14842 <strcmp>
    1fc8:	b930      	cbnz	r0, 1fd8 <_open+0x34>
    1fca:	4b30      	ldr	r3, [pc, #192]	; (208c <_open+0xe8>)
    1fcc:	681b      	ldr	r3, [r3, #0]
    1fce:	2b00      	cmp	r3, #0
    1fd0:	d042      	beq.n	2058 <_open+0xb4>
    1fd2:	2001      	movs	r0, #1
    1fd4:	b005      	add	sp, #20
    1fd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1fd8:	4628      	mov	r0, r5
    1fda:	492e      	ldr	r1, [pc, #184]	; (2094 <_open+0xf0>)
    1fdc:	f012 fc31 	bl	14842 <strcmp>
    1fe0:	2800      	cmp	r0, #0
    1fe2:	d034      	beq.n	204e <_open+0xaa>
    1fe4:	4b2c      	ldr	r3, [pc, #176]	; (2098 <_open+0xf4>)
    1fe6:	2400      	movs	r4, #0
    1fe8:	e002      	b.n	1ff0 <_open+0x4c>
    1fea:	3401      	adds	r4, #1
    1fec:	2c40      	cmp	r4, #64	; 0x40
    1fee:	d03c      	beq.n	206a <_open+0xc6>
    1ff0:	f853 2f04 	ldr.w	r2, [r3, #4]!
    1ff4:	2a00      	cmp	r2, #0
    1ff6:	d1f8      	bne.n	1fea <_open+0x46>
    1ff8:	782b      	ldrb	r3, [r5, #0]
    1ffa:	2b3a      	cmp	r3, #58	; 0x3a
    1ffc:	d03c      	beq.n	2078 <_open+0xd4>
    1ffe:	4629      	mov	r1, r5
    2000:	a802      	add	r0, sp, #8
    2002:	f7ff fee5 	bl	1dd0 <mbed::FilePath::FilePath(char const*)>
    2006:	a802      	add	r0, sp, #8
    2008:	f7ff ff38 	bl	1e7c <mbed::FilePath::exists()>
    200c:	b368      	cbz	r0, 206a <_open+0xc6>
    200e:	a802      	add	r0, sp, #8
    2010:	f7ff ff1a 	bl	1e48 <mbed::FilePath::isFile()>
    2014:	bb20      	cbnz	r0, 2060 <_open+0xbc>
    2016:	a802      	add	r0, sp, #8
    2018:	f7ff ff06 	bl	1e28 <mbed::FilePath::fileSystem()>
    201c:	4605      	mov	r5, r0
    201e:	b320      	cbz	r0, 206a <_open+0xc6>
    2020:	6803      	ldr	r3, [r0, #0]
    2022:	a802      	add	r0, sp, #8
    2024:	689f      	ldr	r7, [r3, #8]
    2026:	f7ff fefd 	bl	1e24 <mbed::FilePath::fileName()>
    202a:	4632      	mov	r2, r6
    202c:	4601      	mov	r1, r0
    202e:	4628      	mov	r0, r5
    2030:	47b8      	blx	r7
    2032:	4603      	mov	r3, r0
    2034:	b1cb      	cbz	r3, 206a <_open+0xc6>
    2036:	4a19      	ldr	r2, [pc, #100]	; (209c <_open+0xf8>)
    2038:	1ce0      	adds	r0, r4, #3
    203a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
    203e:	b005      	add	sp, #20
    2040:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2042:	9001      	str	r0, [sp, #4]
    2044:	f7ff ff8c 	bl	1f60 <init_serial() [clone .part.0]>
    2048:	9801      	ldr	r0, [sp, #4]
    204a:	b005      	add	sp, #20
    204c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    204e:	4b0f      	ldr	r3, [pc, #60]	; (208c <_open+0xe8>)
    2050:	681b      	ldr	r3, [r3, #0]
    2052:	b16b      	cbz	r3, 2070 <_open+0xcc>
    2054:	2002      	movs	r0, #2
    2056:	e7b1      	b.n	1fbc <_open+0x18>
    2058:	f7ff ff82 	bl	1f60 <init_serial() [clone .part.0]>
    205c:	2001      	movs	r0, #1
    205e:	e7ad      	b.n	1fbc <_open+0x18>
    2060:	a802      	add	r0, sp, #8
    2062:	f7ff fefb 	bl	1e5c <mbed::FilePath::file()>
    2066:	4603      	mov	r3, r0
    2068:	e7e4      	b.n	2034 <_open+0x90>
    206a:	f04f 30ff 	mov.w	r0, #4294967295
    206e:	e7a5      	b.n	1fbc <_open+0x18>
    2070:	f7ff ff76 	bl	1f60 <init_serial() [clone .part.0]>
    2074:	2002      	movs	r0, #2
    2076:	e7a1      	b.n	1fbc <_open+0x18>
    2078:	4628      	mov	r0, r5
    207a:	4909      	ldr	r1, [pc, #36]	; (20a0 <_open+0xfc>)
    207c:	aa02      	add	r2, sp, #8
    207e:	f012 fb71 	bl	14764 <siscanf>
    2082:	9b02      	ldr	r3, [sp, #8]
    2084:	e7d6      	b.n	2034 <_open+0x90>
    2086:	bf00      	nop
    2088:	0001a7e0 	.word	0x0001a7e0
    208c:	10000440 	.word	0x10000440
    2090:	0001a7f0 	.word	0x0001a7f0
    2094:	0001a7e8 	.word	0x0001a7e8
    2098:	1000052c 	.word	0x1000052c
    209c:	10000530 	.word	0x10000530
    20a0:	0001a828 	.word	0x0001a828

000020a4 <_close>:
    20a4:	2802      	cmp	r0, #2
    20a6:	dd0a      	ble.n	20be <_close+0x1a>
    20a8:	4a07      	ldr	r2, [pc, #28]	; (20c8 <_close+0x24>)
    20aa:	1ec3      	subs	r3, r0, #3
    20ac:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
    20b0:	2100      	movs	r1, #0
    20b2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    20b6:	b120      	cbz	r0, 20c2 <_close+0x1e>
    20b8:	6803      	ldr	r3, [r0, #0]
    20ba:	685b      	ldr	r3, [r3, #4]
    20bc:	4718      	bx	r3
    20be:	2000      	movs	r0, #0
    20c0:	4770      	bx	lr
    20c2:	f04f 30ff 	mov.w	r0, #4294967295
    20c6:	4770      	bx	lr
    20c8:	10000530 	.word	0x10000530

000020cc <_write>:
    20cc:	2802      	cmp	r0, #2
    20ce:	dc12      	bgt.n	20f6 <_write+0x2a>
    20d0:	4b0e      	ldr	r3, [pc, #56]	; (210c <_write+0x40>)
    20d2:	b570      	push	{r4, r5, r6, lr}
    20d4:	681b      	ldr	r3, [r3, #0]
    20d6:	460c      	mov	r4, r1
    20d8:	4616      	mov	r6, r2
    20da:	b90b      	cbnz	r3, 20e0 <_write+0x14>
    20dc:	f7ff ff40 	bl	1f60 <init_serial() [clone .part.0]>
    20e0:	19a5      	adds	r5, r4, r6
    20e2:	b136      	cbz	r6, 20f2 <_write+0x26>
    20e4:	f814 1b01 	ldrb.w	r1, [r4], #1
    20e8:	4809      	ldr	r0, [pc, #36]	; (2110 <_write+0x44>)
    20ea:	f7ff fbef 	bl	18cc <serial_putc>
    20ee:	42ac      	cmp	r4, r5
    20f0:	d1f8      	bne.n	20e4 <_write+0x18>
    20f2:	4630      	mov	r0, r6
    20f4:	bd70      	pop	{r4, r5, r6, pc}
    20f6:	4b07      	ldr	r3, [pc, #28]	; (2114 <_write+0x48>)
    20f8:	3803      	subs	r0, #3
    20fa:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    20fe:	b110      	cbz	r0, 2106 <_write+0x3a>
    2100:	6803      	ldr	r3, [r0, #0]
    2102:	681b      	ldr	r3, [r3, #0]
    2104:	4718      	bx	r3
    2106:	f04f 30ff 	mov.w	r0, #4294967295
    210a:	4770      	bx	lr
    210c:	10000440 	.word	0x10000440
    2110:	10001b74 	.word	0x10001b74
    2114:	10000530 	.word	0x10000530

00002118 <_read>:
    2118:	2802      	cmp	r0, #2
    211a:	dc0d      	bgt.n	2138 <_read+0x20>
    211c:	4b0c      	ldr	r3, [pc, #48]	; (2150 <_read+0x38>)
    211e:	b510      	push	{r4, lr}
    2120:	681b      	ldr	r3, [r3, #0]
    2122:	460c      	mov	r4, r1
    2124:	b90b      	cbnz	r3, 212a <_read+0x12>
    2126:	f7ff ff1b 	bl	1f60 <init_serial() [clone .part.0]>
    212a:	480a      	ldr	r0, [pc, #40]	; (2154 <_read+0x3c>)
    212c:	f7ff fb7c 	bl	1828 <serial_getc>
    2130:	2301      	movs	r3, #1
    2132:	7020      	strb	r0, [r4, #0]
    2134:	4618      	mov	r0, r3
    2136:	bd10      	pop	{r4, pc}
    2138:	4b07      	ldr	r3, [pc, #28]	; (2158 <_read+0x40>)
    213a:	3803      	subs	r0, #3
    213c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    2140:	b110      	cbz	r0, 2148 <_read+0x30>
    2142:	6803      	ldr	r3, [r0, #0]
    2144:	689b      	ldr	r3, [r3, #8]
    2146:	4718      	bx	r3
    2148:	f04f 33ff 	mov.w	r3, #4294967295
    214c:	4618      	mov	r0, r3
    214e:	4770      	bx	lr
    2150:	10000440 	.word	0x10000440
    2154:	10001b74 	.word	0x10001b74
    2158:	10000530 	.word	0x10000530

0000215c <_isatty>:
    215c:	2802      	cmp	r0, #2
    215e:	dd07      	ble.n	2170 <_isatty+0x14>
    2160:	4b06      	ldr	r3, [pc, #24]	; (217c <_isatty+0x20>)
    2162:	3803      	subs	r0, #3
    2164:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    2168:	b120      	cbz	r0, 2174 <_isatty+0x18>
    216a:	6803      	ldr	r3, [r0, #0]
    216c:	68db      	ldr	r3, [r3, #12]
    216e:	4718      	bx	r3
    2170:	2001      	movs	r0, #1
    2172:	4770      	bx	lr
    2174:	f04f 30ff 	mov.w	r0, #4294967295
    2178:	4770      	bx	lr
    217a:	bf00      	nop
    217c:	10000530 	.word	0x10000530

00002180 <_lseek>:
    2180:	2802      	cmp	r0, #2
    2182:	dd07      	ble.n	2194 <_lseek+0x14>
    2184:	4b06      	ldr	r3, [pc, #24]	; (21a0 <_lseek+0x20>)
    2186:	3803      	subs	r0, #3
    2188:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    218c:	b120      	cbz	r0, 2198 <_lseek+0x18>
    218e:	6803      	ldr	r3, [r0, #0]
    2190:	691b      	ldr	r3, [r3, #16]
    2192:	4718      	bx	r3
    2194:	2000      	movs	r0, #0
    2196:	4770      	bx	lr
    2198:	f04f 30ff 	mov.w	r0, #4294967295
    219c:	4770      	bx	lr
    219e:	bf00      	nop
    21a0:	10000530 	.word	0x10000530

000021a4 <_fstat>:
    21a4:	2802      	cmp	r0, #2
    21a6:	b508      	push	{r3, lr}
    21a8:	d804      	bhi.n	21b4 <_fstat+0x10>
    21aa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
    21ae:	604b      	str	r3, [r1, #4]
    21b0:	2000      	movs	r0, #0
    21b2:	bd08      	pop	{r3, pc}
    21b4:	f010 fc3e 	bl	12a34 <__errno>
    21b8:	2309      	movs	r3, #9
    21ba:	6003      	str	r3, [r0, #0]
    21bc:	f04f 30ff 	mov.w	r0, #4294967295
    21c0:	bd08      	pop	{r3, pc}
    21c2:	bf00      	nop

000021c4 <mbed_main>:
    21c4:	4770      	bx	lr
    21c6:	bf00      	nop

000021c8 <mbed_sdk_init>:
    21c8:	4770      	bx	lr
    21ca:	bf00      	nop

000021cc <__wrap_main>:
    21cc:	b508      	push	{r3, lr}
    21ce:	f7ff fffb 	bl	21c8 <mbed_sdk_init>
    21d2:	f7ff fff7 	bl	21c4 <mbed_main>
    21d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    21da:	f7fd bfc7 	b.w	16c <main>
    21de:	bf00      	nop

000021e0 <_sbrk>:
    21e0:	4a07      	ldr	r2, [pc, #28]	; (2200 <_sbrk+0x20>)
    21e2:	6813      	ldr	r3, [r2, #0]
    21e4:	1819      	adds	r1, r3, r0
    21e6:	f3ef 8008 	mrs	r0, MSP
    21ea:	4281      	cmp	r1, r0
    21ec:	d202      	bcs.n	21f4 <_sbrk+0x14>
    21ee:	4618      	mov	r0, r3
    21f0:	6011      	str	r1, [r2, #0]
    21f2:	4770      	bx	lr
    21f4:	4b03      	ldr	r3, [pc, #12]	; (2204 <_sbrk+0x24>)
    21f6:	220c      	movs	r2, #12
    21f8:	601a      	str	r2, [r3, #0]
    21fa:	f04f 30ff 	mov.w	r0, #4294967295
    21fe:	4770      	bx	lr
    2200:	100000ec 	.word	0x100000ec
    2204:	10001b7c 	.word	0x10001b7c

00002208 <_exit>:
    2208:	4c0a      	ldr	r4, [pc, #40]	; (2234 <_exit+0x2c>)
    220a:	b508      	push	{r3, lr}
    220c:	6823      	ldr	r3, [r4, #0]
    220e:	4605      	mov	r5, r0
    2210:	6898      	ldr	r0, [r3, #8]
    2212:	f010 fd31 	bl	12c78 <fflush>
    2216:	6823      	ldr	r3, [r4, #0]
    2218:	68d8      	ldr	r0, [r3, #12]
    221a:	f010 fd2d 	bl	12c78 <fflush>
    221e:	f7fe fd03 	bl	c28 <mbed_interface_connected>
    2222:	b920      	cbnz	r0, 222e <_exit+0x26>
    2224:	b905      	cbnz	r5, 2228 <_exit+0x20>
    2226:	e7fe      	b.n	2226 <_exit+0x1e>
    2228:	f7fe fc6e 	bl	b08 <mbed_die>
    222c:	e7fb      	b.n	2226 <_exit+0x1e>
    222e:	f7fe fd57 	bl	ce0 <semihost_exit>
    2232:	e7f7      	b.n	2224 <_exit+0x1c>
    2234:	100001d4 	.word	0x100001d4

00002238 <mbed::mbed_set_unbuffered_stream(__sFILE*)>:
    2238:	2100      	movs	r1, #0
    223a:	f012 b9de 	b.w	145fa <setbuf>
    223e:	bf00      	nop

00002240 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
    2240:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
    2244:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    2248:	300c      	adds	r0, #12
    224a:	f7ff be27 	b.w	1e9c <mbed::FunctionPointer::call()>
    224e:	bf00      	nop

00002250 <mbed::SerialBase::SerialBase(PinName, PinName)>:
    2250:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2252:	4604      	mov	r4, r0
    2254:	4616      	mov	r6, r2
    2256:	460f      	mov	r7, r1
    2258:	4b0e      	ldr	r3, [pc, #56]	; (2294 <mbed::SerialBase::SerialBase(PinName, PinName)+0x44>)
    225a:	2500      	movs	r5, #0
    225c:	e880 0028 	stmia.w	r0, {r3, r5}
    2260:	6085      	str	r5, [r0, #8]
    2262:	4629      	mov	r1, r5
    2264:	300c      	adds	r0, #12
    2266:	f7ff fe0f 	bl	1e88 <mbed::FunctionPointer::FunctionPointer(void (*)())>
    226a:	4629      	mov	r1, r5
    226c:	f104 0028 	add.w	r0, r4, #40	; 0x28
    2270:	f7ff fe0a 	bl	1e88 <mbed::FunctionPointer::FunctionPointer(void (*)())>
    2274:	1d25      	adds	r5, r4, #4
    2276:	f44f 5316 	mov.w	r3, #9600	; 0x2580
    227a:	4639      	mov	r1, r7
    227c:	4632      	mov	r2, r6
    227e:	6463      	str	r3, [r4, #68]	; 0x44
    2280:	4628      	mov	r0, r5
    2282:	f7ff fbd5 	bl	1a30 <serial_init>
    2286:	4628      	mov	r0, r5
    2288:	4622      	mov	r2, r4
    228a:	4903      	ldr	r1, [pc, #12]	; (2298 <mbed::SerialBase::SerialBase(PinName, PinName)+0x48>)
    228c:	f7ff fabc 	bl	1808 <serial_irq_handler>
    2290:	4620      	mov	r0, r4
    2292:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2294:	0001a840 	.word	0x0001a840
    2298:	00002241 	.word	0x00002241

0000229c <mbed::SerialBase::readable()>:
    229c:	3004      	adds	r0, #4
    229e:	f7ff badd 	b.w	185c <serial_readable>
    22a2:	bf00      	nop

000022a4 <mbed::SerialBase::_base_getc()>:
    22a4:	3004      	adds	r0, #4
    22a6:	f7ff babf 	b.w	1828 <serial_getc>
    22aa:	bf00      	nop

000022ac <mbed::SerialBase::_base_putc(int)>:
    22ac:	b510      	push	{r4, lr}
    22ae:	460c      	mov	r4, r1
    22b0:	3004      	adds	r0, #4
    22b2:	f7ff fb0b 	bl	18cc <serial_putc>
    22b6:	4620      	mov	r0, r4
    22b8:	bd10      	pop	{r4, pc}
    22ba:	bf00      	nop

000022bc <mbed::Serial::_getc()>:
    22bc:	f7ff bff2 	b.w	22a4 <mbed::SerialBase::_base_getc()>

000022c0 <non-virtual thunk to mbed::Serial::_getc()>:
    22c0:	f1a0 0048 	sub.w	r0, r0, #72	; 0x48
    22c4:	f7ff bffa 	b.w	22bc <mbed::Serial::_getc()>

000022c8 <mbed::Serial::_putc(int)>:
    22c8:	f7ff bff0 	b.w	22ac <mbed::SerialBase::_base_putc(int)>

000022cc <non-virtual thunk to mbed::Serial::_putc(int)>:
    22cc:	f1a0 0048 	sub.w	r0, r0, #72	; 0x48
    22d0:	f7ff bffa 	b.w	22c8 <mbed::Serial::_putc(int)>

000022d4 <mbed::Serial::Serial(PinName, PinName, char const*)>:
    22d4:	b538      	push	{r3, r4, r5, lr}
    22d6:	4604      	mov	r4, r0
    22d8:	461d      	mov	r5, r3
    22da:	f7ff ffb9 	bl	2250 <mbed::SerialBase::SerialBase(PinName, PinName)>
    22de:	4629      	mov	r1, r5
    22e0:	f104 0048 	add.w	r0, r4, #72	; 0x48
    22e4:	f000 f844 	bl	2370 <mbed::Stream::Stream(char const*)>
    22e8:	4b05      	ldr	r3, [pc, #20]	; (2300 <mbed::Serial::Serial(PinName, PinName, char const*)+0x2c>)
    22ea:	4620      	mov	r0, r4
    22ec:	f103 0108 	add.w	r1, r3, #8
    22f0:	f103 0220 	add.w	r2, r3, #32
    22f4:	3354      	adds	r3, #84	; 0x54
    22f6:	6021      	str	r1, [r4, #0]
    22f8:	64a2      	str	r2, [r4, #72]	; 0x48
    22fa:	64e3      	str	r3, [r4, #76]	; 0x4c
    22fc:	bd38      	pop	{r3, r4, r5, pc}
    22fe:	bf00      	nop
    2300:	0001a848 	.word	0x0001a848

00002304 <mbed::Stream::close()>:
    2304:	2000      	movs	r0, #0
    2306:	4770      	bx	lr

00002308 <mbed::Stream::write(void const*, unsigned int)>:
    2308:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    230a:	188e      	adds	r6, r1, r2
    230c:	42b1      	cmp	r1, r6
    230e:	460f      	mov	r7, r1
    2310:	d00e      	beq.n	2330 <mbed::Stream::write(void const*, unsigned int)+0x28>
    2312:	4605      	mov	r5, r0
    2314:	460c      	mov	r4, r1
    2316:	e001      	b.n	231c <mbed::Stream::write(void const*, unsigned int)+0x14>
    2318:	42a6      	cmp	r6, r4
    231a:	d007      	beq.n	232c <mbed::Stream::write(void const*, unsigned int)+0x24>
    231c:	682b      	ldr	r3, [r5, #0]
    231e:	4628      	mov	r0, r5
    2320:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    2322:	f814 1b01 	ldrb.w	r1, [r4], #1
    2326:	4798      	blx	r3
    2328:	3001      	adds	r0, #1
    232a:	d1f5      	bne.n	2318 <mbed::Stream::write(void const*, unsigned int)+0x10>
    232c:	1be0      	subs	r0, r4, r7
    232e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2330:	460c      	mov	r4, r1
    2332:	e7fb      	b.n	232c <mbed::Stream::write(void const*, unsigned int)+0x24>

00002334 <mbed::Stream::read(void*, unsigned int)>:
    2334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2336:	188e      	adds	r6, r1, r2
    2338:	42b1      	cmp	r1, r6
    233a:	460f      	mov	r7, r1
    233c:	d00e      	beq.n	235c <mbed::Stream::read(void*, unsigned int)+0x28>
    233e:	4605      	mov	r5, r0
    2340:	460c      	mov	r4, r1
    2342:	e003      	b.n	234c <mbed::Stream::read(void*, unsigned int)+0x18>
    2344:	f804 0b01 	strb.w	r0, [r4], #1
    2348:	42a6      	cmp	r6, r4
    234a:	d005      	beq.n	2358 <mbed::Stream::read(void*, unsigned int)+0x24>
    234c:	682b      	ldr	r3, [r5, #0]
    234e:	4628      	mov	r0, r5
    2350:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2352:	4798      	blx	r3
    2354:	1c43      	adds	r3, r0, #1
    2356:	d1f5      	bne.n	2344 <mbed::Stream::read(void*, unsigned int)+0x10>
    2358:	1be0      	subs	r0, r4, r7
    235a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    235c:	460c      	mov	r4, r1
    235e:	e7fb      	b.n	2358 <mbed::Stream::read(void*, unsigned int)+0x24>

00002360 <mbed::Stream::lseek(long, int)>:
    2360:	2000      	movs	r0, #0
    2362:	4770      	bx	lr

00002364 <mbed::Stream::isatty()>:
    2364:	2000      	movs	r0, #0
    2366:	4770      	bx	lr

00002368 <mbed::Stream::fsync()>:
    2368:	2000      	movs	r0, #0
    236a:	4770      	bx	lr

0000236c <mbed::Stream::flen()>:
    236c:	2000      	movs	r0, #0
    236e:	4770      	bx	lr

00002370 <mbed::Stream::Stream(char const*)>:
    2370:	b510      	push	{r4, lr}
    2372:	4604      	mov	r4, r0
    2374:	b084      	sub	sp, #16
    2376:	f7ff fd05 	bl	1d84 <mbed::FileLike::FileLike(char const*)>
    237a:	4b0b      	ldr	r3, [pc, #44]	; (23a8 <mbed::Stream::Stream(char const*)+0x38>)
    237c:	2200      	movs	r2, #0
    237e:	f103 0108 	add.w	r1, r3, #8
    2382:	333c      	adds	r3, #60	; 0x3c
    2384:	e884 000a 	stmia.w	r4, {r1, r3}
    2388:	6162      	str	r2, [r4, #20]
    238a:	a801      	add	r0, sp, #4
    238c:	4622      	mov	r2, r4
    238e:	4907      	ldr	r1, [pc, #28]	; (23ac <mbed::Stream::Stream(char const*)+0x3c>)
    2390:	f012 f9c4 	bl	1471c <siprintf>
    2394:	4906      	ldr	r1, [pc, #24]	; (23b0 <mbed::Stream::Stream(char const*)+0x40>)
    2396:	a801      	add	r0, sp, #4
    2398:	f010 fda4 	bl	12ee4 <fopen>
    239c:	6160      	str	r0, [r4, #20]
    239e:	f7ff ff4b 	bl	2238 <mbed::mbed_set_unbuffered_stream(__sFILE*)>
    23a2:	4620      	mov	r0, r4
    23a4:	b004      	add	sp, #16
    23a6:	bd10      	pop	{r4, pc}
    23a8:	0001a8a8 	.word	0x0001a8a8
    23ac:	0001a828 	.word	0x0001a828
    23b0:	0001a8f0 	.word	0x0001a8f0

000023b4 <mbed::Stream::~Stream()>:
    23b4:	b510      	push	{r4, lr}
    23b6:	4604      	mov	r4, r0
    23b8:	4b06      	ldr	r3, [pc, #24]	; (23d4 <mbed::Stream::~Stream()+0x20>)
    23ba:	6940      	ldr	r0, [r0, #20]
    23bc:	f103 0208 	add.w	r2, r3, #8
    23c0:	333c      	adds	r3, #60	; 0x3c
    23c2:	e884 000c 	stmia.w	r4, {r2, r3}
    23c6:	f010 fba1 	bl	12b0c <fclose>
    23ca:	4620      	mov	r0, r4
    23cc:	f7ff fcee 	bl	1dac <mbed::FileLike::~FileLike()>
    23d0:	4620      	mov	r0, r4
    23d2:	bd10      	pop	{r4, pc}
    23d4:	0001a8a8 	.word	0x0001a8a8

000023d8 <mbed::Stream::scanf(char const*, ...)>:
    23d8:	b40e      	push	{r1, r2, r3}
    23da:	b530      	push	{r4, r5, lr}
    23dc:	4604      	mov	r4, r0
    23de:	b082      	sub	sp, #8
    23e0:	ab05      	add	r3, sp, #20
    23e2:	f853 5b04 	ldr.w	r5, [r3], #4
    23e6:	6940      	ldr	r0, [r0, #20]
    23e8:	9301      	str	r3, [sp, #4]
    23ea:	f010 fc45 	bl	12c78 <fflush>
    23ee:	4629      	mov	r1, r5
    23f0:	6960      	ldr	r0, [r4, #20]
    23f2:	9a01      	ldr	r2, [sp, #4]
    23f4:	f011 fe2e 	bl	14054 <vfiscanf>
    23f8:	b002      	add	sp, #8
    23fa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    23fe:	b003      	add	sp, #12
    2400:	4770      	bx	lr
    2402:	bf00      	nop

00002404 <mbed::Ticker::handler()>:
    2404:	b510      	push	{r4, lr}
    2406:	4604      	mov	r4, r0
    2408:	6901      	ldr	r1, [r0, #16]
    240a:	6843      	ldr	r3, [r0, #4]
    240c:	4419      	add	r1, r3
    240e:	f000 f843 	bl	2498 <mbed::TimerEvent::insert(unsigned long)>
    2412:	f104 0014 	add.w	r0, r4, #20
    2416:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    241a:	f7ff bd3f 	b.w	1e9c <mbed::FunctionPointer::call()>
    241e:	bf00      	nop

00002420 <mbed::Ticker::detach()>:
    2420:	b510      	push	{r4, lr}
    2422:	4604      	mov	r4, r0
    2424:	f000 f83c 	bl	24a0 <mbed::TimerEvent::remove()>
    2428:	f104 0014 	add.w	r0, r4, #20
    242c:	2100      	movs	r1, #0
    242e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    2432:	f7ff bd2f 	b.w	1e94 <mbed::FunctionPointer::attach(void (*)())>
    2436:	bf00      	nop

00002438 <mbed::Ticker::setup(unsigned long)>:
    2438:	b538      	push	{r3, r4, r5, lr}
    243a:	460c      	mov	r4, r1
    243c:	4605      	mov	r5, r0
    243e:	f000 f82f 	bl	24a0 <mbed::TimerEvent::remove()>
    2442:	612c      	str	r4, [r5, #16]
    2444:	f7ff fbf8 	bl	1c38 <us_ticker_read>
    2448:	1901      	adds	r1, r0, r4
    244a:	4628      	mov	r0, r5
    244c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2450:	f000 b822 	b.w	2498 <mbed::TimerEvent::insert(unsigned long)>

00002454 <mbed::TimerEvent::irq(unsigned long)>:
    2454:	6803      	ldr	r3, [r0, #0]
    2456:	689b      	ldr	r3, [r3, #8]
    2458:	4718      	bx	r3
    245a:	bf00      	nop

0000245c <mbed::TimerEvent::TimerEvent()>:
    245c:	b510      	push	{r4, lr}
    245e:	4604      	mov	r4, r0
    2460:	4a05      	ldr	r2, [pc, #20]	; (2478 <mbed::TimerEvent::TimerEvent()+0x1c>)
    2462:	2300      	movs	r3, #0
    2464:	e880 000c 	stmia.w	r0, {r2, r3}
    2468:	6083      	str	r3, [r0, #8]
    246a:	60c3      	str	r3, [r0, #12]
    246c:	4803      	ldr	r0, [pc, #12]	; (247c <mbed::TimerEvent::TimerEvent()+0x20>)
    246e:	f7fe fc4b 	bl	d08 <us_ticker_set_handler>
    2472:	4620      	mov	r0, r4
    2474:	bd10      	pop	{r4, pc}
    2476:	bf00      	nop
    2478:	0001a918 	.word	0x0001a918
    247c:	00002455 	.word	0x00002455

00002480 <mbed::TimerEvent::~TimerEvent()>:
    2480:	b510      	push	{r4, lr}
    2482:	4604      	mov	r4, r0
    2484:	4b03      	ldr	r3, [pc, #12]	; (2494 <mbed::TimerEvent::~TimerEvent()+0x14>)
    2486:	f840 3b04 	str.w	r3, [r0], #4
    248a:	f7fe fc8d 	bl	da8 <us_ticker_remove_event>
    248e:	4620      	mov	r0, r4
    2490:	bd10      	pop	{r4, pc}
    2492:	bf00      	nop
    2494:	0001a918 	.word	0x0001a918

00002498 <mbed::TimerEvent::insert(unsigned long)>:
    2498:	4602      	mov	r2, r0
    249a:	3004      	adds	r0, #4
    249c:	f7fe bc62 	b.w	d64 <us_ticker_insert_event>

000024a0 <mbed::TimerEvent::remove()>:
    24a0:	3004      	adds	r0, #4
    24a2:	f7fe bc81 	b.w	da8 <us_ticker_remove_event>
    24a6:	bf00      	nop

000024a8 <Reset_Handler>:
    24a8:	4906      	ldr	r1, [pc, #24]	; (24c4 <Reset_Handler+0x1c>)
    24aa:	4a07      	ldr	r2, [pc, #28]	; (24c8 <Reset_Handler+0x20>)
    24ac:	4b07      	ldr	r3, [pc, #28]	; (24cc <Reset_Handler+0x24>)
    24ae:	429a      	cmp	r2, r3
    24b0:	bfbe      	ittt	lt
    24b2:	f851 0b04 	ldrlt.w	r0, [r1], #4
    24b6:	f842 0b04 	strlt.w	r0, [r2], #4
    24ba:	e7f8      	blt.n	24ae <Reset_Handler+0x6>
    24bc:	4804      	ldr	r0, [pc, #16]	; (24d0 <Reset_Handler+0x28>)
    24be:	4780      	blx	r0
    24c0:	4804      	ldr	r0, [pc, #16]	; (24d4 <Reset_Handler+0x2c>)
    24c2:	4700      	bx	r0
    24c4:	0001cd58 	.word	0x0001cd58
    24c8:	100000c8 	.word	0x100000c8
    24cc:	100002ac 	.word	0x100002ac
    24d0:	00000e55 	.word	0x00000e55
    24d4:	00000aad 	.word	0x00000aad

000024d8 <NMI_Handler>:
    24d8:	e7fe      	b.n	24d8 <NMI_Handler>

000024da <HardFault_Handler>:
    24da:	e7fe      	b.n	24da <HardFault_Handler>

000024dc <MemManage_Handler>:
    24dc:	e7fe      	b.n	24dc <MemManage_Handler>

000024de <BusFault_Handler>:
    24de:	e7fe      	b.n	24de <BusFault_Handler>

000024e0 <UsageFault_Handler>:
    24e0:	e7fe      	b.n	24e0 <UsageFault_Handler>

000024e2 <SVC_Handler>:
    24e2:	e7fe      	b.n	24e2 <SVC_Handler>

000024e4 <DebugMon_Handler>:
    24e4:	e7fe      	b.n	24e4 <DebugMon_Handler>

000024e6 <PendSV_Handler>:
    24e6:	e7fe      	b.n	24e6 <PendSV_Handler>

000024e8 <SysTick_Handler>:
    24e8:	e7fe      	b.n	24e8 <SysTick_Handler>

000024ea <ADC_IRQHandler>:
    24ea:	e7fe      	b.n	24ea <ADC_IRQHandler>

000024ec <operator new(unsigned int)>:
    24ec:	b510      	push	{r4, lr}
    24ee:	2800      	cmp	r0, #0
    24f0:	bf14      	ite	ne
    24f2:	4604      	movne	r4, r0
    24f4:	2401      	moveq	r4, #1
    24f6:	4620      	mov	r0, r4
    24f8:	f7fe faf2 	bl	ae0 <__wrap_malloc>
    24fc:	b930      	cbnz	r0, 250c <operator new(unsigned int)+0x20>
    24fe:	f000 f809 	bl	2514 <std::get_new_handler()>
    2502:	b908      	cbnz	r0, 2508 <operator new(unsigned int)+0x1c>
    2504:	f7fe faf8 	bl	af8 <abort>
    2508:	4780      	blx	r0
    250a:	e7f4      	b.n	24f6 <operator new(unsigned int)+0xa>
    250c:	bd10      	pop	{r4, pc}

0000250e <operator delete(void*)>:
    250e:	f7fe baed 	b.w	aec <__wrap_free>
	...

00002514 <std::get_new_handler()>:
    2514:	4b02      	ldr	r3, [pc, #8]	; (2520 <std::get_new_handler()+0xc>)
    2516:	6818      	ldr	r0, [r3, #0]
    2518:	f3bf 8f5f 	dmb	sy
    251c:	4770      	bx	lr
    251e:	bf00      	nop
    2520:	10000630 	.word	0x10000630

00002524 <__aeabi_atexit>:
    2524:	4603      	mov	r3, r0
    2526:	4608      	mov	r0, r1
    2528:	4619      	mov	r1, r3
    252a:	f010 ba75 	b.w	12a18 <__cxa_atexit>

0000252e <operator delete[](void*)>:
    252e:	f7ff bfee 	b.w	250e <operator delete(void*)>

00002532 <operator new[](unsigned int)>:
    2532:	f7ff bfdb 	b.w	24ec <operator new(unsigned int)>
	...

00002538 <std::ios_base::Init::Init()>:
    2538:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    253c:	4d31      	ldr	r5, [pc, #196]	; (2604 <std::ios_base::Init::Init()+0xcc>)
    253e:	4680      	mov	r8, r0
    2540:	682b      	ldr	r3, [r5, #0]
    2542:	1c5a      	adds	r2, r3, #1
    2544:	602a      	str	r2, [r5, #0]
    2546:	2b00      	cmp	r3, #0
    2548:	d158      	bne.n	25fc <std::ios_base::Init::Init()+0xc4>
    254a:	4c2f      	ldr	r4, [pc, #188]	; (2608 <std::ios_base::Init::Init()+0xd0>)
    254c:	4b2f      	ldr	r3, [pc, #188]	; (260c <std::ios_base::Init::Init()+0xd4>)
    254e:	2201      	movs	r2, #1
    2550:	701a      	strb	r2, [r3, #0]
    2552:	6823      	ldr	r3, [r4, #0]
    2554:	482e      	ldr	r0, [pc, #184]	; (2610 <std::ios_base::Init::Init()+0xd8>)
    2556:	6899      	ldr	r1, [r3, #8]
    2558:	f000 face 	bl	2af8 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::stdio_sync_filebuf(__sFILE*)>
    255c:	6823      	ldr	r3, [r4, #0]
    255e:	482d      	ldr	r0, [pc, #180]	; (2614 <std::ios_base::Init::Init()+0xdc>)
    2560:	6859      	ldr	r1, [r3, #4]
    2562:	f000 fac9 	bl	2af8 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::stdio_sync_filebuf(__sFILE*)>
    2566:	6823      	ldr	r3, [r4, #0]
    2568:	4f2b      	ldr	r7, [pc, #172]	; (2618 <std::ios_base::Init::Init()+0xe0>)
    256a:	68d9      	ldr	r1, [r3, #12]
    256c:	f8df 90d4 	ldr.w	r9, [pc, #212]	; 2644 <std::ios_base::Init::Init()+0x10c>
    2570:	482a      	ldr	r0, [pc, #168]	; (261c <std::ios_base::Init::Init()+0xe4>)
    2572:	4e2b      	ldr	r6, [pc, #172]	; (2620 <std::ios_base::Init::Init()+0xe8>)
    2574:	f000 fac0 	bl	2af8 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::stdio_sync_filebuf(__sFILE*)>
    2578:	4638      	mov	r0, r7
    257a:	4925      	ldr	r1, [pc, #148]	; (2610 <std::ios_base::Init::Init()+0xd8>)
    257c:	f00b ffc8 	bl	e510 <std::basic_ostream<char, std::char_traits<char> >::basic_ostream(std::basic_streambuf<char, std::char_traits<char> >*)>
    2580:	4924      	ldr	r1, [pc, #144]	; (2614 <std::ios_base::Init::Init()+0xdc>)
    2582:	4648      	mov	r0, r9
    2584:	f00b fd4e 	bl	e024 <std::basic_istream<char, std::char_traits<char> >::basic_istream(std::basic_streambuf<char, std::char_traits<char> >*)>
    2588:	4630      	mov	r0, r6
    258a:	4924      	ldr	r1, [pc, #144]	; (261c <std::ios_base::Init::Init()+0xe4>)
    258c:	f00b ffc0 	bl	e510 <std::basic_ostream<char, std::char_traits<char> >::basic_ostream(std::basic_streambuf<char, std::char_traits<char> >*)>
    2590:	4922      	ldr	r1, [pc, #136]	; (261c <std::ios_base::Init::Init()+0xe4>)
    2592:	4824      	ldr	r0, [pc, #144]	; (2624 <std::ios_base::Init::Init()+0xec>)
    2594:	f00b ffbc 	bl	e510 <std::basic_ostream<char, std::char_traits<char> >::basic_ostream(std::basic_streambuf<char, std::char_traits<char> >*)>
    2598:	6933      	ldr	r3, [r6, #16]
    259a:	6777      	str	r7, [r6, #116]	; 0x74
    259c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    25a0:	6133      	str	r3, [r6, #16]
    25a2:	6823      	ldr	r3, [r4, #0]
    25a4:	f8c9 7078 	str.w	r7, [r9, #120]	; 0x78
    25a8:	6899      	ldr	r1, [r3, #8]
    25aa:	481f      	ldr	r0, [pc, #124]	; (2628 <std::ios_base::Init::Init()+0xf0>)
    25ac:	f000 fab4 	bl	2b18 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::stdio_sync_filebuf(__sFILE*)>
    25b0:	6823      	ldr	r3, [r4, #0]
    25b2:	481e      	ldr	r0, [pc, #120]	; (262c <std::ios_base::Init::Init()+0xf4>)
    25b4:	6859      	ldr	r1, [r3, #4]
    25b6:	f000 faaf 	bl	2b18 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::stdio_sync_filebuf(__sFILE*)>
    25ba:	6823      	ldr	r3, [r4, #0]
    25bc:	4e1c      	ldr	r6, [pc, #112]	; (2630 <std::ios_base::Init::Init()+0xf8>)
    25be:	68d9      	ldr	r1, [r3, #12]
    25c0:	4f1c      	ldr	r7, [pc, #112]	; (2634 <std::ios_base::Init::Init()+0xfc>)
    25c2:	481d      	ldr	r0, [pc, #116]	; (2638 <std::ios_base::Init::Init()+0x100>)
    25c4:	f000 faa8 	bl	2b18 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::stdio_sync_filebuf(__sFILE*)>
    25c8:	4c1c      	ldr	r4, [pc, #112]	; (263c <std::ios_base::Init::Init()+0x104>)
    25ca:	4917      	ldr	r1, [pc, #92]	; (2628 <std::ios_base::Init::Init()+0xf0>)
    25cc:	4630      	mov	r0, r6
    25ce:	f00c f815 	bl	e5fc <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::basic_ostream(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>
    25d2:	4916      	ldr	r1, [pc, #88]	; (262c <std::ios_base::Init::Init()+0xf4>)
    25d4:	4638      	mov	r0, r7
    25d6:	f00b fd8f 	bl	e0f8 <std::basic_istream<wchar_t, std::char_traits<wchar_t> >::basic_istream(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>
    25da:	4917      	ldr	r1, [pc, #92]	; (2638 <std::ios_base::Init::Init()+0x100>)
    25dc:	4620      	mov	r0, r4
    25de:	f00c f80d 	bl	e5fc <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::basic_ostream(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>
    25e2:	4817      	ldr	r0, [pc, #92]	; (2640 <std::ios_base::Init::Init()+0x108>)
    25e4:	4914      	ldr	r1, [pc, #80]	; (2638 <std::ios_base::Init::Init()+0x100>)
    25e6:	f00c f809 	bl	e5fc <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::basic_ostream(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>
    25ea:	6923      	ldr	r3, [r4, #16]
    25ec:	67be      	str	r6, [r7, #120]	; 0x78
    25ee:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    25f2:	6123      	str	r3, [r4, #16]
    25f4:	682b      	ldr	r3, [r5, #0]
    25f6:	6766      	str	r6, [r4, #116]	; 0x74
    25f8:	3301      	adds	r3, #1
    25fa:	602b      	str	r3, [r5, #0]
    25fc:	4640      	mov	r0, r8
    25fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    2602:	bf00      	nop
    2604:	10000c8c 	.word	0x10000c8c
    2608:	100001d4 	.word	0x100001d4
    260c:	100000f0 	.word	0x100000f0
    2610:	10000c3c 	.word	0x10000c3c
    2614:	10000ad0 	.word	0x10000ad0
    2618:	100009b4 	.word	0x100009b4
    261c:	1000098c 	.word	0x1000098c
    2620:	10000724 	.word	0x10000724
    2624:	10000b88 	.word	0x10000b88
    2628:	10000964 	.word	0x10000964
    262c:	100006fc 	.word	0x100006fc
    2630:	100007b0 	.word	0x100007b0
    2634:	10000840 	.word	0x10000840
    2638:	10000c14 	.word	0x10000c14
    263c:	10000af8 	.word	0x10000af8
    2640:	100008d4 	.word	0x100008d4
    2644:	10000a40 	.word	0x10000a40

00002648 <std::ios_base::Init::~Init()>:
    2648:	4a0d      	ldr	r2, [pc, #52]	; (2680 <std::ios_base::Init::~Init()+0x38>)
    264a:	b510      	push	{r4, lr}
    264c:	6813      	ldr	r3, [r2, #0]
    264e:	4604      	mov	r4, r0
    2650:	1e59      	subs	r1, r3, #1
    2652:	2b02      	cmp	r3, #2
    2654:	6011      	str	r1, [r2, #0]
    2656:	d111      	bne.n	267c <std::ios_base::Init::~Init()+0x34>
    2658:	480a      	ldr	r0, [pc, #40]	; (2684 <std::ios_base::Init::~Init()+0x3c>)
    265a:	f00b ffac 	bl	e5b6 <std::ostream::flush()>
    265e:	480a      	ldr	r0, [pc, #40]	; (2688 <std::ios_base::Init::~Init()+0x40>)
    2660:	f00b ffa9 	bl	e5b6 <std::ostream::flush()>
    2664:	4809      	ldr	r0, [pc, #36]	; (268c <std::ios_base::Init::~Init()+0x44>)
    2666:	f00b ffa6 	bl	e5b6 <std::ostream::flush()>
    266a:	4809      	ldr	r0, [pc, #36]	; (2690 <std::ios_base::Init::~Init()+0x48>)
    266c:	f00c f819 	bl	e6a2 <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::flush()>
    2670:	4808      	ldr	r0, [pc, #32]	; (2694 <std::ios_base::Init::~Init()+0x4c>)
    2672:	f00c f816 	bl	e6a2 <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::flush()>
    2676:	4808      	ldr	r0, [pc, #32]	; (2698 <std::ios_base::Init::~Init()+0x50>)
    2678:	f00c f813 	bl	e6a2 <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::flush()>
    267c:	4620      	mov	r0, r4
    267e:	bd10      	pop	{r4, pc}
    2680:	10000c8c 	.word	0x10000c8c
    2684:	100009b4 	.word	0x100009b4
    2688:	10000724 	.word	0x10000724
    268c:	10000b88 	.word	0x10000b88
    2690:	100007b0 	.word	0x100007b0
    2694:	10000af8 	.word	0x10000af8
    2698:	100008d4 	.word	0x100008d4

0000269c <std::basic_ios<char, std::char_traits<char> >::~basic_ios()>:
    269c:	b510      	push	{r4, lr}
    269e:	4604      	mov	r4, r0
    26a0:	4b02      	ldr	r3, [pc, #8]	; (26ac <std::basic_ios<char, std::char_traits<char> >::~basic_ios()+0x10>)
    26a2:	6003      	str	r3, [r0, #0]
    26a4:	f00d fc46 	bl	ff34 <std::ios_base::~ios_base()>
    26a8:	4620      	mov	r0, r4
    26aa:	bd10      	pop	{r4, pc}
    26ac:	0001a930 	.word	0x0001a930

000026b0 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()>:
    26b0:	b510      	push	{r4, lr}
    26b2:	4604      	mov	r4, r0
    26b4:	4b02      	ldr	r3, [pc, #8]	; (26c0 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()+0x10>)
    26b6:	6003      	str	r3, [r0, #0]
    26b8:	f00d fc3c 	bl	ff34 <std::ios_base::~ios_base()>
    26bc:	4620      	mov	r0, r4
    26be:	bd10      	pop	{r4, pc}
    26c0:	0001a940 	.word	0x0001a940

000026c4 <std::basic_ios<char, std::char_traits<char> >::~basic_ios()>:
    26c4:	b510      	push	{r4, lr}
    26c6:	4604      	mov	r4, r0
    26c8:	f7ff ffe8 	bl	269c <std::basic_ios<char, std::char_traits<char> >::~basic_ios()>
    26cc:	4620      	mov	r0, r4
    26ce:	f7ff ff1e 	bl	250e <operator delete(void*)>
    26d2:	4620      	mov	r0, r4
    26d4:	bd10      	pop	{r4, pc}

000026d6 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()>:
    26d6:	b510      	push	{r4, lr}
    26d8:	4604      	mov	r4, r0
    26da:	f7ff ffe9 	bl	26b0 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()>
    26de:	4620      	mov	r0, r4
    26e0:	f7ff ff15 	bl	250e <operator delete(void*)>
    26e4:	4620      	mov	r0, r4
    26e6:	bd10      	pop	{r4, pc}

000026e8 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)>:
    26e8:	b508      	push	{r3, lr}
    26ea:	6f83      	ldr	r3, [r0, #120]	; 0x78
    26ec:	b90b      	cbnz	r3, 26f2 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)+0xa>
    26ee:	f041 0101 	orr.w	r1, r1, #1
    26f2:	6141      	str	r1, [r0, #20]
    26f4:	6942      	ldr	r2, [r0, #20]
    26f6:	6903      	ldr	r3, [r0, #16]
    26f8:	421a      	tst	r2, r3
    26fa:	d002      	beq.n	2702 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)+0x1a>
    26fc:	4801      	ldr	r0, [pc, #4]	; (2704 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)+0x1c>)
    26fe:	f00c f80d 	bl	e71c <std::__throw_ios_failure(char const*)>
    2702:	bd08      	pop	{r3, pc}
    2704:	0001a99a 	.word	0x0001a99a

00002708 <std::basic_ios<char, std::char_traits<char> >::setstate(std::_Ios_Iostate)>:
    2708:	b508      	push	{r3, lr}
    270a:	6943      	ldr	r3, [r0, #20]
    270c:	4319      	orrs	r1, r3
    270e:	f7ff ffeb 	bl	26e8 <std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)>
    2712:	bd08      	pop	{r3, pc}

00002714 <std::basic_ios<char, std::char_traits<char> >::basic_ios()>:
    2714:	b510      	push	{r4, lr}
    2716:	4604      	mov	r4, r0
    2718:	f00d fbca 	bl	feb0 <std::ios_base::ios_base()>
    271c:	4b07      	ldr	r3, [pc, #28]	; (273c <std::basic_ios<char, std::char_traits<char> >::basic_ios()+0x28>)
    271e:	4620      	mov	r0, r4
    2720:	6023      	str	r3, [r4, #0]
    2722:	2300      	movs	r3, #0
    2724:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
    2728:	6723      	str	r3, [r4, #112]	; 0x70
    272a:	f884 3075 	strb.w	r3, [r4, #117]	; 0x75
    272e:	67a3      	str	r3, [r4, #120]	; 0x78
    2730:	67e3      	str	r3, [r4, #124]	; 0x7c
    2732:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
    2736:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
    273a:	bd10      	pop	{r4, pc}
    273c:	0001a930 	.word	0x0001a930

00002740 <std::basic_ios<char, std::char_traits<char> >::_M_cache_locale(std::locale const&)>:
    2740:	b538      	push	{r3, r4, r5, lr}
    2742:	4604      	mov	r4, r0
    2744:	4608      	mov	r0, r1
    2746:	460d      	mov	r5, r1
    2748:	f007 f91e 	bl	9988 <bool std::has_facet<std::ctype<char> >(std::locale const&)>
    274c:	b110      	cbz	r0, 2754 <std::basic_ios<char, std::char_traits<char> >::_M_cache_locale(std::locale const&)+0x14>
    274e:	4628      	mov	r0, r5
    2750:	f006 fdf8 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    2754:	67e0      	str	r0, [r4, #124]	; 0x7c
    2756:	4628      	mov	r0, r5
    2758:	f007 f934 	bl	99c4 <bool std::has_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)>
    275c:	b110      	cbz	r0, 2764 <std::basic_ios<char, std::char_traits<char> >::_M_cache_locale(std::locale const&)+0x24>
    275e:	4628      	mov	r0, r5
    2760:	f006 fee0 	bl	9524 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)>
    2764:	f8c4 0080 	str.w	r0, [r4, #128]	; 0x80
    2768:	4628      	mov	r0, r5
    276a:	f007 f949 	bl	9a00 <bool std::has_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)>
    276e:	b110      	cbz	r0, 2776 <std::basic_ios<char, std::char_traits<char> >::_M_cache_locale(std::locale const&)+0x36>
    2770:	4628      	mov	r0, r5
    2772:	f006 fef5 	bl	9560 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)>
    2776:	f8c4 0084 	str.w	r0, [r4, #132]	; 0x84
    277a:	bd38      	pop	{r3, r4, r5, pc}

0000277c <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)>:
    277c:	b538      	push	{r3, r4, r5, lr}
    277e:	4604      	mov	r4, r0
    2780:	460d      	mov	r5, r1
    2782:	f00b fc27 	bl	dfd4 <std::ios_base::_M_init()>
    2786:	f104 016c 	add.w	r1, r4, #108	; 0x6c
    278a:	4620      	mov	r0, r4
    278c:	f7ff ffd8 	bl	2740 <std::basic_ios<char, std::char_traits<char> >::_M_cache_locale(std::locale const&)>
    2790:	fab5 f185 	clz	r1, r5
    2794:	2300      	movs	r3, #0
    2796:	0949      	lsrs	r1, r1, #5
    2798:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
    279c:	f884 3075 	strb.w	r3, [r4, #117]	; 0x75
    27a0:	6723      	str	r3, [r4, #112]	; 0x70
    27a2:	6123      	str	r3, [r4, #16]
    27a4:	67a5      	str	r5, [r4, #120]	; 0x78
    27a6:	6161      	str	r1, [r4, #20]
    27a8:	bd38      	pop	{r3, r4, r5, pc}
	...

000027ac <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::clear(std::_Ios_Iostate)>:
    27ac:	b508      	push	{r3, lr}
    27ae:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
    27b0:	b90b      	cbnz	r3, 27b6 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::clear(std::_Ios_Iostate)+0xa>
    27b2:	f041 0101 	orr.w	r1, r1, #1
    27b6:	6141      	str	r1, [r0, #20]
    27b8:	6942      	ldr	r2, [r0, #20]
    27ba:	6903      	ldr	r3, [r0, #16]
    27bc:	421a      	tst	r2, r3
    27be:	d002      	beq.n	27c6 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::clear(std::_Ios_Iostate)+0x1a>
    27c0:	4801      	ldr	r0, [pc, #4]	; (27c8 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::clear(std::_Ios_Iostate)+0x1c>)
    27c2:	f00b ffab 	bl	e71c <std::__throw_ios_failure(char const*)>
    27c6:	bd08      	pop	{r3, pc}
    27c8:	0001a99a 	.word	0x0001a99a

000027cc <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::setstate(std::_Ios_Iostate)>:
    27cc:	b508      	push	{r3, lr}
    27ce:	6943      	ldr	r3, [r0, #20]
    27d0:	4319      	orrs	r1, r3
    27d2:	f7ff ffeb 	bl	27ac <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::clear(std::_Ios_Iostate)>
    27d6:	bd08      	pop	{r3, pc}

000027d8 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::basic_ios()>:
    27d8:	b510      	push	{r4, lr}
    27da:	4604      	mov	r4, r0
    27dc:	f00d fb68 	bl	feb0 <std::ios_base::ios_base()>
    27e0:	4b07      	ldr	r3, [pc, #28]	; (2800 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::basic_ios()+0x28>)
    27e2:	4620      	mov	r0, r4
    27e4:	6023      	str	r3, [r4, #0]
    27e6:	2300      	movs	r3, #0
    27e8:	6723      	str	r3, [r4, #112]	; 0x70
    27ea:	6763      	str	r3, [r4, #116]	; 0x74
    27ec:	f884 3078 	strb.w	r3, [r4, #120]	; 0x78
    27f0:	67e3      	str	r3, [r4, #124]	; 0x7c
    27f2:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
    27f6:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
    27fa:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
    27fe:	bd10      	pop	{r4, pc}
    2800:	0001a940 	.word	0x0001a940

00002804 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_cache_locale(std::locale const&)>:
    2804:	b538      	push	{r3, r4, r5, lr}
    2806:	4604      	mov	r4, r0
    2808:	4608      	mov	r0, r1
    280a:	460d      	mov	r5, r1
    280c:	f000 ff98 	bl	3740 <bool std::has_facet<std::ctype<wchar_t> >(std::locale const&)>
    2810:	b110      	cbz	r0, 2818 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_cache_locale(std::locale const&)+0x14>
    2812:	4628      	mov	r0, r5
    2814:	f000 fec2 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    2818:	f8c4 0080 	str.w	r0, [r4, #128]	; 0x80
    281c:	4628      	mov	r0, r5
    281e:	f000 ffad 	bl	377c <bool std::has_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)>
    2822:	b110      	cbz	r0, 282a <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_cache_locale(std::locale const&)+0x26>
    2824:	4628      	mov	r0, r5
    2826:	f000 fef5 	bl	3614 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)>
    282a:	f8c4 0084 	str.w	r0, [r4, #132]	; 0x84
    282e:	4628      	mov	r0, r5
    2830:	f000 ffc2 	bl	37b8 <bool std::has_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)>
    2834:	b110      	cbz	r0, 283c <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_cache_locale(std::locale const&)+0x38>
    2836:	4628      	mov	r0, r5
    2838:	f000 ff0a 	bl	3650 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)>
    283c:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
    2840:	bd38      	pop	{r3, r4, r5, pc}

00002842 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::init(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>:
    2842:	b538      	push	{r3, r4, r5, lr}
    2844:	4604      	mov	r4, r0
    2846:	460d      	mov	r5, r1
    2848:	f00b fbc4 	bl	dfd4 <std::ios_base::_M_init()>
    284c:	f104 016c 	add.w	r1, r4, #108	; 0x6c
    2850:	4620      	mov	r0, r4
    2852:	f7ff ffd7 	bl	2804 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_cache_locale(std::locale const&)>
    2856:	fab5 f185 	clz	r1, r5
    285a:	2300      	movs	r3, #0
    285c:	0949      	lsrs	r1, r1, #5
    285e:	6763      	str	r3, [r4, #116]	; 0x74
    2860:	f884 3078 	strb.w	r3, [r4, #120]	; 0x78
    2864:	6723      	str	r3, [r4, #112]	; 0x70
    2866:	6123      	str	r3, [r4, #16]
    2868:	67e5      	str	r5, [r4, #124]	; 0x7c
    286a:	6161      	str	r1, [r4, #20]
    286c:	bd38      	pop	{r3, r4, r5, pc}

0000286e <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)>:
    286e:	b082      	sub	sp, #8
    2870:	b537      	push	{r0, r1, r2, r4, r5, lr}
    2872:	4604      	mov	r4, r0
    2874:	ad06      	add	r5, sp, #24
    2876:	e885 000c 	stmia.w	r5, {r2, r3}
    287a:	2200      	movs	r2, #0
    287c:	9200      	str	r2, [sp, #0]
    287e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    2880:	680b      	ldr	r3, [r1, #0]
    2882:	9201      	str	r2, [sp, #4]
    2884:	691d      	ldr	r5, [r3, #16]
    2886:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    288a:	47a8      	blx	r5
    288c:	4620      	mov	r0, r4
    288e:	b003      	add	sp, #12
    2890:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    2894:	b002      	add	sp, #8
    2896:	4770      	bx	lr

00002898 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)>:
    2898:	b082      	sub	sp, #8
    289a:	b537      	push	{r0, r1, r2, r4, r5, lr}
    289c:	4604      	mov	r4, r0
    289e:	ad06      	add	r5, sp, #24
    28a0:	e885 000c 	stmia.w	r5, {r2, r3}
    28a4:	2200      	movs	r2, #0
    28a6:	9200      	str	r2, [sp, #0]
    28a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    28aa:	680b      	ldr	r3, [r1, #0]
    28ac:	9201      	str	r2, [sp, #4]
    28ae:	691d      	ldr	r5, [r3, #16]
    28b0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    28b4:	47a8      	blx	r5
    28b6:	4620      	mov	r0, r4
    28b8:	b003      	add	sp, #12
    28ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    28be:	b002      	add	sp, #8
    28c0:	4770      	bx	lr
	...

000028c4 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()>:
    28c4:	b510      	push	{r4, lr}
    28c6:	4604      	mov	r4, r0
    28c8:	4b02      	ldr	r3, [pc, #8]	; (28d4 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()+0x10>)
    28ca:	6003      	str	r3, [r0, #0]
    28cc:	f00b fcd4 	bl	e278 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()>
    28d0:	4620      	mov	r0, r4
    28d2:	bd10      	pop	{r4, pc}
    28d4:	0001aa00 	.word	0x0001aa00

000028d8 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()>:
    28d8:	b510      	push	{r4, lr}
    28da:	4604      	mov	r4, r0
    28dc:	4b02      	ldr	r3, [pc, #8]	; (28e8 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()+0x10>)
    28de:	6003      	str	r3, [r0, #0]
    28e0:	f00b fcbe 	bl	e260 <std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()>
    28e4:	4620      	mov	r0, r4
    28e6:	bd10      	pop	{r4, pc}
    28e8:	0001a9c0 	.word	0x0001a9c0

000028ec <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()>:
    28ec:	b510      	push	{r4, lr}
    28ee:	4604      	mov	r4, r0
    28f0:	f7ff ffe8 	bl	28c4 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()>
    28f4:	4620      	mov	r0, r4
    28f6:	f7ff fe0a 	bl	250e <operator delete(void*)>
    28fa:	4620      	mov	r0, r4
    28fc:	bd10      	pop	{r4, pc}

000028fe <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()>:
    28fe:	b510      	push	{r4, lr}
    2900:	4604      	mov	r4, r0
    2902:	f7ff ffe9 	bl	28d8 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()>
    2906:	4620      	mov	r0, r4
    2908:	f7ff fe01 	bl	250e <operator delete(void*)>
    290c:	4620      	mov	r0, r4
    290e:	bd10      	pop	{r4, pc}

00002910 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow()>:
    2910:	b510      	push	{r4, lr}
    2912:	4604      	mov	r4, r0
    2914:	6a00      	ldr	r0, [r0, #32]
    2916:	f010 fce3 	bl	132e0 <getc>
    291a:	6260      	str	r0, [r4, #36]	; 0x24
    291c:	bd10      	pop	{r4, pc}

0000291e <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::underflow()>:
    291e:	b510      	push	{r4, lr}
    2920:	4604      	mov	r4, r0
    2922:	6a00      	ldr	r0, [r0, #32]
    2924:	f010 fcdc 	bl	132e0 <getc>
    2928:	6a21      	ldr	r1, [r4, #32]
    292a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    292e:	f013 bccb 	b.w	162c8 <ungetc>

00002932 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::pbackfail(int)>:
    2932:	1c4a      	adds	r2, r1, #1
    2934:	b510      	push	{r4, lr}
    2936:	4604      	mov	r4, r0
    2938:	d103      	bne.n	2942 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::pbackfail(int)+0x10>
    293a:	6a40      	ldr	r0, [r0, #36]	; 0x24
    293c:	1c43      	adds	r3, r0, #1
    293e:	d101      	bne.n	2944 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::pbackfail(int)+0x12>
    2940:	e003      	b.n	294a <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::pbackfail(int)+0x18>
    2942:	4608      	mov	r0, r1
    2944:	6a21      	ldr	r1, [r4, #32]
    2946:	f013 fcbf 	bl	162c8 <ungetc>
    294a:	f04f 33ff 	mov.w	r3, #4294967295
    294e:	6263      	str	r3, [r4, #36]	; 0x24
    2950:	bd10      	pop	{r4, pc}

00002952 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::sync()>:
    2952:	6a00      	ldr	r0, [r0, #32]
    2954:	f010 b990 	b.w	12c78 <fflush>

00002958 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::sync()>:
    2958:	6a00      	ldr	r0, [r0, #32]
    295a:	f010 b98d 	b.w	12c78 <fflush>

0000295e <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::seekoff(long long, std::_Ios_Seekdir, std::_Ios_Openmode)>:
    295e:	b538      	push	{r3, r4, r5, lr}
    2960:	4604      	mov	r4, r0
    2962:	460d      	mov	r5, r1
    2964:	f04f 30ff 	mov.w	r0, #4294967295
    2968:	f04f 31ff 	mov.w	r1, #4294967295
    296c:	9b04      	ldr	r3, [sp, #16]
    296e:	e9c4 0100 	strd	r0, r1, [r4]
    2972:	2000      	movs	r0, #0
    2974:	60a0      	str	r0, [r4, #8]
    2976:	60e0      	str	r0, [r4, #12]
    2978:	b11b      	cbz	r3, 2982 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::seekoff(long long, std::_Ios_Seekdir, std::_Ios_Openmode)+0x24>
    297a:	2b01      	cmp	r3, #1
    297c:	bf0c      	ite	eq
    297e:	2301      	moveq	r3, #1
    2980:	2302      	movne	r3, #2
    2982:	4611      	mov	r1, r2
    2984:	6a28      	ldr	r0, [r5, #32]
    2986:	461a      	mov	r2, r3
    2988:	f010 fb1a 	bl	12fc0 <fseek>
    298c:	b928      	cbnz	r0, 299a <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::seekoff(long long, std::_Ios_Seekdir, std::_Ios_Openmode)+0x3c>
    298e:	6a28      	ldr	r0, [r5, #32]
    2990:	f010 fbb0 	bl	130f4 <ftell>
    2994:	17c1      	asrs	r1, r0, #31
    2996:	e9c4 0100 	strd	r0, r1, [r4]
    299a:	4620      	mov	r0, r4
    299c:	bd38      	pop	{r3, r4, r5, pc}

0000299e <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long long, std::_Ios_Seekdir, std::_Ios_Openmode)>:
    299e:	b538      	push	{r3, r4, r5, lr}
    29a0:	4604      	mov	r4, r0
    29a2:	460d      	mov	r5, r1
    29a4:	f04f 30ff 	mov.w	r0, #4294967295
    29a8:	f04f 31ff 	mov.w	r1, #4294967295
    29ac:	9b04      	ldr	r3, [sp, #16]
    29ae:	e9c4 0100 	strd	r0, r1, [r4]
    29b2:	2000      	movs	r0, #0
    29b4:	60a0      	str	r0, [r4, #8]
    29b6:	60e0      	str	r0, [r4, #12]
    29b8:	b11b      	cbz	r3, 29c2 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long long, std::_Ios_Seekdir, std::_Ios_Openmode)+0x24>
    29ba:	2b01      	cmp	r3, #1
    29bc:	bf0c      	ite	eq
    29be:	2301      	moveq	r3, #1
    29c0:	2302      	movne	r3, #2
    29c2:	4611      	mov	r1, r2
    29c4:	6a28      	ldr	r0, [r5, #32]
    29c6:	461a      	mov	r2, r3
    29c8:	f010 fafa 	bl	12fc0 <fseek>
    29cc:	b928      	cbnz	r0, 29da <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long long, std::_Ios_Seekdir, std::_Ios_Openmode)+0x3c>
    29ce:	6a28      	ldr	r0, [r5, #32]
    29d0:	f010 fb90 	bl	130f4 <ftell>
    29d4:	17c1      	asrs	r1, r0, #31
    29d6:	e9c4 0100 	strd	r0, r1, [r4]
    29da:	4620      	mov	r0, r4
    29dc:	bd38      	pop	{r3, r4, r5, pc}

000029de <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::uflow()>:
    29de:	b510      	push	{r4, lr}
    29e0:	4604      	mov	r4, r0
    29e2:	6a00      	ldr	r0, [r0, #32]
    29e4:	f010 fcac 	bl	13340 <getwc>
    29e8:	6260      	str	r0, [r4, #36]	; 0x24
    29ea:	bd10      	pop	{r4, pc}

000029ec <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)>:
    29ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    29ee:	4606      	mov	r6, r0
    29f0:	460f      	mov	r7, r1
    29f2:	4614      	mov	r4, r2
    29f4:	2500      	movs	r5, #0
    29f6:	42a5      	cmp	r5, r4
    29f8:	d005      	beq.n	2a06 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)+0x1a>
    29fa:	6a30      	ldr	r0, [r6, #32]
    29fc:	f010 fca0 	bl	13340 <getwc>
    2a00:	1c43      	adds	r3, r0, #1
    2a02:	d107      	bne.n	2a14 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)+0x28>
    2a04:	462c      	mov	r4, r5
    2a06:	b14c      	cbz	r4, 2a1c <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)+0x30>
    2a08:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
    2a0c:	3b01      	subs	r3, #1
    2a0e:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
    2a12:	e005      	b.n	2a20 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)+0x34>
    2a14:	f847 0025 	str.w	r0, [r7, r5, lsl #2]
    2a18:	3501      	adds	r5, #1
    2a1a:	e7ec      	b.n	29f6 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)+0xa>
    2a1c:	f04f 33ff 	mov.w	r3, #4294967295
    2a20:	6273      	str	r3, [r6, #36]	; 0x24
    2a22:	4620      	mov	r0, r4
    2a24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002a26 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::underflow()>:
    2a26:	b510      	push	{r4, lr}
    2a28:	4604      	mov	r4, r0
    2a2a:	6a00      	ldr	r0, [r0, #32]
    2a2c:	f010 fc88 	bl	13340 <getwc>
    2a30:	6a21      	ldr	r1, [r4, #32]
    2a32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    2a36:	f013 bc77 	b.w	16328 <ungetwc>

00002a3a <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)>:
    2a3a:	1c4a      	adds	r2, r1, #1
    2a3c:	b510      	push	{r4, lr}
    2a3e:	4604      	mov	r4, r0
    2a40:	d103      	bne.n	2a4a <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)+0x10>
    2a42:	6a40      	ldr	r0, [r0, #36]	; 0x24
    2a44:	1c43      	adds	r3, r0, #1
    2a46:	d004      	beq.n	2a52 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)+0x18>
    2a48:	e000      	b.n	2a4c <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)+0x12>
    2a4a:	4608      	mov	r0, r1
    2a4c:	6a21      	ldr	r1, [r4, #32]
    2a4e:	f013 fc6b 	bl	16328 <ungetwc>
    2a52:	f04f 33ff 	mov.w	r3, #4294967295
    2a56:	6263      	str	r3, [r4, #36]	; 0x24
    2a58:	bd10      	pop	{r4, pc}

00002a5a <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, int)>:
    2a5a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2a5c:	4606      	mov	r6, r0
    2a5e:	460f      	mov	r7, r1
    2a60:	4615      	mov	r5, r2
    2a62:	2400      	movs	r4, #0
    2a64:	42ac      	cmp	r4, r5
    2a66:	d00a      	beq.n	2a7e <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, int)+0x24>
    2a68:	f857 0024 	ldr.w	r0, [r7, r4, lsl #2]
    2a6c:	6a31      	ldr	r1, [r6, #32]
    2a6e:	f011 fcc5 	bl	143fc <putwc>
    2a72:	3001      	adds	r0, #1
    2a74:	d101      	bne.n	2a7a <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, int)+0x20>
    2a76:	4625      	mov	r5, r4
    2a78:	e001      	b.n	2a7e <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, int)+0x24>
    2a7a:	3401      	adds	r4, #1
    2a7c:	e7f2      	b.n	2a64 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, int)+0xa>
    2a7e:	4628      	mov	r0, r5
    2a80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002a82 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::xsputn(char const*, int)>:
    2a82:	4603      	mov	r3, r0
    2a84:	4608      	mov	r0, r1
    2a86:	6a1b      	ldr	r3, [r3, #32]
    2a88:	2101      	movs	r1, #1
    2a8a:	f010 bc19 	b.w	132c0 <fwrite>

00002a8e <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::xsgetn(char*, int)>:
    2a8e:	b538      	push	{r3, r4, r5, lr}
    2a90:	4605      	mov	r5, r0
    2a92:	460c      	mov	r4, r1
    2a94:	6a2b      	ldr	r3, [r5, #32]
    2a96:	4608      	mov	r0, r1
    2a98:	2101      	movs	r1, #1
    2a9a:	f010 fa7f 	bl	12f9c <fread>
    2a9e:	2800      	cmp	r0, #0
    2aa0:	bfc6      	itte	gt
    2aa2:	1824      	addgt	r4, r4, r0
    2aa4:	f814 3c01 	ldrbgt.w	r3, [r4, #-1]
    2aa8:	f04f 33ff 	movle.w	r3, #4294967295
    2aac:	626b      	str	r3, [r5, #36]	; 0x24
    2aae:	bd38      	pop	{r3, r4, r5, pc}

00002ab0 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::overflow(int)>:
    2ab0:	1c4a      	adds	r2, r1, #1
    2ab2:	b508      	push	{r3, lr}
    2ab4:	4603      	mov	r3, r0
    2ab6:	d005      	beq.n	2ac4 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::overflow(int)+0x14>
    2ab8:	4608      	mov	r0, r1
    2aba:	6a19      	ldr	r1, [r3, #32]
    2abc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    2ac0:	f011 bc92 	b.w	143e8 <putc>
    2ac4:	6a00      	ldr	r0, [r0, #32]
    2ac6:	f010 f8d7 	bl	12c78 <fflush>
    2aca:	3000      	adds	r0, #0
    2acc:	bf18      	it	ne
    2ace:	2001      	movne	r0, #1
    2ad0:	4240      	negs	r0, r0
    2ad2:	bd08      	pop	{r3, pc}

00002ad4 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::overflow(unsigned int)>:
    2ad4:	1c4a      	adds	r2, r1, #1
    2ad6:	b508      	push	{r3, lr}
    2ad8:	4603      	mov	r3, r0
    2ada:	d005      	beq.n	2ae8 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::overflow(unsigned int)+0x14>
    2adc:	4608      	mov	r0, r1
    2ade:	6a19      	ldr	r1, [r3, #32]
    2ae0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    2ae4:	f011 bc8a 	b.w	143fc <putwc>
    2ae8:	6a00      	ldr	r0, [r0, #32]
    2aea:	f010 f8c5 	bl	12c78 <fflush>
    2aee:	3000      	adds	r0, #0
    2af0:	bf18      	it	ne
    2af2:	2001      	movne	r0, #1
    2af4:	4240      	negs	r0, r0
    2af6:	bd08      	pop	{r3, pc}

00002af8 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::stdio_sync_filebuf(__sFILE*)>:
    2af8:	b538      	push	{r3, r4, r5, lr}
    2afa:	4604      	mov	r4, r0
    2afc:	460d      	mov	r5, r1
    2afe:	f00b fca9 	bl	e454 <std::basic_streambuf<char, std::char_traits<char> >::basic_streambuf()>
    2b02:	4b04      	ldr	r3, [pc, #16]	; (2b14 <__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::stdio_sync_filebuf(__sFILE*)+0x1c>)
    2b04:	6225      	str	r5, [r4, #32]
    2b06:	6023      	str	r3, [r4, #0]
    2b08:	f04f 33ff 	mov.w	r3, #4294967295
    2b0c:	6263      	str	r3, [r4, #36]	; 0x24
    2b0e:	4620      	mov	r0, r4
    2b10:	bd38      	pop	{r3, r4, r5, pc}
    2b12:	bf00      	nop
    2b14:	0001a9c0 	.word	0x0001a9c0

00002b18 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::stdio_sync_filebuf(__sFILE*)>:
    2b18:	b538      	push	{r3, r4, r5, lr}
    2b1a:	4604      	mov	r4, r0
    2b1c:	460d      	mov	r5, r1
    2b1e:	f00b fccf 	bl	e4c0 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::basic_streambuf()>
    2b22:	4b04      	ldr	r3, [pc, #16]	; (2b34 <__gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::stdio_sync_filebuf(__sFILE*)+0x1c>)
    2b24:	6225      	str	r5, [r4, #32]
    2b26:	6023      	str	r3, [r4, #0]
    2b28:	f04f 33ff 	mov.w	r3, #4294967295
    2b2c:	6263      	str	r3, [r4, #36]	; 0x24
    2b2e:	4620      	mov	r0, r4
    2b30:	bd38      	pop	{r3, r4, r5, pc}
    2b32:	bf00      	nop
    2b34:	0001aa00 	.word	0x0001aa00

00002b38 <std::moneypunct<wchar_t, false>::do_decimal_point() const>:
    2b38:	6883      	ldr	r3, [r0, #8]
    2b3a:	6958      	ldr	r0, [r3, #20]
    2b3c:	4770      	bx	lr

00002b3e <std::moneypunct<wchar_t, false>::do_thousands_sep() const>:
    2b3e:	6883      	ldr	r3, [r0, #8]
    2b40:	6998      	ldr	r0, [r3, #24]
    2b42:	4770      	bx	lr

00002b44 <std::moneypunct<wchar_t, false>::do_frac_digits() const>:
    2b44:	6883      	ldr	r3, [r0, #8]
    2b46:	6b58      	ldr	r0, [r3, #52]	; 0x34
    2b48:	4770      	bx	lr

00002b4a <std::moneypunct<wchar_t, false>::do_pos_format() const>:
    2b4a:	6883      	ldr	r3, [r0, #8]
    2b4c:	2000      	movs	r0, #0
    2b4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    2b50:	b082      	sub	sp, #8
    2b52:	b2da      	uxtb	r2, r3
    2b54:	f362 0007 	bfi	r0, r2, #0, #8
    2b58:	f3c3 2207 	ubfx	r2, r3, #8, #8
    2b5c:	f362 200f 	bfi	r0, r2, #8, #8
    2b60:	f3c3 4207 	ubfx	r2, r3, #16, #8
    2b64:	f362 4017 	bfi	r0, r2, #16, #8
    2b68:	0e1b      	lsrs	r3, r3, #24
    2b6a:	f363 601f 	bfi	r0, r3, #24, #8
    2b6e:	b002      	add	sp, #8
    2b70:	4770      	bx	lr

00002b72 <std::moneypunct<wchar_t, false>::do_neg_format() const>:
    2b72:	6883      	ldr	r3, [r0, #8]
    2b74:	2000      	movs	r0, #0
    2b76:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    2b78:	b082      	sub	sp, #8
    2b7a:	b2da      	uxtb	r2, r3
    2b7c:	f362 0007 	bfi	r0, r2, #0, #8
    2b80:	f3c3 2207 	ubfx	r2, r3, #8, #8
    2b84:	f362 200f 	bfi	r0, r2, #8, #8
    2b88:	f3c3 4207 	ubfx	r2, r3, #16, #8
    2b8c:	f362 4017 	bfi	r0, r2, #16, #8
    2b90:	0e1b      	lsrs	r3, r3, #24
    2b92:	f363 601f 	bfi	r0, r3, #24, #8
    2b96:	b002      	add	sp, #8
    2b98:	4770      	bx	lr

00002b9a <std::moneypunct<wchar_t, true>::do_decimal_point() const>:
    2b9a:	6883      	ldr	r3, [r0, #8]
    2b9c:	6958      	ldr	r0, [r3, #20]
    2b9e:	4770      	bx	lr

00002ba0 <std::moneypunct<wchar_t, true>::do_thousands_sep() const>:
    2ba0:	6883      	ldr	r3, [r0, #8]
    2ba2:	6998      	ldr	r0, [r3, #24]
    2ba4:	4770      	bx	lr

00002ba6 <std::moneypunct<wchar_t, true>::do_frac_digits() const>:
    2ba6:	6883      	ldr	r3, [r0, #8]
    2ba8:	6b58      	ldr	r0, [r3, #52]	; 0x34
    2baa:	4770      	bx	lr

00002bac <std::moneypunct<wchar_t, true>::do_pos_format() const>:
    2bac:	6883      	ldr	r3, [r0, #8]
    2bae:	2000      	movs	r0, #0
    2bb0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    2bb2:	b082      	sub	sp, #8
    2bb4:	b2da      	uxtb	r2, r3
    2bb6:	f362 0007 	bfi	r0, r2, #0, #8
    2bba:	f3c3 2207 	ubfx	r2, r3, #8, #8
    2bbe:	f362 200f 	bfi	r0, r2, #8, #8
    2bc2:	f3c3 4207 	ubfx	r2, r3, #16, #8
    2bc6:	f362 4017 	bfi	r0, r2, #16, #8
    2bca:	0e1b      	lsrs	r3, r3, #24
    2bcc:	f363 601f 	bfi	r0, r3, #24, #8
    2bd0:	b002      	add	sp, #8
    2bd2:	4770      	bx	lr

00002bd4 <std::moneypunct<wchar_t, true>::do_neg_format() const>:
    2bd4:	6883      	ldr	r3, [r0, #8]
    2bd6:	2000      	movs	r0, #0
    2bd8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    2bda:	b082      	sub	sp, #8
    2bdc:	b2da      	uxtb	r2, r3
    2bde:	f362 0007 	bfi	r0, r2, #0, #8
    2be2:	f3c3 2207 	ubfx	r2, r3, #8, #8
    2be6:	f362 200f 	bfi	r0, r2, #8, #8
    2bea:	f3c3 4207 	ubfx	r2, r3, #16, #8
    2bee:	f362 4017 	bfi	r0, r2, #16, #8
    2bf2:	0e1b      	lsrs	r3, r3, #24
    2bf4:	f363 601f 	bfi	r0, r3, #24, #8
    2bf8:	b002      	add	sp, #8
    2bfa:	4770      	bx	lr

00002bfc <std::numpunct<wchar_t>::do_decimal_point() const>:
    2bfc:	6883      	ldr	r3, [r0, #8]
    2bfe:	6a58      	ldr	r0, [r3, #36]	; 0x24
    2c00:	4770      	bx	lr

00002c02 <std::numpunct<wchar_t>::do_thousands_sep() const>:
    2c02:	6883      	ldr	r3, [r0, #8]
    2c04:	6a98      	ldr	r0, [r3, #40]	; 0x28
    2c06:	4770      	bx	lr

00002c08 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_date_order() const>:
    2c08:	2000      	movs	r0, #0
    2c0a:	4770      	bx	lr

00002c0c <std::messages<wchar_t>::do_open(std::string const&, std::locale const&) const>:
    2c0c:	2000      	movs	r0, #0
    2c0e:	4770      	bx	lr

00002c10 <std::messages<wchar_t>::do_close(int) const>:
    2c10:	4770      	bx	lr

00002c12 <std::collate<wchar_t>::do_hash(wchar_t const*, wchar_t const*) const>:
    2c12:	2000      	movs	r0, #0
    2c14:	4291      	cmp	r1, r2
    2c16:	d204      	bcs.n	2c22 <std::collate<wchar_t>::do_hash(wchar_t const*, wchar_t const*) const+0x10>
    2c18:	f851 3b04 	ldr.w	r3, [r1], #4
    2c1c:	eb03 6070 	add.w	r0, r3, r0, ror #25
    2c20:	e7f8      	b.n	2c14 <std::collate<wchar_t>::do_hash(wchar_t const*, wchar_t const*) const+0x2>
    2c22:	4770      	bx	lr

00002c24 <std::moneypunct<wchar_t, false>::do_grouping() const>:
    2c24:	b513      	push	{r0, r1, r4, lr}
    2c26:	4604      	mov	r4, r0
    2c28:	688b      	ldr	r3, [r1, #8]
    2c2a:	aa01      	add	r2, sp, #4
    2c2c:	6899      	ldr	r1, [r3, #8]
    2c2e:	f00c f907 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    2c32:	4620      	mov	r0, r4
    2c34:	b002      	add	sp, #8
    2c36:	bd10      	pop	{r4, pc}

00002c38 <std::moneypunct<wchar_t, true>::do_grouping() const>:
    2c38:	b513      	push	{r0, r1, r4, lr}
    2c3a:	4604      	mov	r4, r0
    2c3c:	688b      	ldr	r3, [r1, #8]
    2c3e:	aa01      	add	r2, sp, #4
    2c40:	6899      	ldr	r1, [r3, #8]
    2c42:	f00c f8fd 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    2c46:	4620      	mov	r0, r4
    2c48:	b002      	add	sp, #8
    2c4a:	bd10      	pop	{r4, pc}

00002c4c <std::numpunct<wchar_t>::do_grouping() const>:
    2c4c:	b513      	push	{r0, r1, r4, lr}
    2c4e:	4604      	mov	r4, r0
    2c50:	688b      	ldr	r3, [r1, #8]
    2c52:	aa01      	add	r2, sp, #4
    2c54:	6899      	ldr	r1, [r3, #8]
    2c56:	f00c f8f3 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    2c5a:	4620      	mov	r0, r4
    2c5c:	b002      	add	sp, #8
    2c5e:	bd10      	pop	{r4, pc}

00002c60 <std::moneypunct<wchar_t, false>::do_curr_symbol() const>:
    2c60:	b513      	push	{r0, r1, r4, lr}
    2c62:	4604      	mov	r4, r0
    2c64:	688b      	ldr	r3, [r1, #8]
    2c66:	aa01      	add	r2, sp, #4
    2c68:	69d9      	ldr	r1, [r3, #28]
    2c6a:	f00c fc65 	bl	f538 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, std::allocator<wchar_t> const&)>
    2c6e:	4620      	mov	r0, r4
    2c70:	b002      	add	sp, #8
    2c72:	bd10      	pop	{r4, pc}

00002c74 <std::moneypunct<wchar_t, false>::do_positive_sign() const>:
    2c74:	b513      	push	{r0, r1, r4, lr}
    2c76:	4604      	mov	r4, r0
    2c78:	688b      	ldr	r3, [r1, #8]
    2c7a:	aa01      	add	r2, sp, #4
    2c7c:	6a59      	ldr	r1, [r3, #36]	; 0x24
    2c7e:	f00c fc5b 	bl	f538 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, std::allocator<wchar_t> const&)>
    2c82:	4620      	mov	r0, r4
    2c84:	b002      	add	sp, #8
    2c86:	bd10      	pop	{r4, pc}

00002c88 <std::moneypunct<wchar_t, false>::do_negative_sign() const>:
    2c88:	b513      	push	{r0, r1, r4, lr}
    2c8a:	4604      	mov	r4, r0
    2c8c:	688b      	ldr	r3, [r1, #8]
    2c8e:	aa01      	add	r2, sp, #4
    2c90:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
    2c92:	f00c fc51 	bl	f538 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, std::allocator<wchar_t> const&)>
    2c96:	4620      	mov	r0, r4
    2c98:	b002      	add	sp, #8
    2c9a:	bd10      	pop	{r4, pc}

00002c9c <std::moneypunct<wchar_t, true>::do_curr_symbol() const>:
    2c9c:	b513      	push	{r0, r1, r4, lr}
    2c9e:	4604      	mov	r4, r0
    2ca0:	688b      	ldr	r3, [r1, #8]
    2ca2:	aa01      	add	r2, sp, #4
    2ca4:	69d9      	ldr	r1, [r3, #28]
    2ca6:	f00c fc47 	bl	f538 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, std::allocator<wchar_t> const&)>
    2caa:	4620      	mov	r0, r4
    2cac:	b002      	add	sp, #8
    2cae:	bd10      	pop	{r4, pc}

00002cb0 <std::moneypunct<wchar_t, true>::do_positive_sign() const>:
    2cb0:	b513      	push	{r0, r1, r4, lr}
    2cb2:	4604      	mov	r4, r0
    2cb4:	688b      	ldr	r3, [r1, #8]
    2cb6:	aa01      	add	r2, sp, #4
    2cb8:	6a59      	ldr	r1, [r3, #36]	; 0x24
    2cba:	f00c fc3d 	bl	f538 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, std::allocator<wchar_t> const&)>
    2cbe:	4620      	mov	r0, r4
    2cc0:	b002      	add	sp, #8
    2cc2:	bd10      	pop	{r4, pc}

00002cc4 <std::moneypunct<wchar_t, true>::do_negative_sign() const>:
    2cc4:	b513      	push	{r0, r1, r4, lr}
    2cc6:	4604      	mov	r4, r0
    2cc8:	688b      	ldr	r3, [r1, #8]
    2cca:	aa01      	add	r2, sp, #4
    2ccc:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
    2cce:	f00c fc33 	bl	f538 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, std::allocator<wchar_t> const&)>
    2cd2:	4620      	mov	r0, r4
    2cd4:	b002      	add	sp, #8
    2cd6:	bd10      	pop	{r4, pc}

00002cd8 <std::numpunct<wchar_t>::do_truename() const>:
    2cd8:	b513      	push	{r0, r1, r4, lr}
    2cda:	4604      	mov	r4, r0
    2cdc:	688b      	ldr	r3, [r1, #8]
    2cde:	aa01      	add	r2, sp, #4
    2ce0:	6959      	ldr	r1, [r3, #20]
    2ce2:	f00c fc29 	bl	f538 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, std::allocator<wchar_t> const&)>
    2ce6:	4620      	mov	r0, r4
    2ce8:	b002      	add	sp, #8
    2cea:	bd10      	pop	{r4, pc}

00002cec <std::numpunct<wchar_t>::do_falsename() const>:
    2cec:	b513      	push	{r0, r1, r4, lr}
    2cee:	4604      	mov	r4, r0
    2cf0:	688b      	ldr	r3, [r1, #8]
    2cf2:	aa01      	add	r2, sp, #4
    2cf4:	69d9      	ldr	r1, [r3, #28]
    2cf6:	f00c fc1f 	bl	f538 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, std::allocator<wchar_t> const&)>
    2cfa:	4620      	mov	r0, r4
    2cfc:	b002      	add	sp, #8
    2cfe:	bd10      	pop	{r4, pc}

00002d00 <std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()>:
    2d00:	4b0d      	ldr	r3, [pc, #52]	; (2d38 <std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()+0x38>)
    2d02:	b510      	push	{r4, lr}
    2d04:	6003      	str	r3, [r0, #0]
    2d06:	f890 306c 	ldrb.w	r3, [r0, #108]	; 0x6c
    2d0a:	4604      	mov	r4, r0
    2d0c:	b17b      	cbz	r3, 2d2e <std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()+0x2e>
    2d0e:	6880      	ldr	r0, [r0, #8]
    2d10:	b108      	cbz	r0, 2d16 <std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()+0x16>
    2d12:	f7ff fc0c 	bl	252e <operator delete[](void*)>
    2d16:	69e0      	ldr	r0, [r4, #28]
    2d18:	b108      	cbz	r0, 2d1e <std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()+0x1e>
    2d1a:	f7ff fc08 	bl	252e <operator delete[](void*)>
    2d1e:	6a60      	ldr	r0, [r4, #36]	; 0x24
    2d20:	b108      	cbz	r0, 2d26 <std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()+0x26>
    2d22:	f7ff fc04 	bl	252e <operator delete[](void*)>
    2d26:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    2d28:	b108      	cbz	r0, 2d2e <std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()+0x2e>
    2d2a:	f7ff fc00 	bl	252e <operator delete[](void*)>
    2d2e:	4620      	mov	r0, r4
    2d30:	f00d f986 	bl	10040 <std::locale::facet::~facet()>
    2d34:	4620      	mov	r0, r4
    2d36:	bd10      	pop	{r4, pc}
    2d38:	0001ad90 	.word	0x0001ad90

00002d3c <std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()>:
    2d3c:	4b0d      	ldr	r3, [pc, #52]	; (2d74 <std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()+0x38>)
    2d3e:	b510      	push	{r4, lr}
    2d40:	6003      	str	r3, [r0, #0]
    2d42:	f890 306c 	ldrb.w	r3, [r0, #108]	; 0x6c
    2d46:	4604      	mov	r4, r0
    2d48:	b17b      	cbz	r3, 2d6a <std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()+0x2e>
    2d4a:	6880      	ldr	r0, [r0, #8]
    2d4c:	b108      	cbz	r0, 2d52 <std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()+0x16>
    2d4e:	f7ff fbee 	bl	252e <operator delete[](void*)>
    2d52:	69e0      	ldr	r0, [r4, #28]
    2d54:	b108      	cbz	r0, 2d5a <std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()+0x1e>
    2d56:	f7ff fbea 	bl	252e <operator delete[](void*)>
    2d5a:	6a60      	ldr	r0, [r4, #36]	; 0x24
    2d5c:	b108      	cbz	r0, 2d62 <std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()+0x26>
    2d5e:	f7ff fbe6 	bl	252e <operator delete[](void*)>
    2d62:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    2d64:	b108      	cbz	r0, 2d6a <std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()+0x2e>
    2d66:	f7ff fbe2 	bl	252e <operator delete[](void*)>
    2d6a:	4620      	mov	r0, r4
    2d6c:	f00d f968 	bl	10040 <std::locale::facet::~facet()>
    2d70:	4620      	mov	r0, r4
    2d72:	bd10      	pop	{r4, pc}
    2d74:	0001ada0 	.word	0x0001ada0

00002d78 <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()>:
    2d78:	b510      	push	{r4, lr}
    2d7a:	4604      	mov	r4, r0
    2d7c:	4b02      	ldr	r3, [pc, #8]	; (2d88 <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()+0x10>)
    2d7e:	6003      	str	r3, [r0, #0]
    2d80:	f00d f95e 	bl	10040 <std::locale::facet::~facet()>
    2d84:	4620      	mov	r0, r4
    2d86:	bd10      	pop	{r4, pc}
    2d88:	0001ad20 	.word	0x0001ad20

00002d8c <std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()>:
    2d8c:	b510      	push	{r4, lr}
    2d8e:	4604      	mov	r4, r0
    2d90:	4b02      	ldr	r3, [pc, #8]	; (2d9c <std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()+0x10>)
    2d92:	6003      	str	r3, [r0, #0]
    2d94:	f00d f954 	bl	10040 <std::locale::facet::~facet()>
    2d98:	4620      	mov	r0, r4
    2d9a:	bd10      	pop	{r4, pc}
    2d9c:	0001ad38 	.word	0x0001ad38

00002da0 <std::__numpunct_cache<wchar_t>::~__numpunct_cache()>:
    2da0:	4b0b      	ldr	r3, [pc, #44]	; (2dd0 <std::__numpunct_cache<wchar_t>::~__numpunct_cache()+0x30>)
    2da2:	b510      	push	{r4, lr}
    2da4:	6003      	str	r3, [r0, #0]
    2da6:	f890 3124 	ldrb.w	r3, [r0, #292]	; 0x124
    2daa:	4604      	mov	r4, r0
    2dac:	b15b      	cbz	r3, 2dc6 <std::__numpunct_cache<wchar_t>::~__numpunct_cache()+0x26>
    2dae:	6880      	ldr	r0, [r0, #8]
    2db0:	b108      	cbz	r0, 2db6 <std::__numpunct_cache<wchar_t>::~__numpunct_cache()+0x16>
    2db2:	f7ff fbbc 	bl	252e <operator delete[](void*)>
    2db6:	6960      	ldr	r0, [r4, #20]
    2db8:	b108      	cbz	r0, 2dbe <std::__numpunct_cache<wchar_t>::~__numpunct_cache()+0x1e>
    2dba:	f7ff fbb8 	bl	252e <operator delete[](void*)>
    2dbe:	69e0      	ldr	r0, [r4, #28]
    2dc0:	b108      	cbz	r0, 2dc6 <std::__numpunct_cache<wchar_t>::~__numpunct_cache()+0x26>
    2dc2:	f7ff fbb4 	bl	252e <operator delete[](void*)>
    2dc6:	4620      	mov	r0, r4
    2dc8:	f00d f93a 	bl	10040 <std::locale::facet::~facet()>
    2dcc:	4620      	mov	r0, r4
    2dce:	bd10      	pop	{r4, pc}
    2dd0:	0001adb0 	.word	0x0001adb0

00002dd4 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()>:
    2dd4:	b510      	push	{r4, lr}
    2dd6:	4604      	mov	r4, r0
    2dd8:	4b02      	ldr	r3, [pc, #8]	; (2de4 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()+0x10>)
    2dda:	6003      	str	r3, [r0, #0]
    2ddc:	f00d f930 	bl	10040 <std::locale::facet::~facet()>
    2de0:	4620      	mov	r0, r4
    2de2:	bd10      	pop	{r4, pc}
    2de4:	0001abd0 	.word	0x0001abd0

00002de8 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()>:
    2de8:	b510      	push	{r4, lr}
    2dea:	4604      	mov	r4, r0
    2dec:	4b02      	ldr	r3, [pc, #8]	; (2df8 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()+0x10>)
    2dee:	6003      	str	r3, [r0, #0]
    2df0:	f00d f926 	bl	10040 <std::locale::facet::~facet()>
    2df4:	4620      	mov	r0, r4
    2df6:	bd10      	pop	{r4, pc}
    2df8:	0001ac10 	.word	0x0001ac10

00002dfc <std::__timepunct_cache<wchar_t>::~__timepunct_cache()>:
    2dfc:	b510      	push	{r4, lr}
    2dfe:	4604      	mov	r4, r0
    2e00:	4b02      	ldr	r3, [pc, #8]	; (2e0c <std::__timepunct_cache<wchar_t>::~__timepunct_cache()+0x10>)
    2e02:	6003      	str	r3, [r0, #0]
    2e04:	f00d f91c 	bl	10040 <std::locale::facet::~facet()>
    2e08:	4620      	mov	r0, r4
    2e0a:	bd10      	pop	{r4, pc}
    2e0c:	0001ac40 	.word	0x0001ac40

00002e10 <std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()>:
    2e10:	b510      	push	{r4, lr}
    2e12:	4604      	mov	r4, r0
    2e14:	4b02      	ldr	r3, [pc, #8]	; (2e20 <std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()+0x10>)
    2e16:	6003      	str	r3, [r0, #0]
    2e18:	f00d f912 	bl	10040 <std::locale::facet::~facet()>
    2e1c:	4620      	mov	r0, r4
    2e1e:	bd10      	pop	{r4, pc}
    2e20:	0001ad50 	.word	0x0001ad50

00002e24 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()>:
    2e24:	b510      	push	{r4, lr}
    2e26:	4604      	mov	r4, r0
    2e28:	4b02      	ldr	r3, [pc, #8]	; (2e34 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()+0x10>)
    2e2a:	6003      	str	r3, [r0, #0]
    2e2c:	f00d f908 	bl	10040 <std::locale::facet::~facet()>
    2e30:	4620      	mov	r0, r4
    2e32:	bd10      	pop	{r4, pc}
    2e34:	0001ad68 	.word	0x0001ad68

00002e38 <std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()>:
    2e38:	b510      	push	{r4, lr}
    2e3a:	4604      	mov	r4, r0
    2e3c:	f7ff ff60 	bl	2d00 <std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()>
    2e40:	4620      	mov	r0, r4
    2e42:	f7ff fb64 	bl	250e <operator delete(void*)>
    2e46:	4620      	mov	r0, r4
    2e48:	bd10      	pop	{r4, pc}

00002e4a <std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()>:
    2e4a:	b510      	push	{r4, lr}
    2e4c:	4604      	mov	r4, r0
    2e4e:	f7ff ff75 	bl	2d3c <std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()>
    2e52:	4620      	mov	r0, r4
    2e54:	f7ff fb5b 	bl	250e <operator delete(void*)>
    2e58:	4620      	mov	r0, r4
    2e5a:	bd10      	pop	{r4, pc}

00002e5c <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()>:
    2e5c:	b510      	push	{r4, lr}
    2e5e:	4604      	mov	r4, r0
    2e60:	f7ff ff8a 	bl	2d78 <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()>
    2e64:	4620      	mov	r0, r4
    2e66:	f7ff fb52 	bl	250e <operator delete(void*)>
    2e6a:	4620      	mov	r0, r4
    2e6c:	bd10      	pop	{r4, pc}

00002e6e <std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()>:
    2e6e:	b510      	push	{r4, lr}
    2e70:	4604      	mov	r4, r0
    2e72:	f7ff ff8b 	bl	2d8c <std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()>
    2e76:	4620      	mov	r0, r4
    2e78:	f7ff fb49 	bl	250e <operator delete(void*)>
    2e7c:	4620      	mov	r0, r4
    2e7e:	bd10      	pop	{r4, pc}

00002e80 <std::__numpunct_cache<wchar_t>::~__numpunct_cache()>:
    2e80:	b510      	push	{r4, lr}
    2e82:	4604      	mov	r4, r0
    2e84:	f7ff ff8c 	bl	2da0 <std::__numpunct_cache<wchar_t>::~__numpunct_cache()>
    2e88:	4620      	mov	r0, r4
    2e8a:	f7ff fb40 	bl	250e <operator delete(void*)>
    2e8e:	4620      	mov	r0, r4
    2e90:	bd10      	pop	{r4, pc}

00002e92 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()>:
    2e92:	b510      	push	{r4, lr}
    2e94:	4604      	mov	r4, r0
    2e96:	f7ff ff9d 	bl	2dd4 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()>
    2e9a:	4620      	mov	r0, r4
    2e9c:	f7ff fb37 	bl	250e <operator delete(void*)>
    2ea0:	4620      	mov	r0, r4
    2ea2:	bd10      	pop	{r4, pc}

00002ea4 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()>:
    2ea4:	b510      	push	{r4, lr}
    2ea6:	4604      	mov	r4, r0
    2ea8:	f7ff ff9e 	bl	2de8 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()>
    2eac:	4620      	mov	r0, r4
    2eae:	f7ff fb2e 	bl	250e <operator delete(void*)>
    2eb2:	4620      	mov	r0, r4
    2eb4:	bd10      	pop	{r4, pc}

00002eb6 <std::__timepunct_cache<wchar_t>::~__timepunct_cache()>:
    2eb6:	b510      	push	{r4, lr}
    2eb8:	4604      	mov	r4, r0
    2eba:	f7ff ff9f 	bl	2dfc <std::__timepunct_cache<wchar_t>::~__timepunct_cache()>
    2ebe:	4620      	mov	r0, r4
    2ec0:	f7ff fb25 	bl	250e <operator delete(void*)>
    2ec4:	4620      	mov	r0, r4
    2ec6:	bd10      	pop	{r4, pc}

00002ec8 <std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()>:
    2ec8:	b510      	push	{r4, lr}
    2eca:	4604      	mov	r4, r0
    2ecc:	f7ff ffa0 	bl	2e10 <std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()>
    2ed0:	4620      	mov	r0, r4
    2ed2:	f7ff fb1c 	bl	250e <operator delete(void*)>
    2ed6:	4620      	mov	r0, r4
    2ed8:	bd10      	pop	{r4, pc}

00002eda <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()>:
    2eda:	b510      	push	{r4, lr}
    2edc:	4604      	mov	r4, r0
    2ede:	f7ff ffa1 	bl	2e24 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()>
    2ee2:	4620      	mov	r0, r4
    2ee4:	f7ff fb13 	bl	250e <operator delete(void*)>
    2ee8:	4620      	mov	r0, r4
    2eea:	bd10      	pop	{r4, pc}

00002eec <std::messages<wchar_t>::~messages()>:
    2eec:	b510      	push	{r4, lr}
    2eee:	4604      	mov	r4, r0
    2ef0:	4b04      	ldr	r3, [pc, #16]	; (2f04 <std::messages<wchar_t>::~messages()+0x18>)
    2ef2:	f840 3b08 	str.w	r3, [r0], #8
    2ef6:	f00d fae7 	bl	104c8 <std::locale::facet::_S_destroy_c_locale(int*&)>
    2efa:	4620      	mov	r0, r4
    2efc:	f00d f8a0 	bl	10040 <std::locale::facet::~facet()>
    2f00:	4620      	mov	r0, r4
    2f02:	bd10      	pop	{r4, pc}
    2f04:	0001acd0 	.word	0x0001acd0

00002f08 <std::messages<wchar_t>::~messages()>:
    2f08:	b510      	push	{r4, lr}
    2f0a:	4604      	mov	r4, r0
    2f0c:	f7ff ffee 	bl	2eec <std::messages<wchar_t>::~messages()>
    2f10:	4620      	mov	r0, r4
    2f12:	f7ff fafc 	bl	250e <operator delete(void*)>
    2f16:	4620      	mov	r0, r4
    2f18:	bd10      	pop	{r4, pc}
	...

00002f1c <std::collate<wchar_t>::~collate()>:
    2f1c:	b510      	push	{r4, lr}
    2f1e:	4604      	mov	r4, r0
    2f20:	4b04      	ldr	r3, [pc, #16]	; (2f34 <std::collate<wchar_t>::~collate()+0x18>)
    2f22:	f840 3b08 	str.w	r3, [r0], #8
    2f26:	f00d facf 	bl	104c8 <std::locale::facet::_S_destroy_c_locale(int*&)>
    2f2a:	4620      	mov	r0, r4
    2f2c:	f00d f888 	bl	10040 <std::locale::facet::~facet()>
    2f30:	4620      	mov	r0, r4
    2f32:	bd10      	pop	{r4, pc}
    2f34:	0001ab48 	.word	0x0001ab48

00002f38 <std::collate<wchar_t>::~collate()>:
    2f38:	b510      	push	{r4, lr}
    2f3a:	4604      	mov	r4, r0
    2f3c:	f7ff ffee 	bl	2f1c <std::collate<wchar_t>::~collate()>
    2f40:	4620      	mov	r0, r4
    2f42:	f7ff fae4 	bl	250e <operator delete(void*)>
    2f46:	4620      	mov	r0, r4
    2f48:	bd10      	pop	{r4, pc}
	...

00002f4c <std::__timepunct<wchar_t>::~__timepunct()>:
    2f4c:	b538      	push	{r3, r4, r5, lr}
    2f4e:	4b0d      	ldr	r3, [pc, #52]	; (2f84 <std::__timepunct<wchar_t>::~__timepunct()+0x38>)
    2f50:	6905      	ldr	r5, [r0, #16]
    2f52:	6003      	str	r3, [r0, #0]
    2f54:	4604      	mov	r4, r0
    2f56:	f00d f899 	bl	1008c <std::locale::facet::_S_get_c_name()>
    2f5a:	4285      	cmp	r5, r0
    2f5c:	d003      	beq.n	2f66 <std::__timepunct<wchar_t>::~__timepunct()+0x1a>
    2f5e:	b115      	cbz	r5, 2f66 <std::__timepunct<wchar_t>::~__timepunct()+0x1a>
    2f60:	4628      	mov	r0, r5
    2f62:	f7ff fae4 	bl	252e <operator delete[](void*)>
    2f66:	68a0      	ldr	r0, [r4, #8]
    2f68:	b110      	cbz	r0, 2f70 <std::__timepunct<wchar_t>::~__timepunct()+0x24>
    2f6a:	6803      	ldr	r3, [r0, #0]
    2f6c:	685b      	ldr	r3, [r3, #4]
    2f6e:	4798      	blx	r3
    2f70:	f104 000c 	add.w	r0, r4, #12
    2f74:	f00d faa8 	bl	104c8 <std::locale::facet::_S_destroy_c_locale(int*&)>
    2f78:	4620      	mov	r0, r4
    2f7a:	f00d f861 	bl	10040 <std::locale::facet::~facet()>
    2f7e:	4620      	mov	r0, r4
    2f80:	bd38      	pop	{r3, r4, r5, pc}
    2f82:	bf00      	nop
    2f84:	0001ac50 	.word	0x0001ac50

00002f88 <std::__timepunct<wchar_t>::~__timepunct()>:
    2f88:	b510      	push	{r4, lr}
    2f8a:	4604      	mov	r4, r0
    2f8c:	f7ff ffde 	bl	2f4c <std::__timepunct<wchar_t>::~__timepunct()>
    2f90:	4620      	mov	r0, r4
    2f92:	f7ff fabc 	bl	250e <operator delete(void*)>
    2f96:	4620      	mov	r0, r4
    2f98:	bd10      	pop	{r4, pc}

00002f9a <std::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const>:
    2f9a:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    2f9e:	461c      	mov	r4, r3
    2fa0:	4680      	mov	r8, r0
    2fa2:	ab03      	add	r3, sp, #12
    2fa4:	a802      	add	r0, sp, #8
    2fa6:	f00c fadd 	bl	f564 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&)>
    2faa:	4621      	mov	r1, r4
    2fac:	a803      	add	r0, sp, #12
    2fae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    2fb0:	ab01      	add	r3, sp, #4
    2fb2:	f00c fad7 	bl	f564 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&)>
    2fb6:	9d02      	ldr	r5, [sp, #8]
    2fb8:	9c03      	ldr	r4, [sp, #12]
    2fba:	f855 7c0c 	ldr.w	r7, [r5, #-12]
    2fbe:	f854 6c0c 	ldr.w	r6, [r4, #-12]
    2fc2:	eb05 0787 	add.w	r7, r5, r7, lsl #2
    2fc6:	eb04 0686 	add.w	r6, r4, r6, lsl #2
    2fca:	4640      	mov	r0, r8
    2fcc:	4629      	mov	r1, r5
    2fce:	4622      	mov	r2, r4
    2fd0:	f00a ffef 	bl	dfb2 <std::collate<wchar_t>::_M_compare(wchar_t const*, wchar_t const*) const>
    2fd4:	b9a8      	cbnz	r0, 3002 <std::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const+0x68>
    2fd6:	4628      	mov	r0, r5
    2fd8:	f013 ff44 	bl	16e64 <wcslen>
    2fdc:	eb05 0580 	add.w	r5, r5, r0, lsl #2
    2fe0:	4620      	mov	r0, r4
    2fe2:	f013 ff3f 	bl	16e64 <wcslen>
    2fe6:	42bd      	cmp	r5, r7
    2fe8:	eb04 0080 	add.w	r0, r4, r0, lsl #2
    2fec:	d104      	bne.n	2ff8 <std::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const+0x5e>
    2fee:	1b84      	subs	r4, r0, r6
    2ff0:	bf18      	it	ne
    2ff2:	f04f 34ff 	movne.w	r4, #4294967295
    2ff6:	e007      	b.n	3008 <std::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const+0x6e>
    2ff8:	42b0      	cmp	r0, r6
    2ffa:	d004      	beq.n	3006 <std::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const+0x6c>
    2ffc:	3504      	adds	r5, #4
    2ffe:	1d04      	adds	r4, r0, #4
    3000:	e7e3      	b.n	2fca <std::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const+0x30>
    3002:	4604      	mov	r4, r0
    3004:	e000      	b.n	3008 <std::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const+0x6e>
    3006:	2401      	movs	r4, #1
    3008:	a803      	add	r0, sp, #12
    300a:	f00c f819 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    300e:	a802      	add	r0, sp, #8
    3010:	f00c f816 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3014:	4620      	mov	r0, r4
    3016:	b004      	add	sp, #16
    3018:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000301c <std::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const>:
    301c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    3020:	461c      	mov	r4, r3
    3022:	4615      	mov	r5, r2
    3024:	4b28      	ldr	r3, [pc, #160]	; (30c8 <std::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const+0xac>)
    3026:	4607      	mov	r7, r0
    3028:	6003      	str	r3, [r0, #0]
    302a:	4689      	mov	r9, r1
    302c:	466b      	mov	r3, sp
    302e:	4611      	mov	r1, r2
    3030:	a801      	add	r0, sp, #4
    3032:	4622      	mov	r2, r4
    3034:	f00c fa96 	bl	f564 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&)>
    3038:	1b64      	subs	r4, r4, r5
    303a:	9e01      	ldr	r6, [sp, #4]
    303c:	1064      	asrs	r4, r4, #1
    303e:	f1b4 5ffe 	cmp.w	r4, #532676608	; 0x1fc00000
    3042:	f856 3c0c 	ldr.w	r3, [r6, #-12]
    3046:	bf94      	ite	ls
    3048:	00a0      	lslls	r0, r4, #2
    304a:	f04f 30ff 	movhi.w	r0, #4294967295
    304e:	eb06 0883 	add.w	r8, r6, r3, lsl #2
    3052:	f7ff fa6e 	bl	2532 <operator new[](unsigned int)>
    3056:	4605      	mov	r5, r0
    3058:	4632      	mov	r2, r6
    305a:	4648      	mov	r0, r9
    305c:	4629      	mov	r1, r5
    305e:	4623      	mov	r3, r4
    3060:	f00a ffb3 	bl	dfca <std::collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned int) const>
    3064:	42a0      	cmp	r0, r4
    3066:	4602      	mov	r2, r0
    3068:	d313      	bcc.n	3092 <std::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const+0x76>
    306a:	1c44      	adds	r4, r0, #1
    306c:	4628      	mov	r0, r5
    306e:	f7ff fa5e 	bl	252e <operator delete[](void*)>
    3072:	f1b4 5ffe 	cmp.w	r4, #532676608	; 0x1fc00000
    3076:	bf94      	ite	ls
    3078:	00a0      	lslls	r0, r4, #2
    307a:	f04f 30ff 	movhi.w	r0, #4294967295
    307e:	f7ff fa58 	bl	2532 <operator new[](unsigned int)>
    3082:	4605      	mov	r5, r0
    3084:	4632      	mov	r2, r6
    3086:	4648      	mov	r0, r9
    3088:	4629      	mov	r1, r5
    308a:	4623      	mov	r3, r4
    308c:	f00a ff9d 	bl	dfca <std::collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned int) const>
    3090:	4602      	mov	r2, r0
    3092:	4629      	mov	r1, r5
    3094:	4638      	mov	r0, r7
    3096:	f00c f95f 	bl	f358 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)>
    309a:	4630      	mov	r0, r6
    309c:	f013 fee2 	bl	16e64 <wcslen>
    30a0:	eb06 0080 	add.w	r0, r6, r0, lsl #2
    30a4:	4540      	cmp	r0, r8
    30a6:	d005      	beq.n	30b4 <std::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const+0x98>
    30a8:	1d06      	adds	r6, r0, #4
    30aa:	2100      	movs	r1, #0
    30ac:	4638      	mov	r0, r7
    30ae:	f00c f9e8 	bl	f482 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)>
    30b2:	e7d1      	b.n	3058 <std::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const+0x3c>
    30b4:	4628      	mov	r0, r5
    30b6:	f7ff fa3a 	bl	252e <operator delete[](void*)>
    30ba:	a801      	add	r0, sp, #4
    30bc:	f00b ffc0 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    30c0:	4638      	mov	r0, r7
    30c2:	b003      	add	sp, #12
    30c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    30c8:	10000c80 	.word	0x10000c80

000030cc <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]>:
    30cc:	280a      	cmp	r0, #10
    30ce:	d807      	bhi.n	30e0 <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]+0x14>
    30d0:	292f      	cmp	r1, #47	; 0x2f
    30d2:	d917      	bls.n	3104 <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]+0x38>
    30d4:	3030      	adds	r0, #48	; 0x30
    30d6:	4281      	cmp	r1, r0
    30d8:	d214      	bcs.n	3104 <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]+0x38>
    30da:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
    30de:	4770      	bx	lr
    30e0:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
    30e4:	2809      	cmp	r0, #9
    30e6:	d90f      	bls.n	3108 <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]+0x3c>
    30e8:	f1a1 0361 	sub.w	r3, r1, #97	; 0x61
    30ec:	2b05      	cmp	r3, #5
    30ee:	d802      	bhi.n	30f6 <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]+0x2a>
    30f0:	f1a1 0057 	sub.w	r0, r1, #87	; 0x57
    30f4:	4770      	bx	lr
    30f6:	f1a1 0341 	sub.w	r3, r1, #65	; 0x41
    30fa:	2b05      	cmp	r3, #5
    30fc:	d802      	bhi.n	3104 <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]+0x38>
    30fe:	f1a1 0037 	sub.w	r0, r1, #55	; 0x37
    3102:	4770      	bx	lr
    3104:	f04f 30ff 	mov.w	r0, #4294967295
    3108:	4770      	bx	lr
	...

0000310c <std::__convert_from_v(int* const&, char*, int, char const*, ...)>:
    310c:	b408      	push	{r3}
    310e:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
    3110:	460f      	mov	r7, r1
    3112:	2004      	movs	r0, #4
    3114:	2100      	movs	r1, #0
    3116:	f010 f9e9 	bl	134ec <setlocale>
    311a:	4916      	ldr	r1, [pc, #88]	; (3174 <std::__convert_from_v(int* const&, char*, int, char const*, ...)+0x68>)
    311c:	4606      	mov	r6, r0
    311e:	f011 fb90 	bl	14842 <strcmp>
    3122:	b180      	cbz	r0, 3146 <std::__convert_from_v(int* const&, char*, int, char const*, ...)+0x3a>
    3124:	4630      	mov	r0, r6
    3126:	f012 f837 	bl	15198 <strlen>
    312a:	1c45      	adds	r5, r0, #1
    312c:	4628      	mov	r0, r5
    312e:	f7ff fa00 	bl	2532 <operator new[](unsigned int)>
    3132:	4631      	mov	r1, r6
    3134:	462a      	mov	r2, r5
    3136:	4604      	mov	r4, r0
    3138:	f010 faa8 	bl	1368c <memcpy>
    313c:	490d      	ldr	r1, [pc, #52]	; (3174 <std::__convert_from_v(int* const&, char*, int, char const*, ...)+0x68>)
    313e:	2004      	movs	r0, #4
    3140:	f010 f9d4 	bl	134ec <setlocale>
    3144:	e000      	b.n	3148 <std::__convert_from_v(int* const&, char*, int, char const*, ...)+0x3c>
    3146:	4604      	mov	r4, r0
    3148:	aa08      	add	r2, sp, #32
    314a:	4638      	mov	r0, r7
    314c:	9907      	ldr	r1, [sp, #28]
    314e:	9201      	str	r2, [sp, #4]
    3150:	f013 f92a 	bl	163a8 <vsiprintf>
    3154:	4605      	mov	r5, r0
    3156:	b134      	cbz	r4, 3166 <std::__convert_from_v(int* const&, char*, int, char const*, ...)+0x5a>
    3158:	2004      	movs	r0, #4
    315a:	4621      	mov	r1, r4
    315c:	f010 f9c6 	bl	134ec <setlocale>
    3160:	4620      	mov	r0, r4
    3162:	f7ff f9e4 	bl	252e <operator delete[](void*)>
    3166:	4628      	mov	r0, r5
    3168:	b002      	add	sp, #8
    316a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    316e:	b001      	add	sp, #4
    3170:	4770      	bx	lr
    3172:	bf00      	nop
    3174:	0001c529 	.word	0x0001c529

00003178 <std::moneypunct<wchar_t, false>::moneypunct(std::__moneypunct_cache<wchar_t, false>*, unsigned int)>:
    3178:	b510      	push	{r4, lr}
    317a:	4604      	mov	r4, r0
    317c:	3200      	adds	r2, #0
    317e:	4b06      	ldr	r3, [pc, #24]	; (3198 <std::moneypunct<wchar_t, false>::moneypunct(std::__moneypunct_cache<wchar_t, false>*, unsigned int)+0x20>)
    3180:	bf18      	it	ne
    3182:	2201      	movne	r2, #1
    3184:	6081      	str	r1, [r0, #8]
    3186:	2100      	movs	r1, #0
    3188:	6042      	str	r2, [r0, #4]
    318a:	6003      	str	r3, [r0, #0]
    318c:	460a      	mov	r2, r1
    318e:	f00d faa9 	bl	106e4 <std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)>
    3192:	4620      	mov	r0, r4
    3194:	bd10      	pop	{r4, pc}
    3196:	bf00      	nop
    3198:	0001ac98 	.word	0x0001ac98

0000319c <std::moneypunct<wchar_t, false>::decimal_point() const>:
    319c:	6803      	ldr	r3, [r0, #0]
    319e:	689b      	ldr	r3, [r3, #8]
    31a0:	4718      	bx	r3

000031a2 <std::moneypunct<wchar_t, false>::thousands_sep() const>:
    31a2:	6803      	ldr	r3, [r0, #0]
    31a4:	68db      	ldr	r3, [r3, #12]
    31a6:	4718      	bx	r3

000031a8 <std::moneypunct<wchar_t, false>::grouping() const>:
    31a8:	b510      	push	{r4, lr}
    31aa:	4604      	mov	r4, r0
    31ac:	680b      	ldr	r3, [r1, #0]
    31ae:	691b      	ldr	r3, [r3, #16]
    31b0:	4798      	blx	r3
    31b2:	4620      	mov	r0, r4
    31b4:	bd10      	pop	{r4, pc}

000031b6 <std::moneypunct<wchar_t, false>::curr_symbol() const>:
    31b6:	b510      	push	{r4, lr}
    31b8:	4604      	mov	r4, r0
    31ba:	680b      	ldr	r3, [r1, #0]
    31bc:	695b      	ldr	r3, [r3, #20]
    31be:	4798      	blx	r3
    31c0:	4620      	mov	r0, r4
    31c2:	bd10      	pop	{r4, pc}

000031c4 <std::moneypunct<wchar_t, false>::positive_sign() const>:
    31c4:	b510      	push	{r4, lr}
    31c6:	4604      	mov	r4, r0
    31c8:	680b      	ldr	r3, [r1, #0]
    31ca:	699b      	ldr	r3, [r3, #24]
    31cc:	4798      	blx	r3
    31ce:	4620      	mov	r0, r4
    31d0:	bd10      	pop	{r4, pc}

000031d2 <std::moneypunct<wchar_t, false>::negative_sign() const>:
    31d2:	b510      	push	{r4, lr}
    31d4:	4604      	mov	r4, r0
    31d6:	680b      	ldr	r3, [r1, #0]
    31d8:	69db      	ldr	r3, [r3, #28]
    31da:	4798      	blx	r3
    31dc:	4620      	mov	r0, r4
    31de:	bd10      	pop	{r4, pc}

000031e0 <std::moneypunct<wchar_t, false>::frac_digits() const>:
    31e0:	6803      	ldr	r3, [r0, #0]
    31e2:	6a1b      	ldr	r3, [r3, #32]
    31e4:	4718      	bx	r3

000031e6 <std::moneypunct<wchar_t, false>::pos_format() const>:
    31e6:	6803      	ldr	r3, [r0, #0]
    31e8:	b507      	push	{r0, r1, r2, lr}
    31ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    31ec:	4798      	blx	r3
    31ee:	4603      	mov	r3, r0
    31f0:	2000      	movs	r0, #0
    31f2:	b2da      	uxtb	r2, r3
    31f4:	f362 0007 	bfi	r0, r2, #0, #8
    31f8:	f3c3 2207 	ubfx	r2, r3, #8, #8
    31fc:	f362 200f 	bfi	r0, r2, #8, #8
    3200:	f3c3 4207 	ubfx	r2, r3, #16, #8
    3204:	f362 4017 	bfi	r0, r2, #16, #8
    3208:	0e1b      	lsrs	r3, r3, #24
    320a:	f363 601f 	bfi	r0, r3, #24, #8
    320e:	b003      	add	sp, #12
    3210:	f85d fb04 	ldr.w	pc, [sp], #4

00003214 <std::moneypunct<wchar_t, false>::neg_format() const>:
    3214:	6803      	ldr	r3, [r0, #0]
    3216:	b507      	push	{r0, r1, r2, lr}
    3218:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    321a:	4798      	blx	r3
    321c:	4603      	mov	r3, r0
    321e:	2000      	movs	r0, #0
    3220:	b2da      	uxtb	r2, r3
    3222:	f362 0007 	bfi	r0, r2, #0, #8
    3226:	f3c3 2207 	ubfx	r2, r3, #8, #8
    322a:	f362 200f 	bfi	r0, r2, #8, #8
    322e:	f3c3 4207 	ubfx	r2, r3, #16, #8
    3232:	f362 4017 	bfi	r0, r2, #16, #8
    3236:	0e1b      	lsrs	r3, r3, #24
    3238:	f363 601f 	bfi	r0, r3, #24, #8
    323c:	b003      	add	sp, #12
    323e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

00003244 <std::moneypunct<wchar_t, true>::moneypunct(std::__moneypunct_cache<wchar_t, true>*, unsigned int)>:
    3244:	b510      	push	{r4, lr}
    3246:	4604      	mov	r4, r0
    3248:	3200      	adds	r2, #0
    324a:	4b06      	ldr	r3, [pc, #24]	; (3264 <std::moneypunct<wchar_t, true>::moneypunct(std::__moneypunct_cache<wchar_t, true>*, unsigned int)+0x20>)
    324c:	bf18      	it	ne
    324e:	2201      	movne	r2, #1
    3250:	6081      	str	r1, [r0, #8]
    3252:	2100      	movs	r1, #0
    3254:	6042      	str	r2, [r0, #4]
    3256:	6003      	str	r3, [r0, #0]
    3258:	460a      	mov	r2, r1
    325a:	f00d f9f9 	bl	10650 <std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)>
    325e:	4620      	mov	r0, r4
    3260:	bd10      	pop	{r4, pc}
    3262:	bf00      	nop
    3264:	0001ac60 	.word	0x0001ac60

00003268 <std::moneypunct<wchar_t, true>::decimal_point() const>:
    3268:	6803      	ldr	r3, [r0, #0]
    326a:	689b      	ldr	r3, [r3, #8]
    326c:	4718      	bx	r3

0000326e <std::moneypunct<wchar_t, true>::thousands_sep() const>:
    326e:	6803      	ldr	r3, [r0, #0]
    3270:	68db      	ldr	r3, [r3, #12]
    3272:	4718      	bx	r3

00003274 <std::moneypunct<wchar_t, true>::grouping() const>:
    3274:	b510      	push	{r4, lr}
    3276:	4604      	mov	r4, r0
    3278:	680b      	ldr	r3, [r1, #0]
    327a:	691b      	ldr	r3, [r3, #16]
    327c:	4798      	blx	r3
    327e:	4620      	mov	r0, r4
    3280:	bd10      	pop	{r4, pc}

00003282 <std::moneypunct<wchar_t, true>::curr_symbol() const>:
    3282:	b510      	push	{r4, lr}
    3284:	4604      	mov	r4, r0
    3286:	680b      	ldr	r3, [r1, #0]
    3288:	695b      	ldr	r3, [r3, #20]
    328a:	4798      	blx	r3
    328c:	4620      	mov	r0, r4
    328e:	bd10      	pop	{r4, pc}

00003290 <std::moneypunct<wchar_t, true>::positive_sign() const>:
    3290:	b510      	push	{r4, lr}
    3292:	4604      	mov	r4, r0
    3294:	680b      	ldr	r3, [r1, #0]
    3296:	699b      	ldr	r3, [r3, #24]
    3298:	4798      	blx	r3
    329a:	4620      	mov	r0, r4
    329c:	bd10      	pop	{r4, pc}

0000329e <std::moneypunct<wchar_t, true>::negative_sign() const>:
    329e:	b510      	push	{r4, lr}
    32a0:	4604      	mov	r4, r0
    32a2:	680b      	ldr	r3, [r1, #0]
    32a4:	69db      	ldr	r3, [r3, #28]
    32a6:	4798      	blx	r3
    32a8:	4620      	mov	r0, r4
    32aa:	bd10      	pop	{r4, pc}

000032ac <std::moneypunct<wchar_t, true>::frac_digits() const>:
    32ac:	6803      	ldr	r3, [r0, #0]
    32ae:	6a1b      	ldr	r3, [r3, #32]
    32b0:	4718      	bx	r3

000032b2 <std::moneypunct<wchar_t, true>::pos_format() const>:
    32b2:	6803      	ldr	r3, [r0, #0]
    32b4:	b507      	push	{r0, r1, r2, lr}
    32b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    32b8:	4798      	blx	r3
    32ba:	4603      	mov	r3, r0
    32bc:	2000      	movs	r0, #0
    32be:	b2da      	uxtb	r2, r3
    32c0:	f362 0007 	bfi	r0, r2, #0, #8
    32c4:	f3c3 2207 	ubfx	r2, r3, #8, #8
    32c8:	f362 200f 	bfi	r0, r2, #8, #8
    32cc:	f3c3 4207 	ubfx	r2, r3, #16, #8
    32d0:	f362 4017 	bfi	r0, r2, #16, #8
    32d4:	0e1b      	lsrs	r3, r3, #24
    32d6:	f363 601f 	bfi	r0, r3, #24, #8
    32da:	b003      	add	sp, #12
    32dc:	f85d fb04 	ldr.w	pc, [sp], #4

000032e0 <std::moneypunct<wchar_t, true>::neg_format() const>:
    32e0:	6803      	ldr	r3, [r0, #0]
    32e2:	b507      	push	{r0, r1, r2, lr}
    32e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    32e6:	4798      	blx	r3
    32e8:	4603      	mov	r3, r0
    32ea:	2000      	movs	r0, #0
    32ec:	b2da      	uxtb	r2, r3
    32ee:	f362 0007 	bfi	r0, r2, #0, #8
    32f2:	f3c3 2207 	ubfx	r2, r3, #8, #8
    32f6:	f362 200f 	bfi	r0, r2, #8, #8
    32fa:	f3c3 4207 	ubfx	r2, r3, #16, #8
    32fe:	f362 4017 	bfi	r0, r2, #16, #8
    3302:	0e1b      	lsrs	r3, r3, #24
    3304:	f363 601f 	bfi	r0, r3, #24, #8
    3308:	b003      	add	sp, #12
    330a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

00003310 <std::__moneypunct_cache<wchar_t, false>::__moneypunct_cache(unsigned int)>:
    3310:	4a0b      	ldr	r2, [pc, #44]	; (3340 <std::__moneypunct_cache<wchar_t, false>::__moneypunct_cache(unsigned int)+0x30>)
    3312:	3100      	adds	r1, #0
    3314:	bf18      	it	ne
    3316:	2101      	movne	r1, #1
    3318:	6002      	str	r2, [r0, #0]
    331a:	2200      	movs	r2, #0
    331c:	6041      	str	r1, [r0, #4]
    331e:	6082      	str	r2, [r0, #8]
    3320:	60c2      	str	r2, [r0, #12]
    3322:	7402      	strb	r2, [r0, #16]
    3324:	6142      	str	r2, [r0, #20]
    3326:	6182      	str	r2, [r0, #24]
    3328:	61c2      	str	r2, [r0, #28]
    332a:	6202      	str	r2, [r0, #32]
    332c:	6242      	str	r2, [r0, #36]	; 0x24
    332e:	6282      	str	r2, [r0, #40]	; 0x28
    3330:	62c2      	str	r2, [r0, #44]	; 0x2c
    3332:	6302      	str	r2, [r0, #48]	; 0x30
    3334:	6342      	str	r2, [r0, #52]	; 0x34
    3336:	6382      	str	r2, [r0, #56]	; 0x38
    3338:	63c2      	str	r2, [r0, #60]	; 0x3c
    333a:	f880 206c 	strb.w	r2, [r0, #108]	; 0x6c
    333e:	4770      	bx	lr
    3340:	0001ad90 	.word	0x0001ad90

00003344 <std::__moneypunct_cache<wchar_t, true>::__moneypunct_cache(unsigned int)>:
    3344:	4a0b      	ldr	r2, [pc, #44]	; (3374 <std::__moneypunct_cache<wchar_t, true>::__moneypunct_cache(unsigned int)+0x30>)
    3346:	3100      	adds	r1, #0
    3348:	bf18      	it	ne
    334a:	2101      	movne	r1, #1
    334c:	6002      	str	r2, [r0, #0]
    334e:	2200      	movs	r2, #0
    3350:	6041      	str	r1, [r0, #4]
    3352:	6082      	str	r2, [r0, #8]
    3354:	60c2      	str	r2, [r0, #12]
    3356:	7402      	strb	r2, [r0, #16]
    3358:	6142      	str	r2, [r0, #20]
    335a:	6182      	str	r2, [r0, #24]
    335c:	61c2      	str	r2, [r0, #28]
    335e:	6202      	str	r2, [r0, #32]
    3360:	6242      	str	r2, [r0, #36]	; 0x24
    3362:	6282      	str	r2, [r0, #40]	; 0x28
    3364:	62c2      	str	r2, [r0, #44]	; 0x2c
    3366:	6302      	str	r2, [r0, #48]	; 0x30
    3368:	6342      	str	r2, [r0, #52]	; 0x34
    336a:	6382      	str	r2, [r0, #56]	; 0x38
    336c:	63c2      	str	r2, [r0, #60]	; 0x3c
    336e:	f880 206c 	strb.w	r2, [r0, #108]	; 0x6c
    3372:	4770      	bx	lr
    3374:	0001ada0 	.word	0x0001ada0

00003378 <std::numpunct<wchar_t>::numpunct(std::__numpunct_cache<wchar_t>*, unsigned int)>:
    3378:	b510      	push	{r4, lr}
    337a:	4604      	mov	r4, r0
    337c:	3200      	adds	r2, #0
    337e:	4b05      	ldr	r3, [pc, #20]	; (3394 <std::numpunct<wchar_t>::numpunct(std::__numpunct_cache<wchar_t>*, unsigned int)+0x1c>)
    3380:	bf18      	it	ne
    3382:	2201      	movne	r2, #1
    3384:	6042      	str	r2, [r0, #4]
    3386:	6003      	str	r3, [r0, #0]
    3388:	6081      	str	r1, [r0, #8]
    338a:	2100      	movs	r1, #0
    338c:	f00d faea 	bl	10964 <std::numpunct<wchar_t>::_M_initialize_numpunct(int*)>
    3390:	4620      	mov	r0, r4
    3392:	bd10      	pop	{r4, pc}
    3394:	0001aba8 	.word	0x0001aba8

00003398 <std::numpunct<wchar_t>::decimal_point() const>:
    3398:	6803      	ldr	r3, [r0, #0]
    339a:	689b      	ldr	r3, [r3, #8]
    339c:	4718      	bx	r3

0000339e <std::numpunct<wchar_t>::thousands_sep() const>:
    339e:	6803      	ldr	r3, [r0, #0]
    33a0:	68db      	ldr	r3, [r3, #12]
    33a2:	4718      	bx	r3

000033a4 <std::numpunct<wchar_t>::grouping() const>:
    33a4:	b510      	push	{r4, lr}
    33a6:	4604      	mov	r4, r0
    33a8:	680b      	ldr	r3, [r1, #0]
    33aa:	691b      	ldr	r3, [r3, #16]
    33ac:	4798      	blx	r3
    33ae:	4620      	mov	r0, r4
    33b0:	bd10      	pop	{r4, pc}

000033b2 <std::numpunct<wchar_t>::truename() const>:
    33b2:	b510      	push	{r4, lr}
    33b4:	4604      	mov	r4, r0
    33b6:	680b      	ldr	r3, [r1, #0]
    33b8:	695b      	ldr	r3, [r3, #20]
    33ba:	4798      	blx	r3
    33bc:	4620      	mov	r0, r4
    33be:	bd10      	pop	{r4, pc}

000033c0 <std::numpunct<wchar_t>::falsename() const>:
    33c0:	b510      	push	{r4, lr}
    33c2:	4604      	mov	r4, r0
    33c4:	680b      	ldr	r3, [r1, #0]
    33c6:	699b      	ldr	r3, [r3, #24]
    33c8:	4798      	blx	r3
    33ca:	4620      	mov	r0, r4
    33cc:	bd10      	pop	{r4, pc}
	...

000033d0 <std::__numpunct_cache<wchar_t>::__numpunct_cache(unsigned int)>:
    33d0:	4a09      	ldr	r2, [pc, #36]	; (33f8 <std::__numpunct_cache<wchar_t>::__numpunct_cache(unsigned int)+0x28>)
    33d2:	3100      	adds	r1, #0
    33d4:	bf18      	it	ne
    33d6:	2101      	movne	r1, #1
    33d8:	6002      	str	r2, [r0, #0]
    33da:	2200      	movs	r2, #0
    33dc:	6041      	str	r1, [r0, #4]
    33de:	6082      	str	r2, [r0, #8]
    33e0:	60c2      	str	r2, [r0, #12]
    33e2:	7402      	strb	r2, [r0, #16]
    33e4:	6142      	str	r2, [r0, #20]
    33e6:	6182      	str	r2, [r0, #24]
    33e8:	61c2      	str	r2, [r0, #28]
    33ea:	6202      	str	r2, [r0, #32]
    33ec:	6242      	str	r2, [r0, #36]	; 0x24
    33ee:	6282      	str	r2, [r0, #40]	; 0x28
    33f0:	f880 2124 	strb.w	r2, [r0, #292]	; 0x124
    33f4:	4770      	bx	lr
    33f6:	bf00      	nop
    33f8:	0001adb0 	.word	0x0001adb0

000033fc <std::__timepunct<wchar_t>::__timepunct(std::__timepunct_cache<wchar_t>*, unsigned int)>:
    33fc:	3200      	adds	r2, #0
    33fe:	4b08      	ldr	r3, [pc, #32]	; (3420 <std::__timepunct<wchar_t>::__timepunct(std::__timepunct_cache<wchar_t>*, unsigned int)+0x24>)
    3400:	bf18      	it	ne
    3402:	2201      	movne	r2, #1
    3404:	b510      	push	{r4, lr}
    3406:	6042      	str	r2, [r0, #4]
    3408:	6003      	str	r3, [r0, #0]
    340a:	6081      	str	r1, [r0, #8]
    340c:	4604      	mov	r4, r0
    340e:	f00c fe3d 	bl	1008c <std::locale::facet::_S_get_c_name()>
    3412:	2100      	movs	r1, #0
    3414:	6120      	str	r0, [r4, #16]
    3416:	4620      	mov	r0, r4
    3418:	f005 f810 	bl	843c <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)>
    341c:	4620      	mov	r0, r4
    341e:	bd10      	pop	{r4, pc}
    3420:	0001ac50 	.word	0x0001ac50

00003424 <std::__timepunct<wchar_t>::_M_date_formats(wchar_t const**) const>:
    3424:	6883      	ldr	r3, [r0, #8]
    3426:	689b      	ldr	r3, [r3, #8]
    3428:	600b      	str	r3, [r1, #0]
    342a:	6883      	ldr	r3, [r0, #8]
    342c:	68db      	ldr	r3, [r3, #12]
    342e:	604b      	str	r3, [r1, #4]
    3430:	4770      	bx	lr

00003432 <std::__timepunct<wchar_t>::_M_time_formats(wchar_t const**) const>:
    3432:	6883      	ldr	r3, [r0, #8]
    3434:	691b      	ldr	r3, [r3, #16]
    3436:	600b      	str	r3, [r1, #0]
    3438:	6883      	ldr	r3, [r0, #8]
    343a:	695b      	ldr	r3, [r3, #20]
    343c:	604b      	str	r3, [r1, #4]
    343e:	4770      	bx	lr

00003440 <std::__timepunct<wchar_t>::_M_date_time_formats(wchar_t const**) const>:
    3440:	6883      	ldr	r3, [r0, #8]
    3442:	699b      	ldr	r3, [r3, #24]
    3444:	600b      	str	r3, [r1, #0]
    3446:	6883      	ldr	r3, [r0, #8]
    3448:	69db      	ldr	r3, [r3, #28]
    344a:	604b      	str	r3, [r1, #4]
    344c:	4770      	bx	lr

0000344e <std::__timepunct<wchar_t>::_M_days(wchar_t const**) const>:
    344e:	6883      	ldr	r3, [r0, #8]
    3450:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    3452:	600b      	str	r3, [r1, #0]
    3454:	6883      	ldr	r3, [r0, #8]
    3456:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    3458:	604b      	str	r3, [r1, #4]
    345a:	6883      	ldr	r3, [r0, #8]
    345c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    345e:	608b      	str	r3, [r1, #8]
    3460:	6883      	ldr	r3, [r0, #8]
    3462:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    3464:	60cb      	str	r3, [r1, #12]
    3466:	6883      	ldr	r3, [r0, #8]
    3468:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    346a:	610b      	str	r3, [r1, #16]
    346c:	6883      	ldr	r3, [r0, #8]
    346e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    3470:	614b      	str	r3, [r1, #20]
    3472:	6883      	ldr	r3, [r0, #8]
    3474:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    3476:	618b      	str	r3, [r1, #24]
    3478:	4770      	bx	lr

0000347a <std::__timepunct<wchar_t>::_M_days_abbreviated(wchar_t const**) const>:
    347a:	6883      	ldr	r3, [r0, #8]
    347c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    347e:	600b      	str	r3, [r1, #0]
    3480:	6883      	ldr	r3, [r0, #8]
    3482:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    3484:	604b      	str	r3, [r1, #4]
    3486:	6883      	ldr	r3, [r0, #8]
    3488:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    348a:	608b      	str	r3, [r1, #8]
    348c:	6883      	ldr	r3, [r0, #8]
    348e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    3490:	60cb      	str	r3, [r1, #12]
    3492:	6883      	ldr	r3, [r0, #8]
    3494:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    3496:	610b      	str	r3, [r1, #16]
    3498:	6883      	ldr	r3, [r0, #8]
    349a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    349c:	614b      	str	r3, [r1, #20]
    349e:	6883      	ldr	r3, [r0, #8]
    34a0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    34a2:	618b      	str	r3, [r1, #24]
    34a4:	4770      	bx	lr

000034a6 <std::__timepunct<wchar_t>::_M_months(wchar_t const**) const>:
    34a6:	6883      	ldr	r3, [r0, #8]
    34a8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    34aa:	600b      	str	r3, [r1, #0]
    34ac:	6883      	ldr	r3, [r0, #8]
    34ae:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    34b0:	604b      	str	r3, [r1, #4]
    34b2:	6883      	ldr	r3, [r0, #8]
    34b4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    34b6:	608b      	str	r3, [r1, #8]
    34b8:	6883      	ldr	r3, [r0, #8]
    34ba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    34bc:	60cb      	str	r3, [r1, #12]
    34be:	6883      	ldr	r3, [r0, #8]
    34c0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
    34c2:	610b      	str	r3, [r1, #16]
    34c4:	6883      	ldr	r3, [r0, #8]
    34c6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    34c8:	614b      	str	r3, [r1, #20]
    34ca:	6883      	ldr	r3, [r0, #8]
    34cc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    34ce:	618b      	str	r3, [r1, #24]
    34d0:	6883      	ldr	r3, [r0, #8]
    34d2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    34d6:	61cb      	str	r3, [r1, #28]
    34d8:	6883      	ldr	r3, [r0, #8]
    34da:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    34de:	620b      	str	r3, [r1, #32]
    34e0:	6883      	ldr	r3, [r0, #8]
    34e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    34e6:	624b      	str	r3, [r1, #36]	; 0x24
    34e8:	6883      	ldr	r3, [r0, #8]
    34ea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    34ee:	628b      	str	r3, [r1, #40]	; 0x28
    34f0:	6883      	ldr	r3, [r0, #8]
    34f2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    34f6:	62cb      	str	r3, [r1, #44]	; 0x2c
    34f8:	4770      	bx	lr

000034fa <std::__timepunct<wchar_t>::_M_months_abbreviated(wchar_t const**) const>:
    34fa:	6883      	ldr	r3, [r0, #8]
    34fc:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
    3500:	600b      	str	r3, [r1, #0]
    3502:	6883      	ldr	r3, [r0, #8]
    3504:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
    3508:	604b      	str	r3, [r1, #4]
    350a:	6883      	ldr	r3, [r0, #8]
    350c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
    3510:	608b      	str	r3, [r1, #8]
    3512:	6883      	ldr	r3, [r0, #8]
    3514:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    3518:	60cb      	str	r3, [r1, #12]
    351a:	6883      	ldr	r3, [r0, #8]
    351c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
    3520:	610b      	str	r3, [r1, #16]
    3522:	6883      	ldr	r3, [r0, #8]
    3524:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
    3528:	614b      	str	r3, [r1, #20]
    352a:	6883      	ldr	r3, [r0, #8]
    352c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    3530:	618b      	str	r3, [r1, #24]
    3532:	6883      	ldr	r3, [r0, #8]
    3534:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
    3538:	61cb      	str	r3, [r1, #28]
    353a:	6883      	ldr	r3, [r0, #8]
    353c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
    3540:	620b      	str	r3, [r1, #32]
    3542:	6883      	ldr	r3, [r0, #8]
    3544:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
    3548:	624b      	str	r3, [r1, #36]	; 0x24
    354a:	6883      	ldr	r3, [r0, #8]
    354c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
    3550:	628b      	str	r3, [r1, #40]	; 0x28
    3552:	6883      	ldr	r3, [r0, #8]
    3554:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
    3558:	62cb      	str	r3, [r1, #44]	; 0x2c
    355a:	4770      	bx	lr

0000355c <std::messages<wchar_t>::messages(unsigned int)>:
    355c:	3100      	adds	r1, #0
    355e:	4b06      	ldr	r3, [pc, #24]	; (3578 <std::messages<wchar_t>::messages(unsigned int)+0x1c>)
    3560:	bf18      	it	ne
    3562:	2101      	movne	r1, #1
    3564:	b510      	push	{r4, lr}
    3566:	6041      	str	r1, [r0, #4]
    3568:	6003      	str	r3, [r0, #0]
    356a:	4604      	mov	r4, r0
    356c:	f00c fd82 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    3570:	60a0      	str	r0, [r4, #8]
    3572:	4620      	mov	r0, r4
    3574:	bd10      	pop	{r4, pc}
    3576:	bf00      	nop
    3578:	0001acd0 	.word	0x0001acd0

0000357c <std::collate<wchar_t>::collate(unsigned int)>:
    357c:	3100      	adds	r1, #0
    357e:	4b06      	ldr	r3, [pc, #24]	; (3598 <std::collate<wchar_t>::collate(unsigned int)+0x1c>)
    3580:	bf18      	it	ne
    3582:	2101      	movne	r1, #1
    3584:	b510      	push	{r4, lr}
    3586:	6041      	str	r1, [r0, #4]
    3588:	6003      	str	r3, [r0, #0]
    358a:	4604      	mov	r4, r0
    358c:	f00c fd72 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    3590:	60a0      	str	r0, [r4, #8]
    3592:	4620      	mov	r0, r4
    3594:	bd10      	pop	{r4, pc}
    3596:	bf00      	nop
    3598:	0001ab48 	.word	0x0001ab48

0000359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>:
    359c:	b510      	push	{r4, lr}
    359e:	4604      	mov	r4, r0
    35a0:	480a      	ldr	r0, [pc, #40]	; (35cc <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)+0x30>)
    35a2:	f00c fdfb 	bl	1019c <std::locale::id::_M_id() const>
    35a6:	6823      	ldr	r3, [r4, #0]
    35a8:	685a      	ldr	r2, [r3, #4]
    35aa:	689b      	ldr	r3, [r3, #8]
    35ac:	4298      	cmp	r0, r3
    35ae:	d202      	bcs.n	35b6 <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)+0x1a>
    35b0:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    35b4:	b908      	cbnz	r0, 35ba <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)+0x1e>
    35b6:	f00b f889 	bl	e6cc <std::__throw_bad_cast()>
    35ba:	4905      	ldr	r1, [pc, #20]	; (35d0 <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)+0x34>)
    35bc:	4a05      	ldr	r2, [pc, #20]	; (35d4 <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)+0x38>)
    35be:	2300      	movs	r3, #0
    35c0:	f00c f86a 	bl	f698 <__dynamic_cast>
    35c4:	b908      	cbnz	r0, 35ca <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)+0x2e>
    35c6:	f00c f8c1 	bl	f74c <__cxa_bad_cast>
    35ca:	bd10      	pop	{r4, pc}
    35cc:	10000c84 	.word	0x10000c84
    35d0:	0001c4d8 	.word	0x0001c4d8
    35d4:	0001c2b0 	.word	0x0001c2b0

000035d8 <std::numpunct<wchar_t> const& std::use_facet<std::numpunct<wchar_t> >(std::locale const&)>:
    35d8:	b510      	push	{r4, lr}
    35da:	4604      	mov	r4, r0
    35dc:	480a      	ldr	r0, [pc, #40]	; (3608 <std::numpunct<wchar_t> const& std::use_facet<std::numpunct<wchar_t> >(std::locale const&)+0x30>)
    35de:	f00c fddd 	bl	1019c <std::locale::id::_M_id() const>
    35e2:	6823      	ldr	r3, [r4, #0]
    35e4:	685a      	ldr	r2, [r3, #4]
    35e6:	689b      	ldr	r3, [r3, #8]
    35e8:	4298      	cmp	r0, r3
    35ea:	d202      	bcs.n	35f2 <std::numpunct<wchar_t> const& std::use_facet<std::numpunct<wchar_t> >(std::locale const&)+0x1a>
    35ec:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    35f0:	b908      	cbnz	r0, 35f6 <std::numpunct<wchar_t> const& std::use_facet<std::numpunct<wchar_t> >(std::locale const&)+0x1e>
    35f2:	f00b f86b 	bl	e6cc <std::__throw_bad_cast()>
    35f6:	4905      	ldr	r1, [pc, #20]	; (360c <std::numpunct<wchar_t> const& std::use_facet<std::numpunct<wchar_t> >(std::locale const&)+0x34>)
    35f8:	4a05      	ldr	r2, [pc, #20]	; (3610 <std::numpunct<wchar_t> const& std::use_facet<std::numpunct<wchar_t> >(std::locale const&)+0x38>)
    35fa:	2300      	movs	r3, #0
    35fc:	f00c f84c 	bl	f698 <__dynamic_cast>
    3600:	b908      	cbnz	r0, 3606 <std::numpunct<wchar_t> const& std::use_facet<std::numpunct<wchar_t> >(std::locale const&)+0x2e>
    3602:	f00c f8a3 	bl	f74c <__cxa_bad_cast>
    3606:	bd10      	pop	{r4, pc}
    3608:	10000680 	.word	0x10000680
    360c:	0001c4d8 	.word	0x0001c4d8
    3610:	0001b13c 	.word	0x0001b13c

00003614 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)>:
    3614:	b510      	push	{r4, lr}
    3616:	4604      	mov	r4, r0
    3618:	480a      	ldr	r0, [pc, #40]	; (3644 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x30>)
    361a:	f00c fdbf 	bl	1019c <std::locale::id::_M_id() const>
    361e:	6823      	ldr	r3, [r4, #0]
    3620:	685a      	ldr	r2, [r3, #4]
    3622:	689b      	ldr	r3, [r3, #8]
    3624:	4298      	cmp	r0, r3
    3626:	d202      	bcs.n	362e <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x1a>
    3628:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    362c:	b908      	cbnz	r0, 3632 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x1e>
    362e:	f00b f84d 	bl	e6cc <std::__throw_bad_cast()>
    3632:	4905      	ldr	r1, [pc, #20]	; (3648 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x34>)
    3634:	4a05      	ldr	r2, [pc, #20]	; (364c <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x38>)
    3636:	2300      	movs	r3, #0
    3638:	f00c f82e 	bl	f698 <__dynamic_cast>
    363c:	b908      	cbnz	r0, 3642 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x2e>
    363e:	f00c f885 	bl	f74c <__cxa_bad_cast>
    3642:	bd10      	pop	{r4, pc}
    3644:	10000678 	.word	0x10000678
    3648:	0001c4d8 	.word	0x0001c4d8
    364c:	0001ae78 	.word	0x0001ae78

00003650 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)>:
    3650:	b510      	push	{r4, lr}
    3652:	4604      	mov	r4, r0
    3654:	480a      	ldr	r0, [pc, #40]	; (3680 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x30>)
    3656:	f00c fda1 	bl	1019c <std::locale::id::_M_id() const>
    365a:	6823      	ldr	r3, [r4, #0]
    365c:	685a      	ldr	r2, [r3, #4]
    365e:	689b      	ldr	r3, [r3, #8]
    3660:	4298      	cmp	r0, r3
    3662:	d202      	bcs.n	366a <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x1a>
    3664:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    3668:	b908      	cbnz	r0, 366e <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x1e>
    366a:	f00b f82f 	bl	e6cc <std::__throw_bad_cast()>
    366e:	4905      	ldr	r1, [pc, #20]	; (3684 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x34>)
    3670:	4a05      	ldr	r2, [pc, #20]	; (3688 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x38>)
    3672:	2300      	movs	r3, #0
    3674:	f00c f810 	bl	f698 <__dynamic_cast>
    3678:	b908      	cbnz	r0, 367e <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x2e>
    367a:	f00c f867 	bl	f74c <__cxa_bad_cast>
    367e:	bd10      	pop	{r4, pc}
    3680:	1000067c 	.word	0x1000067c
    3684:	0001c4d8 	.word	0x0001c4d8
    3688:	0001af18 	.word	0x0001af18

0000368c <std::moneypunct<wchar_t, true> const& std::use_facet<std::moneypunct<wchar_t, true> >(std::locale const&)>:
    368c:	b510      	push	{r4, lr}
    368e:	4604      	mov	r4, r0
    3690:	480a      	ldr	r0, [pc, #40]	; (36bc <std::moneypunct<wchar_t, true> const& std::use_facet<std::moneypunct<wchar_t, true> >(std::locale const&)+0x30>)
    3692:	f00c fd83 	bl	1019c <std::locale::id::_M_id() const>
    3696:	6823      	ldr	r3, [r4, #0]
    3698:	685a      	ldr	r2, [r3, #4]
    369a:	689b      	ldr	r3, [r3, #8]
    369c:	4298      	cmp	r0, r3
    369e:	d202      	bcs.n	36a6 <std::moneypunct<wchar_t, true> const& std::use_facet<std::moneypunct<wchar_t, true> >(std::locale const&)+0x1a>
    36a0:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    36a4:	b908      	cbnz	r0, 36aa <std::moneypunct<wchar_t, true> const& std::use_facet<std::moneypunct<wchar_t, true> >(std::locale const&)+0x1e>
    36a6:	f00b f811 	bl	e6cc <std::__throw_bad_cast()>
    36aa:	4905      	ldr	r1, [pc, #20]	; (36c0 <std::moneypunct<wchar_t, true> const& std::use_facet<std::moneypunct<wchar_t, true> >(std::locale const&)+0x34>)
    36ac:	4a05      	ldr	r2, [pc, #20]	; (36c4 <std::moneypunct<wchar_t, true> const& std::use_facet<std::moneypunct<wchar_t, true> >(std::locale const&)+0x38>)
    36ae:	2300      	movs	r3, #0
    36b0:	f00b fff2 	bl	f698 <__dynamic_cast>
    36b4:	b908      	cbnz	r0, 36ba <std::moneypunct<wchar_t, true> const& std::use_facet<std::moneypunct<wchar_t, true> >(std::locale const&)+0x2e>
    36b6:	f00c f849 	bl	f74c <__cxa_bad_cast>
    36ba:	bd10      	pop	{r4, pc}
    36bc:	1000068c 	.word	0x1000068c
    36c0:	0001c4d8 	.word	0x0001c4d8
    36c4:	0001b054 	.word	0x0001b054

000036c8 <std::moneypunct<wchar_t, false> const& std::use_facet<std::moneypunct<wchar_t, false> >(std::locale const&)>:
    36c8:	b510      	push	{r4, lr}
    36ca:	4604      	mov	r4, r0
    36cc:	480a      	ldr	r0, [pc, #40]	; (36f8 <std::moneypunct<wchar_t, false> const& std::use_facet<std::moneypunct<wchar_t, false> >(std::locale const&)+0x30>)
    36ce:	f00c fd65 	bl	1019c <std::locale::id::_M_id() const>
    36d2:	6823      	ldr	r3, [r4, #0]
    36d4:	685a      	ldr	r2, [r3, #4]
    36d6:	689b      	ldr	r3, [r3, #8]
    36d8:	4298      	cmp	r0, r3
    36da:	d202      	bcs.n	36e2 <std::moneypunct<wchar_t, false> const& std::use_facet<std::moneypunct<wchar_t, false> >(std::locale const&)+0x1a>
    36dc:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    36e0:	b908      	cbnz	r0, 36e6 <std::moneypunct<wchar_t, false> const& std::use_facet<std::moneypunct<wchar_t, false> >(std::locale const&)+0x1e>
    36e2:	f00a fff3 	bl	e6cc <std::__throw_bad_cast()>
    36e6:	4905      	ldr	r1, [pc, #20]	; (36fc <std::moneypunct<wchar_t, false> const& std::use_facet<std::moneypunct<wchar_t, false> >(std::locale const&)+0x34>)
    36e8:	4a05      	ldr	r2, [pc, #20]	; (3700 <std::moneypunct<wchar_t, false> const& std::use_facet<std::moneypunct<wchar_t, false> >(std::locale const&)+0x38>)
    36ea:	2300      	movs	r3, #0
    36ec:	f00b ffd4 	bl	f698 <__dynamic_cast>
    36f0:	b908      	cbnz	r0, 36f6 <std::moneypunct<wchar_t, false> const& std::use_facet<std::moneypunct<wchar_t, false> >(std::locale const&)+0x2e>
    36f2:	f00c f82b 	bl	f74c <__cxa_bad_cast>
    36f6:	bd10      	pop	{r4, pc}
    36f8:	10000690 	.word	0x10000690
    36fc:	0001c4d8 	.word	0x0001c4d8
    3700:	0001ae58 	.word	0x0001ae58

00003704 <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)>:
    3704:	b510      	push	{r4, lr}
    3706:	4604      	mov	r4, r0
    3708:	480a      	ldr	r0, [pc, #40]	; (3734 <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)+0x30>)
    370a:	f00c fd47 	bl	1019c <std::locale::id::_M_id() const>
    370e:	6823      	ldr	r3, [r4, #0]
    3710:	685a      	ldr	r2, [r3, #4]
    3712:	689b      	ldr	r3, [r3, #8]
    3714:	4298      	cmp	r0, r3
    3716:	d202      	bcs.n	371e <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)+0x1a>
    3718:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    371c:	b908      	cbnz	r0, 3722 <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)+0x1e>
    371e:	f00a ffd5 	bl	e6cc <std::__throw_bad_cast()>
    3722:	4905      	ldr	r1, [pc, #20]	; (3738 <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)+0x34>)
    3724:	4a05      	ldr	r2, [pc, #20]	; (373c <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)+0x38>)
    3726:	2300      	movs	r3, #0
    3728:	f00b ffb6 	bl	f698 <__dynamic_cast>
    372c:	b908      	cbnz	r0, 3732 <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)+0x2e>
    372e:	f00c f80d 	bl	f74c <__cxa_bad_cast>
    3732:	bd10      	pop	{r4, pc}
    3734:	10000674 	.word	0x10000674
    3738:	0001c4d8 	.word	0x0001c4d8
    373c:	0001b0bc 	.word	0x0001b0bc

00003740 <bool std::has_facet<std::ctype<wchar_t> >(std::locale const&)>:
    3740:	b510      	push	{r4, lr}
    3742:	4604      	mov	r4, r0
    3744:	480a      	ldr	r0, [pc, #40]	; (3770 <bool std::has_facet<std::ctype<wchar_t> >(std::locale const&)+0x30>)
    3746:	f00c fd29 	bl	1019c <std::locale::id::_M_id() const>
    374a:	6823      	ldr	r3, [r4, #0]
    374c:	685a      	ldr	r2, [r3, #4]
    374e:	689b      	ldr	r3, [r3, #8]
    3750:	4298      	cmp	r0, r3
    3752:	d20b      	bcs.n	376c <bool std::has_facet<std::ctype<wchar_t> >(std::locale const&)+0x2c>
    3754:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    3758:	b148      	cbz	r0, 376e <bool std::has_facet<std::ctype<wchar_t> >(std::locale const&)+0x2e>
    375a:	4906      	ldr	r1, [pc, #24]	; (3774 <bool std::has_facet<std::ctype<wchar_t> >(std::locale const&)+0x34>)
    375c:	4a06      	ldr	r2, [pc, #24]	; (3778 <bool std::has_facet<std::ctype<wchar_t> >(std::locale const&)+0x38>)
    375e:	2300      	movs	r3, #0
    3760:	f00b ff9a 	bl	f698 <__dynamic_cast>
    3764:	3000      	adds	r0, #0
    3766:	bf18      	it	ne
    3768:	2001      	movne	r0, #1
    376a:	bd10      	pop	{r4, pc}
    376c:	2000      	movs	r0, #0
    376e:	bd10      	pop	{r4, pc}
    3770:	10000c84 	.word	0x10000c84
    3774:	0001c4d8 	.word	0x0001c4d8
    3778:	0001c2b0 	.word	0x0001c2b0

0000377c <bool std::has_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)>:
    377c:	b510      	push	{r4, lr}
    377e:	4604      	mov	r4, r0
    3780:	480a      	ldr	r0, [pc, #40]	; (37ac <bool std::has_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x30>)
    3782:	f00c fd0b 	bl	1019c <std::locale::id::_M_id() const>
    3786:	6823      	ldr	r3, [r4, #0]
    3788:	685a      	ldr	r2, [r3, #4]
    378a:	689b      	ldr	r3, [r3, #8]
    378c:	4298      	cmp	r0, r3
    378e:	d20b      	bcs.n	37a8 <bool std::has_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x2c>
    3790:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    3794:	b148      	cbz	r0, 37aa <bool std::has_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x2e>
    3796:	4906      	ldr	r1, [pc, #24]	; (37b0 <bool std::has_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x34>)
    3798:	4a06      	ldr	r2, [pc, #24]	; (37b4 <bool std::has_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x38>)
    379a:	2300      	movs	r3, #0
    379c:	f00b ff7c 	bl	f698 <__dynamic_cast>
    37a0:	3000      	adds	r0, #0
    37a2:	bf18      	it	ne
    37a4:	2001      	movne	r0, #1
    37a6:	bd10      	pop	{r4, pc}
    37a8:	2000      	movs	r0, #0
    37aa:	bd10      	pop	{r4, pc}
    37ac:	10000678 	.word	0x10000678
    37b0:	0001c4d8 	.word	0x0001c4d8
    37b4:	0001ae78 	.word	0x0001ae78

000037b8 <bool std::has_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)>:
    37b8:	b510      	push	{r4, lr}
    37ba:	4604      	mov	r4, r0
    37bc:	480a      	ldr	r0, [pc, #40]	; (37e8 <bool std::has_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x30>)
    37be:	f00c fced 	bl	1019c <std::locale::id::_M_id() const>
    37c2:	6823      	ldr	r3, [r4, #0]
    37c4:	685a      	ldr	r2, [r3, #4]
    37c6:	689b      	ldr	r3, [r3, #8]
    37c8:	4298      	cmp	r0, r3
    37ca:	d20b      	bcs.n	37e4 <bool std::has_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x2c>
    37cc:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    37d0:	b148      	cbz	r0, 37e6 <bool std::has_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x2e>
    37d2:	4906      	ldr	r1, [pc, #24]	; (37ec <bool std::has_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x34>)
    37d4:	4a06      	ldr	r2, [pc, #24]	; (37f0 <bool std::has_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)+0x38>)
    37d6:	2300      	movs	r3, #0
    37d8:	f00b ff5e 	bl	f698 <__dynamic_cast>
    37dc:	3000      	adds	r0, #0
    37de:	bf18      	it	ne
    37e0:	2001      	movne	r0, #1
    37e2:	bd10      	pop	{r4, pc}
    37e4:	2000      	movs	r0, #0
    37e6:	bd10      	pop	{r4, pc}
    37e8:	1000067c 	.word	0x1000067c
    37ec:	0001c4d8 	.word	0x0001c4d8
    37f0:	0001af18 	.word	0x0001af18

000037f4 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)>:
    37f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    37f8:	2600      	movs	r6, #0
    37fa:	4637      	mov	r7, r6
    37fc:	9c06      	ldr	r4, [sp, #24]
    37fe:	f8dd e01c 	ldr.w	lr, [sp, #28]
    3802:	f812 c007 	ldrb.w	r12, [r2, r7]
    3806:	ebc4 080e 	rsb	r8, r4, lr
    380a:	ebbc 0fa8 	cmp.w	r12, r8, asr #2
    380e:	eb02 0507 	add.w	r5, r2, r7
    3812:	db02      	blt.n	381a <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0x26>
    3814:	1f07      	subs	r7, r0, #4
    3816:	4623      	mov	r3, r4
    3818:	e00c      	b.n	3834 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0x40>
    381a:	fa4f f88c 	sxtb.w	r8, r12
    381e:	f1b8 0f00 	cmp.w	r8, #0
    3822:	ddf7      	ble.n	3814 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0x20>
    3824:	1e5d      	subs	r5, r3, #1
    3826:	42af      	cmp	r7, r5
    3828:	ebae 0e8c 	sub.w	lr, lr, r12, lsl #2
    382c:	bf34      	ite	cc
    382e:	3701      	addcc	r7, #1
    3830:	3601      	addcs	r6, #1
    3832:	e7e6      	b.n	3802 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0xe>
    3834:	4573      	cmp	r3, lr
    3836:	d004      	beq.n	3842 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0x4e>
    3838:	f853 cb04 	ldr.w	r12, [r3], #4
    383c:	f847 cf04 	str.w	r12, [r7, #4]!
    3840:	e7f8      	b.n	3834 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0x40>
    3842:	1b1c      	subs	r4, r3, r4
    3844:	f024 0403 	bic.w	r4, r4, #3
    3848:	4420      	add	r0, r4
    384a:	f116 36ff 	adds.w	r6, r6, #4294967295
    384e:	d311      	bcc.n	3874 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0x80>
    3850:	6001      	str	r1, [r0, #0]
    3852:	782c      	ldrb	r4, [r5, #0]
    3854:	4684      	mov	r12, r0
    3856:	4627      	mov	r7, r4
    3858:	469e      	mov	lr, r3
    385a:	b137      	cbz	r7, 386a <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0x76>
    385c:	f85e 8b04 	ldr.w	r8, [lr], #4
    3860:	3f01      	subs	r7, #1
    3862:	f84c 8f04 	str.w	r8, [r12, #4]!
    3866:	b2ff      	uxtb	r7, r7
    3868:	e7f7      	b.n	385a <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0x66>
    386a:	00a4      	lsls	r4, r4, #2
    386c:	1d27      	adds	r7, r4, #4
    386e:	4438      	add	r0, r7
    3870:	4423      	add	r3, r4
    3872:	e7ea      	b.n	384a <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0x56>
    3874:	462c      	mov	r4, r5
    3876:	4294      	cmp	r4, r2
    3878:	d012      	beq.n	38a0 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0xac>
    387a:	6001      	str	r1, [r0, #0]
    387c:	f814 5d01 	ldrb.w	r5, [r4, #-1]!
    3880:	4686      	mov	lr, r0
    3882:	462e      	mov	r6, r5
    3884:	461f      	mov	r7, r3
    3886:	b136      	cbz	r6, 3896 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0xa2>
    3888:	f857 cb04 	ldr.w	r12, [r7], #4
    388c:	3e01      	subs	r6, #1
    388e:	f84e cf04 	str.w	r12, [lr, #4]!
    3892:	b2f6      	uxtb	r6, r6
    3894:	e7f7      	b.n	3886 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0x92>
    3896:	00ad      	lsls	r5, r5, #2
    3898:	1d2e      	adds	r6, r5, #4
    389a:	4430      	add	r0, r6
    389c:	442b      	add	r3, r5
    389e:	e7ea      	b.n	3876 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)+0x82>
    38a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000038a4 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_float(char const*, unsigned int, wchar_t, wchar_t const*, wchar_t*, wchar_t*, int&) const>:
    38a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    38a6:	9f08      	ldr	r7, [sp, #32]
    38a8:	4696      	mov	lr, r2
    38aa:	468c      	mov	r12, r1
    38ac:	9c09      	ldr	r4, [sp, #36]	; 0x24
    38ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    38b0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    38b2:	b117      	cbz	r7, 38ba <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_float(char const*, unsigned int, wchar_t, wchar_t const*, wchar_t*, wchar_t*, int&) const+0x16>
    38b4:	1abd      	subs	r5, r7, r2
    38b6:	10ad      	asrs	r5, r5, #2
    38b8:	e000      	b.n	38bc <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_float(char const*, unsigned int, wchar_t, wchar_t const*, wchar_t*, wchar_t*, int&) const+0x18>
    38ba:	6835      	ldr	r5, [r6, #0]
    38bc:	9200      	str	r2, [sp, #0]
    38be:	eb02 0285 	add.w	r2, r2, r5, lsl #2
    38c2:	9201      	str	r2, [sp, #4]
    38c4:	4620      	mov	r0, r4
    38c6:	4619      	mov	r1, r3
    38c8:	4662      	mov	r2, r12
    38ca:	4673      	mov	r3, lr
    38cc:	f7ff ff92 	bl	37f4 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)>
    38d0:	1b04      	subs	r4, r0, r4
    38d2:	10a4      	asrs	r4, r4, #2
    38d4:	b13f      	cbz	r7, 38e6 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_float(char const*, unsigned int, wchar_t, wchar_t const*, wchar_t*, wchar_t*, int&) const+0x42>
    38d6:	6832      	ldr	r2, [r6, #0]
    38d8:	4639      	mov	r1, r7
    38da:	1b52      	subs	r2, r2, r5
    38dc:	f013 fc61 	bl	171a2 <wmemcpy>
    38e0:	6833      	ldr	r3, [r6, #0]
    38e2:	1b5d      	subs	r5, r3, r5
    38e4:	442c      	add	r4, r5
    38e6:	6034      	str	r4, [r6, #0]
    38e8:	b003      	add	sp, #12
    38ea:	bdf0      	pop	{r4, r5, r6, r7, pc}

000038ec <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_int(char const*, unsigned int, wchar_t, std::ios_base&, wchar_t*, wchar_t*, int&) const>:
    38ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    38ee:	460f      	mov	r7, r1
    38f0:	4616      	mov	r6, r2
    38f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    38f4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    38f6:	9200      	str	r2, [sp, #0]
    38f8:	6829      	ldr	r1, [r5, #0]
    38fa:	9c09      	ldr	r4, [sp, #36]	; 0x24
    38fc:	eb02 0281 	add.w	r2, r2, r1, lsl #2
    3900:	9201      	str	r2, [sp, #4]
    3902:	4619      	mov	r1, r3
    3904:	4620      	mov	r0, r4
    3906:	463a      	mov	r2, r7
    3908:	4633      	mov	r3, r6
    390a:	f7ff ff73 	bl	37f4 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)>
    390e:	1b00      	subs	r0, r0, r4
    3910:	1080      	asrs	r0, r0, #2
    3912:	6028      	str	r0, [r5, #0]
    3914:	b003      	add	sp, #12
    3916:	bdf0      	pop	{r4, r5, r6, r7, pc}

00003918 <int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)>:
    3918:	b530      	push	{r4, r5, lr}
    391a:	f89d 400c 	ldrb.w	r4, [sp, #12]
    391e:	b174      	cbz	r4, 393e <int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x26>
    3920:	4603      	mov	r3, r0
    3922:	240a      	movs	r4, #10
    3924:	fbb1 f5f4 	udiv	r5, r1, r4
    3928:	fb04 1115 	mls	r1, r4, r5, r1
    392c:	3104      	adds	r1, #4
    392e:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    3932:	f843 1d04 	str.w	r1, [r3, #-4]!
    3936:	4629      	mov	r1, r5
    3938:	2d00      	cmp	r5, #0
    393a:	d1f2      	bne.n	3922 <int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)+0xa>
    393c:	e01d      	b.n	397a <int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x62>
    393e:	f003 044a 	and.w	r4, r3, #74	; 0x4a
    3942:	2c40      	cmp	r4, #64	; 0x40
    3944:	d10a      	bne.n	395c <int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x44>
    3946:	4603      	mov	r3, r0
    3948:	f001 0407 	and.w	r4, r1, #7
    394c:	3404      	adds	r4, #4
    394e:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
    3952:	08c9      	lsrs	r1, r1, #3
    3954:	f843 4d04 	str.w	r4, [r3, #-4]!
    3958:	d1f6      	bne.n	3948 <int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x30>
    395a:	e00e      	b.n	397a <int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x62>
    395c:	f413 4f80 	tst.w	r3, #16384	; 0x4000
    3960:	4603      	mov	r3, r0
    3962:	bf14      	ite	ne
    3964:	2514      	movne	r5, #20
    3966:	2504      	moveq	r5, #4
    3968:	f001 040f 	and.w	r4, r1, #15
    396c:	442c      	add	r4, r5
    396e:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
    3972:	0909      	lsrs	r1, r1, #4
    3974:	f843 4d04 	str.w	r4, [r3, #-4]!
    3978:	d1f6      	bne.n	3968 <int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x50>
    397a:	1ac0      	subs	r0, r0, r3
    397c:	1080      	asrs	r0, r0, #2
    397e:	bd30      	pop	{r4, r5, pc}

00003980 <int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)>:
    3980:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3984:	4614      	mov	r4, r2
    3986:	f89d 2020 	ldrb.w	r2, [sp, #32]
    398a:	461d      	mov	r5, r3
    398c:	4607      	mov	r7, r0
    398e:	f8dd 8018 	ldr.w	r8, [sp, #24]
    3992:	9b07      	ldr	r3, [sp, #28]
    3994:	b1ba      	cbz	r2, 39c6 <int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x46>
    3996:	4606      	mov	r6, r0
    3998:	4620      	mov	r0, r4
    399a:	4629      	mov	r1, r5
    399c:	220a      	movs	r2, #10
    399e:	2300      	movs	r3, #0
    39a0:	f00e fd18 	bl	123d4 <__aeabi_uldivmod>
    39a4:	3204      	adds	r2, #4
    39a6:	f858 3022 	ldr.w	r3, [r8, r2, lsl #2]
    39aa:	4620      	mov	r0, r4
    39ac:	f846 3d04 	str.w	r3, [r6, #-4]!
    39b0:	4629      	mov	r1, r5
    39b2:	2300      	movs	r3, #0
    39b4:	220a      	movs	r2, #10
    39b6:	f00e fd0d 	bl	123d4 <__aeabi_uldivmod>
    39ba:	4604      	mov	r4, r0
    39bc:	460d      	mov	r5, r1
    39be:	ea54 0305 	orrs.w	r3, r4, r5
    39c2:	d1e9      	bne.n	3998 <int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x18>
    39c4:	e02b      	b.n	3a1e <int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x9e>
    39c6:	f003 024a 	and.w	r2, r3, #74	; 0x4a
    39ca:	2a40      	cmp	r2, #64	; 0x40
    39cc:	d111      	bne.n	39f2 <int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x72>
    39ce:	4606      	mov	r6, r0
    39d0:	f004 0307 	and.w	r3, r4, #7
    39d4:	3304      	adds	r3, #4
    39d6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
    39da:	08ea      	lsrs	r2, r5, #3
    39dc:	f846 3d04 	str.w	r3, [r6, #-4]!
    39e0:	08e3      	lsrs	r3, r4, #3
    39e2:	ea43 7345 	orr.w	r3, r3, r5, lsl #29
    39e6:	461c      	mov	r4, r3
    39e8:	4615      	mov	r5, r2
    39ea:	ea54 0305 	orrs.w	r3, r4, r5
    39ee:	d1ef      	bne.n	39d0 <int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x50>
    39f0:	e015      	b.n	3a1e <int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x9e>
    39f2:	4606      	mov	r6, r0
    39f4:	f413 4f80 	tst.w	r3, #16384	; 0x4000
    39f8:	bf14      	ite	ne
    39fa:	2114      	movne	r1, #20
    39fc:	2104      	moveq	r1, #4
    39fe:	f004 030f 	and.w	r3, r4, #15
    3a02:	440b      	add	r3, r1
    3a04:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
    3a08:	092a      	lsrs	r2, r5, #4
    3a0a:	f846 3d04 	str.w	r3, [r6, #-4]!
    3a0e:	0923      	lsrs	r3, r4, #4
    3a10:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
    3a14:	461c      	mov	r4, r3
    3a16:	4615      	mov	r5, r2
    3a18:	ea54 0305 	orrs.w	r3, r4, r5
    3a1c:	d1ef      	bne.n	39fe <int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)+0x7e>
    3a1e:	1bb8      	subs	r0, r7, r6
    3a20:	1080      	asrs	r0, r0, #2
    3a22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00003a26 <std::__ctype_abstract_base<wchar_t>::widen(char const*, char const*, wchar_t*) const>:
    3a26:	b510      	push	{r4, lr}
    3a28:	6804      	ldr	r4, [r0, #0]
    3a2a:	6ae4      	ldr	r4, [r4, #44]	; 0x2c
    3a2c:	46a4      	mov	r12, r4
    3a2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    3a32:	4760      	bx	r12

00003a34 <std::__moneypunct_cache<wchar_t, false>::_M_cache(std::locale const&)>:
    3a34:	2301      	movs	r3, #1
    3a36:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3a38:	4604      	mov	r4, r0
    3a3a:	f880 306c 	strb.w	r3, [r0, #108]	; 0x6c
    3a3e:	4608      	mov	r0, r1
    3a40:	460e      	mov	r6, r1
    3a42:	f7ff fe41 	bl	36c8 <std::moneypunct<wchar_t, false> const& std::use_facet<std::moneypunct<wchar_t, false> >(std::locale const&)>
    3a46:	4605      	mov	r5, r0
    3a48:	f7ff fba8 	bl	319c <std::moneypunct<wchar_t, false>::decimal_point() const>
    3a4c:	6160      	str	r0, [r4, #20]
    3a4e:	4628      	mov	r0, r5
    3a50:	f7ff fba7 	bl	31a2 <std::moneypunct<wchar_t, false>::thousands_sep() const>
    3a54:	61a0      	str	r0, [r4, #24]
    3a56:	4628      	mov	r0, r5
    3a58:	f7ff fbc2 	bl	31e0 <std::moneypunct<wchar_t, false>::frac_digits() const>
    3a5c:	4629      	mov	r1, r5
    3a5e:	6360      	str	r0, [r4, #52]	; 0x34
    3a60:	a801      	add	r0, sp, #4
    3a62:	f7ff fba1 	bl	31a8 <std::moneypunct<wchar_t, false>::grouping() const>
    3a66:	9b01      	ldr	r3, [sp, #4]
    3a68:	a801      	add	r0, sp, #4
    3a6a:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    3a6e:	60e3      	str	r3, [r4, #12]
    3a70:	f00a ff52 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    3a74:	68e0      	ldr	r0, [r4, #12]
    3a76:	f7fe fd5c 	bl	2532 <operator new[](unsigned int)>
    3a7a:	4607      	mov	r7, r0
    3a7c:	4629      	mov	r1, r5
    3a7e:	a801      	add	r0, sp, #4
    3a80:	f7ff fb92 	bl	31a8 <std::moneypunct<wchar_t, false>::grouping() const>
    3a84:	2300      	movs	r3, #0
    3a86:	4639      	mov	r1, r7
    3a88:	68e2      	ldr	r2, [r4, #12]
    3a8a:	a801      	add	r0, sp, #4
    3a8c:	f00a fe9c 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    3a90:	a801      	add	r0, sp, #4
    3a92:	f00a ff41 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    3a96:	68e3      	ldr	r3, [r4, #12]
    3a98:	60a7      	str	r7, [r4, #8]
    3a9a:	b12b      	cbz	r3, 3aa8 <std::__moneypunct_cache<wchar_t, false>::_M_cache(std::locale const&)+0x74>
    3a9c:	f997 3000 	ldrsb.w	r3, [r7]
    3aa0:	2b00      	cmp	r3, #0
    3aa2:	bfd4      	ite	le
    3aa4:	2300      	movle	r3, #0
    3aa6:	2301      	movgt	r3, #1
    3aa8:	4629      	mov	r1, r5
    3aaa:	7423      	strb	r3, [r4, #16]
    3aac:	a801      	add	r0, sp, #4
    3aae:	f7ff fb82 	bl	31b6 <std::moneypunct<wchar_t, false>::curr_symbol() const>
    3ab2:	9b01      	ldr	r3, [sp, #4]
    3ab4:	a801      	add	r0, sp, #4
    3ab6:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    3aba:	6223      	str	r3, [r4, #32]
    3abc:	f00b fac0 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3ac0:	6a20      	ldr	r0, [r4, #32]
    3ac2:	f1b0 5ffe 	cmp.w	r0, #532676608	; 0x1fc00000
    3ac6:	bf94      	ite	ls
    3ac8:	0080      	lslls	r0, r0, #2
    3aca:	f04f 30ff 	movhi.w	r0, #4294967295
    3ace:	f7fe fd30 	bl	2532 <operator new[](unsigned int)>
    3ad2:	4607      	mov	r7, r0
    3ad4:	4629      	mov	r1, r5
    3ad6:	a801      	add	r0, sp, #4
    3ad8:	f7ff fb6d 	bl	31b6 <std::moneypunct<wchar_t, false>::curr_symbol() const>
    3adc:	6a22      	ldr	r2, [r4, #32]
    3ade:	4639      	mov	r1, r7
    3ae0:	2300      	movs	r3, #0
    3ae2:	a801      	add	r0, sp, #4
    3ae4:	f00b fa22 	bl	ef2c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned int, unsigned int) const>
    3ae8:	a801      	add	r0, sp, #4
    3aea:	f00b faa9 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3aee:	4629      	mov	r1, r5
    3af0:	61e7      	str	r7, [r4, #28]
    3af2:	a801      	add	r0, sp, #4
    3af4:	f7ff fb66 	bl	31c4 <std::moneypunct<wchar_t, false>::positive_sign() const>
    3af8:	9b01      	ldr	r3, [sp, #4]
    3afa:	a801      	add	r0, sp, #4
    3afc:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    3b00:	62a3      	str	r3, [r4, #40]	; 0x28
    3b02:	f00b fa9d 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3b06:	6aa0      	ldr	r0, [r4, #40]	; 0x28
    3b08:	f1b0 5ffe 	cmp.w	r0, #532676608	; 0x1fc00000
    3b0c:	bf94      	ite	ls
    3b0e:	0080      	lslls	r0, r0, #2
    3b10:	f04f 30ff 	movhi.w	r0, #4294967295
    3b14:	f7fe fd0d 	bl	2532 <operator new[](unsigned int)>
    3b18:	4607      	mov	r7, r0
    3b1a:	4629      	mov	r1, r5
    3b1c:	a801      	add	r0, sp, #4
    3b1e:	f7ff fb51 	bl	31c4 <std::moneypunct<wchar_t, false>::positive_sign() const>
    3b22:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    3b24:	4639      	mov	r1, r7
    3b26:	2300      	movs	r3, #0
    3b28:	a801      	add	r0, sp, #4
    3b2a:	f00b f9ff 	bl	ef2c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned int, unsigned int) const>
    3b2e:	a801      	add	r0, sp, #4
    3b30:	f00b fa86 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3b34:	4629      	mov	r1, r5
    3b36:	6267      	str	r7, [r4, #36]	; 0x24
    3b38:	a801      	add	r0, sp, #4
    3b3a:	f7ff fb4a 	bl	31d2 <std::moneypunct<wchar_t, false>::negative_sign() const>
    3b3e:	9b01      	ldr	r3, [sp, #4]
    3b40:	a801      	add	r0, sp, #4
    3b42:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    3b46:	6323      	str	r3, [r4, #48]	; 0x30
    3b48:	f00b fa7a 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3b4c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    3b4e:	f1b0 5ffe 	cmp.w	r0, #532676608	; 0x1fc00000
    3b52:	bf94      	ite	ls
    3b54:	0080      	lslls	r0, r0, #2
    3b56:	f04f 30ff 	movhi.w	r0, #4294967295
    3b5a:	f7fe fcea 	bl	2532 <operator new[](unsigned int)>
    3b5e:	4607      	mov	r7, r0
    3b60:	4629      	mov	r1, r5
    3b62:	a801      	add	r0, sp, #4
    3b64:	f7ff fb35 	bl	31d2 <std::moneypunct<wchar_t, false>::negative_sign() const>
    3b68:	4639      	mov	r1, r7
    3b6a:	6b22      	ldr	r2, [r4, #48]	; 0x30
    3b6c:	2300      	movs	r3, #0
    3b6e:	a801      	add	r0, sp, #4
    3b70:	f00b f9dc 	bl	ef2c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned int, unsigned int) const>
    3b74:	a801      	add	r0, sp, #4
    3b76:	f00b fa63 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3b7a:	62e7      	str	r7, [r4, #44]	; 0x2c
    3b7c:	4628      	mov	r0, r5
    3b7e:	f7ff fb32 	bl	31e6 <std::moneypunct<wchar_t, false>::pos_format() const>
    3b82:	63a0      	str	r0, [r4, #56]	; 0x38
    3b84:	4628      	mov	r0, r5
    3b86:	f7ff fb45 	bl	3214 <std::moneypunct<wchar_t, false>::neg_format() const>
    3b8a:	63e0      	str	r0, [r4, #60]	; 0x3c
    3b8c:	4630      	mov	r0, r6
    3b8e:	f7ff fd05 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    3b92:	4b05      	ldr	r3, [pc, #20]	; (3ba8 <std::__moneypunct_cache<wchar_t, false>::_M_cache(std::locale const&)+0x174>)
    3b94:	6819      	ldr	r1, [r3, #0]
    3b96:	f104 0340 	add.w	r3, r4, #64	; 0x40
    3b9a:	f101 020b 	add.w	r2, r1, #11
    3b9e:	f7ff ff42 	bl	3a26 <std::__ctype_abstract_base<wchar_t>::widen(char const*, char const*, wchar_t*) const>
    3ba2:	b003      	add	sp, #12
    3ba4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3ba6:	bf00      	nop
    3ba8:	10000168 	.word	0x10000168

00003bac <std::__use_cache<std::__moneypunct_cache<wchar_t, false> >::operator()(std::locale const&) const [clone .isra.39]>:
    3bac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3bb0:	4605      	mov	r5, r0
    3bb2:	480f      	ldr	r0, [pc, #60]	; (3bf0 <std::__use_cache<std::__moneypunct_cache<wchar_t, false> >::operator()(std::locale const&) const [clone .isra.39]+0x44>)
    3bb4:	f00c faf2 	bl	1019c <std::locale::id::_M_id() const>
    3bb8:	682b      	ldr	r3, [r5, #0]
    3bba:	4604      	mov	r4, r0
    3bbc:	68de      	ldr	r6, [r3, #12]
    3bbe:	f856 8020 	ldr.w	r8, [r6, r0, lsl #2]
    3bc2:	f1b8 0f00 	cmp.w	r8, #0
    3bc6:	d10f      	bne.n	3be8 <std::__use_cache<std::__moneypunct_cache<wchar_t, false> >::operator()(std::locale const&) const [clone .isra.39]+0x3c>
    3bc8:	2070      	movs	r0, #112	; 0x70
    3bca:	f7fe fc8f 	bl	24ec <operator new(unsigned int)>
    3bce:	4607      	mov	r7, r0
    3bd0:	4641      	mov	r1, r8
    3bd2:	f7ff fb9d 	bl	3310 <std::__moneypunct_cache<wchar_t, false>::__moneypunct_cache(unsigned int)>
    3bd6:	4638      	mov	r0, r7
    3bd8:	4629      	mov	r1, r5
    3bda:	f7ff ff2b 	bl	3a34 <std::__moneypunct_cache<wchar_t, false>::_M_cache(std::locale const&)>
    3bde:	6828      	ldr	r0, [r5, #0]
    3be0:	4639      	mov	r1, r7
    3be2:	4622      	mov	r2, r4
    3be4:	f00c fab6 	bl	10154 <std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned int)>
    3be8:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
    3bec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3bf0:	10000690 	.word	0x10000690

00003bf4 <std::__moneypunct_cache<wchar_t, true>::_M_cache(std::locale const&)>:
    3bf4:	2301      	movs	r3, #1
    3bf6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3bf8:	4604      	mov	r4, r0
    3bfa:	f880 306c 	strb.w	r3, [r0, #108]	; 0x6c
    3bfe:	4608      	mov	r0, r1
    3c00:	460e      	mov	r6, r1
    3c02:	f7ff fd43 	bl	368c <std::moneypunct<wchar_t, true> const& std::use_facet<std::moneypunct<wchar_t, true> >(std::locale const&)>
    3c06:	4605      	mov	r5, r0
    3c08:	f7ff fb2e 	bl	3268 <std::moneypunct<wchar_t, true>::decimal_point() const>
    3c0c:	6160      	str	r0, [r4, #20]
    3c0e:	4628      	mov	r0, r5
    3c10:	f7ff fb2d 	bl	326e <std::moneypunct<wchar_t, true>::thousands_sep() const>
    3c14:	61a0      	str	r0, [r4, #24]
    3c16:	4628      	mov	r0, r5
    3c18:	f7ff fb48 	bl	32ac <std::moneypunct<wchar_t, true>::frac_digits() const>
    3c1c:	4629      	mov	r1, r5
    3c1e:	6360      	str	r0, [r4, #52]	; 0x34
    3c20:	a801      	add	r0, sp, #4
    3c22:	f7ff fb27 	bl	3274 <std::moneypunct<wchar_t, true>::grouping() const>
    3c26:	9b01      	ldr	r3, [sp, #4]
    3c28:	a801      	add	r0, sp, #4
    3c2a:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    3c2e:	60e3      	str	r3, [r4, #12]
    3c30:	f00a fe72 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    3c34:	68e0      	ldr	r0, [r4, #12]
    3c36:	f7fe fc7c 	bl	2532 <operator new[](unsigned int)>
    3c3a:	4607      	mov	r7, r0
    3c3c:	4629      	mov	r1, r5
    3c3e:	a801      	add	r0, sp, #4
    3c40:	f7ff fb18 	bl	3274 <std::moneypunct<wchar_t, true>::grouping() const>
    3c44:	2300      	movs	r3, #0
    3c46:	4639      	mov	r1, r7
    3c48:	68e2      	ldr	r2, [r4, #12]
    3c4a:	a801      	add	r0, sp, #4
    3c4c:	f00a fdbc 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    3c50:	a801      	add	r0, sp, #4
    3c52:	f00a fe61 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    3c56:	68e3      	ldr	r3, [r4, #12]
    3c58:	60a7      	str	r7, [r4, #8]
    3c5a:	b12b      	cbz	r3, 3c68 <std::__moneypunct_cache<wchar_t, true>::_M_cache(std::locale const&)+0x74>
    3c5c:	f997 3000 	ldrsb.w	r3, [r7]
    3c60:	2b00      	cmp	r3, #0
    3c62:	bfd4      	ite	le
    3c64:	2300      	movle	r3, #0
    3c66:	2301      	movgt	r3, #1
    3c68:	4629      	mov	r1, r5
    3c6a:	7423      	strb	r3, [r4, #16]
    3c6c:	a801      	add	r0, sp, #4
    3c6e:	f7ff fb08 	bl	3282 <std::moneypunct<wchar_t, true>::curr_symbol() const>
    3c72:	9b01      	ldr	r3, [sp, #4]
    3c74:	a801      	add	r0, sp, #4
    3c76:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    3c7a:	6223      	str	r3, [r4, #32]
    3c7c:	f00b f9e0 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3c80:	6a20      	ldr	r0, [r4, #32]
    3c82:	f1b0 5ffe 	cmp.w	r0, #532676608	; 0x1fc00000
    3c86:	bf94      	ite	ls
    3c88:	0080      	lslls	r0, r0, #2
    3c8a:	f04f 30ff 	movhi.w	r0, #4294967295
    3c8e:	f7fe fc50 	bl	2532 <operator new[](unsigned int)>
    3c92:	4607      	mov	r7, r0
    3c94:	4629      	mov	r1, r5
    3c96:	a801      	add	r0, sp, #4
    3c98:	f7ff faf3 	bl	3282 <std::moneypunct<wchar_t, true>::curr_symbol() const>
    3c9c:	6a22      	ldr	r2, [r4, #32]
    3c9e:	4639      	mov	r1, r7
    3ca0:	2300      	movs	r3, #0
    3ca2:	a801      	add	r0, sp, #4
    3ca4:	f00b f942 	bl	ef2c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned int, unsigned int) const>
    3ca8:	a801      	add	r0, sp, #4
    3caa:	f00b f9c9 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3cae:	4629      	mov	r1, r5
    3cb0:	61e7      	str	r7, [r4, #28]
    3cb2:	a801      	add	r0, sp, #4
    3cb4:	f7ff faec 	bl	3290 <std::moneypunct<wchar_t, true>::positive_sign() const>
    3cb8:	9b01      	ldr	r3, [sp, #4]
    3cba:	a801      	add	r0, sp, #4
    3cbc:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    3cc0:	62a3      	str	r3, [r4, #40]	; 0x28
    3cc2:	f00b f9bd 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3cc6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
    3cc8:	f1b0 5ffe 	cmp.w	r0, #532676608	; 0x1fc00000
    3ccc:	bf94      	ite	ls
    3cce:	0080      	lslls	r0, r0, #2
    3cd0:	f04f 30ff 	movhi.w	r0, #4294967295
    3cd4:	f7fe fc2d 	bl	2532 <operator new[](unsigned int)>
    3cd8:	4607      	mov	r7, r0
    3cda:	4629      	mov	r1, r5
    3cdc:	a801      	add	r0, sp, #4
    3cde:	f7ff fad7 	bl	3290 <std::moneypunct<wchar_t, true>::positive_sign() const>
    3ce2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    3ce4:	4639      	mov	r1, r7
    3ce6:	2300      	movs	r3, #0
    3ce8:	a801      	add	r0, sp, #4
    3cea:	f00b f91f 	bl	ef2c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned int, unsigned int) const>
    3cee:	a801      	add	r0, sp, #4
    3cf0:	f00b f9a6 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3cf4:	4629      	mov	r1, r5
    3cf6:	6267      	str	r7, [r4, #36]	; 0x24
    3cf8:	a801      	add	r0, sp, #4
    3cfa:	f7ff fad0 	bl	329e <std::moneypunct<wchar_t, true>::negative_sign() const>
    3cfe:	9b01      	ldr	r3, [sp, #4]
    3d00:	a801      	add	r0, sp, #4
    3d02:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    3d06:	6323      	str	r3, [r4, #48]	; 0x30
    3d08:	f00b f99a 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3d0c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    3d0e:	f1b0 5ffe 	cmp.w	r0, #532676608	; 0x1fc00000
    3d12:	bf94      	ite	ls
    3d14:	0080      	lslls	r0, r0, #2
    3d16:	f04f 30ff 	movhi.w	r0, #4294967295
    3d1a:	f7fe fc0a 	bl	2532 <operator new[](unsigned int)>
    3d1e:	4607      	mov	r7, r0
    3d20:	4629      	mov	r1, r5
    3d22:	a801      	add	r0, sp, #4
    3d24:	f7ff fabb 	bl	329e <std::moneypunct<wchar_t, true>::negative_sign() const>
    3d28:	4639      	mov	r1, r7
    3d2a:	6b22      	ldr	r2, [r4, #48]	; 0x30
    3d2c:	2300      	movs	r3, #0
    3d2e:	a801      	add	r0, sp, #4
    3d30:	f00b f8fc 	bl	ef2c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned int, unsigned int) const>
    3d34:	a801      	add	r0, sp, #4
    3d36:	f00b f983 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3d3a:	62e7      	str	r7, [r4, #44]	; 0x2c
    3d3c:	4628      	mov	r0, r5
    3d3e:	f7ff fab8 	bl	32b2 <std::moneypunct<wchar_t, true>::pos_format() const>
    3d42:	63a0      	str	r0, [r4, #56]	; 0x38
    3d44:	4628      	mov	r0, r5
    3d46:	f7ff facb 	bl	32e0 <std::moneypunct<wchar_t, true>::neg_format() const>
    3d4a:	63e0      	str	r0, [r4, #60]	; 0x3c
    3d4c:	4630      	mov	r0, r6
    3d4e:	f7ff fc25 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    3d52:	4b05      	ldr	r3, [pc, #20]	; (3d68 <std::__moneypunct_cache<wchar_t, true>::_M_cache(std::locale const&)+0x174>)
    3d54:	6819      	ldr	r1, [r3, #0]
    3d56:	f104 0340 	add.w	r3, r4, #64	; 0x40
    3d5a:	f101 020b 	add.w	r2, r1, #11
    3d5e:	f7ff fe62 	bl	3a26 <std::__ctype_abstract_base<wchar_t>::widen(char const*, char const*, wchar_t*) const>
    3d62:	b003      	add	sp, #12
    3d64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3d66:	bf00      	nop
    3d68:	10000168 	.word	0x10000168

00003d6c <std::__use_cache<std::__moneypunct_cache<wchar_t, true> >::operator()(std::locale const&) const [clone .isra.40]>:
    3d6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3d70:	4605      	mov	r5, r0
    3d72:	480f      	ldr	r0, [pc, #60]	; (3db0 <std::__use_cache<std::__moneypunct_cache<wchar_t, true> >::operator()(std::locale const&) const [clone .isra.40]+0x44>)
    3d74:	f00c fa12 	bl	1019c <std::locale::id::_M_id() const>
    3d78:	682b      	ldr	r3, [r5, #0]
    3d7a:	4604      	mov	r4, r0
    3d7c:	68de      	ldr	r6, [r3, #12]
    3d7e:	f856 8020 	ldr.w	r8, [r6, r0, lsl #2]
    3d82:	f1b8 0f00 	cmp.w	r8, #0
    3d86:	d10f      	bne.n	3da8 <std::__use_cache<std::__moneypunct_cache<wchar_t, true> >::operator()(std::locale const&) const [clone .isra.40]+0x3c>
    3d88:	2070      	movs	r0, #112	; 0x70
    3d8a:	f7fe fbaf 	bl	24ec <operator new(unsigned int)>
    3d8e:	4607      	mov	r7, r0
    3d90:	4641      	mov	r1, r8
    3d92:	f7ff fad7 	bl	3344 <std::__moneypunct_cache<wchar_t, true>::__moneypunct_cache(unsigned int)>
    3d96:	4638      	mov	r0, r7
    3d98:	4629      	mov	r1, r5
    3d9a:	f7ff ff2b 	bl	3bf4 <std::__moneypunct_cache<wchar_t, true>::_M_cache(std::locale const&)>
    3d9e:	6828      	ldr	r0, [r5, #0]
    3da0:	4639      	mov	r1, r7
    3da2:	4622      	mov	r2, r4
    3da4:	f00c f9d6 	bl	10154 <std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned int)>
    3da8:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
    3dac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3db0:	1000068c 	.word	0x1000068c

00003db4 <std::__numpunct_cache<wchar_t>::_M_cache(std::locale const&)>:
    3db4:	2301      	movs	r3, #1
    3db6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3db8:	4604      	mov	r4, r0
    3dba:	f880 3124 	strb.w	r3, [r0, #292]	; 0x124
    3dbe:	4608      	mov	r0, r1
    3dc0:	460e      	mov	r6, r1
    3dc2:	f7ff fc09 	bl	35d8 <std::numpunct<wchar_t> const& std::use_facet<std::numpunct<wchar_t> >(std::locale const&)>
    3dc6:	4605      	mov	r5, r0
    3dc8:	a801      	add	r0, sp, #4
    3dca:	4629      	mov	r1, r5
    3dcc:	f7ff faea 	bl	33a4 <std::numpunct<wchar_t>::grouping() const>
    3dd0:	9b01      	ldr	r3, [sp, #4]
    3dd2:	a801      	add	r0, sp, #4
    3dd4:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    3dd8:	60e3      	str	r3, [r4, #12]
    3dda:	f00a fd9d 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    3dde:	68e0      	ldr	r0, [r4, #12]
    3de0:	f7fe fba7 	bl	2532 <operator new[](unsigned int)>
    3de4:	4607      	mov	r7, r0
    3de6:	4629      	mov	r1, r5
    3de8:	a801      	add	r0, sp, #4
    3dea:	f7ff fadb 	bl	33a4 <std::numpunct<wchar_t>::grouping() const>
    3dee:	2300      	movs	r3, #0
    3df0:	4639      	mov	r1, r7
    3df2:	68e2      	ldr	r2, [r4, #12]
    3df4:	a801      	add	r0, sp, #4
    3df6:	f00a fce7 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    3dfa:	a801      	add	r0, sp, #4
    3dfc:	f00a fd8c 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    3e00:	68e3      	ldr	r3, [r4, #12]
    3e02:	60a7      	str	r7, [r4, #8]
    3e04:	b12b      	cbz	r3, 3e12 <std::__numpunct_cache<wchar_t>::_M_cache(std::locale const&)+0x5e>
    3e06:	f997 3000 	ldrsb.w	r3, [r7]
    3e0a:	2b00      	cmp	r3, #0
    3e0c:	bfd4      	ite	le
    3e0e:	2300      	movle	r3, #0
    3e10:	2301      	movgt	r3, #1
    3e12:	4629      	mov	r1, r5
    3e14:	7423      	strb	r3, [r4, #16]
    3e16:	a801      	add	r0, sp, #4
    3e18:	f7ff facb 	bl	33b2 <std::numpunct<wchar_t>::truename() const>
    3e1c:	9b01      	ldr	r3, [sp, #4]
    3e1e:	a801      	add	r0, sp, #4
    3e20:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    3e24:	61a3      	str	r3, [r4, #24]
    3e26:	f00b f90b 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3e2a:	69a0      	ldr	r0, [r4, #24]
    3e2c:	f1b0 5ffe 	cmp.w	r0, #532676608	; 0x1fc00000
    3e30:	bf94      	ite	ls
    3e32:	0080      	lslls	r0, r0, #2
    3e34:	f04f 30ff 	movhi.w	r0, #4294967295
    3e38:	f7fe fb7b 	bl	2532 <operator new[](unsigned int)>
    3e3c:	4607      	mov	r7, r0
    3e3e:	4629      	mov	r1, r5
    3e40:	a801      	add	r0, sp, #4
    3e42:	f7ff fab6 	bl	33b2 <std::numpunct<wchar_t>::truename() const>
    3e46:	69a2      	ldr	r2, [r4, #24]
    3e48:	4639      	mov	r1, r7
    3e4a:	2300      	movs	r3, #0
    3e4c:	a801      	add	r0, sp, #4
    3e4e:	f00b f86d 	bl	ef2c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned int, unsigned int) const>
    3e52:	a801      	add	r0, sp, #4
    3e54:	f00b f8f4 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3e58:	4629      	mov	r1, r5
    3e5a:	6167      	str	r7, [r4, #20]
    3e5c:	a801      	add	r0, sp, #4
    3e5e:	f7ff faaf 	bl	33c0 <std::numpunct<wchar_t>::falsename() const>
    3e62:	9b01      	ldr	r3, [sp, #4]
    3e64:	a801      	add	r0, sp, #4
    3e66:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    3e6a:	6223      	str	r3, [r4, #32]
    3e6c:	f00b f8e8 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3e70:	6a20      	ldr	r0, [r4, #32]
    3e72:	f1b0 5ffe 	cmp.w	r0, #532676608	; 0x1fc00000
    3e76:	bf94      	ite	ls
    3e78:	0080      	lslls	r0, r0, #2
    3e7a:	f04f 30ff 	movhi.w	r0, #4294967295
    3e7e:	f7fe fb58 	bl	2532 <operator new[](unsigned int)>
    3e82:	4607      	mov	r7, r0
    3e84:	4629      	mov	r1, r5
    3e86:	a801      	add	r0, sp, #4
    3e88:	f7ff fa9a 	bl	33c0 <std::numpunct<wchar_t>::falsename() const>
    3e8c:	4639      	mov	r1, r7
    3e8e:	6a22      	ldr	r2, [r4, #32]
    3e90:	2300      	movs	r3, #0
    3e92:	a801      	add	r0, sp, #4
    3e94:	f00b f84a 	bl	ef2c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned int, unsigned int) const>
    3e98:	a801      	add	r0, sp, #4
    3e9a:	f00b f8d1 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    3e9e:	61e7      	str	r7, [r4, #28]
    3ea0:	4628      	mov	r0, r5
    3ea2:	f7ff fa79 	bl	3398 <std::numpunct<wchar_t>::decimal_point() const>
    3ea6:	6260      	str	r0, [r4, #36]	; 0x24
    3ea8:	4628      	mov	r0, r5
    3eaa:	f7ff fa78 	bl	339e <std::numpunct<wchar_t>::thousands_sep() const>
    3eae:	62a0      	str	r0, [r4, #40]	; 0x28
    3eb0:	4630      	mov	r0, r6
    3eb2:	f7ff fb73 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    3eb6:	4605      	mov	r5, r0
    3eb8:	4b09      	ldr	r3, [pc, #36]	; (3ee0 <std::__numpunct_cache<wchar_t>::_M_cache(std::locale const&)+0x12c>)
    3eba:	6819      	ldr	r1, [r3, #0]
    3ebc:	f104 032c 	add.w	r3, r4, #44	; 0x2c
    3ec0:	f101 0224 	add.w	r2, r1, #36	; 0x24
    3ec4:	f7ff fdaf 	bl	3a26 <std::__ctype_abstract_base<wchar_t>::widen(char const*, char const*, wchar_t*) const>
    3ec8:	4b06      	ldr	r3, [pc, #24]	; (3ee4 <std::__numpunct_cache<wchar_t>::_M_cache(std::locale const&)+0x130>)
    3eca:	4628      	mov	r0, r5
    3ecc:	6819      	ldr	r1, [r3, #0]
    3ece:	f104 03bc 	add.w	r3, r4, #188	; 0xbc
    3ed2:	f101 021a 	add.w	r2, r1, #26
    3ed6:	f7ff fda6 	bl	3a26 <std::__ctype_abstract_base<wchar_t>::widen(char const*, char const*, wchar_t*) const>
    3eda:	b003      	add	sp, #12
    3edc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3ede:	bf00      	nop
    3ee0:	1000016c 	.word	0x1000016c
    3ee4:	10000164 	.word	0x10000164

00003ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>:
    3ee8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3eec:	4605      	mov	r5, r0
    3eee:	4810      	ldr	r0, [pc, #64]	; (3f30 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]+0x48>)
    3ef0:	f00c f954 	bl	1019c <std::locale::id::_M_id() const>
    3ef4:	682b      	ldr	r3, [r5, #0]
    3ef6:	4604      	mov	r4, r0
    3ef8:	68de      	ldr	r6, [r3, #12]
    3efa:	f856 8020 	ldr.w	r8, [r6, r0, lsl #2]
    3efe:	f1b8 0f00 	cmp.w	r8, #0
    3f02:	d110      	bne.n	3f26 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]+0x3e>
    3f04:	f44f 7094 	mov.w	r0, #296	; 0x128
    3f08:	f7fe faf0 	bl	24ec <operator new(unsigned int)>
    3f0c:	4607      	mov	r7, r0
    3f0e:	4641      	mov	r1, r8
    3f10:	f7ff fa5e 	bl	33d0 <std::__numpunct_cache<wchar_t>::__numpunct_cache(unsigned int)>
    3f14:	4638      	mov	r0, r7
    3f16:	4629      	mov	r1, r5
    3f18:	f7ff ff4c 	bl	3db4 <std::__numpunct_cache<wchar_t>::_M_cache(std::locale const&)>
    3f1c:	6828      	ldr	r0, [r5, #0]
    3f1e:	4639      	mov	r1, r7
    3f20:	4622      	mov	r2, r4
    3f22:	f00c f917 	bl	10154 <std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned int)>
    3f26:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
    3f2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3f2e:	bf00      	nop
    3f30:	10000680 	.word	0x10000680

00003f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>:
    3f34:	b510      	push	{r4, lr}
    3f36:	4604      	mov	r4, r0
    3f38:	6800      	ldr	r0, [r0, #0]
    3f3a:	b120      	cbz	r0, 3f46 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()+0x12>
    3f3c:	f00a faa7 	bl	e48e <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sbumpc()>
    3f40:	f04f 33ff 	mov.w	r3, #4294967295
    3f44:	6063      	str	r3, [r4, #4]
    3f46:	4620      	mov	r0, r4
    3f48:	bd10      	pop	{r4, pc}

00003f4a <std::__ctype_abstract_base<wchar_t>::is(char, wchar_t) const>:
    3f4a:	6803      	ldr	r3, [r0, #0]
    3f4c:	689b      	ldr	r3, [r3, #8]
    3f4e:	4718      	bx	r3

00003f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>:
    3f50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3f52:	e88d 0006 	stmia.w	sp, {r1, r2}
    3f56:	f89d 5004 	ldrb.w	r5, [sp, #4]
    3f5a:	4606      	mov	r6, r0
    3f5c:	466c      	mov	r4, sp
    3f5e:	9f08      	ldr	r7, [sp, #32]
    3f60:	b93d      	cbnz	r5, 3f72 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)+0x22>
    3f62:	4608      	mov	r0, r1
    3f64:	463a      	mov	r2, r7
    3f66:	4619      	mov	r1, r3
    3f68:	f00a faa6 	bl	e4b8 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sputn(wchar_t const*, int)>
    3f6c:	42b8      	cmp	r0, r7
    3f6e:	bf18      	it	ne
    3f70:	2501      	movne	r5, #1
    3f72:	f88d 5004 	strb.w	r5, [sp, #4]
    3f76:	e894 0003 	ldmia.w	r4, {r0, r1}
    3f7a:	e886 0003 	stmia.w	r6, {r0, r1}
    3f7e:	4630      	mov	r0, r6
    3f80:	b003      	add	sp, #12
    3f82:	bdf0      	pop	{r4, r5, r6, r7, pc}

00003f84 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const>:
    3f84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    3f88:	b08f      	sub	sp, #60	; 0x3c
    3f8a:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
    3f8e:	a906      	add	r1, sp, #24
    3f90:	f108 046c 	add.w	r4, r8, #108	; 0x6c
    3f94:	9005      	str	r0, [sp, #20]
    3f96:	4620      	mov	r0, r4
    3f98:	e881 000c 	stmia.w	r1, {r2, r3}
    3f9c:	f7ff fafe 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    3fa0:	4607      	mov	r7, r0
    3fa2:	4620      	mov	r0, r4
    3fa4:	f7ff fee2 	bl	3d6c <std::__use_cache<std::__moneypunct_cache<wchar_t, true> >::operator()(std::locale const&) const [clone .isra.40]>
    3fa8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    3faa:	4604      	mov	r4, r0
    3fac:	681d      	ldr	r5, [r3, #0]
    3fae:	6c03      	ldr	r3, [r0, #64]	; 0x40
    3fb0:	682a      	ldr	r2, [r5, #0]
    3fb2:	429a      	cmp	r2, r3
    3fb4:	f855 3c0c 	ldr.w	r3, [r5, #-12]
    3fb8:	d006      	beq.n	3fc8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x44>
    3fba:	6b82      	ldr	r2, [r0, #56]	; 0x38
    3fbc:	f8d0 9028 	ldr.w	r9, [r0, #40]	; 0x28
    3fc0:	9209      	str	r2, [sp, #36]	; 0x24
    3fc2:	6a42      	ldr	r2, [r0, #36]	; 0x24
    3fc4:	9203      	str	r2, [sp, #12]
    3fc6:	e007      	b.n	3fd8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x54>
    3fc8:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
    3fca:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
    3fce:	9209      	str	r2, [sp, #36]	; 0x24
    3fd0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
    3fd2:	9203      	str	r2, [sp, #12]
    3fd4:	b103      	cbz	r3, 3fd8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x54>
    3fd6:	3504      	adds	r5, #4
    3fd8:	683a      	ldr	r2, [r7, #0]
    3fda:	4638      	mov	r0, r7
    3fdc:	6956      	ldr	r6, [r2, #20]
    3fde:	2104      	movs	r1, #4
    3fe0:	462a      	mov	r2, r5
    3fe2:	eb05 0383 	add.w	r3, r5, r3, lsl #2
    3fe6:	47b0      	blx	r6
    3fe8:	1b40      	subs	r0, r0, r5
    3fea:	1087      	asrs	r7, r0, #2
    3fec:	f000 80dd 	beq.w	41aa <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x226>
    3ff0:	4b74      	ldr	r3, [pc, #464]	; (41c4 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x240>)
    3ff2:	f10d 0a38 	add.w	r10, sp, #56	; 0x38
    3ff6:	f84a 3d10 	str.w	r3, [r10, #-16]!
    3ffa:	4650      	mov	r0, r10
    3ffc:	0079      	lsls	r1, r7, #1
    3ffe:	f00b f95e 	bl	f2be <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)>
    4002:	6b63      	ldr	r3, [r4, #52]	; 0x34
    4004:	1afe      	subs	r6, r7, r3
    4006:	2e00      	cmp	r6, #0
    4008:	dd29      	ble.n	405e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0xda>
    400a:	ea36 0623 	bics.w	r6, r6, r3, asr #32
    400e:	bf28      	it	cs
    4010:	463e      	movcs	r6, r7
    4012:	68e3      	ldr	r3, [r4, #12]
    4014:	4650      	mov	r0, r10
    4016:	b1f3      	cbz	r3, 4056 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0xd2>
    4018:	0071      	lsls	r1, r6, #1
    401a:	2200      	movs	r2, #0
    401c:	f00b f8c0 	bl	f1a0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(unsigned int, wchar_t)>
    4020:	4650      	mov	r0, r10
    4022:	f00b f87f 	bl	f124 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak()>
    4026:	eb05 0386 	add.w	r3, r5, r6, lsl #2
    402a:	9500      	str	r5, [sp, #0]
    402c:	9301      	str	r3, [sp, #4]
    402e:	69a1      	ldr	r1, [r4, #24]
    4030:	68a2      	ldr	r2, [r4, #8]
    4032:	68e3      	ldr	r3, [r4, #12]
    4034:	980a      	ldr	r0, [sp, #40]	; 0x28
    4036:	f7ff fbdd 	bl	37f4 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)>
    403a:	4683      	mov	r11, r0
    403c:	4650      	mov	r0, r10
    403e:	f00b f871 	bl	f124 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak()>
    4042:	990a      	ldr	r1, [sp, #40]	; 0x28
    4044:	4650      	mov	r0, r10
    4046:	ebc1 010b 	rsb	r1, r1, r11
    404a:	1089      	asrs	r1, r1, #2
    404c:	f04f 32ff 	mov.w	r2, #4294967295
    4050:	f00b f872 	bl	f138 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::erase(unsigned int, unsigned int)>
    4054:	e003      	b.n	405e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0xda>
    4056:	4629      	mov	r1, r5
    4058:	4632      	mov	r2, r6
    405a:	f00b f8d1 	bl	f200 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned int)>
    405e:	6b63      	ldr	r3, [r4, #52]	; 0x34
    4060:	2b00      	cmp	r3, #0
    4062:	dd13      	ble.n	408c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x108>
    4064:	a80a      	add	r0, sp, #40	; 0x28
    4066:	6961      	ldr	r1, [r4, #20]
    4068:	f00b fa0b 	bl	f482 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)>
    406c:	2e00      	cmp	r6, #0
    406e:	a80a      	add	r0, sp, #40	; 0x28
    4070:	db03      	blt.n	407a <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0xf6>
    4072:	eb05 0186 	add.w	r1, r5, r6, lsl #2
    4076:	6b62      	ldr	r2, [r4, #52]	; 0x34
    4078:	e006      	b.n	4088 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x104>
    407a:	4271      	negs	r1, r6
    407c:	6c62      	ldr	r2, [r4, #68]	; 0x44
    407e:	f00b f9d3 	bl	f428 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t)>
    4082:	4629      	mov	r1, r5
    4084:	463a      	mov	r2, r7
    4086:	a80a      	add	r0, sp, #40	; 0x28
    4088:	f00b f966 	bl	f358 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)>
    408c:	f8d8 300c 	ldr.w	r3, [r8, #12]
    4090:	ae0e      	add	r6, sp, #56	; 0x38
    4092:	f003 02b0 	and.w	r2, r3, #176	; 0xb0
    4096:	9204      	str	r2, [sp, #16]
    4098:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    409a:	f413 7300 	ands.w	r3, r3, #512	; 0x200
    409e:	f852 5c0c 	ldr.w	r5, [r2, #-12]
    40a2:	bf18      	it	ne
    40a4:	6a23      	ldrne	r3, [r4, #32]
    40a6:	444d      	add	r5, r9
    40a8:	441d      	add	r5, r3
    40aa:	4b46      	ldr	r3, [pc, #280]	; (41c4 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x240>)
    40ac:	0069      	lsls	r1, r5, #1
    40ae:	f846 3d0c 	str.w	r3, [r6, #-12]!
    40b2:	4630      	mov	r0, r6
    40b4:	f00b f903 	bl	f2be <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)>
    40b8:	9b04      	ldr	r3, [sp, #16]
    40ba:	f8d8 7008 	ldr.w	r7, [r8, #8]
    40be:	2b10      	cmp	r3, #16
    40c0:	d106      	bne.n	40d0 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x14c>
    40c2:	42bd      	cmp	r5, r7
    40c4:	bf2c      	ite	cs
    40c6:	f04f 0b00 	movcs.w	r11, #0
    40ca:	f04f 0b01 	movcc.w	r11, #1
    40ce:	e001      	b.n	40d4 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x150>
    40d0:	f04f 0b00 	mov.w	r11, #0
    40d4:	f04f 0a00 	mov.w	r10, #0
    40d8:	ab09      	add	r3, sp, #36	; 0x24
    40da:	f81a 3003 	ldrb.w	r3, [r10, r3]
    40de:	2b04      	cmp	r3, #4
    40e0:	d82a      	bhi.n	4138 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    40e2:	e8df f003 	tbb	[pc, r3]
    40e6:	1921      	.short	0x1921
    40e8:	0d03      	.short	0x0d03
    40ea:	14          	.byte	0x14
    40eb:	00          	.byte	0x00
    40ec:	f8d8 300c 	ldr.w	r3, [r8, #12]
    40f0:	059b      	lsls	r3, r3, #22
    40f2:	d521      	bpl.n	4138 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    40f4:	a80b      	add	r0, sp, #44	; 0x2c
    40f6:	69e1      	ldr	r1, [r4, #28]
    40f8:	6a22      	ldr	r2, [r4, #32]
    40fa:	f00b f92d 	bl	f358 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)>
    40fe:	e01b      	b.n	4138 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    4100:	f1b9 0f00 	cmp.w	r9, #0
    4104:	d018      	beq.n	4138 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    4106:	9b03      	ldr	r3, [sp, #12]
    4108:	4630      	mov	r0, r6
    410a:	6819      	ldr	r1, [r3, #0]
    410c:	e009      	b.n	4122 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x19e>
    410e:	4630      	mov	r0, r6
    4110:	a90a      	add	r1, sp, #40	; 0x28
    4112:	f00b f91d 	bl	f350 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::operator+=(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)>
    4116:	e00f      	b.n	4138 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    4118:	f1bb 0f00 	cmp.w	r11, #0
    411c:	d107      	bne.n	412e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1aa>
    411e:	4630      	mov	r0, r6
    4120:	9919      	ldr	r1, [sp, #100]	; 0x64
    4122:	f00b f9ae 	bl	f482 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)>
    4126:	e007      	b.n	4138 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    4128:	f1bb 0f00 	cmp.w	r11, #0
    412c:	d004      	beq.n	4138 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    412e:	a80b      	add	r0, sp, #44	; 0x2c
    4130:	1b79      	subs	r1, r7, r5
    4132:	9a19      	ldr	r2, [sp, #100]	; 0x64
    4134:	f00b f978 	bl	f428 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t)>
    4138:	f10a 0a01 	add.w	r10, r10, #1
    413c:	f1ba 0f04 	cmp.w	r10, #4
    4140:	d1ca      	bne.n	40d8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x154>
    4142:	f1b9 0f01 	cmp.w	r9, #1
    4146:	d906      	bls.n	4156 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1d2>
    4148:	9903      	ldr	r1, [sp, #12]
    414a:	4630      	mov	r0, r6
    414c:	3104      	adds	r1, #4
    414e:	f109 32ff 	add.w	r2, r9, #4294967295
    4152:	f00b f901 	bl	f358 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)>
    4156:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4158:	f853 2c0c 	ldr.w	r2, [r3, #-12]
    415c:	4297      	cmp	r7, r2
    415e:	d90f      	bls.n	4180 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1fc>
    4160:	9b04      	ldr	r3, [sp, #16]
    4162:	4630      	mov	r0, r6
    4164:	2b20      	cmp	r3, #32
    4166:	eba7 0202 	sub.w	r2, r7, r2
    416a:	d104      	bne.n	4176 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1f2>
    416c:	4611      	mov	r1, r2
    416e:	9a19      	ldr	r2, [sp, #100]	; 0x64
    4170:	f00b f95a 	bl	f428 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t)>
    4174:	e005      	b.n	4182 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1fe>
    4176:	2100      	movs	r1, #0
    4178:	9b19      	ldr	r3, [sp, #100]	; 0x64
    417a:	f00b f81d 	bl	f1b8 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::insert(unsigned int, unsigned int, wchar_t)>
    417e:	e000      	b.n	4182 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1fe>
    4180:	4617      	mov	r7, r2
    4182:	ac0c      	add	r4, sp, #48	; 0x30
    4184:	9700      	str	r7, [sp, #0]
    4186:	ab06      	add	r3, sp, #24
    4188:	e893 0006 	ldmia.w	r3, {r1, r2}
    418c:	4620      	mov	r0, r4
    418e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4190:	f7ff fede 	bl	3f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>
    4194:	e894 0003 	ldmia.w	r4, {r0, r1}
    4198:	9006      	str	r0, [sp, #24]
    419a:	4630      	mov	r0, r6
    419c:	f88d 101c 	strb.w	r1, [sp, #28]
    41a0:	f00a ff4e 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    41a4:	a80a      	add	r0, sp, #40	; 0x28
    41a6:	f00a ff4b 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    41aa:	2300      	movs	r3, #0
    41ac:	f8c8 3008 	str.w	r3, [r8, #8]
    41b0:	ab06      	add	r3, sp, #24
    41b2:	e893 0003 	ldmia.w	r3, {r0, r1}
    41b6:	9b05      	ldr	r3, [sp, #20]
    41b8:	e883 0003 	stmia.w	r3, {r0, r1}
    41bc:	4618      	mov	r0, r3
    41be:	b00f      	add	sp, #60	; 0x3c
    41c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    41c4:	10000c80 	.word	0x10000c80

000041c8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const>:
    41c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    41cc:	b08f      	sub	sp, #60	; 0x3c
    41ce:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
    41d2:	a906      	add	r1, sp, #24
    41d4:	f108 046c 	add.w	r4, r8, #108	; 0x6c
    41d8:	9005      	str	r0, [sp, #20]
    41da:	4620      	mov	r0, r4
    41dc:	e881 000c 	stmia.w	r1, {r2, r3}
    41e0:	f7ff f9dc 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    41e4:	4607      	mov	r7, r0
    41e6:	4620      	mov	r0, r4
    41e8:	f7ff fce0 	bl	3bac <std::__use_cache<std::__moneypunct_cache<wchar_t, false> >::operator()(std::locale const&) const [clone .isra.39]>
    41ec:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    41ee:	4604      	mov	r4, r0
    41f0:	681d      	ldr	r5, [r3, #0]
    41f2:	6c03      	ldr	r3, [r0, #64]	; 0x40
    41f4:	682a      	ldr	r2, [r5, #0]
    41f6:	429a      	cmp	r2, r3
    41f8:	f855 3c0c 	ldr.w	r3, [r5, #-12]
    41fc:	d006      	beq.n	420c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x44>
    41fe:	6b82      	ldr	r2, [r0, #56]	; 0x38
    4200:	f8d0 9028 	ldr.w	r9, [r0, #40]	; 0x28
    4204:	9209      	str	r2, [sp, #36]	; 0x24
    4206:	6a42      	ldr	r2, [r0, #36]	; 0x24
    4208:	9203      	str	r2, [sp, #12]
    420a:	e007      	b.n	421c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x54>
    420c:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
    420e:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
    4212:	9209      	str	r2, [sp, #36]	; 0x24
    4214:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
    4216:	9203      	str	r2, [sp, #12]
    4218:	b103      	cbz	r3, 421c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x54>
    421a:	3504      	adds	r5, #4
    421c:	683a      	ldr	r2, [r7, #0]
    421e:	4638      	mov	r0, r7
    4220:	6956      	ldr	r6, [r2, #20]
    4222:	2104      	movs	r1, #4
    4224:	462a      	mov	r2, r5
    4226:	eb05 0383 	add.w	r3, r5, r3, lsl #2
    422a:	47b0      	blx	r6
    422c:	1b40      	subs	r0, r0, r5
    422e:	1087      	asrs	r7, r0, #2
    4230:	f000 80dd 	beq.w	43ee <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x226>
    4234:	4b74      	ldr	r3, [pc, #464]	; (4408 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x240>)
    4236:	f10d 0a38 	add.w	r10, sp, #56	; 0x38
    423a:	f84a 3d10 	str.w	r3, [r10, #-16]!
    423e:	4650      	mov	r0, r10
    4240:	0079      	lsls	r1, r7, #1
    4242:	f00b f83c 	bl	f2be <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)>
    4246:	6b63      	ldr	r3, [r4, #52]	; 0x34
    4248:	1afe      	subs	r6, r7, r3
    424a:	2e00      	cmp	r6, #0
    424c:	dd29      	ble.n	42a2 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0xda>
    424e:	ea36 0623 	bics.w	r6, r6, r3, asr #32
    4252:	bf28      	it	cs
    4254:	463e      	movcs	r6, r7
    4256:	68e3      	ldr	r3, [r4, #12]
    4258:	4650      	mov	r0, r10
    425a:	b1f3      	cbz	r3, 429a <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0xd2>
    425c:	0071      	lsls	r1, r6, #1
    425e:	2200      	movs	r2, #0
    4260:	f00a ff9e 	bl	f1a0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(unsigned int, wchar_t)>
    4264:	4650      	mov	r0, r10
    4266:	f00a ff5d 	bl	f124 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak()>
    426a:	eb05 0386 	add.w	r3, r5, r6, lsl #2
    426e:	9500      	str	r5, [sp, #0]
    4270:	9301      	str	r3, [sp, #4]
    4272:	69a1      	ldr	r1, [r4, #24]
    4274:	68a2      	ldr	r2, [r4, #8]
    4276:	68e3      	ldr	r3, [r4, #12]
    4278:	980a      	ldr	r0, [sp, #40]	; 0x28
    427a:	f7ff fabb 	bl	37f4 <wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned int, wchar_t const*, wchar_t const*)>
    427e:	4683      	mov	r11, r0
    4280:	4650      	mov	r0, r10
    4282:	f00a ff4f 	bl	f124 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak()>
    4286:	990a      	ldr	r1, [sp, #40]	; 0x28
    4288:	4650      	mov	r0, r10
    428a:	ebc1 010b 	rsb	r1, r1, r11
    428e:	1089      	asrs	r1, r1, #2
    4290:	f04f 32ff 	mov.w	r2, #4294967295
    4294:	f00a ff50 	bl	f138 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::erase(unsigned int, unsigned int)>
    4298:	e003      	b.n	42a2 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0xda>
    429a:	4629      	mov	r1, r5
    429c:	4632      	mov	r2, r6
    429e:	f00a ffaf 	bl	f200 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned int)>
    42a2:	6b63      	ldr	r3, [r4, #52]	; 0x34
    42a4:	2b00      	cmp	r3, #0
    42a6:	dd13      	ble.n	42d0 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x108>
    42a8:	a80a      	add	r0, sp, #40	; 0x28
    42aa:	6961      	ldr	r1, [r4, #20]
    42ac:	f00b f8e9 	bl	f482 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)>
    42b0:	2e00      	cmp	r6, #0
    42b2:	a80a      	add	r0, sp, #40	; 0x28
    42b4:	db03      	blt.n	42be <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0xf6>
    42b6:	eb05 0186 	add.w	r1, r5, r6, lsl #2
    42ba:	6b62      	ldr	r2, [r4, #52]	; 0x34
    42bc:	e006      	b.n	42cc <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x104>
    42be:	4271      	negs	r1, r6
    42c0:	6c62      	ldr	r2, [r4, #68]	; 0x44
    42c2:	f00b f8b1 	bl	f428 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t)>
    42c6:	4629      	mov	r1, r5
    42c8:	463a      	mov	r2, r7
    42ca:	a80a      	add	r0, sp, #40	; 0x28
    42cc:	f00b f844 	bl	f358 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)>
    42d0:	f8d8 300c 	ldr.w	r3, [r8, #12]
    42d4:	ae0e      	add	r6, sp, #56	; 0x38
    42d6:	f003 02b0 	and.w	r2, r3, #176	; 0xb0
    42da:	9204      	str	r2, [sp, #16]
    42dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    42de:	f413 7300 	ands.w	r3, r3, #512	; 0x200
    42e2:	f852 5c0c 	ldr.w	r5, [r2, #-12]
    42e6:	bf18      	it	ne
    42e8:	6a23      	ldrne	r3, [r4, #32]
    42ea:	444d      	add	r5, r9
    42ec:	441d      	add	r5, r3
    42ee:	4b46      	ldr	r3, [pc, #280]	; (4408 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x240>)
    42f0:	0069      	lsls	r1, r5, #1
    42f2:	f846 3d0c 	str.w	r3, [r6, #-12]!
    42f6:	4630      	mov	r0, r6
    42f8:	f00a ffe1 	bl	f2be <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)>
    42fc:	9b04      	ldr	r3, [sp, #16]
    42fe:	f8d8 7008 	ldr.w	r7, [r8, #8]
    4302:	2b10      	cmp	r3, #16
    4304:	d106      	bne.n	4314 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x14c>
    4306:	42bd      	cmp	r5, r7
    4308:	bf2c      	ite	cs
    430a:	f04f 0b00 	movcs.w	r11, #0
    430e:	f04f 0b01 	movcc.w	r11, #1
    4312:	e001      	b.n	4318 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x150>
    4314:	f04f 0b00 	mov.w	r11, #0
    4318:	f04f 0a00 	mov.w	r10, #0
    431c:	ab09      	add	r3, sp, #36	; 0x24
    431e:	f81a 3003 	ldrb.w	r3, [r10, r3]
    4322:	2b04      	cmp	r3, #4
    4324:	d82a      	bhi.n	437c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    4326:	e8df f003 	tbb	[pc, r3]
    432a:	1921      	.short	0x1921
    432c:	0d03      	.short	0x0d03
    432e:	14          	.byte	0x14
    432f:	00          	.byte	0x00
    4330:	f8d8 300c 	ldr.w	r3, [r8, #12]
    4334:	059b      	lsls	r3, r3, #22
    4336:	d521      	bpl.n	437c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    4338:	a80b      	add	r0, sp, #44	; 0x2c
    433a:	69e1      	ldr	r1, [r4, #28]
    433c:	6a22      	ldr	r2, [r4, #32]
    433e:	f00b f80b 	bl	f358 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)>
    4342:	e01b      	b.n	437c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    4344:	f1b9 0f00 	cmp.w	r9, #0
    4348:	d018      	beq.n	437c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    434a:	9b03      	ldr	r3, [sp, #12]
    434c:	4630      	mov	r0, r6
    434e:	6819      	ldr	r1, [r3, #0]
    4350:	e009      	b.n	4366 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x19e>
    4352:	4630      	mov	r0, r6
    4354:	a90a      	add	r1, sp, #40	; 0x28
    4356:	f00a fffb 	bl	f350 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::operator+=(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)>
    435a:	e00f      	b.n	437c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    435c:	f1bb 0f00 	cmp.w	r11, #0
    4360:	d107      	bne.n	4372 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1aa>
    4362:	4630      	mov	r0, r6
    4364:	9919      	ldr	r1, [sp, #100]	; 0x64
    4366:	f00b f88c 	bl	f482 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)>
    436a:	e007      	b.n	437c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    436c:	f1bb 0f00 	cmp.w	r11, #0
    4370:	d004      	beq.n	437c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1b4>
    4372:	a80b      	add	r0, sp, #44	; 0x2c
    4374:	1b79      	subs	r1, r7, r5
    4376:	9a19      	ldr	r2, [sp, #100]	; 0x64
    4378:	f00b f856 	bl	f428 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t)>
    437c:	f10a 0a01 	add.w	r10, r10, #1
    4380:	f1ba 0f04 	cmp.w	r10, #4
    4384:	d1ca      	bne.n	431c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x154>
    4386:	f1b9 0f01 	cmp.w	r9, #1
    438a:	d906      	bls.n	439a <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1d2>
    438c:	9903      	ldr	r1, [sp, #12]
    438e:	4630      	mov	r0, r6
    4390:	3104      	adds	r1, #4
    4392:	f109 32ff 	add.w	r2, r9, #4294967295
    4396:	f00a ffdf 	bl	f358 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)>
    439a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    439c:	f853 2c0c 	ldr.w	r2, [r3, #-12]
    43a0:	4297      	cmp	r7, r2
    43a2:	d90f      	bls.n	43c4 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1fc>
    43a4:	9b04      	ldr	r3, [sp, #16]
    43a6:	4630      	mov	r0, r6
    43a8:	2b20      	cmp	r3, #32
    43aa:	eba7 0202 	sub.w	r2, r7, r2
    43ae:	d104      	bne.n	43ba <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1f2>
    43b0:	4611      	mov	r1, r2
    43b2:	9a19      	ldr	r2, [sp, #100]	; 0x64
    43b4:	f00b f838 	bl	f428 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t)>
    43b8:	e005      	b.n	43c6 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1fe>
    43ba:	2100      	movs	r1, #0
    43bc:	9b19      	ldr	r3, [sp, #100]	; 0x64
    43be:	f00a fefb 	bl	f1b8 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::insert(unsigned int, unsigned int, wchar_t)>
    43c2:	e000      	b.n	43c6 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x1fe>
    43c4:	4617      	mov	r7, r2
    43c6:	ac0c      	add	r4, sp, #48	; 0x30
    43c8:	9700      	str	r7, [sp, #0]
    43ca:	ab06      	add	r3, sp, #24
    43cc:	e893 0006 	ldmia.w	r3, {r1, r2}
    43d0:	4620      	mov	r0, r4
    43d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    43d4:	f7ff fdbc 	bl	3f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>
    43d8:	e894 0003 	ldmia.w	r4, {r0, r1}
    43dc:	9006      	str	r0, [sp, #24]
    43de:	4630      	mov	r0, r6
    43e0:	f88d 101c 	strb.w	r1, [sp, #28]
    43e4:	f00a fe2c 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    43e8:	a80a      	add	r0, sp, #40	; 0x28
    43ea:	f00a fe29 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    43ee:	2300      	movs	r3, #0
    43f0:	f8c8 3008 	str.w	r3, [r8, #8]
    43f4:	ab06      	add	r3, sp, #24
    43f6:	e893 0003 	ldmia.w	r3, {r0, r1}
    43fa:	9b05      	ldr	r3, [sp, #20]
    43fc:	e883 0003 	stmia.w	r3, {r0, r1}
    4400:	4618      	mov	r0, r3
    4402:	b00f      	add	sp, #60	; 0x3c
    4404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    4408:	10000c80 	.word	0x10000c80

0000440c <std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const>:
    440c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    4410:	b08d      	sub	sp, #52	; 0x34
    4412:	af04      	add	r7, sp, #16
    4414:	f107 0508 	add.w	r5, r7, #8
    4418:	e885 000c 	stmia.w	r5, {r2, r3}
    441c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    441e:	4680      	mov	r8, r0
    4420:	468b      	mov	r11, r1
    4422:	f107 0018 	add.w	r0, r7, #24
    4426:	f103 016c 	add.w	r1, r3, #108	; 0x6c
    442a:	f00b fe13 	bl	10054 <std::locale::locale(std::locale const&)>
    442e:	f107 0018 	add.w	r0, r7, #24
    4432:	f7ff f8b3 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    4436:	b0d0      	sub	sp, #320	; 0x140
    4438:	6078      	str	r0, [r7, #4]
    443a:	f00b fe1b 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    443e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
    4442:	f107 0420 	add.w	r4, r7, #32
    4446:	f844 0d04 	str.w	r0, [r4, #-4]!
    444a:	f10d 0910 	add.w	r9, sp, #16
    444e:	f04f 0a00 	mov.w	r10, #0
    4452:	e9cd 2302 	strd	r2, r3, [sp, #8]
    4456:	4649      	mov	r1, r9
    4458:	4652      	mov	r2, r10
    445a:	4b20      	ldr	r3, [pc, #128]	; (44dc <std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const+0xd0>)
    445c:	f8cd a000 	str.w	r10, [sp]
    4460:	4620      	mov	r0, r4
    4462:	f7fe fe53 	bl	310c <std::__convert_from_v(int* const&, char*, int, char const*, ...)>
    4466:	4606      	mov	r6, r0
    4468:	4652      	mov	r2, r10
    446a:	4631      	mov	r1, r6
    446c:	f107 0314 	add.w	r3, r7, #20
    4470:	4620      	mov	r0, r4
    4472:	f00a fdcd 	bl	f010 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(unsigned int, wchar_t, std::allocator<wchar_t> const&)>
    4476:	4620      	mov	r0, r4
    4478:	f00a fe54 	bl	f124 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak()>
    447c:	f8d7 c004 	ldr.w	r12, [r7, #4]
    4480:	444e      	add	r6, r9
    4482:	69fb      	ldr	r3, [r7, #28]
    4484:	4660      	mov	r0, r12
    4486:	4649      	mov	r1, r9
    4488:	4632      	mov	r2, r6
    448a:	f7ff facc 	bl	3a26 <std::__ctype_abstract_base<wchar_t>::widen(char const*, char const*, wchar_t*) const>
    448e:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
    4492:	b15b      	cbz	r3, 44ac <std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const+0xa0>
    4494:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    4496:	9402      	str	r4, [sp, #8]
    4498:	9300      	str	r3, [sp, #0]
    449a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    449c:	4640      	mov	r0, r8
    449e:	9301      	str	r3, [sp, #4]
    44a0:	4659      	mov	r1, r11
    44a2:	e895 000c 	ldmia.w	r5, {r2, r3}
    44a6:	f7ff fd6d 	bl	3f84 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const>
    44aa:	e00a      	b.n	44c2 <std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const+0xb6>
    44ac:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    44ae:	9402      	str	r4, [sp, #8]
    44b0:	9300      	str	r3, [sp, #0]
    44b2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    44b4:	4640      	mov	r0, r8
    44b6:	9301      	str	r3, [sp, #4]
    44b8:	4659      	mov	r1, r11
    44ba:	e895 000c 	ldmia.w	r5, {r2, r3}
    44be:	f7ff fe83 	bl	41c8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const>
    44c2:	4620      	mov	r0, r4
    44c4:	f00a fdbc 	bl	f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>
    44c8:	f107 0018 	add.w	r0, r7, #24
    44cc:	f00b fe2c 	bl	10128 <std::locale::~locale()>
    44d0:	4640      	mov	r0, r8
    44d2:	3724      	adds	r7, #36	; 0x24
    44d4:	46bd      	mov	sp, r7
    44d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    44da:	bf00      	nop
    44dc:	0001b14e 	.word	0x0001b14e

000044e0 <std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const>:
    44e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    44e2:	b087      	sub	sp, #28
    44e4:	ac04      	add	r4, sp, #16
    44e6:	e884 000c 	stmia.w	r4, {r2, r3}
    44ea:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    44ec:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    44ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    44f0:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
    44f4:	9500      	str	r5, [sp, #0]
    44f6:	9201      	str	r2, [sp, #4]
    44f8:	9302      	str	r3, [sp, #8]
    44fa:	4606      	mov	r6, r0
    44fc:	e894 000c 	ldmia.w	r4, {r2, r3}
    4500:	b117      	cbz	r7, 4508 <std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x28>
    4502:	f7ff fd3f 	bl	3f84 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const>
    4506:	e001      	b.n	450c <std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const+0x2c>
    4508:	f7ff fe5e 	bl	41c8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const>
    450c:	4630      	mov	r0, r6
    450e:	b007      	add	sp, #28
    4510:	bdf0      	pop	{r4, r5, r6, r7, pc}

00004512 <std::__ctype_abstract_base<wchar_t>::narrow(wchar_t, char) const>:
    4512:	6803      	ldr	r3, [r0, #0]
    4514:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    4516:	4718      	bx	r3

00004518 <std::__ctype_abstract_base<wchar_t>::widen(char) const>:
    4518:	6803      	ldr	r3, [r0, #0]
    451a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    451c:	4718      	bx	r3

0000451e <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)>:
    451e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    4522:	461d      	mov	r5, r3
    4524:	68c3      	ldr	r3, [r0, #12]
    4526:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
    452a:	9f08      	ldr	r7, [sp, #32]
    452c:	f003 03b0 	and.w	r3, r3, #176	; 0xb0
    4530:	2b20      	cmp	r3, #32
    4532:	4689      	mov	r9, r1
    4534:	4614      	mov	r4, r2
    4536:	ebc8 0707 	rsb	r7, r8, r7
    453a:	d10c      	bne.n	4556 <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)+0x38>
    453c:	4629      	mov	r1, r5
    453e:	4610      	mov	r0, r2
    4540:	4642      	mov	r2, r8
    4542:	f012 fe2e 	bl	171a2 <wmemcpy>
    4546:	eb04 0088 	add.w	r0, r4, r8, lsl #2
    454a:	4649      	mov	r1, r9
    454c:	463a      	mov	r2, r7
    454e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    4552:	f012 be2c 	b.w	171ae <wmemset>
    4556:	2b10      	cmp	r3, #16
    4558:	d11a      	bne.n	4590 <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)+0x72>
    455a:	306c      	adds	r0, #108	; 0x6c
    455c:	f7ff f81e 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    4560:	212d      	movs	r1, #45	; 0x2d
    4562:	4606      	mov	r6, r0
    4564:	f7ff ffd8 	bl	4518 <std::__ctype_abstract_base<wchar_t>::widen(char) const>
    4568:	682b      	ldr	r3, [r5, #0]
    456a:	4298      	cmp	r0, r3
    456c:	d020      	beq.n	45b0 <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)+0x92>
    456e:	4630      	mov	r0, r6
    4570:	212b      	movs	r1, #43	; 0x2b
    4572:	f7ff ffd1 	bl	4518 <std::__ctype_abstract_base<wchar_t>::widen(char) const>
    4576:	682b      	ldr	r3, [r5, #0]
    4578:	4298      	cmp	r0, r3
    457a:	d019      	beq.n	45b0 <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)+0x92>
    457c:	4630      	mov	r0, r6
    457e:	2130      	movs	r1, #48	; 0x30
    4580:	f7ff ffca 	bl	4518 <std::__ctype_abstract_base<wchar_t>::widen(char) const>
    4584:	682b      	ldr	r3, [r5, #0]
    4586:	4298      	cmp	r0, r3
    4588:	d102      	bne.n	4590 <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)+0x72>
    458a:	f1b8 0f01 	cmp.w	r8, #1
    458e:	dc14      	bgt.n	45ba <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)+0x9c>
    4590:	2600      	movs	r6, #0
    4592:	4649      	mov	r1, r9
    4594:	463a      	mov	r2, r7
    4596:	4620      	mov	r0, r4
    4598:	f012 fe09 	bl	171ae <wmemset>
    459c:	eb04 0087 	add.w	r0, r4, r7, lsl #2
    45a0:	eb05 0186 	add.w	r1, r5, r6, lsl #2
    45a4:	ebc6 0208 	rsb	r2, r6, r8
    45a8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    45ac:	f012 bdf9 	b.w	171a2 <wmemcpy>
    45b0:	682b      	ldr	r3, [r5, #0]
    45b2:	2601      	movs	r6, #1
    45b4:	f844 3b04 	str.w	r3, [r4], #4
    45b8:	e7eb      	b.n	4592 <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)+0x74>
    45ba:	4630      	mov	r0, r6
    45bc:	2178      	movs	r1, #120	; 0x78
    45be:	f7ff ffab 	bl	4518 <std::__ctype_abstract_base<wchar_t>::widen(char) const>
    45c2:	686b      	ldr	r3, [r5, #4]
    45c4:	4298      	cmp	r0, r3
    45c6:	d006      	beq.n	45d6 <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)+0xb8>
    45c8:	4630      	mov	r0, r6
    45ca:	2158      	movs	r1, #88	; 0x58
    45cc:	f7ff ffa4 	bl	4518 <std::__ctype_abstract_base<wchar_t>::widen(char) const>
    45d0:	686b      	ldr	r3, [r5, #4]
    45d2:	4298      	cmp	r0, r3
    45d4:	d1dc      	bne.n	4590 <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)+0x72>
    45d6:	682b      	ldr	r3, [r5, #0]
    45d8:	3408      	adds	r4, #8
    45da:	f844 3c08 	str.w	r3, [r4, #-8]
    45de:	686b      	ldr	r3, [r5, #4]
    45e0:	2602      	movs	r6, #2
    45e2:	f844 3c04 	str.w	r3, [r4, #-4]
    45e6:	e7d4      	b.n	4592 <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)+0x74>

000045e8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const>:
    45e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    45ec:	b08d      	sub	sp, #52	; 0x34
    45ee:	af04      	add	r7, sp, #16
    45f0:	6cbe      	ldr	r6, [r7, #72]	; 0x48
    45f2:	60f8      	str	r0, [r7, #12]
    45f4:	60b9      	str	r1, [r7, #8]
    45f6:	f106 006c 	add.w	r0, r6, #108	; 0x6c
    45fa:	f107 0110 	add.w	r1, r7, #16
    45fe:	e881 000c 	stmia.w	r1, {r2, r3}
    4602:	f8d7 8050 	ldr.w	r8, [r7, #80]	; 0x50
    4606:	f7ff fc6f 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    460a:	68f5      	ldr	r5, [r6, #12]
    460c:	b096      	sub	sp, #88	; 0x58
    460e:	f005 0a4a 	and.w	r10, r5, #74	; 0x4a
    4612:	f1ba 0f40 	cmp.w	r10, #64	; 0x40
    4616:	4604      	mov	r4, r0
    4618:	f100 0b2c 	add.w	r11, r0, #44	; 0x2c
    461c:	f10d 0c10 	add.w	r12, sp, #16
    4620:	d002      	beq.n	4628 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0x40>
    4622:	f1ba 0f08 	cmp.w	r10, #8
    4626:	d102      	bne.n	462e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0x46>
    4628:	f04f 0900 	mov.w	r9, #0
    462c:	e004      	b.n	4638 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0x50>
    462e:	f1b8 0f00 	cmp.w	r8, #0
    4632:	dd03      	ble.n	463c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0x54>
    4634:	f04f 0901 	mov.w	r9, #1
    4638:	4641      	mov	r1, r8
    463a:	e003      	b.n	4644 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0x5c>
    463c:	f1c8 0100 	rsb	r1, r8, #0
    4640:	f04f 0901 	mov.w	r9, #1
    4644:	f10c 0050 	add.w	r0, r12, #80	; 0x50
    4648:	465a      	mov	r2, r11
    464a:	462b      	mov	r3, r5
    464c:	f8cd 9000 	str.w	r9, [sp]
    4650:	f8c7 c004 	str.w	r12, [r7, #4]
    4654:	f7ff f960 	bl	3918 <int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)>
    4658:	f8d7 c004 	ldr.w	r12, [r7, #4]
    465c:	7c22      	ldrb	r2, [r4, #16]
    465e:	f1c0 0314 	rsb	r3, r0, #20
    4662:	61f8      	str	r0, [r7, #28]
    4664:	eb0c 0383 	add.w	r3, r12, r3, lsl #2
    4668:	b1b2      	cbz	r2, 4698 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0xb0>
    466a:	00c0      	lsls	r0, r0, #3
    466c:	3010      	adds	r0, #16
    466e:	ebad 0d00 	sub.w	sp, sp, r0
    4672:	f10d 0c18 	add.w	r12, sp, #24
    4676:	e88d 1040 	stmia.w	sp, {r6, r12}
    467a:	9302      	str	r3, [sp, #8]
    467c:	f107 031c 	add.w	r3, r7, #28
    4680:	9303      	str	r3, [sp, #12]
    4682:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    4684:	68b8      	ldr	r0, [r7, #8]
    4686:	68a1      	ldr	r1, [r4, #8]
    4688:	68e2      	ldr	r2, [r4, #12]
    468a:	f8c7 c004 	str.w	r12, [r7, #4]
    468e:	f7ff f92d 	bl	38ec <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_int(char const*, unsigned int, wchar_t, std::ios_base&, wchar_t*, wchar_t*, int&) const>
    4692:	f8d7 c004 	ldr.w	r12, [r7, #4]
    4696:	4663      	mov	r3, r12
    4698:	69fa      	ldr	r2, [r7, #28]
    469a:	f1b9 0f00 	cmp.w	r9, #0
    469e:	d007      	beq.n	46b0 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0xc8>
    46a0:	f1b8 0f00 	cmp.w	r8, #0
    46a4:	db02      	blt.n	46ac <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0xc4>
    46a6:	0528      	lsls	r0, r5, #20
    46a8:	d42a      	bmi.n	4700 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0x118>
    46aa:	e014      	b.n	46d6 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0xee>
    46ac:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    46ae:	e028      	b.n	4702 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0x11a>
    46b0:	05a9      	lsls	r1, r5, #22
    46b2:	d510      	bpl.n	46d6 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0xee>
    46b4:	f1b8 0f00 	cmp.w	r8, #0
    46b8:	d129      	bne.n	470e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0x126>
    46ba:	e00c      	b.n	46d6 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0xee>
    46bc:	f3c5 3580 	ubfx	r5, r5, #14, #1
    46c0:	3502      	adds	r5, #2
    46c2:	f85b 1025 	ldr.w	r1, [r11, r5, lsl #2]
    46c6:	3202      	adds	r2, #2
    46c8:	f843 1c04 	str.w	r1, [r3, #-4]
    46cc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
    46ce:	61fa      	str	r2, [r7, #28]
    46d0:	f843 1c08 	str.w	r1, [r3, #-8]
    46d4:	3b08      	subs	r3, #8
    46d6:	68b4      	ldr	r4, [r6, #8]
    46d8:	69f9      	ldr	r1, [r7, #28]
    46da:	428c      	cmp	r4, r1
    46dc:	dd1c      	ble.n	4718 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0x130>
    46de:	00a2      	lsls	r2, r4, #2
    46e0:	320e      	adds	r2, #14
    46e2:	f022 0207 	bic.w	r2, r2, #7
    46e6:	ebad 0d02 	sub.w	sp, sp, r2
    46ea:	ad04      	add	r5, sp, #16
    46ec:	9101      	str	r1, [sp, #4]
    46ee:	9400      	str	r4, [sp, #0]
    46f0:	4630      	mov	r0, r6
    46f2:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
    46f4:	462a      	mov	r2, r5
    46f6:	f7ff ff12 	bl	451e <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)>
    46fa:	61fc      	str	r4, [r7, #28]
    46fc:	462b      	mov	r3, r5
    46fe:	e00b      	b.n	4718 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0x130>
    4700:	6b21      	ldr	r1, [r4, #48]	; 0x30
    4702:	3201      	adds	r2, #1
    4704:	f843 1c04 	str.w	r1, [r3, #-4]
    4708:	61fa      	str	r2, [r7, #28]
    470a:	3b04      	subs	r3, #4
    470c:	e7e3      	b.n	46d6 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0xee>
    470e:	f1ba 0f40 	cmp.w	r10, #64	; 0x40
    4712:	d1d3      	bne.n	46bc <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0xd4>
    4714:	6be1      	ldr	r1, [r4, #60]	; 0x3c
    4716:	e7f4      	b.n	4702 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const+0x11a>
    4718:	2200      	movs	r2, #0
    471a:	60b2      	str	r2, [r6, #8]
    471c:	69fa      	ldr	r2, [r7, #28]
    471e:	68f8      	ldr	r0, [r7, #12]
    4720:	9200      	str	r2, [sp, #0]
    4722:	f107 0210 	add.w	r2, r7, #16
    4726:	ca06      	ldmia	r2, {r1, r2}
    4728:	f7ff fc12 	bl	3f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>
    472c:	68f8      	ldr	r0, [r7, #12]
    472e:	3724      	adds	r7, #36	; 0x24
    4730:	46bd      	mov	sp, r7
    4732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00004736 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const>:
    4736:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    473a:	b08b      	sub	sp, #44	; 0x2c
    473c:	af04      	add	r7, sp, #16
    473e:	f8d7 a040 	ldr.w	r10, [r7, #64]	; 0x40
    4742:	f107 0508 	add.w	r5, r7, #8
    4746:	e885 000c 	stmia.w	r5, {r2, r3}
    474a:	f8da 300c 	ldr.w	r3, [r10, #12]
    474e:	6038      	str	r0, [r7, #0]
    4750:	f013 0f01 	tst.w	r3, #1
    4754:	f897 6048 	ldrb.w	r6, [r7, #72]	; 0x48
    4758:	607b      	str	r3, [r7, #4]
    475a:	f107 0410 	add.w	r4, r7, #16
    475e:	d10a      	bne.n	4776 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const+0x40>
    4760:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    4762:	f8cd a000 	str.w	r10, [sp]
    4766:	9301      	str	r3, [sp, #4]
    4768:	9602      	str	r6, [sp, #8]
    476a:	4620      	mov	r0, r4
    476c:	e895 000c 	ldmia.w	r5, {r2, r3}
    4770:	f7ff ff3a 	bl	45e8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const>
    4774:	e052      	b.n	481c <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const+0xe6>
    4776:	f10a 006c 	add.w	r0, r10, #108	; 0x6c
    477a:	f7ff fbb5 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    477e:	b126      	cbz	r6, 478a <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const+0x54>
    4780:	f8d0 9014 	ldr.w	r9, [r0, #20]
    4784:	f8d0 8018 	ldr.w	r8, [r0, #24]
    4788:	e003      	b.n	4792 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const+0x5c>
    478a:	f8d0 901c 	ldr.w	r9, [r0, #28]
    478e:	f8d0 8020 	ldr.w	r8, [r0, #32]
    4792:	f8da 6008 	ldr.w	r6, [r10, #8]
    4796:	4546      	cmp	r6, r8
    4798:	dd35      	ble.n	4806 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const+0xd0>
    479a:	ebc8 0606 	rsb	r6, r8, r6
    479e:	00b2      	lsls	r2, r6, #2
    47a0:	320e      	adds	r2, #14
    47a2:	f022 0207 	bic.w	r2, r2, #7
    47a6:	ebad 0d02 	sub.w	sp, sp, r2
    47aa:	f10d 0b10 	add.w	r11, sp, #16
    47ae:	4632      	mov	r2, r6
    47b0:	4658      	mov	r0, r11
    47b2:	6c79      	ldr	r1, [r7, #68]	; 0x44
    47b4:	f012 fcfb 	bl	171ae <wmemset>
    47b8:	687b      	ldr	r3, [r7, #4]
    47ba:	2200      	movs	r2, #0
    47bc:	f8ca 2008 	str.w	r2, [r10, #8]
    47c0:	f003 0ab0 	and.w	r10, r3, #176	; 0xb0
    47c4:	f1ba 0f20 	cmp.w	r10, #32
    47c8:	d111      	bne.n	47ee <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const+0xb8>
    47ca:	e895 0006 	ldmia.w	r5, {r1, r2}
    47ce:	4620      	mov	r0, r4
    47d0:	464b      	mov	r3, r9
    47d2:	f8cd 8000 	str.w	r8, [sp]
    47d6:	f7ff fbbb 	bl	3f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>
    47da:	e894 0003 	ldmia.w	r4, {r0, r1}
    47de:	60b8      	str	r0, [r7, #8]
    47e0:	7339      	strb	r1, [r7, #12]
    47e2:	9600      	str	r6, [sp, #0]
    47e4:	4620      	mov	r0, r4
    47e6:	e895 0006 	ldmia.w	r5, {r1, r2}
    47ea:	465b      	mov	r3, r11
    47ec:	e014      	b.n	4818 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const+0xe2>
    47ee:	4620      	mov	r0, r4
    47f0:	e895 0006 	ldmia.w	r5, {r1, r2}
    47f4:	9600      	str	r6, [sp, #0]
    47f6:	465b      	mov	r3, r11
    47f8:	f7ff fbaa 	bl	3f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>
    47fc:	e894 0003 	ldmia.w	r4, {r0, r1}
    4800:	60b8      	str	r0, [r7, #8]
    4802:	7339      	strb	r1, [r7, #12]
    4804:	e002      	b.n	480c <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const+0xd6>
    4806:	2200      	movs	r2, #0
    4808:	f8ca 2008 	str.w	r2, [r10, #8]
    480c:	4620      	mov	r0, r4
    480e:	e895 0006 	ldmia.w	r5, {r1, r2}
    4812:	464b      	mov	r3, r9
    4814:	f8cd 8000 	str.w	r8, [sp]
    4818:	f7ff fb9a 	bl	3f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>
    481c:	e894 0003 	ldmia.w	r4, {r0, r1}
    4820:	683b      	ldr	r3, [r7, #0]
    4822:	60b8      	str	r0, [r7, #8]
    4824:	7339      	strb	r1, [r7, #12]
    4826:	e895 0003 	ldmia.w	r5, {r0, r1}
    482a:	e883 0003 	stmia.w	r3, {r0, r1}
    482e:	4618      	mov	r0, r3
    4830:	371c      	adds	r7, #28
    4832:	46bd      	mov	sp, r7
    4834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00004838 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const>:
    4838:	b530      	push	{r4, r5, lr}
    483a:	4605      	mov	r5, r0
    483c:	b087      	sub	sp, #28
    483e:	ac04      	add	r4, sp, #16
    4840:	e884 000c 	stmia.w	r4, {r2, r3}
    4844:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4846:	9300      	str	r3, [sp, #0]
    4848:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    484a:	9301      	str	r3, [sp, #4]
    484c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    484e:	9302      	str	r3, [sp, #8]
    4850:	e894 000c 	ldmia.w	r4, {r2, r3}
    4854:	f7ff fec8 	bl	45e8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const>
    4858:	4628      	mov	r0, r5
    485a:	b007      	add	sp, #28
    485c:	bd30      	pop	{r4, r5, pc}

0000485e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const>:
    485e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    4862:	b08b      	sub	sp, #44	; 0x2c
    4864:	af04      	add	r7, sp, #16
    4866:	6c3e      	ldr	r6, [r7, #64]	; 0x40
    4868:	6079      	str	r1, [r7, #4]
    486a:	4682      	mov	r10, r0
    486c:	f107 0108 	add.w	r1, r7, #8
    4870:	f106 006c 	add.w	r0, r6, #108	; 0x6c
    4874:	e881 000c 	stmia.w	r1, {r2, r3}
    4878:	f7ff fb36 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    487c:	68f4      	ldr	r4, [r6, #12]
    487e:	b096      	sub	sp, #88	; 0x58
    4880:	f004 084a 	and.w	r8, r4, #74	; 0x4a
    4884:	f1b8 0f40 	cmp.w	r8, #64	; 0x40
    4888:	4605      	mov	r5, r0
    488a:	f100 0b2c 	add.w	r11, r0, #44	; 0x2c
    488e:	f10d 0c10 	add.w	r12, sp, #16
    4892:	d005      	beq.n	48a0 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const+0x42>
    4894:	f1b8 0908 	subs.w	r9, r8, #8
    4898:	bf18      	it	ne
    489a:	f04f 0901 	movne.w	r9, #1
    489e:	e001      	b.n	48a4 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const+0x46>
    48a0:	f04f 0900 	mov.w	r9, #0
    48a4:	f10c 0050 	add.w	r0, r12, #80	; 0x50
    48a8:	465a      	mov	r2, r11
    48aa:	4623      	mov	r3, r4
    48ac:	f8cd 9000 	str.w	r9, [sp]
    48b0:	6cb9      	ldr	r1, [r7, #72]	; 0x48
    48b2:	f8c7 c000 	str.w	r12, [r7]
    48b6:	f7ff f82f 	bl	3918 <int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)>
    48ba:	f8d7 c000 	ldr.w	r12, [r7]
    48be:	7c2a      	ldrb	r2, [r5, #16]
    48c0:	f1c0 0314 	rsb	r3, r0, #20
    48c4:	6178      	str	r0, [r7, #20]
    48c6:	eb0c 0383 	add.w	r3, r12, r3, lsl #2
    48ca:	b1b2      	cbz	r2, 48fa <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const+0x9c>
    48cc:	00c0      	lsls	r0, r0, #3
    48ce:	3010      	adds	r0, #16
    48d0:	ebad 0d00 	sub.w	sp, sp, r0
    48d4:	f10d 0c18 	add.w	r12, sp, #24
    48d8:	e88d 1040 	stmia.w	sp, {r6, r12}
    48dc:	9302      	str	r3, [sp, #8]
    48de:	f107 0314 	add.w	r3, r7, #20
    48e2:	9303      	str	r3, [sp, #12]
    48e4:	6aab      	ldr	r3, [r5, #40]	; 0x28
    48e6:	6878      	ldr	r0, [r7, #4]
    48e8:	68a9      	ldr	r1, [r5, #8]
    48ea:	68ea      	ldr	r2, [r5, #12]
    48ec:	f8c7 c000 	str.w	r12, [r7]
    48f0:	f7fe fffc 	bl	38ec <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_int(char const*, unsigned int, wchar_t, std::ios_base&, wchar_t*, wchar_t*, int&) const>
    48f4:	f8d7 c000 	ldr.w	r12, [r7]
    48f8:	4663      	mov	r3, r12
    48fa:	f1b9 0f00 	cmp.w	r9, #0
    48fe:	d10d      	bne.n	491c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const+0xbe>
    4900:	05a2      	lsls	r2, r4, #22
    4902:	d50b      	bpl.n	491c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const+0xbe>
    4904:	6cba      	ldr	r2, [r7, #72]	; 0x48
    4906:	b14a      	cbz	r2, 491c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const+0xbe>
    4908:	f1b8 0f40 	cmp.w	r8, #64	; 0x40
    490c:	697a      	ldr	r2, [r7, #20]
    490e:	d11a      	bne.n	4946 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const+0xe8>
    4910:	6be9      	ldr	r1, [r5, #60]	; 0x3c
    4912:	3201      	adds	r2, #1
    4914:	f843 1c04 	str.w	r1, [r3, #-4]
    4918:	617a      	str	r2, [r7, #20]
    491a:	3b04      	subs	r3, #4
    491c:	68b4      	ldr	r4, [r6, #8]
    491e:	6979      	ldr	r1, [r7, #20]
    4920:	428c      	cmp	r4, r1
    4922:	dd1e      	ble.n	4962 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const+0x104>
    4924:	00a2      	lsls	r2, r4, #2
    4926:	320e      	adds	r2, #14
    4928:	f022 0207 	bic.w	r2, r2, #7
    492c:	ebad 0d02 	sub.w	sp, sp, r2
    4930:	ad04      	add	r5, sp, #16
    4932:	9101      	str	r1, [sp, #4]
    4934:	9400      	str	r4, [sp, #0]
    4936:	4630      	mov	r0, r6
    4938:	6c79      	ldr	r1, [r7, #68]	; 0x44
    493a:	462a      	mov	r2, r5
    493c:	f7ff fdef 	bl	451e <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)>
    4940:	617c      	str	r4, [r7, #20]
    4942:	462b      	mov	r3, r5
    4944:	e00d      	b.n	4962 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const+0x104>
    4946:	f3c4 3480 	ubfx	r4, r4, #14, #1
    494a:	3402      	adds	r4, #2
    494c:	f85b 1024 	ldr.w	r1, [r11, r4, lsl #2]
    4950:	3202      	adds	r2, #2
    4952:	f843 1c04 	str.w	r1, [r3, #-4]
    4956:	6be9      	ldr	r1, [r5, #60]	; 0x3c
    4958:	617a      	str	r2, [r7, #20]
    495a:	f843 1c08 	str.w	r1, [r3, #-8]
    495e:	3b08      	subs	r3, #8
    4960:	e7dc      	b.n	491c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const+0xbe>
    4962:	2200      	movs	r2, #0
    4964:	60b2      	str	r2, [r6, #8]
    4966:	697a      	ldr	r2, [r7, #20]
    4968:	4650      	mov	r0, r10
    496a:	9200      	str	r2, [sp, #0]
    496c:	f107 0208 	add.w	r2, r7, #8
    4970:	ca06      	ldmia	r2, {r1, r2}
    4972:	f7ff faed 	bl	3f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>
    4976:	4650      	mov	r0, r10
    4978:	371c      	adds	r7, #28
    497a:	46bd      	mov	sp, r7
    497c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00004980 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const>:
    4980:	b530      	push	{r4, r5, lr}
    4982:	4605      	mov	r5, r0
    4984:	b087      	sub	sp, #28
    4986:	ac04      	add	r4, sp, #16
    4988:	e884 000c 	stmia.w	r4, {r2, r3}
    498c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    498e:	9300      	str	r3, [sp, #0]
    4990:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4992:	9301      	str	r3, [sp, #4]
    4994:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4996:	9302      	str	r3, [sp, #8]
    4998:	e894 000c 	ldmia.w	r4, {r2, r3}
    499c:	f7ff ff5f 	bl	485e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const>
    49a0:	4628      	mov	r0, r5
    49a2:	b007      	add	sp, #28
    49a4:	bd30      	pop	{r4, r5, pc}

000049a6 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, void const*) const>:
    49a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    49aa:	4606      	mov	r6, r0
    49ac:	b088      	sub	sp, #32
    49ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
    49b0:	ac04      	add	r4, sp, #16
    49b2:	f8d5 800c 	ldr.w	r8, [r5, #12]
    49b6:	e884 000c 	stmia.w	r4, {r2, r3}
    49ba:	f428 4380 	bic.w	r3, r8, #16384	; 0x4000
    49be:	f023 034a 	bic.w	r3, r3, #74	; 0x4a
    49c2:	f443 7302 	orr.w	r3, r3, #520	; 0x208
    49c6:	60eb      	str	r3, [r5, #12]
    49c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    49ca:	af06      	add	r7, sp, #24
    49cc:	9301      	str	r3, [sp, #4]
    49ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
    49d0:	9500      	str	r5, [sp, #0]
    49d2:	9302      	str	r3, [sp, #8]
    49d4:	4638      	mov	r0, r7
    49d6:	e894 000c 	ldmia.w	r4, {r2, r3}
    49da:	f7ff ff40 	bl	485e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const>
    49de:	e897 0003 	ldmia.w	r7, {r0, r1}
    49e2:	9004      	str	r0, [sp, #16]
    49e4:	f88d 1014 	strb.w	r1, [sp, #20]
    49e8:	e894 0003 	ldmia.w	r4, {r0, r1}
    49ec:	e886 0003 	stmia.w	r6, {r0, r1}
    49f0:	4630      	mov	r0, r6
    49f2:	f8c5 800c 	str.w	r8, [r5, #12]
    49f6:	b008      	add	sp, #32
    49f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000049fc <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const>:
    49fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    4a00:	b08b      	sub	sp, #44	; 0x2c
    4a02:	af04      	add	r7, sp, #16
    4a04:	6c3e      	ldr	r6, [r7, #64]	; 0x40
    4a06:	6079      	str	r1, [r7, #4]
    4a08:	4682      	mov	r10, r0
    4a0a:	f107 0108 	add.w	r1, r7, #8
    4a0e:	f106 006c 	add.w	r0, r6, #108	; 0x6c
    4a12:	e881 000c 	stmia.w	r1, {r2, r3}
    4a16:	f7ff fa67 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    4a1a:	68f5      	ldr	r5, [r6, #12]
    4a1c:	b0aa      	sub	sp, #168	; 0xa8
    4a1e:	f005 094a 	and.w	r9, r5, #74	; 0x4a
    4a22:	f1b9 0f40 	cmp.w	r9, #64	; 0x40
    4a26:	4604      	mov	r4, r0
    4a28:	f100 0b2c 	add.w	r11, r0, #44	; 0x2c
    4a2c:	a904      	add	r1, sp, #16
    4a2e:	d002      	beq.n	4a36 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0x3a>
    4a30:	f1b9 0f08 	cmp.w	r9, #8
    4a34:	d102      	bne.n	4a3c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0x40>
    4a36:	f04f 0800 	mov.w	r8, #0
    4a3a:	e007      	b.n	4a4c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0x50>
    4a3c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
    4a40:	2a01      	cmp	r2, #1
    4a42:	f173 0300 	sbcs.w	r3, r3, #0
    4a46:	db04      	blt.n	4a52 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0x56>
    4a48:	f04f 0801 	mov.w	r8, #1
    4a4c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
    4a50:	e006      	b.n	4a60 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0x64>
    4a52:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
    4a56:	4252      	negs	r2, r2
    4a58:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
    4a5c:	f04f 0801 	mov.w	r8, #1
    4a60:	f101 00a0 	add.w	r0, r1, #160	; 0xa0
    4a64:	f8cd b000 	str.w	r11, [sp]
    4a68:	9501      	str	r5, [sp, #4]
    4a6a:	f8cd 8008 	str.w	r8, [sp, #8]
    4a6e:	6039      	str	r1, [r7, #0]
    4a70:	f7fe ff86 	bl	3980 <int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)>
    4a74:	6839      	ldr	r1, [r7, #0]
    4a76:	7c22      	ldrb	r2, [r4, #16]
    4a78:	f1c0 0328 	rsb	r3, r0, #40	; 0x28
    4a7c:	6178      	str	r0, [r7, #20]
    4a7e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    4a82:	b1b2      	cbz	r2, 4ab2 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0xb6>
    4a84:	00c0      	lsls	r0, r0, #3
    4a86:	3010      	adds	r0, #16
    4a88:	ebad 0d00 	sub.w	sp, sp, r0
    4a8c:	f10d 0c18 	add.w	r12, sp, #24
    4a90:	e88d 1040 	stmia.w	sp, {r6, r12}
    4a94:	9302      	str	r3, [sp, #8]
    4a96:	f107 0314 	add.w	r3, r7, #20
    4a9a:	9303      	str	r3, [sp, #12]
    4a9c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    4a9e:	6878      	ldr	r0, [r7, #4]
    4aa0:	68a1      	ldr	r1, [r4, #8]
    4aa2:	68e2      	ldr	r2, [r4, #12]
    4aa4:	f8c7 c000 	str.w	r12, [r7]
    4aa8:	f7fe ff20 	bl	38ec <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_int(char const*, unsigned int, wchar_t, std::ios_base&, wchar_t*, wchar_t*, int&) const>
    4aac:	f8d7 c000 	ldr.w	r12, [r7]
    4ab0:	4663      	mov	r3, r12
    4ab2:	697a      	ldr	r2, [r7, #20]
    4ab4:	f1b8 0f00 	cmp.w	r8, #0
    4ab8:	d00a      	beq.n	4ad0 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0xd4>
    4aba:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
    4abe:	2800      	cmp	r0, #0
    4ac0:	f171 0100 	sbcs.w	r1, r1, #0
    4ac4:	db02      	blt.n	4acc <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0xd0>
    4ac6:	0528      	lsls	r0, r5, #20
    4ac8:	d42b      	bmi.n	4b22 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0x126>
    4aca:	e015      	b.n	4af8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0xfc>
    4acc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    4ace:	e029      	b.n	4b24 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0x128>
    4ad0:	05a9      	lsls	r1, r5, #22
    4ad2:	d511      	bpl.n	4af8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0xfc>
    4ad4:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
    4ad8:	4301      	orrs	r1, r0
    4ada:	d129      	bne.n	4b30 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0x134>
    4adc:	e00c      	b.n	4af8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0xfc>
    4ade:	f3c5 3580 	ubfx	r5, r5, #14, #1
    4ae2:	3502      	adds	r5, #2
    4ae4:	f85b 1025 	ldr.w	r1, [r11, r5, lsl #2]
    4ae8:	3202      	adds	r2, #2
    4aea:	f843 1c04 	str.w	r1, [r3, #-4]
    4aee:	6be1      	ldr	r1, [r4, #60]	; 0x3c
    4af0:	617a      	str	r2, [r7, #20]
    4af2:	f843 1c08 	str.w	r1, [r3, #-8]
    4af6:	3b08      	subs	r3, #8
    4af8:	68b4      	ldr	r4, [r6, #8]
    4afa:	6979      	ldr	r1, [r7, #20]
    4afc:	428c      	cmp	r4, r1
    4afe:	dd1c      	ble.n	4b3a <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0x13e>
    4b00:	00a2      	lsls	r2, r4, #2
    4b02:	320e      	adds	r2, #14
    4b04:	f022 0207 	bic.w	r2, r2, #7
    4b08:	ebad 0d02 	sub.w	sp, sp, r2
    4b0c:	ad04      	add	r5, sp, #16
    4b0e:	9101      	str	r1, [sp, #4]
    4b10:	9400      	str	r4, [sp, #0]
    4b12:	4630      	mov	r0, r6
    4b14:	6c79      	ldr	r1, [r7, #68]	; 0x44
    4b16:	462a      	mov	r2, r5
    4b18:	f7ff fd01 	bl	451e <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)>
    4b1c:	617c      	str	r4, [r7, #20]
    4b1e:	462b      	mov	r3, r5
    4b20:	e00b      	b.n	4b3a <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0x13e>
    4b22:	6b21      	ldr	r1, [r4, #48]	; 0x30
    4b24:	3201      	adds	r2, #1
    4b26:	f843 1c04 	str.w	r1, [r3, #-4]
    4b2a:	617a      	str	r2, [r7, #20]
    4b2c:	3b04      	subs	r3, #4
    4b2e:	e7e3      	b.n	4af8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0xfc>
    4b30:	f1b9 0f40 	cmp.w	r9, #64	; 0x40
    4b34:	d1d3      	bne.n	4ade <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0xe2>
    4b36:	6be1      	ldr	r1, [r4, #60]	; 0x3c
    4b38:	e7f4      	b.n	4b24 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const+0x128>
    4b3a:	2200      	movs	r2, #0
    4b3c:	60b2      	str	r2, [r6, #8]
    4b3e:	697a      	ldr	r2, [r7, #20]
    4b40:	4650      	mov	r0, r10
    4b42:	9200      	str	r2, [sp, #0]
    4b44:	f107 0208 	add.w	r2, r7, #8
    4b48:	ca06      	ldmia	r2, {r1, r2}
    4b4a:	f7ff fa01 	bl	3f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>
    4b4e:	4650      	mov	r0, r10
    4b50:	371c      	adds	r7, #28
    4b52:	46bd      	mov	sp, r7
    4b54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00004b58 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const>:
    4b58:	b530      	push	{r4, r5, lr}
    4b5a:	4605      	mov	r5, r0
    4b5c:	b087      	sub	sp, #28
    4b5e:	ac04      	add	r4, sp, #16
    4b60:	e884 000c 	stmia.w	r4, {r2, r3}
    4b64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4b66:	9300      	str	r3, [sp, #0]
    4b68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4b6a:	9301      	str	r3, [sp, #4]
    4b6c:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
    4b70:	e9cd 2302 	strd	r2, r3, [sp, #8]
    4b74:	e894 000c 	ldmia.w	r4, {r2, r3}
    4b78:	f7ff ff40 	bl	49fc <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const>
    4b7c:	4628      	mov	r0, r5
    4b7e:	b007      	add	sp, #28
    4b80:	bd30      	pop	{r4, r5, pc}

00004b82 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const>:
    4b82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    4b86:	b08b      	sub	sp, #44	; 0x2c
    4b88:	af04      	add	r7, sp, #16
    4b8a:	6c3e      	ldr	r6, [r7, #64]	; 0x40
    4b8c:	6079      	str	r1, [r7, #4]
    4b8e:	4682      	mov	r10, r0
    4b90:	f107 0108 	add.w	r1, r7, #8
    4b94:	f106 006c 	add.w	r0, r6, #108	; 0x6c
    4b98:	e881 000c 	stmia.w	r1, {r2, r3}
    4b9c:	f7ff f9a4 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    4ba0:	68f4      	ldr	r4, [r6, #12]
    4ba2:	b0aa      	sub	sp, #168	; 0xa8
    4ba4:	f004 084a 	and.w	r8, r4, #74	; 0x4a
    4ba8:	f1b8 0f40 	cmp.w	r8, #64	; 0x40
    4bac:	4605      	mov	r5, r0
    4bae:	f100 0b2c 	add.w	r11, r0, #44	; 0x2c
    4bb2:	a904      	add	r1, sp, #16
    4bb4:	d005      	beq.n	4bc2 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const+0x40>
    4bb6:	f1b8 0908 	subs.w	r9, r8, #8
    4bba:	bf18      	it	ne
    4bbc:	f04f 0901 	movne.w	r9, #1
    4bc0:	e001      	b.n	4bc6 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const+0x44>
    4bc2:	f04f 0900 	mov.w	r9, #0
    4bc6:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
    4bca:	f101 00a0 	add.w	r0, r1, #160	; 0xa0
    4bce:	f8cd b000 	str.w	r11, [sp]
    4bd2:	9401      	str	r4, [sp, #4]
    4bd4:	f8cd 9008 	str.w	r9, [sp, #8]
    4bd8:	6039      	str	r1, [r7, #0]
    4bda:	f7fe fed1 	bl	3980 <int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)>
    4bde:	6839      	ldr	r1, [r7, #0]
    4be0:	7c2a      	ldrb	r2, [r5, #16]
    4be2:	f1c0 0328 	rsb	r3, r0, #40	; 0x28
    4be6:	6178      	str	r0, [r7, #20]
    4be8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    4bec:	b1b2      	cbz	r2, 4c1c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const+0x9a>
    4bee:	00c0      	lsls	r0, r0, #3
    4bf0:	3010      	adds	r0, #16
    4bf2:	ebad 0d00 	sub.w	sp, sp, r0
    4bf6:	f10d 0c18 	add.w	r12, sp, #24
    4bfa:	e88d 1040 	stmia.w	sp, {r6, r12}
    4bfe:	9302      	str	r3, [sp, #8]
    4c00:	f107 0314 	add.w	r3, r7, #20
    4c04:	9303      	str	r3, [sp, #12]
    4c06:	6aab      	ldr	r3, [r5, #40]	; 0x28
    4c08:	6878      	ldr	r0, [r7, #4]
    4c0a:	68a9      	ldr	r1, [r5, #8]
    4c0c:	68ea      	ldr	r2, [r5, #12]
    4c0e:	f8c7 c000 	str.w	r12, [r7]
    4c12:	f7fe fe6b 	bl	38ec <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_int(char const*, unsigned int, wchar_t, std::ios_base&, wchar_t*, wchar_t*, int&) const>
    4c16:	f8d7 c000 	ldr.w	r12, [r7]
    4c1a:	4663      	mov	r3, r12
    4c1c:	f1b9 0f00 	cmp.w	r9, #0
    4c20:	d110      	bne.n	4c44 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const+0xc2>
    4c22:	05a2      	lsls	r2, r4, #22
    4c24:	d50e      	bpl.n	4c44 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const+0xc2>
    4c26:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
    4c2a:	ea50 0201 	orrs.w	r2, r0, r1
    4c2e:	d009      	beq.n	4c44 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const+0xc2>
    4c30:	f1b8 0f40 	cmp.w	r8, #64	; 0x40
    4c34:	697a      	ldr	r2, [r7, #20]
    4c36:	d11a      	bne.n	4c6e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const+0xec>
    4c38:	6be9      	ldr	r1, [r5, #60]	; 0x3c
    4c3a:	3201      	adds	r2, #1
    4c3c:	f843 1c04 	str.w	r1, [r3, #-4]
    4c40:	617a      	str	r2, [r7, #20]
    4c42:	3b04      	subs	r3, #4
    4c44:	68b4      	ldr	r4, [r6, #8]
    4c46:	6979      	ldr	r1, [r7, #20]
    4c48:	428c      	cmp	r4, r1
    4c4a:	dd1e      	ble.n	4c8a <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const+0x108>
    4c4c:	00a2      	lsls	r2, r4, #2
    4c4e:	320e      	adds	r2, #14
    4c50:	f022 0207 	bic.w	r2, r2, #7
    4c54:	ebad 0d02 	sub.w	sp, sp, r2
    4c58:	ad04      	add	r5, sp, #16
    4c5a:	9101      	str	r1, [sp, #4]
    4c5c:	9400      	str	r4, [sp, #0]
    4c5e:	4630      	mov	r0, r6
    4c60:	6c79      	ldr	r1, [r7, #68]	; 0x44
    4c62:	462a      	mov	r2, r5
    4c64:	f7ff fc5b 	bl	451e <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)>
    4c68:	617c      	str	r4, [r7, #20]
    4c6a:	462b      	mov	r3, r5
    4c6c:	e00d      	b.n	4c8a <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const+0x108>
    4c6e:	f3c4 3480 	ubfx	r4, r4, #14, #1
    4c72:	3402      	adds	r4, #2
    4c74:	f85b 1024 	ldr.w	r1, [r11, r4, lsl #2]
    4c78:	3202      	adds	r2, #2
    4c7a:	f843 1c04 	str.w	r1, [r3, #-4]
    4c7e:	6be9      	ldr	r1, [r5, #60]	; 0x3c
    4c80:	617a      	str	r2, [r7, #20]
    4c82:	f843 1c08 	str.w	r1, [r3, #-8]
    4c86:	3b08      	subs	r3, #8
    4c88:	e7dc      	b.n	4c44 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const+0xc2>
    4c8a:	2200      	movs	r2, #0
    4c8c:	60b2      	str	r2, [r6, #8]
    4c8e:	697a      	ldr	r2, [r7, #20]
    4c90:	4650      	mov	r0, r10
    4c92:	9200      	str	r2, [sp, #0]
    4c94:	f107 0208 	add.w	r2, r7, #8
    4c98:	ca06      	ldmia	r2, {r1, r2}
    4c9a:	f7ff f959 	bl	3f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>
    4c9e:	4650      	mov	r0, r10
    4ca0:	371c      	adds	r7, #28
    4ca2:	46bd      	mov	sp, r7
    4ca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00004ca8 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const>:
    4ca8:	b530      	push	{r4, r5, lr}
    4caa:	4605      	mov	r5, r0
    4cac:	b087      	sub	sp, #28
    4cae:	ac04      	add	r4, sp, #16
    4cb0:	e884 000c 	stmia.w	r4, {r2, r3}
    4cb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4cb6:	9300      	str	r3, [sp, #0]
    4cb8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4cba:	9301      	str	r3, [sp, #4]
    4cbc:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
    4cc0:	e9cd 2302 	strd	r2, r3, [sp, #8]
    4cc4:	e894 000c 	ldmia.w	r4, {r2, r3}
    4cc8:	f7ff ff5b 	bl	4b82 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const>
    4ccc:	4628      	mov	r0, r5
    4cce:	b007      	add	sp, #28
    4cd0:	bd30      	pop	{r4, r5, pc}

00004cd2 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const>:
    4cd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    4cd6:	b08f      	sub	sp, #60	; 0x3c
    4cd8:	af04      	add	r7, sp, #16
    4cda:	6d3e      	ldr	r6, [r7, #80]	; 0x50
    4cdc:	4682      	mov	r10, r0
    4cde:	f106 046c 	add.w	r4, r6, #108	; 0x6c
    4ce2:	4620      	mov	r0, r4
    4ce4:	f107 0908 	add.w	r9, r7, #8
    4ce8:	e889 000c 	stmia.w	r9, {r2, r3}
    4cec:	6079      	str	r1, [r7, #4]
    4cee:	f7ff f8fb 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    4cf2:	6873      	ldr	r3, [r6, #4]
    4cf4:	f107 0118 	add.w	r1, r7, #24
    4cf8:	2b00      	cmp	r3, #0
    4cfa:	bfa8      	it	ge
    4cfc:	469b      	movge	r11, r3
    4cfe:	f897 2058 	ldrb.w	r2, [r7, #88]	; 0x58
    4d02:	4680      	mov	r8, r0
    4d04:	4630      	mov	r0, r6
    4d06:	bfb8      	it	lt
    4d08:	f04f 0b06 	movlt.w	r11, #6
    4d0c:	f00b f937 	bl	ff7e <std::__num_base::_S_format_float(std::ios_base const&, char*, char)>
    4d10:	68f2      	ldr	r2, [r6, #12]
    4d12:	0753      	lsls	r3, r2, #29
    4d14:	bf4c      	ite	mi
    4d16:	f50b 729c 	addmi.w	r2, r11, #312	; 0x138
    4d1a:	f10b 021e 	addpl.w	r2, r11, #30
    4d1e:	320e      	adds	r2, #14
    4d20:	f022 0207 	bic.w	r2, r2, #7
    4d24:	ebad 0d02 	sub.w	sp, sp, r2
    4d28:	f00b f9a4 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    4d2c:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
    4d30:	f107 0128 	add.w	r1, r7, #40	; 0x28
    4d34:	ad04      	add	r5, sp, #16
    4d36:	f841 0d14 	str.w	r0, [r1, #-20]!
    4d3a:	4608      	mov	r0, r1
    4d3c:	e9cd 2302 	strd	r2, r3, [sp, #8]
    4d40:	4629      	mov	r1, r5
    4d42:	2200      	movs	r2, #0
    4d44:	f107 0318 	add.w	r3, r7, #24
    4d48:	f8cd b000 	str.w	r11, [sp]
    4d4c:	f7fe f9de 	bl	310c <std::__convert_from_v(int* const&, char*, int, char const*, ...)>
    4d50:	6138      	str	r0, [r7, #16]
    4d52:	4620      	mov	r0, r4
    4d54:	f7fe fc22 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    4d58:	693a      	ldr	r2, [r7, #16]
    4d5a:	4629      	mov	r1, r5
    4d5c:	0093      	lsls	r3, r2, #2
    4d5e:	330e      	adds	r3, #14
    4d60:	f023 0307 	bic.w	r3, r3, #7
    4d64:	ebad 0d03 	sub.w	sp, sp, r3
    4d68:	ac04      	add	r4, sp, #16
    4d6a:	442a      	add	r2, r5
    4d6c:	4623      	mov	r3, r4
    4d6e:	f7fe fe5a 	bl	3a26 <std::__ctype_abstract_base<wchar_t>::widen(char const*, char const*, wchar_t*) const>
    4d72:	693b      	ldr	r3, [r7, #16]
    4d74:	4628      	mov	r0, r5
    4d76:	461a      	mov	r2, r3
    4d78:	212e      	movs	r1, #46	; 0x2e
    4d7a:	603b      	str	r3, [r7, #0]
    4d7c:	f00e fc68 	bl	13650 <memchr>
    4d80:	683b      	ldr	r3, [r7, #0]
    4d82:	b130      	cbz	r0, 4d92 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const+0xc0>
    4d84:	f8d8 1024 	ldr.w	r1, [r8, #36]	; 0x24
    4d88:	1b42      	subs	r2, r0, r5
    4d8a:	eb04 0082 	add.w	r0, r4, r2, lsl #2
    4d8e:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
    4d92:	f898 2010 	ldrb.w	r2, [r8, #16]
    4d96:	2a00      	cmp	r2, #0
    4d98:	d039      	beq.n	4e0e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const+0x13c>
    4d9a:	b950      	cbnz	r0, 4db2 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const+0xe0>
    4d9c:	2b02      	cmp	r3, #2
    4d9e:	dd08      	ble.n	4db2 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const+0xe0>
    4da0:	7869      	ldrb	r1, [r5, #1]
    4da2:	2939      	cmp	r1, #57	; 0x39
    4da4:	d833      	bhi.n	4e0e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const+0x13c>
    4da6:	292f      	cmp	r1, #47	; 0x2f
    4da8:	78aa      	ldrb	r2, [r5, #2]
    4daa:	d930      	bls.n	4e0e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const+0x13c>
    4dac:	3a30      	subs	r2, #48	; 0x30
    4dae:	2a09      	cmp	r2, #9
    4db0:	d82d      	bhi.n	4e0e <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const+0x13c>
    4db2:	00da      	lsls	r2, r3, #3
    4db4:	3208      	adds	r2, #8
    4db6:	ebad 0d02 	sub.w	sp, sp, r2
    4dba:	782a      	ldrb	r2, [r5, #0]
    4dbc:	f10d 0c10 	add.w	r12, sp, #16
    4dc0:	2a2d      	cmp	r2, #45	; 0x2d
    4dc2:	d001      	beq.n	4dc8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const+0xf6>
    4dc4:	2a2b      	cmp	r2, #43	; 0x2b
    4dc6:	d106      	bne.n	4dd6 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const+0x104>
    4dc8:	6822      	ldr	r2, [r4, #0]
    4dca:	3b01      	subs	r3, #1
    4dcc:	f8cc 2000 	str.w	r2, [r12]
    4dd0:	613b      	str	r3, [r7, #16]
    4dd2:	2501      	movs	r5, #1
    4dd4:	e000      	b.n	4dd8 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const+0x106>
    4dd6:	2500      	movs	r5, #0
    4dd8:	00ab      	lsls	r3, r5, #2
    4dda:	eb0c 0203 	add.w	r2, r12, r3
    4dde:	441c      	add	r4, r3
    4de0:	f107 0310 	add.w	r3, r7, #16
    4de4:	9000      	str	r0, [sp, #0]
    4de6:	9402      	str	r4, [sp, #8]
    4de8:	9201      	str	r2, [sp, #4]
    4dea:	9303      	str	r3, [sp, #12]
    4dec:	f8d8 3028 	ldr.w	r3, [r8, #40]	; 0x28
    4df0:	6878      	ldr	r0, [r7, #4]
    4df2:	f8d8 1008 	ldr.w	r1, [r8, #8]
    4df6:	f8d8 200c 	ldr.w	r2, [r8, #12]
    4dfa:	f8c7 c000 	str.w	r12, [r7]
    4dfe:	f7fe fd51 	bl	38a4 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_float(char const*, unsigned int, wchar_t, wchar_t const*, wchar_t*, wchar_t*, int&) const>
    4e02:	f8d7 c000 	ldr.w	r12, [r7]
    4e06:	693b      	ldr	r3, [r7, #16]
    4e08:	4664      	mov	r4, r12
    4e0a:	441d      	add	r5, r3
    4e0c:	613d      	str	r5, [r7, #16]
    4e0e:	68b5      	ldr	r5, [r6, #8]
    4e10:	693a      	ldr	r2, [r7, #16]
    4e12:	4295      	cmp	r5, r2
    4e14:	dd11      	ble.n	4e3a <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const+0x168>
    4e16:	00ab      	lsls	r3, r5, #2
    4e18:	330e      	adds	r3, #14
    4e1a:	f023 0307 	bic.w	r3, r3, #7
    4e1e:	ebad 0d03 	sub.w	sp, sp, r3
    4e22:	f10d 0810 	add.w	r8, sp, #16
    4e26:	4623      	mov	r3, r4
    4e28:	4644      	mov	r4, r8
    4e2a:	9201      	str	r2, [sp, #4]
    4e2c:	9500      	str	r5, [sp, #0]
    4e2e:	4630      	mov	r0, r6
    4e30:	6d79      	ldr	r1, [r7, #84]	; 0x54
    4e32:	4642      	mov	r2, r8
    4e34:	f7ff fb73 	bl	451e <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)>
    4e38:	613d      	str	r5, [r7, #16]
    4e3a:	2300      	movs	r3, #0
    4e3c:	60b3      	str	r3, [r6, #8]
    4e3e:	693b      	ldr	r3, [r7, #16]
    4e40:	4650      	mov	r0, r10
    4e42:	e899 0006 	ldmia.w	r9, {r1, r2}
    4e46:	9300      	str	r3, [sp, #0]
    4e48:	4623      	mov	r3, r4
    4e4a:	f7ff f881 	bl	3f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>
    4e4e:	4650      	mov	r0, r10
    4e50:	372c      	adds	r7, #44	; 0x2c
    4e52:	46bd      	mov	sp, r7
    4e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00004e58 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, double) const>:
    4e58:	b530      	push	{r4, r5, lr}
    4e5a:	4605      	mov	r5, r0
    4e5c:	b089      	sub	sp, #36	; 0x24
    4e5e:	ac06      	add	r4, sp, #24
    4e60:	e884 000c 	stmia.w	r4, {r2, r3}
    4e64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4e66:	9300      	str	r3, [sp, #0]
    4e68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    4e6a:	9301      	str	r3, [sp, #4]
    4e6c:	2300      	movs	r3, #0
    4e6e:	9302      	str	r3, [sp, #8]
    4e70:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    4e74:	e9cd 2304 	strd	r2, r3, [sp, #16]
    4e78:	e894 000c 	ldmia.w	r4, {r2, r3}
    4e7c:	f7ff ff29 	bl	4cd2 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const>
    4e80:	4628      	mov	r0, r5
    4e82:	b009      	add	sp, #36	; 0x24
    4e84:	bd30      	pop	{r4, r5, pc}

00004e86 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const>:
    4e86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    4e8a:	b08f      	sub	sp, #60	; 0x3c
    4e8c:	af04      	add	r7, sp, #16
    4e8e:	6d3e      	ldr	r6, [r7, #80]	; 0x50
    4e90:	4682      	mov	r10, r0
    4e92:	f106 046c 	add.w	r4, r6, #108	; 0x6c
    4e96:	4620      	mov	r0, r4
    4e98:	f107 0908 	add.w	r9, r7, #8
    4e9c:	e889 000c 	stmia.w	r9, {r2, r3}
    4ea0:	6079      	str	r1, [r7, #4]
    4ea2:	f7ff f821 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    4ea6:	6873      	ldr	r3, [r6, #4]
    4ea8:	f107 0118 	add.w	r1, r7, #24
    4eac:	2b00      	cmp	r3, #0
    4eae:	bfa8      	it	ge
    4eb0:	469b      	movge	r11, r3
    4eb2:	f897 2058 	ldrb.w	r2, [r7, #88]	; 0x58
    4eb6:	4680      	mov	r8, r0
    4eb8:	4630      	mov	r0, r6
    4eba:	bfb8      	it	lt
    4ebc:	f04f 0b06 	movlt.w	r11, #6
    4ec0:	f00b f85d 	bl	ff7e <std::__num_base::_S_format_float(std::ios_base const&, char*, char)>
    4ec4:	68f2      	ldr	r2, [r6, #12]
    4ec6:	0753      	lsls	r3, r2, #29
    4ec8:	bf4c      	ite	mi
    4eca:	f50b 729c 	addmi.w	r2, r11, #312	; 0x138
    4ece:	f10b 021e 	addpl.w	r2, r11, #30
    4ed2:	320e      	adds	r2, #14
    4ed4:	f022 0207 	bic.w	r2, r2, #7
    4ed8:	ebad 0d02 	sub.w	sp, sp, r2
    4edc:	f00b f8ca 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    4ee0:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
    4ee4:	f107 0128 	add.w	r1, r7, #40	; 0x28
    4ee8:	ad04      	add	r5, sp, #16
    4eea:	f841 0d14 	str.w	r0, [r1, #-20]!
    4eee:	4608      	mov	r0, r1
    4ef0:	e9cd 2302 	strd	r2, r3, [sp, #8]
    4ef4:	4629      	mov	r1, r5
    4ef6:	2200      	movs	r2, #0
    4ef8:	f107 0318 	add.w	r3, r7, #24
    4efc:	f8cd b000 	str.w	r11, [sp]
    4f00:	f7fe f904 	bl	310c <std::__convert_from_v(int* const&, char*, int, char const*, ...)>
    4f04:	6138      	str	r0, [r7, #16]
    4f06:	4620      	mov	r0, r4
    4f08:	f7fe fb48 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    4f0c:	693a      	ldr	r2, [r7, #16]
    4f0e:	4629      	mov	r1, r5
    4f10:	0093      	lsls	r3, r2, #2
    4f12:	330e      	adds	r3, #14
    4f14:	f023 0307 	bic.w	r3, r3, #7
    4f18:	ebad 0d03 	sub.w	sp, sp, r3
    4f1c:	ac04      	add	r4, sp, #16
    4f1e:	442a      	add	r2, r5
    4f20:	4623      	mov	r3, r4
    4f22:	f7fe fd80 	bl	3a26 <std::__ctype_abstract_base<wchar_t>::widen(char const*, char const*, wchar_t*) const>
    4f26:	693b      	ldr	r3, [r7, #16]
    4f28:	4628      	mov	r0, r5
    4f2a:	461a      	mov	r2, r3
    4f2c:	212e      	movs	r1, #46	; 0x2e
    4f2e:	603b      	str	r3, [r7, #0]
    4f30:	f00e fb8e 	bl	13650 <memchr>
    4f34:	683b      	ldr	r3, [r7, #0]
    4f36:	b130      	cbz	r0, 4f46 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const+0xc0>
    4f38:	f8d8 1024 	ldr.w	r1, [r8, #36]	; 0x24
    4f3c:	1b42      	subs	r2, r0, r5
    4f3e:	eb04 0082 	add.w	r0, r4, r2, lsl #2
    4f42:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
    4f46:	f898 2010 	ldrb.w	r2, [r8, #16]
    4f4a:	2a00      	cmp	r2, #0
    4f4c:	d039      	beq.n	4fc2 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const+0x13c>
    4f4e:	b950      	cbnz	r0, 4f66 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const+0xe0>
    4f50:	2b02      	cmp	r3, #2
    4f52:	dd08      	ble.n	4f66 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const+0xe0>
    4f54:	7869      	ldrb	r1, [r5, #1]
    4f56:	2939      	cmp	r1, #57	; 0x39
    4f58:	d833      	bhi.n	4fc2 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const+0x13c>
    4f5a:	292f      	cmp	r1, #47	; 0x2f
    4f5c:	78aa      	ldrb	r2, [r5, #2]
    4f5e:	d930      	bls.n	4fc2 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const+0x13c>
    4f60:	3a30      	subs	r2, #48	; 0x30
    4f62:	2a09      	cmp	r2, #9
    4f64:	d82d      	bhi.n	4fc2 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const+0x13c>
    4f66:	00da      	lsls	r2, r3, #3
    4f68:	3208      	adds	r2, #8
    4f6a:	ebad 0d02 	sub.w	sp, sp, r2
    4f6e:	782a      	ldrb	r2, [r5, #0]
    4f70:	f10d 0c10 	add.w	r12, sp, #16
    4f74:	2a2d      	cmp	r2, #45	; 0x2d
    4f76:	d001      	beq.n	4f7c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const+0xf6>
    4f78:	2a2b      	cmp	r2, #43	; 0x2b
    4f7a:	d106      	bne.n	4f8a <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const+0x104>
    4f7c:	6822      	ldr	r2, [r4, #0]
    4f7e:	3b01      	subs	r3, #1
    4f80:	f8cc 2000 	str.w	r2, [r12]
    4f84:	613b      	str	r3, [r7, #16]
    4f86:	2501      	movs	r5, #1
    4f88:	e000      	b.n	4f8c <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const+0x106>
    4f8a:	2500      	movs	r5, #0
    4f8c:	00ab      	lsls	r3, r5, #2
    4f8e:	eb0c 0203 	add.w	r2, r12, r3
    4f92:	441c      	add	r4, r3
    4f94:	f107 0310 	add.w	r3, r7, #16
    4f98:	9000      	str	r0, [sp, #0]
    4f9a:	9402      	str	r4, [sp, #8]
    4f9c:	9201      	str	r2, [sp, #4]
    4f9e:	9303      	str	r3, [sp, #12]
    4fa0:	f8d8 3028 	ldr.w	r3, [r8, #40]	; 0x28
    4fa4:	6878      	ldr	r0, [r7, #4]
    4fa6:	f8d8 1008 	ldr.w	r1, [r8, #8]
    4faa:	f8d8 200c 	ldr.w	r2, [r8, #12]
    4fae:	f8c7 c000 	str.w	r12, [r7]
    4fb2:	f7fe fc77 	bl	38a4 <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_float(char const*, unsigned int, wchar_t, wchar_t const*, wchar_t*, wchar_t*, int&) const>
    4fb6:	f8d7 c000 	ldr.w	r12, [r7]
    4fba:	693b      	ldr	r3, [r7, #16]
    4fbc:	4664      	mov	r4, r12
    4fbe:	441d      	add	r5, r3
    4fc0:	613d      	str	r5, [r7, #16]
    4fc2:	68b5      	ldr	r5, [r6, #8]
    4fc4:	693a      	ldr	r2, [r7, #16]
    4fc6:	4295      	cmp	r5, r2
    4fc8:	dd11      	ble.n	4fee <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const+0x168>
    4fca:	00ab      	lsls	r3, r5, #2
    4fcc:	330e      	adds	r3, #14
    4fce:	f023 0307 	bic.w	r3, r3, #7
    4fd2:	ebad 0d03 	sub.w	sp, sp, r3
    4fd6:	f10d 0810 	add.w	r8, sp, #16
    4fda:	4623      	mov	r3, r4
    4fdc:	4644      	mov	r4, r8
    4fde:	9201      	str	r2, [sp, #4]
    4fe0:	9500      	str	r5, [sp, #0]
    4fe2:	4630      	mov	r0, r6
    4fe4:	6d79      	ldr	r1, [r7, #84]	; 0x54
    4fe6:	4642      	mov	r2, r8
    4fe8:	f7ff fa99 	bl	451e <std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, int, int)>
    4fec:	613d      	str	r5, [r7, #16]
    4fee:	2300      	movs	r3, #0
    4ff0:	60b3      	str	r3, [r6, #8]
    4ff2:	693b      	ldr	r3, [r7, #16]
    4ff4:	4650      	mov	r0, r10
    4ff6:	e899 0006 	ldmia.w	r9, {r1, r2}
    4ffa:	9300      	str	r3, [sp, #0]
    4ffc:	4623      	mov	r3, r4
    4ffe:	f7fe ffa7 	bl	3f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>
    5002:	4650      	mov	r0, r10
    5004:	372c      	adds	r7, #44	; 0x2c
    5006:	46bd      	mov	sp, r7
    5008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000500c <std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long double) const>:
    500c:	b530      	push	{r4, r5, lr}
    500e:	4605      	mov	r5, r0
    5010:	b089      	sub	sp, #36	; 0x24
    5012:	ac06      	add	r4, sp, #24
    5014:	e884 000c 	stmia.w	r4, {r2, r3}
    5018:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    501a:	9300      	str	r3, [sp, #0]
    501c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    501e:	9301      	str	r3, [sp, #4]
    5020:	234c      	movs	r3, #76	; 0x4c
    5022:	9302      	str	r3, [sp, #8]
    5024:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    5028:	e9cd 2304 	strd	r2, r3, [sp, #16]
    502c:	e894 000c 	ldmia.w	r4, {r2, r3}
    5030:	f7ff ff29 	bl	4e86 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const>
    5034:	4628      	mov	r0, r5
    5036:	b009      	add	sp, #36	; 0x24
    5038:	bd30      	pop	{r4, r5, pc}

0000503a <std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, tm const*, char, char) const>:
    503a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    503e:	f5ad 7d09 	sub.w	sp, sp, #548	; 0x224
    5042:	9d90      	ldr	r5, [sp, #576]	; 0x240
    5044:	4607      	mov	r7, r0
    5046:	356c      	adds	r5, #108	; 0x6c
    5048:	4628      	mov	r0, r5
    504a:	ac02      	add	r4, sp, #8
    504c:	e884 000c 	stmia.w	r4, {r2, r3}
    5050:	f89d 824c 	ldrb.w	r8, [sp, #588]	; 0x24c
    5054:	f89d 6250 	ldrb.w	r6, [sp, #592]	; 0x250
    5058:	f7fe faa0 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    505c:	4681      	mov	r9, r0
    505e:	4628      	mov	r0, r5
    5060:	f7fe fb50 	bl	3704 <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)>
    5064:	2125      	movs	r1, #37	; 0x25
    5066:	4605      	mov	r5, r0
    5068:	4648      	mov	r0, r9
    506a:	f7ff fa55 	bl	4518 <std::__ctype_abstract_base<wchar_t>::widen(char) const>
    506e:	9004      	str	r0, [sp, #16]
    5070:	b91e      	cbnz	r6, 507a <std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, tm const*, char, char) const+0x40>
    5072:	f8cd 8014 	str.w	r8, [sp, #20]
    5076:	9606      	str	r6, [sp, #24]
    5078:	e004      	b.n	5084 <std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, tm const*, char, char) const+0x4a>
    507a:	2300      	movs	r3, #0
    507c:	9605      	str	r6, [sp, #20]
    507e:	f8cd 8018 	str.w	r8, [sp, #24]
    5082:	9307      	str	r3, [sp, #28]
    5084:	9b92      	ldr	r3, [sp, #584]	; 0x248
    5086:	a908      	add	r1, sp, #32
    5088:	9300      	str	r3, [sp, #0]
    508a:	4628      	mov	r0, r5
    508c:	ab04      	add	r3, sp, #16
    508e:	2280      	movs	r2, #128	; 0x80
    5090:	f003 f9a6 	bl	83e0 <std::__timepunct<wchar_t>::_M_put(wchar_t*, unsigned int, wchar_t const*, tm const*) const>
    5094:	a808      	add	r0, sp, #32
    5096:	f011 fee5 	bl	16e64 <wcslen>
    509a:	9000      	str	r0, [sp, #0]
    509c:	e894 0006 	ldmia.w	r4, {r1, r2}
    50a0:	4638      	mov	r0, r7
    50a2:	ab08      	add	r3, sp, #32
    50a4:	f7fe ff54 	bl	3f50 <std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__write<wchar_t>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, wchar_t const*, int)>
    50a8:	4638      	mov	r0, r7
    50aa:	f50d 7d09 	add.w	sp, sp, #548	; 0x224
    50ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

000050b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>:
    50b2:	6803      	ldr	r3, [r0, #0]
    50b4:	b510      	push	{r4, lr}
    50b6:	4604      	mov	r4, r0
    50b8:	b15b      	cbz	r3, 50d2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const+0x20>
    50ba:	6840      	ldr	r0, [r0, #4]
    50bc:	1c42      	adds	r2, r0, #1
    50be:	d10a      	bne.n	50d6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const+0x24>
    50c0:	4618      	mov	r0, r3
    50c2:	f009 f9f0 	bl	e4a6 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sgetc()>
    50c6:	1c43      	adds	r3, r0, #1
    50c8:	bf0a      	itet	eq
    50ca:	2300      	moveq	r3, #0
    50cc:	6060      	strne	r0, [r4, #4]
    50ce:	6023      	streq	r3, [r4, #0]
    50d0:	bd10      	pop	{r4, pc}
    50d2:	f04f 30ff 	mov.w	r0, #4294967295
    50d6:	bd10      	pop	{r4, pc}

000050d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>:
    50d8:	b538      	push	{r3, r4, r5, lr}
    50da:	460d      	mov	r5, r1
    50dc:	f7ff ffe9 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    50e0:	4604      	mov	r4, r0
    50e2:	4628      	mov	r0, r5
    50e4:	f7ff ffe5 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    50e8:	1c63      	adds	r3, r4, #1
    50ea:	425c      	negs	r4, r3
    50ec:	f100 0201 	add.w	r2, r0, #1
    50f0:	415c      	adcs	r4, r3
    50f2:	4250      	negs	r0, r2
    50f4:	4150      	adcs	r0, r2
    50f6:	1a21      	subs	r1, r4, r0
    50f8:	4248      	negs	r0, r1
    50fa:	4148      	adcs	r0, r1
    50fc:	bd38      	pop	{r3, r4, r5, pc}

000050fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>:
    50fe:	b508      	push	{r3, lr}
    5100:	f7ff ffea 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    5104:	f080 0001 	eor.w	r0, r0, #1
    5108:	b2c0      	uxtb	r0, r0
    510a:	bd08      	pop	{r3, pc}

0000510c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>:
    510c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    5110:	4680      	mov	r8, r0
    5112:	9812      	ldr	r0, [sp, #72]	; 0x48
    5114:	a902      	add	r1, sp, #8
    5116:	306c      	adds	r0, #108	; 0x6c
    5118:	9d11      	ldr	r5, [sp, #68]	; 0x44
    511a:	e901 000c 	stmdb	r1, {r2, r3}
    511e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
    5120:	f8dd a04c 	ldr.w	r10, [sp, #76]	; 0x4c
    5124:	f7fe fa3a 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    5128:	2d02      	cmp	r5, #2
    512a:	4683      	mov	r11, r0
    512c:	d006      	beq.n	513c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x30>
    512e:	2d04      	cmp	r5, #4
    5130:	bf0c      	ite	eq
    5132:	f44f 797a 	moveq.w	r9, #1000	; 0x3e8
    5136:	f04f 0901 	movne.w	r9, #1
    513a:	e001      	b.n	5140 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x34>
    513c:	f04f 090a 	mov.w	r9, #10
    5140:	2400      	movs	r4, #0
    5142:	4626      	mov	r6, r4
    5144:	4668      	mov	r0, sp
    5146:	a90c      	add	r1, sp, #48	; 0x30
    5148:	f7ff ffd9 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    514c:	b110      	cbz	r0, 5154 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x48>
    514e:	42ae      	cmp	r6, r5
    5150:	d103      	bne.n	515a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x4e>
    5152:	e01b      	b.n	518c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x80>
    5154:	42ae      	cmp	r6, r5
    5156:	d114      	bne.n	5182 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x76>
    5158:	e018      	b.n	518c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x80>
    515a:	4668      	mov	r0, sp
    515c:	f7ff ffa9 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5160:	222a      	movs	r2, #42	; 0x2a
    5162:	4601      	mov	r1, r0
    5164:	4658      	mov	r0, r11
    5166:	f7ff f9d4 	bl	4512 <std::__ctype_abstract_base<wchar_t>::narrow(wchar_t, char) const>
    516a:	3830      	subs	r0, #48	; 0x30
    516c:	b2c2      	uxtb	r2, r0
    516e:	2a09      	cmp	r2, #9
    5170:	d807      	bhi.n	5182 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x76>
    5172:	210a      	movs	r1, #10
    5174:	fb01 0404 	mla	r4, r1, r4, r0
    5178:	fb09 f204 	mul.w	r2, r9, r4
    517c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    517e:	429a      	cmp	r2, r3
    5180:	dd0d      	ble.n	519e <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x92>
    5182:	2d04      	cmp	r5, #4
    5184:	d104      	bne.n	5190 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x84>
    5186:	2e02      	cmp	r6, #2
    5188:	d102      	bne.n	5190 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x84>
    518a:	3c64      	subs	r4, #100	; 0x64
    518c:	603c      	str	r4, [r7, #0]
    518e:	e011      	b.n	51b4 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xa8>
    5190:	f8da 3000 	ldr.w	r3, [r10]
    5194:	f043 0304 	orr.w	r3, r3, #4
    5198:	f8ca 3000 	str.w	r3, [r10]
    519c:	e00a      	b.n	51b4 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xa8>
    519e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    51a0:	444a      	add	r2, r9
    51a2:	4293      	cmp	r3, r2
    51a4:	daed      	bge.n	5182 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x76>
    51a6:	4668      	mov	r0, sp
    51a8:	fb99 f9f1 	sdiv	r9, r9, r1
    51ac:	3601      	adds	r6, #1
    51ae:	f7fe fec1 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    51b2:	e7c7      	b.n	5144 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x38>
    51b4:	ab02      	add	r3, sp, #8
    51b6:	e913 0003 	ldmdb	r3, {r0, r1}
    51ba:	e888 0003 	stmia.w	r8, {r0, r1}
    51be:	4640      	mov	r0, r8
    51c0:	b003      	add	sp, #12
    51c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

000051c6 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>:
    51c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    51ca:	b085      	sub	sp, #20
    51cc:	af00      	add	r7, sp, #0
    51ce:	4681      	mov	r9, r0
    51d0:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
    51d2:	f107 0408 	add.w	r4, r7, #8
    51d6:	306c      	adds	r0, #108	; 0x6c
    51d8:	e884 000c 	stmia.w	r4, {r2, r3}
    51dc:	f8d7 8044 	ldr.w	r8, [r7, #68]	; 0x44
    51e0:	f7fe f9dc 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    51e4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    51e6:	4683      	mov	r11, r0
    51e8:	009b      	lsls	r3, r3, #2
    51ea:	330e      	adds	r3, #14
    51ec:	f023 0307 	bic.w	r3, r3, #7
    51f0:	ebad 0d03 	sub.w	sp, sp, r3
    51f4:	4620      	mov	r0, r4
    51f6:	f107 0138 	add.w	r1, r7, #56	; 0x38
    51fa:	466e      	mov	r6, sp
    51fc:	f7ff ff7f 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    5200:	b918      	cbnz	r0, 520a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x44>
    5202:	4605      	mov	r5, r0
    5204:	f04f 0b00 	mov.w	r11, #0
    5208:	e051      	b.n	52ae <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xe8>
    520a:	4620      	mov	r0, r4
    520c:	f7ff ff51 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5210:	2300      	movs	r3, #0
    5212:	4682      	mov	r10, r0
    5214:	461d      	mov	r5, r3
    5216:	6cba      	ldr	r2, [r7, #72]	; 0x48
    5218:	4293      	cmp	r3, r2
    521a:	d0f3      	beq.n	5204 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x3e>
    521c:	f858 1023 	ldr.w	r1, [r8, r3, lsl #2]
    5220:	6809      	ldr	r1, [r1, #0]
    5222:	458a      	cmp	r10, r1
    5224:	d06e      	beq.n	5304 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x13e>
    5226:	f8db 0000 	ldr.w	r0, [r11]
    522a:	607b      	str	r3, [r7, #4]
    522c:	6982      	ldr	r2, [r0, #24]
    522e:	4658      	mov	r0, r11
    5230:	4790      	blx	r2
    5232:	4582      	cmp	r10, r0
    5234:	687b      	ldr	r3, [r7, #4]
    5236:	d065      	beq.n	5304 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x13e>
    5238:	3301      	adds	r3, #1
    523a:	e7ec      	b.n	5216 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x50>
    523c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
    5240:	607b      	str	r3, [r7, #4]
    5242:	f858 0021 	ldr.w	r0, [r8, r1, lsl #2]
    5246:	f011 fe0d 	bl	16e64 <wcslen>
    524a:	687b      	ldr	r3, [r7, #4]
    524c:	4582      	cmp	r10, r0
    524e:	f103 0301 	add.w	r3, r3, #1
    5252:	bf28      	it	cs
    5254:	4682      	movcs	r10, r0
    5256:	42ab      	cmp	r3, r5
    5258:	d1f0      	bne.n	523c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x76>
    525a:	4620      	mov	r0, r4
    525c:	f10b 0b01 	add.w	r11, r11, #1
    5260:	f7fe fe68 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    5264:	45d3      	cmp	r11, r10
    5266:	d251      	bcs.n	530c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x146>
    5268:	4620      	mov	r0, r4
    526a:	f107 0138 	add.w	r1, r7, #56	; 0x38
    526e:	f7ff ff46 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    5272:	2800      	cmp	r0, #0
    5274:	d04a      	beq.n	530c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x146>
    5276:	ea4f 028b 	mov.w	r2, r11, lsl #2
    527a:	f04f 0a00 	mov.w	r10, #0
    527e:	f856 102a 	ldr.w	r1, [r6, r10, lsl #2]
    5282:	4620      	mov	r0, r4
    5284:	f858 1021 	ldr.w	r1, [r8, r1, lsl #2]
    5288:	603a      	str	r2, [r7, #0]
    528a:	5889      	ldr	r1, [r1, r2]
    528c:	6079      	str	r1, [r7, #4]
    528e:	f7ff ff10 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5292:	6879      	ldr	r1, [r7, #4]
    5294:	683a      	ldr	r2, [r7, #0]
    5296:	4281      	cmp	r1, r0
    5298:	bf1b      	ittet	ne
    529a:	f105 35ff 	addne.w	r5, r5, #4294967295
    529e:	f856 1025 	ldrne.w	r1, [r6, r5, lsl #2]
    52a2:	f10a 0a01 	addeq.w	r10, r10, #1
    52a6:	f846 102a 	strne.w	r1, [r6, r10, lsl #2]
    52aa:	45aa      	cmp	r10, r5
    52ac:	d3e7      	bcc.n	527e <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xb8>
    52ae:	2d01      	cmp	r5, #1
    52b0:	d907      	bls.n	52c2 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xfc>
    52b2:	6833      	ldr	r3, [r6, #0]
    52b4:	f858 0023 	ldr.w	r0, [r8, r3, lsl #2]
    52b8:	f011 fdd4 	bl	16e64 <wcslen>
    52bc:	2301      	movs	r3, #1
    52be:	4682      	mov	r10, r0
    52c0:	e7bc      	b.n	523c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x76>
    52c2:	d123      	bne.n	530c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x146>
    52c4:	4620      	mov	r0, r4
    52c6:	f7fe fe35 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    52ca:	6836      	ldr	r6, [r6, #0]
    52cc:	f10b 0501 	add.w	r5, r11, #1
    52d0:	f858 b026 	ldr.w	r11, [r8, r6, lsl #2]
    52d4:	4658      	mov	r0, r11
    52d6:	f011 fdc5 	bl	16e64 <wcslen>
    52da:	4680      	mov	r8, r0
    52dc:	4545      	cmp	r5, r8
    52de:	d21c      	bcs.n	531a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x154>
    52e0:	4620      	mov	r0, r4
    52e2:	f107 0138 	add.w	r1, r7, #56	; 0x38
    52e6:	f7ff ff0a 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    52ea:	b1b0      	cbz	r0, 531a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x154>
    52ec:	4620      	mov	r0, r4
    52ee:	f85b a025 	ldr.w	r10, [r11, r5, lsl #2]
    52f2:	f7ff fede 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    52f6:	4582      	cmp	r10, r0
    52f8:	d10f      	bne.n	531a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x154>
    52fa:	4620      	mov	r0, r4
    52fc:	f7fe fe1a 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    5300:	3501      	adds	r5, #1
    5302:	e7eb      	b.n	52dc <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x116>
    5304:	f846 3025 	str.w	r3, [r6, r5, lsl #2]
    5308:	3501      	adds	r5, #1
    530a:	e795      	b.n	5238 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x72>
    530c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    530e:	6d3a      	ldr	r2, [r7, #80]	; 0x50
    5310:	681b      	ldr	r3, [r3, #0]
    5312:	f043 0304 	orr.w	r3, r3, #4
    5316:	6013      	str	r3, [r2, #0]
    5318:	e003      	b.n	5322 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x15c>
    531a:	45a8      	cmp	r8, r5
    531c:	d1f6      	bne.n	530c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x146>
    531e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    5320:	601e      	str	r6, [r3, #0]
    5322:	e894 0003 	ldmia.w	r4, {r0, r1}
    5326:	e889 0003 	stmia.w	r9, {r0, r1}
    532a:	4648      	mov	r0, r9
    532c:	3714      	adds	r7, #20
    532e:	46bd      	mov	sp, r7
    5330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00005334 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>:
    5334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    5338:	b085      	sub	sp, #20
    533a:	af00      	add	r7, sp, #0
    533c:	4681      	mov	r9, r0
    533e:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
    5340:	f107 0508 	add.w	r5, r7, #8
    5344:	306c      	adds	r0, #108	; 0x6c
    5346:	e885 000c 	stmia.w	r5, {r2, r3}
    534a:	f7fe f927 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    534e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    5350:	4683      	mov	r11, r0
    5352:	00db      	lsls	r3, r3, #3
    5354:	3308      	adds	r3, #8
    5356:	ebad 0d03 	sub.w	sp, sp, r3
    535a:	4628      	mov	r0, r5
    535c:	f107 0138 	add.w	r1, r7, #56	; 0x38
    5360:	466e      	mov	r6, sp
    5362:	f7ff fecc 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    5366:	b918      	cbnz	r0, 5370 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x3c>
    5368:	2400      	movs	r4, #0
    536a:	46a3      	mov	r11, r4
    536c:	46a0      	mov	r8, r4
    536e:	e03c      	b.n	53ea <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xb6>
    5370:	4628      	mov	r0, r5
    5372:	f7ff fe9e 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5376:	f04f 0a00 	mov.w	r10, #0
    537a:	4603      	mov	r3, r0
    537c:	4654      	mov	r4, r10
    537e:	6cba      	ldr	r2, [r7, #72]	; 0x48
    5380:	ea4f 0842 	mov.w	r8, r2, lsl #1
    5384:	45c2      	cmp	r10, r8
    5386:	d013      	beq.n	53b0 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x7c>
    5388:	6c7a      	ldr	r2, [r7, #68]	; 0x44
    538a:	f852 102a 	ldr.w	r1, [r2, r10, lsl #2]
    538e:	6809      	ldr	r1, [r1, #0]
    5390:	428b      	cmp	r3, r1
    5392:	f000 808c 	beq.w	54ae <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x17a>
    5396:	f8db 0000 	ldr.w	r0, [r11]
    539a:	607b      	str	r3, [r7, #4]
    539c:	6982      	ldr	r2, [r0, #24]
    539e:	4658      	mov	r0, r11
    53a0:	4790      	blx	r2
    53a2:	687b      	ldr	r3, [r7, #4]
    53a4:	4283      	cmp	r3, r0
    53a6:	f000 8082 	beq.w	54ae <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x17a>
    53aa:	f10a 0a01 	add.w	r10, r10, #1
    53ae:	e7e9      	b.n	5384 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x50>
    53b0:	2c00      	cmp	r4, #0
    53b2:	d0d9      	beq.n	5368 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x34>
    53b4:	4628      	mov	r0, r5
    53b6:	f7fe fdbd 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    53ba:	00a3      	lsls	r3, r4, #2
    53bc:	330e      	adds	r3, #14
    53be:	f023 0307 	bic.w	r3, r3, #7
    53c2:	ebad 0d03 	sub.w	sp, sp, r3
    53c6:	46e8      	mov	r8, sp
    53c8:	f04f 0a00 	mov.w	r10, #0
    53cc:	f856 302a 	ldr.w	r3, [r6, r10, lsl #2]
    53d0:	6c7a      	ldr	r2, [r7, #68]	; 0x44
    53d2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
    53d6:	f011 fd45 	bl	16e64 <wcslen>
    53da:	f848 002a 	str.w	r0, [r8, r10, lsl #2]
    53de:	f10a 0a01 	add.w	r10, r10, #1
    53e2:	45a2      	cmp	r10, r4
    53e4:	d1f2      	bne.n	53cc <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x98>
    53e6:	f04f 0b01 	mov.w	r11, #1
    53ea:	ea4f 0a8b 	mov.w	r10, r11, lsl #2
    53ee:	4628      	mov	r0, r5
    53f0:	f107 0138 	add.w	r1, r7, #56	; 0x38
    53f4:	f7ff fe83 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    53f8:	b390      	cbz	r0, 5460 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x12c>
    53fa:	4628      	mov	r0, r5
    53fc:	f7ff fe59 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5400:	2300      	movs	r3, #0
    5402:	6078      	str	r0, [r7, #4]
    5404:	4618      	mov	r0, r3
    5406:	42a3      	cmp	r3, r4
    5408:	d21f      	bcs.n	544a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x116>
    540a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
    540c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
    5410:	ea4f 0e83 	mov.w	lr, r3, lsl #2
    5414:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    5418:	f858 2023 	ldr.w	r2, [r8, r3, lsl #2]
    541c:	eb08 0c0e 	add.w	r12, r8, lr
    5420:	4593      	cmp	r11, r2
    5422:	d301      	bcc.n	5428 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xf4>
    5424:	3001      	adds	r0, #1
    5426:	e00e      	b.n	5446 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x112>
    5428:	f851 100a 	ldr.w	r1, [r1, r10]
    542c:	687a      	ldr	r2, [r7, #4]
    542e:	4291      	cmp	r1, r2
    5430:	d009      	beq.n	5446 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x112>
    5432:	3c01      	subs	r4, #1
    5434:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
    5438:	f846 100e 	str.w	r1, [r6, lr]
    543c:	f858 1024 	ldr.w	r1, [r8, r4, lsl #2]
    5440:	f8cc 1000 	str.w	r1, [r12]
    5444:	e7df      	b.n	5406 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xd2>
    5446:	3301      	adds	r3, #1
    5448:	e7dd      	b.n	5406 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xd2>
    544a:	42a0      	cmp	r0, r4
    544c:	f10a 0a04 	add.w	r10, r10, #4
    5450:	d006      	beq.n	5460 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x12c>
    5452:	f107 0008 	add.w	r0, r7, #8
    5456:	f7fe fd6d 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    545a:	f10b 0b01 	add.w	r11, r11, #1
    545e:	e7c6      	b.n	53ee <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xba>
    5460:	2c01      	cmp	r4, #1
    5462:	d102      	bne.n	546a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x136>
    5464:	f8d8 3000 	ldr.w	r3, [r8]
    5468:	e007      	b.n	547a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x146>
    546a:	2c02      	cmp	r4, #2
    546c:	d10e      	bne.n	548c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x158>
    546e:	f8d8 3000 	ldr.w	r3, [r8]
    5472:	455b      	cmp	r3, r11
    5474:	d003      	beq.n	547e <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x14a>
    5476:	f8d8 3004 	ldr.w	r3, [r8, #4]
    547a:	455b      	cmp	r3, r11
    547c:	d106      	bne.n	548c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x158>
    547e:	6cba      	ldr	r2, [r7, #72]	; 0x48
    5480:	6833      	ldr	r3, [r6, #0]
    5482:	4293      	cmp	r3, r2
    5484:	bf28      	it	cs
    5486:	1a9b      	subcs	r3, r3, r2
    5488:	6c3a      	ldr	r2, [r7, #64]	; 0x40
    548a:	e004      	b.n	5496 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x162>
    548c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    548e:	6d3a      	ldr	r2, [r7, #80]	; 0x50
    5490:	681b      	ldr	r3, [r3, #0]
    5492:	f043 0304 	orr.w	r3, r3, #4
    5496:	6013      	str	r3, [r2, #0]
    5498:	f107 0310 	add.w	r3, r7, #16
    549c:	e913 0003 	ldmdb	r3, {r0, r1}
    54a0:	e889 0003 	stmia.w	r9, {r0, r1}
    54a4:	4648      	mov	r0, r9
    54a6:	3714      	adds	r7, #20
    54a8:	46bd      	mov	sp, r7
    54aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    54ae:	f846 a024 	str.w	r10, [r6, r4, lsl #2]
    54b2:	3401      	adds	r4, #1
    54b4:	e779      	b.n	53aa <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x76>
	...

000054b8 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const>:
    54b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    54bc:	b0a1      	sub	sp, #132	; 0x84
    54be:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
    54c0:	900c      	str	r0, [sp, #48]	; 0x30
    54c2:	f104 066c 	add.w	r6, r4, #108	; 0x6c
    54c6:	460d      	mov	r5, r1
    54c8:	4630      	mov	r0, r6
    54ca:	a910      	add	r1, sp, #64	; 0x40
    54cc:	e881 000c 	stmia.w	r1, {r2, r3}
    54d0:	f8dd 80b8 	ldr.w	r8, [sp, #184]	; 0xb8
    54d4:	f7fe f916 	bl	3704 <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)>
    54d8:	9009      	str	r0, [sp, #36]	; 0x24
    54da:	4630      	mov	r0, r6
    54dc:	f7fe f85e 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    54e0:	4681      	mov	r9, r0
    54e2:	982f      	ldr	r0, [sp, #188]	; 0xbc
    54e4:	f011 fcbe 	bl	16e64 <wcslen>
    54e8:	2300      	movs	r3, #0
    54ea:	469a      	mov	r10, r3
    54ec:	900b      	str	r0, [sp, #44]	; 0x2c
    54ee:	9312      	str	r3, [sp, #72]	; 0x48
    54f0:	ae10      	add	r6, sp, #64	; 0x40
    54f2:	4630      	mov	r0, r6
    54f4:	a92a      	add	r1, sp, #168	; 0xa8
    54f6:	f7ff fe02 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    54fa:	f8dd b048 	ldr.w	r11, [sp, #72]	; 0x48
    54fe:	2800      	cmp	r0, #0
    5500:	f000 8273 	beq.w	59ea <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x532>
    5504:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5506:	459a      	cmp	r10, r3
    5508:	f080 826f 	bcs.w	59ea <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x532>
    550c:	f1bb 0f00 	cmp.w	r11, #0
    5510:	f040 826b 	bne.w	59ea <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x532>
    5514:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
    5516:	4648      	mov	r0, r9
    5518:	f853 102a 	ldr.w	r1, [r3, r10, lsl #2]
    551c:	465a      	mov	r2, r11
    551e:	eb03 078a 	add.w	r7, r3, r10, lsl #2
    5522:	f7fe fff6 	bl	4512 <std::__ctype_abstract_base<wchar_t>::narrow(wchar_t, char) const>
    5526:	2825      	cmp	r0, #37	; 0x25
    5528:	f040 8206 	bne.w	5938 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x480>
    552c:	f10a 0301 	add.w	r3, r10, #1
    5530:	4648      	mov	r0, r9
    5532:	6879      	ldr	r1, [r7, #4]
    5534:	465a      	mov	r2, r11
    5536:	930a      	str	r3, [sp, #40]	; 0x28
    5538:	f7fe ffeb 	bl	4512 <std::__ctype_abstract_base<wchar_t>::narrow(wchar_t, char) const>
    553c:	2845      	cmp	r0, #69	; 0x45
    553e:	f8cd b04c 	str.w	r11, [sp, #76]	; 0x4c
    5542:	d001      	beq.n	5548 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x90>
    5544:	284f      	cmp	r0, #79	; 0x4f
    5546:	d107      	bne.n	5558 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0xa0>
    5548:	f10a 0302 	add.w	r3, r10, #2
    554c:	4648      	mov	r0, r9
    554e:	68b9      	ldr	r1, [r7, #8]
    5550:	2200      	movs	r2, #0
    5552:	930a      	str	r3, [sp, #40]	; 0x28
    5554:	f7fe ffdd 	bl	4512 <std::__ctype_abstract_base<wchar_t>::narrow(wchar_t, char) const>
    5558:	3841      	subs	r0, #65	; 0x41
    555a:	ae10      	add	r6, sp, #64	; 0x40
    555c:	2838      	cmp	r0, #56	; 0x38
    555e:	f200 81e4 	bhi.w	592a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x472>
    5562:	e8df f010 	tbh	[pc, r0, lsl #1]
    5566:	003f      	.short	0x003f
    5568:	01780065 	.word	0x01780065
    556c:	01e200be 	.word	0x01e200be
    5570:	01e201e2 	.word	0x01e201e2
    5574:	00cf00c2 	.word	0x00cf00c2
    5578:	01e201e2 	.word	0x01e201e2
    557c:	010101e2 	.word	0x010101e2
    5580:	01e201e2 	.word	0x01e201e2
    5584:	01e201e2 	.word	0x01e201e2
    5588:	0131011d 	.word	0x0131011d
    558c:	01e20154 	.word	0x01e20154
    5590:	01e201e2 	.word	0x01e201e2
    5594:	0178015f 	.word	0x0178015f
    5598:	01e201a1 	.word	0x01e201a1
    559c:	01e201e2 	.word	0x01e201e2
    55a0:	01e201e2 	.word	0x01e201e2
    55a4:	003901e2 	.word	0x003901e2
    55a8:	0076005f 	.word	0x0076005f
    55ac:	0088007b 	.word	0x0088007b
    55b0:	01e201e2 	.word	0x01e201e2
    55b4:	01e2005f 	.word	0x01e2005f
    55b8:	01e201e2 	.word	0x01e201e2
    55bc:	00dc01e2 	.word	0x00dc01e2
    55c0:	01e2010e 	.word	0x01e2010e
    55c4:	01e201e2 	.word	0x01e201e2
    55c8:	01e201e2 	.word	0x01e201e2
    55cc:	01e2014a 	.word	0x01e2014a
    55d0:	01e201e2 	.word	0x01e201e2
    55d4:	0178015a 	.word	0x0178015a
    55d8:	ae14      	add	r6, sp, #80	; 0x50
    55da:	9809      	ldr	r0, [sp, #36]	; 0x24
    55dc:	4631      	mov	r1, r6
    55de:	f7fd ff4c 	bl	347a <std::__timepunct<wchar_t>::_M_days_abbreviated(wchar_t const**) const>
    55e2:	e004      	b.n	55ee <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x136>
    55e4:	ae14      	add	r6, sp, #80	; 0x50
    55e6:	9809      	ldr	r0, [sp, #36]	; 0x24
    55e8:	4631      	mov	r1, r6
    55ea:	f7fd ff30 	bl	344e <std::__timepunct<wchar_t>::_M_days(wchar_t const**) const>
    55ee:	ab2a      	add	r3, sp, #168	; 0xa8
    55f0:	e893 0003 	ldmia.w	r3, {r0, r1}
    55f4:	e88d 0003 	stmia.w	sp, {r0, r1}
    55f8:	f108 0318 	add.w	r3, r8, #24
    55fc:	9302      	str	r3, [sp, #8]
    55fe:	af0e      	add	r7, sp, #56	; 0x38
    5600:	9603      	str	r6, [sp, #12]
    5602:	2307      	movs	r3, #7
    5604:	9304      	str	r3, [sp, #16]
    5606:	ab12      	add	r3, sp, #72	; 0x48
    5608:	9405      	str	r4, [sp, #20]
    560a:	9306      	str	r3, [sp, #24]
    560c:	ae10      	add	r6, sp, #64	; 0x40
    560e:	4638      	mov	r0, r7
    5610:	e896 000c 	ldmia.w	r6, {r2, r3}
    5614:	4629      	mov	r1, r5
    5616:	f7ff fdd6 	bl	51c6 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    561a:	e897 0003 	ldmia.w	r7, {r0, r1}
    561e:	e886 0003 	stmia.w	r6, {r0, r1}
    5622:	e186      	b.n	5932 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x47a>
    5624:	ae14      	add	r6, sp, #80	; 0x50
    5626:	9809      	ldr	r0, [sp, #36]	; 0x24
    5628:	4631      	mov	r1, r6
    562a:	f7fd ff66 	bl	34fa <std::__timepunct<wchar_t>::_M_months_abbreviated(wchar_t const**) const>
    562e:	e004      	b.n	563a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x182>
    5630:	ae14      	add	r6, sp, #80	; 0x50
    5632:	9809      	ldr	r0, [sp, #36]	; 0x24
    5634:	4631      	mov	r1, r6
    5636:	f7fd ff36 	bl	34a6 <std::__timepunct<wchar_t>::_M_months(wchar_t const**) const>
    563a:	ab2a      	add	r3, sp, #168	; 0xa8
    563c:	e893 0003 	ldmia.w	r3, {r0, r1}
    5640:	f108 0310 	add.w	r3, r8, #16
    5644:	9302      	str	r3, [sp, #8]
    5646:	af0e      	add	r7, sp, #56	; 0x38
    5648:	e88d 0003 	stmia.w	sp, {r0, r1}
    564c:	9603      	str	r6, [sp, #12]
    564e:	230c      	movs	r3, #12
    5650:	e7d8      	b.n	5604 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x14c>
    5652:	9809      	ldr	r0, [sp, #36]	; 0x24
    5654:	a914      	add	r1, sp, #80	; 0x50
    5656:	f7fd fef3 	bl	3440 <std::__timepunct<wchar_t>::_M_date_time_formats(wchar_t const**) const>
    565a:	e0e7      	b.n	582c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x374>
    565c:	ab2a      	add	r3, sp, #168	; 0xa8
    565e:	e893 0003 	ldmia.w	r3, {r0, r1}
    5662:	f108 030c 	add.w	r3, r8, #12
    5666:	9302      	str	r3, [sp, #8]
    5668:	2301      	movs	r3, #1
    566a:	9303      	str	r3, [sp, #12]
    566c:	af0e      	add	r7, sp, #56	; 0x38
    566e:	e88d 0003 	stmia.w	sp, {r0, r1}
    5672:	231f      	movs	r3, #31
    5674:	e0b3      	b.n	57de <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x326>
    5676:	4630      	mov	r0, r6
    5678:	f7ff fd1b 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    567c:	2108      	movs	r1, #8
    567e:	4602      	mov	r2, r0
    5680:	4648      	mov	r0, r9
    5682:	f7fe fc62 	bl	3f4a <std::__ctype_abstract_base<wchar_t>::is(char, wchar_t) const>
    5686:	af0e      	add	r7, sp, #56	; 0x38
    5688:	b1b8      	cbz	r0, 56ba <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x202>
    568a:	4630      	mov	r0, r6
    568c:	f7fe fc52 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    5690:	4603      	mov	r3, r0
    5692:	aa2a      	add	r2, sp, #168	; 0xa8
    5694:	e892 0003 	ldmia.w	r2, {r0, r1}
    5698:	f108 020c 	add.w	r2, r8, #12
    569c:	e88d 0003 	stmia.w	sp, {r0, r1}
    56a0:	9202      	str	r2, [sp, #8]
    56a2:	2201      	movs	r2, #1
    56a4:	9203      	str	r2, [sp, #12]
    56a6:	2109      	movs	r1, #9
    56a8:	9205      	str	r2, [sp, #20]
    56aa:	aa12      	add	r2, sp, #72	; 0x48
    56ac:	9104      	str	r1, [sp, #16]
    56ae:	9406      	str	r4, [sp, #24]
    56b0:	9207      	str	r2, [sp, #28]
    56b2:	4638      	mov	r0, r7
    56b4:	cb0c      	ldmia	r3, {r2, r3}
    56b6:	4629      	mov	r1, r5
    56b8:	e09c      	b.n	57f4 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x33c>
    56ba:	ab2a      	add	r3, sp, #168	; 0xa8
    56bc:	e893 0003 	ldmia.w	r3, {r0, r1}
    56c0:	f108 030c 	add.w	r3, r8, #12
    56c4:	9302      	str	r3, [sp, #8]
    56c6:	230a      	movs	r3, #10
    56c8:	9303      	str	r3, [sp, #12]
    56ca:	231f      	movs	r3, #31
    56cc:	9304      	str	r3, [sp, #16]
    56ce:	2302      	movs	r3, #2
    56d0:	9305      	str	r3, [sp, #20]
    56d2:	ab12      	add	r3, sp, #72	; 0x48
    56d4:	e88d 0003 	stmia.w	sp, {r0, r1}
    56d8:	9406      	str	r4, [sp, #24]
    56da:	9307      	str	r3, [sp, #28]
    56dc:	4638      	mov	r0, r7
    56de:	4629      	mov	r1, r5
    56e0:	e086      	b.n	57f0 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x338>
    56e2:	ae14      	add	r6, sp, #80	; 0x50
    56e4:	4648      	mov	r0, r9
    56e6:	499e      	ldr	r1, [pc, #632]	; (5960 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x4a8>)
    56e8:	e094      	b.n	5814 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x35c>
    56ea:	ab2a      	add	r3, sp, #168	; 0xa8
    56ec:	e893 0003 	ldmia.w	r3, {r0, r1}
    56f0:	f108 0308 	add.w	r3, r8, #8
    56f4:	9302      	str	r3, [sp, #8]
    56f6:	2300      	movs	r3, #0
    56f8:	9303      	str	r3, [sp, #12]
    56fa:	af0e      	add	r7, sp, #56	; 0x38
    56fc:	e88d 0003 	stmia.w	sp, {r0, r1}
    5700:	2317      	movs	r3, #23
    5702:	e06c      	b.n	57de <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x326>
    5704:	ab2a      	add	r3, sp, #168	; 0xa8
    5706:	e893 0003 	ldmia.w	r3, {r0, r1}
    570a:	f108 0308 	add.w	r3, r8, #8
    570e:	9302      	str	r3, [sp, #8]
    5710:	2301      	movs	r3, #1
    5712:	9303      	str	r3, [sp, #12]
    5714:	af0e      	add	r7, sp, #56	; 0x38
    5716:	e88d 0003 	stmia.w	sp, {r0, r1}
    571a:	230c      	movs	r3, #12
    571c:	e05f      	b.n	57de <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x326>
    571e:	ab2a      	add	r3, sp, #168	; 0xa8
    5720:	e893 0003 	ldmia.w	r3, {r0, r1}
    5724:	ab13      	add	r3, sp, #76	; 0x4c
    5726:	9302      	str	r3, [sp, #8]
    5728:	2301      	movs	r3, #1
    572a:	9303      	str	r3, [sp, #12]
    572c:	230c      	movs	r3, #12
    572e:	e88d 0003 	stmia.w	sp, {r0, r1}
    5732:	9304      	str	r3, [sp, #16]
    5734:	2302      	movs	r3, #2
    5736:	9305      	str	r3, [sp, #20]
    5738:	ab12      	add	r3, sp, #72	; 0x48
    573a:	af0e      	add	r7, sp, #56	; 0x38
    573c:	9406      	str	r4, [sp, #24]
    573e:	9307      	str	r3, [sp, #28]
    5740:	ae10      	add	r6, sp, #64	; 0x40
    5742:	4638      	mov	r0, r7
    5744:	e896 000c 	ldmia.w	r6, {r2, r3}
    5748:	4629      	mov	r1, r5
    574a:	f7ff fcdf 	bl	510c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    574e:	e897 0003 	ldmia.w	r7, {r0, r1}
    5752:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5754:	e886 0003 	stmia.w	r6, {r0, r1}
    5758:	2b00      	cmp	r3, #0
    575a:	f040 80ea 	bne.w	5932 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x47a>
    575e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5760:	3b01      	subs	r3, #1
    5762:	f8c8 3010 	str.w	r3, [r8, #16]
    5766:	e0e4      	b.n	5932 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x47a>
    5768:	ab2a      	add	r3, sp, #168	; 0xa8
    576a:	e893 0003 	ldmia.w	r3, {r0, r1}
    576e:	f108 0304 	add.w	r3, r8, #4
    5772:	9302      	str	r3, [sp, #8]
    5774:	2300      	movs	r3, #0
    5776:	9303      	str	r3, [sp, #12]
    5778:	af0e      	add	r7, sp, #56	; 0x38
    577a:	e88d 0003 	stmia.w	sp, {r0, r1}
    577e:	233b      	movs	r3, #59	; 0x3b
    5780:	e02d      	b.n	57de <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x326>
    5782:	4630      	mov	r0, r6
    5784:	f7ff fc95 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5788:	2200      	movs	r2, #0
    578a:	4601      	mov	r1, r0
    578c:	4648      	mov	r0, r9
    578e:	f7fe fec0 	bl	4512 <std::__ctype_abstract_base<wchar_t>::narrow(wchar_t, char) const>
    5792:	280a      	cmp	r0, #10
    5794:	f040 80c9 	bne.w	592a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x472>
    5798:	4630      	mov	r0, r6
    579a:	f7fe fbcb 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    579e:	e0c8      	b.n	5932 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x47a>
    57a0:	4648      	mov	r0, r9
    57a2:	4970      	ldr	r1, [pc, #448]	; (5964 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x4ac>)
    57a4:	ae14      	add	r6, sp, #80	; 0x50
    57a6:	1d8a      	adds	r2, r1, #6
    57a8:	4633      	mov	r3, r6
    57aa:	f7fe f93c 	bl	3a26 <std::__ctype_abstract_base<wchar_t>::widen(char const*, char const*, wchar_t*) const>
    57ae:	ab2a      	add	r3, sp, #168	; 0xa8
    57b0:	e893 0003 	ldmia.w	r3, {r0, r1}
    57b4:	ab12      	add	r3, sp, #72	; 0x48
    57b6:	af0e      	add	r7, sp, #56	; 0x38
    57b8:	e88d 0003 	stmia.w	sp, {r0, r1}
    57bc:	9402      	str	r4, [sp, #8]
    57be:	9303      	str	r3, [sp, #12]
    57c0:	f8cd 8010 	str.w	r8, [sp, #16]
    57c4:	9605      	str	r6, [sp, #20]
    57c6:	e03e      	b.n	5846 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x38e>
    57c8:	ab2a      	add	r3, sp, #168	; 0xa8
    57ca:	e893 0003 	ldmia.w	r3, {r0, r1}
    57ce:	e88d 0003 	stmia.w	sp, {r0, r1}
    57d2:	2300      	movs	r3, #0
    57d4:	9303      	str	r3, [sp, #12]
    57d6:	af0e      	add	r7, sp, #56	; 0x38
    57d8:	f8cd 8008 	str.w	r8, [sp, #8]
    57dc:	233d      	movs	r3, #61	; 0x3d
    57de:	4638      	mov	r0, r7
    57e0:	4629      	mov	r1, r5
    57e2:	9304      	str	r3, [sp, #16]
    57e4:	2302      	movs	r3, #2
    57e6:	9305      	str	r3, [sp, #20]
    57e8:	ab12      	add	r3, sp, #72	; 0x48
    57ea:	9406      	str	r4, [sp, #24]
    57ec:	9307      	str	r3, [sp, #28]
    57ee:	ae10      	add	r6, sp, #64	; 0x40
    57f0:	e896 000c 	ldmia.w	r6, {r2, r3}
    57f4:	f7ff fc8a 	bl	510c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    57f8:	e70f      	b.n	561a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x162>
    57fa:	4630      	mov	r0, r6
    57fc:	f7ff fc59 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5800:	2200      	movs	r2, #0
    5802:	4601      	mov	r1, r0
    5804:	4648      	mov	r0, r9
    5806:	f7fe fe84 	bl	4512 <std::__ctype_abstract_base<wchar_t>::narrow(wchar_t, char) const>
    580a:	2809      	cmp	r0, #9
    580c:	e7c2      	b.n	5794 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x2dc>
    580e:	4648      	mov	r0, r9
    5810:	4955      	ldr	r1, [pc, #340]	; (5968 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x4b0>)
    5812:	ae14      	add	r6, sp, #80	; 0x50
    5814:	f101 0209 	add.w	r2, r1, #9
    5818:	e7c6      	b.n	57a8 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x2f0>
    581a:	9809      	ldr	r0, [sp, #36]	; 0x24
    581c:	a914      	add	r1, sp, #80	; 0x50
    581e:	f7fd fe01 	bl	3424 <std::__timepunct<wchar_t>::_M_date_formats(wchar_t const**) const>
    5822:	e003      	b.n	582c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x374>
    5824:	9809      	ldr	r0, [sp, #36]	; 0x24
    5826:	a914      	add	r1, sp, #80	; 0x50
    5828:	f7fd fe03 	bl	3432 <std::__timepunct<wchar_t>::_M_time_formats(wchar_t const**) const>
    582c:	ab2a      	add	r3, sp, #168	; 0xa8
    582e:	e893 0003 	ldmia.w	r3, {r0, r1}
    5832:	ab12      	add	r3, sp, #72	; 0x48
    5834:	9303      	str	r3, [sp, #12]
    5836:	e88d 0003 	stmia.w	sp, {r0, r1}
    583a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    583c:	af0e      	add	r7, sp, #56	; 0x38
    583e:	9402      	str	r4, [sp, #8]
    5840:	f8cd 8010 	str.w	r8, [sp, #16]
    5844:	9305      	str	r3, [sp, #20]
    5846:	ae10      	add	r6, sp, #64	; 0x40
    5848:	4638      	mov	r0, r7
    584a:	e896 000c 	ldmia.w	r6, {r2, r3}
    584e:	4629      	mov	r1, r5
    5850:	f7ff fe32 	bl	54b8 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const>
    5854:	e6e1      	b.n	561a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x162>
    5856:	ab2a      	add	r3, sp, #168	; 0xa8
    5858:	e893 0003 	ldmia.w	r3, {r0, r1}
    585c:	ab13      	add	r3, sp, #76	; 0x4c
    585e:	9302      	str	r3, [sp, #8]
    5860:	2300      	movs	r3, #0
    5862:	9303      	str	r3, [sp, #12]
    5864:	f242 730f 	movw	r3, #9999	; 0x270f
    5868:	e88d 0003 	stmia.w	sp, {r0, r1}
    586c:	9304      	str	r3, [sp, #16]
    586e:	2304      	movs	r3, #4
    5870:	9305      	str	r3, [sp, #20]
    5872:	ab12      	add	r3, sp, #72	; 0x48
    5874:	af0e      	add	r7, sp, #56	; 0x38
    5876:	9406      	str	r4, [sp, #24]
    5878:	9307      	str	r3, [sp, #28]
    587a:	ae10      	add	r6, sp, #64	; 0x40
    587c:	4638      	mov	r0, r7
    587e:	e896 000c 	ldmia.w	r6, {r2, r3}
    5882:	4629      	mov	r1, r5
    5884:	f7ff fc42 	bl	510c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    5888:	e897 0003 	ldmia.w	r7, {r0, r1}
    588c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    588e:	e886 0003 	stmia.w	r6, {r0, r1}
    5892:	2b00      	cmp	r3, #0
    5894:	d14d      	bne.n	5932 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x47a>
    5896:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    5898:	2b00      	cmp	r3, #0
    589a:	bfb4      	ite	lt
    589c:	3364      	addlt	r3, #100	; 0x64
    589e:	f2a3 736c 	subwge	r3, r3, #1900	; 0x76c
    58a2:	f8c8 3014 	str.w	r3, [r8, #20]
    58a6:	e044      	b.n	5932 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x47a>
    58a8:	4630      	mov	r0, r6
    58aa:	f7ff fc02 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    58ae:	2101      	movs	r1, #1
    58b0:	4602      	mov	r2, r0
    58b2:	4648      	mov	r0, r9
    58b4:	f7fe fb49 	bl	3f4a <std::__ctype_abstract_base<wchar_t>::is(char, wchar_t) const>
    58b8:	2800      	cmp	r0, #0
    58ba:	d036      	beq.n	592a <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x472>
    58bc:	ab2a      	add	r3, sp, #168	; 0xa8
    58be:	e893 0003 	ldmia.w	r3, {r0, r1}
    58c2:	ab14      	add	r3, sp, #80	; 0x50
    58c4:	9302      	str	r3, [sp, #8]
    58c6:	4b29      	ldr	r3, [pc, #164]	; (596c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x4b4>)
    58c8:	e88d 0003 	stmia.w	sp, {r0, r1}
    58cc:	9303      	str	r3, [sp, #12]
    58ce:	230e      	movs	r3, #14
    58d0:	9304      	str	r3, [sp, #16]
    58d2:	ab12      	add	r3, sp, #72	; 0x48
    58d4:	af0e      	add	r7, sp, #56	; 0x38
    58d6:	9405      	str	r4, [sp, #20]
    58d8:	9306      	str	r3, [sp, #24]
    58da:	4638      	mov	r0, r7
    58dc:	e896 000c 	ldmia.w	r6, {r2, r3}
    58e0:	4629      	mov	r1, r5
    58e2:	f7ff fc70 	bl	51c6 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    58e6:	e897 0003 	ldmia.w	r7, {r0, r1}
    58ea:	e886 0003 	stmia.w	r6, {r0, r1}
    58ee:	4630      	mov	r0, r6
    58f0:	a92a      	add	r1, sp, #168	; 0xa8
    58f2:	f7ff fc04 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    58f6:	b1e0      	cbz	r0, 5932 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x47a>
    58f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
    58fa:	b9d3      	cbnz	r3, 5932 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x47a>
    58fc:	9b14      	ldr	r3, [sp, #80]	; 0x50
    58fe:	b9c3      	cbnz	r3, 5932 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x47a>
    5900:	4630      	mov	r0, r6
    5902:	f7ff fbd6 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5906:	212d      	movs	r1, #45	; 0x2d
    5908:	4607      	mov	r7, r0
    590a:	4648      	mov	r0, r9
    590c:	f7fe fe04 	bl	4518 <std::__ctype_abstract_base<wchar_t>::widen(char) const>
    5910:	4287      	cmp	r7, r0
    5912:	d02d      	beq.n	5970 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x4b8>
    5914:	4630      	mov	r0, r6
    5916:	f7ff fbcc 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    591a:	212b      	movs	r1, #43	; 0x2b
    591c:	4606      	mov	r6, r0
    591e:	4648      	mov	r0, r9
    5920:	f7fe fdfa 	bl	4518 <std::__ctype_abstract_base<wchar_t>::widen(char) const>
    5924:	4286      	cmp	r6, r0
    5926:	d104      	bne.n	5932 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x47a>
    5928:	e022      	b.n	5970 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x4b8>
    592a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    592c:	f043 0304 	orr.w	r3, r3, #4
    5930:	9312      	str	r3, [sp, #72]	; 0x48
    5932:	f8dd a028 	ldr.w	r10, [sp, #40]	; 0x28
    5936:	e00f      	b.n	5958 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x4a0>
    5938:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
    593a:	4630      	mov	r0, r6
    593c:	f853 702a 	ldr.w	r7, [r3, r10, lsl #2]
    5940:	f7ff fbb7 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5944:	4287      	cmp	r7, r0
    5946:	d103      	bne.n	5950 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x498>
    5948:	4630      	mov	r0, r6
    594a:	f7fe faf3 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    594e:	e003      	b.n	5958 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x4a0>
    5950:	9b12      	ldr	r3, [sp, #72]	; 0x48
    5952:	f043 0304 	orr.w	r3, r3, #4
    5956:	9312      	str	r3, [sp, #72]	; 0x48
    5958:	f10a 0a01 	add.w	r10, r10, #1
    595c:	e5c8      	b.n	54f0 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x38>
    595e:	bf00      	nop
    5960:	0001b154 	.word	0x0001b154
    5964:	0001b15d 	.word	0x0001b15d
    5968:	0001b163 	.word	0x0001b163
    596c:	1000012c 	.word	0x1000012c
    5970:	ab2a      	add	r3, sp, #168	; 0xa8
    5972:	e893 0003 	ldmia.w	r3, {r0, r1}
    5976:	2317      	movs	r3, #23
    5978:	e88d 0003 	stmia.w	sp, {r0, r1}
    597c:	f04f 0c00 	mov.w	r12, #0
    5980:	9304      	str	r3, [sp, #16]
    5982:	af14      	add	r7, sp, #80	; 0x50
    5984:	2302      	movs	r3, #2
    5986:	ae12      	add	r6, sp, #72	; 0x48
    5988:	f10d 0b38 	add.w	r11, sp, #56	; 0x38
    598c:	f10d 0a40 	add.w	r10, sp, #64	; 0x40
    5990:	f8cd c00c 	str.w	r12, [sp, #12]
    5994:	9702      	str	r7, [sp, #8]
    5996:	9305      	str	r3, [sp, #20]
    5998:	9406      	str	r4, [sp, #24]
    599a:	9607      	str	r6, [sp, #28]
    599c:	e89a 000c 	ldmia.w	r10, {r2, r3}
    59a0:	f8cd c034 	str.w	r12, [sp, #52]	; 0x34
    59a4:	4658      	mov	r0, r11
    59a6:	4629      	mov	r1, r5
    59a8:	f7ff fbb0 	bl	510c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    59ac:	e89b 0003 	ldmia.w	r11, {r0, r1}
    59b0:	ab2a      	add	r3, sp, #168	; 0xa8
    59b2:	e88a 0003 	stmia.w	r10, {r0, r1}
    59b6:	e893 0003 	ldmia.w	r3, {r0, r1}
    59ba:	f8dd c034 	ldr.w	r12, [sp, #52]	; 0x34
    59be:	e88d 0003 	stmia.w	sp, {r0, r1}
    59c2:	233b      	movs	r3, #59	; 0x3b
    59c4:	9304      	str	r3, [sp, #16]
    59c6:	2302      	movs	r3, #2
    59c8:	9702      	str	r7, [sp, #8]
    59ca:	f8cd c00c 	str.w	r12, [sp, #12]
    59ce:	9305      	str	r3, [sp, #20]
    59d0:	9406      	str	r4, [sp, #24]
    59d2:	9607      	str	r6, [sp, #28]
    59d4:	4658      	mov	r0, r11
    59d6:	e89a 000c 	ldmia.w	r10, {r2, r3}
    59da:	4629      	mov	r1, r5
    59dc:	f7ff fb96 	bl	510c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    59e0:	e89b 0003 	ldmia.w	r11, {r0, r1}
    59e4:	e88a 0003 	stmia.w	r10, {r0, r1}
    59e8:	e7a3      	b.n	5932 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x47a>
    59ea:	f1bb 0f00 	cmp.w	r11, #0
    59ee:	d102      	bne.n	59f6 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x53e>
    59f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    59f2:	459a      	cmp	r10, r3
    59f4:	d005      	beq.n	5a02 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const+0x54a>
    59f6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
    59f8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
    59fa:	681b      	ldr	r3, [r3, #0]
    59fc:	f043 0304 	orr.w	r3, r3, #4
    5a00:	6013      	str	r3, [r2, #0]
    5a02:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5a04:	e896 0003 	ldmia.w	r6, {r0, r1}
    5a08:	e883 0003 	stmia.w	r3, {r0, r1}
    5a0c:	4618      	mov	r0, r3
    5a0e:	b021      	add	sp, #132	; 0x84
    5a10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00005a14 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const>:
    5a14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    5a18:	4689      	mov	r9, r1
    5a1a:	b08d      	sub	sp, #52	; 0x34
    5a1c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    5a20:	ac08      	add	r4, sp, #32
    5a22:	4605      	mov	r5, r0
    5a24:	f108 006c 	add.w	r0, r8, #108	; 0x6c
    5a28:	e884 000c 	stmia.w	r4, {r2, r3}
    5a2c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    5a2e:	f7fd fe69 	bl	3704 <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)>
    5a32:	a90a      	add	r1, sp, #40	; 0x28
    5a34:	f7fd fcfd 	bl	3432 <std::__timepunct<wchar_t>::_M_time_formats(wchar_t const**) const>
    5a38:	ab14      	add	r3, sp, #80	; 0x50
    5a3a:	e893 0003 	ldmia.w	r3, {r0, r1}
    5a3e:	9b18      	ldr	r3, [sp, #96]	; 0x60
    5a40:	e88d 0003 	stmia.w	sp, {r0, r1}
    5a44:	9304      	str	r3, [sp, #16]
    5a46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5a48:	af06      	add	r7, sp, #24
    5a4a:	f8cd 8008 	str.w	r8, [sp, #8]
    5a4e:	9603      	str	r6, [sp, #12]
    5a50:	9305      	str	r3, [sp, #20]
    5a52:	4638      	mov	r0, r7
    5a54:	e894 000c 	ldmia.w	r4, {r2, r3}
    5a58:	4649      	mov	r1, r9
    5a5a:	f7ff fd2d 	bl	54b8 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const>
    5a5e:	e897 0003 	ldmia.w	r7, {r0, r1}
    5a62:	e884 0003 	stmia.w	r4, {r0, r1}
    5a66:	4620      	mov	r0, r4
    5a68:	a914      	add	r1, sp, #80	; 0x50
    5a6a:	f7ff fb35 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    5a6e:	b118      	cbz	r0, 5a78 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x64>
    5a70:	6833      	ldr	r3, [r6, #0]
    5a72:	f043 0302 	orr.w	r3, r3, #2
    5a76:	6033      	str	r3, [r6, #0]
    5a78:	e894 0003 	ldmia.w	r4, {r0, r1}
    5a7c:	e885 0003 	stmia.w	r5, {r0, r1}
    5a80:	4628      	mov	r0, r5
    5a82:	b00d      	add	sp, #52	; 0x34
    5a84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00005a88 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const>:
    5a88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    5a8c:	4689      	mov	r9, r1
    5a8e:	b08d      	sub	sp, #52	; 0x34
    5a90:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    5a94:	ac08      	add	r4, sp, #32
    5a96:	4605      	mov	r5, r0
    5a98:	f108 006c 	add.w	r0, r8, #108	; 0x6c
    5a9c:	e884 000c 	stmia.w	r4, {r2, r3}
    5aa0:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    5aa2:	f7fd fe2f 	bl	3704 <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)>
    5aa6:	a90a      	add	r1, sp, #40	; 0x28
    5aa8:	f7fd fcbc 	bl	3424 <std::__timepunct<wchar_t>::_M_date_formats(wchar_t const**) const>
    5aac:	ab14      	add	r3, sp, #80	; 0x50
    5aae:	e893 0003 	ldmia.w	r3, {r0, r1}
    5ab2:	9b18      	ldr	r3, [sp, #96]	; 0x60
    5ab4:	e88d 0003 	stmia.w	sp, {r0, r1}
    5ab8:	9304      	str	r3, [sp, #16]
    5aba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5abc:	af06      	add	r7, sp, #24
    5abe:	f8cd 8008 	str.w	r8, [sp, #8]
    5ac2:	9603      	str	r6, [sp, #12]
    5ac4:	9305      	str	r3, [sp, #20]
    5ac6:	4638      	mov	r0, r7
    5ac8:	e894 000c 	ldmia.w	r4, {r2, r3}
    5acc:	4649      	mov	r1, r9
    5ace:	f7ff fcf3 	bl	54b8 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*) const>
    5ad2:	e897 0003 	ldmia.w	r7, {r0, r1}
    5ad6:	e884 0003 	stmia.w	r4, {r0, r1}
    5ada:	4620      	mov	r0, r4
    5adc:	a914      	add	r1, sp, #80	; 0x50
    5ade:	f7ff fafb 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    5ae2:	b118      	cbz	r0, 5aec <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x64>
    5ae4:	6833      	ldr	r3, [r6, #0]
    5ae6:	f043 0302 	orr.w	r3, r3, #2
    5aea:	6033      	str	r3, [r6, #0]
    5aec:	e894 0003 	ldmia.w	r4, {r0, r1}
    5af0:	e885 0003 	stmia.w	r5, {r0, r1}
    5af4:	4628      	mov	r0, r5
    5af6:	b00d      	add	sp, #52	; 0x34
    5af8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00005afc <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const>:
    5afc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
    5b00:	b09c      	sub	sp, #112	; 0x70
    5b02:	f8dd 8098 	ldr.w	r8, [sp, #152]	; 0x98
    5b06:	ac0a      	add	r4, sp, #40	; 0x28
    5b08:	f108 096c 	add.w	r9, r8, #108	; 0x6c
    5b0c:	4606      	mov	r6, r0
    5b0e:	4648      	mov	r0, r9
    5b10:	e884 000c 	stmia.w	r4, {r2, r3}
    5b14:	468a      	mov	r10, r1
    5b16:	9d27      	ldr	r5, [sp, #156]	; 0x9c
    5b18:	f7fd fdf4 	bl	3704 <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)>
    5b1c:	4607      	mov	r7, r0
    5b1e:	4648      	mov	r0, r9
    5b20:	f10d 0938 	add.w	r9, sp, #56	; 0x38
    5b24:	f7fd fd3a 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    5b28:	4638      	mov	r0, r7
    5b2a:	4649      	mov	r1, r9
    5b2c:	f7fd fca5 	bl	347a <std::__timepunct<wchar_t>::_M_days_abbreviated(wchar_t const**) const>
    5b30:	4638      	mov	r0, r7
    5b32:	a915      	add	r1, sp, #84	; 0x54
    5b34:	f7fd fc8b 	bl	344e <std::__timepunct<wchar_t>::_M_days(wchar_t const**) const>
    5b38:	2300      	movs	r3, #0
    5b3a:	930d      	str	r3, [sp, #52]	; 0x34
    5b3c:	ab24      	add	r3, sp, #144	; 0x90
    5b3e:	e893 0003 	ldmia.w	r3, {r0, r1}
    5b42:	ab0c      	add	r3, sp, #48	; 0x30
    5b44:	e88d 0003 	stmia.w	sp, {r0, r1}
    5b48:	9302      	str	r3, [sp, #8]
    5b4a:	2307      	movs	r3, #7
    5b4c:	9304      	str	r3, [sp, #16]
    5b4e:	ab0d      	add	r3, sp, #52	; 0x34
    5b50:	af08      	add	r7, sp, #32
    5b52:	f8cd 900c 	str.w	r9, [sp, #12]
    5b56:	f8cd 8014 	str.w	r8, [sp, #20]
    5b5a:	9306      	str	r3, [sp, #24]
    5b5c:	4638      	mov	r0, r7
    5b5e:	e894 000c 	ldmia.w	r4, {r2, r3}
    5b62:	4651      	mov	r1, r10
    5b64:	f7ff fbe6 	bl	5334 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    5b68:	e897 0003 	ldmia.w	r7, {r0, r1}
    5b6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5b6e:	e884 0003 	stmia.w	r4, {r0, r1}
    5b72:	b91b      	cbnz	r3, 5b7c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x80>
    5b74:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    5b76:	9b28      	ldr	r3, [sp, #160]	; 0xa0
    5b78:	619a      	str	r2, [r3, #24]
    5b7a:	e003      	b.n	5b84 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x88>
    5b7c:	682b      	ldr	r3, [r5, #0]
    5b7e:	f043 0304 	orr.w	r3, r3, #4
    5b82:	602b      	str	r3, [r5, #0]
    5b84:	4620      	mov	r0, r4
    5b86:	a924      	add	r1, sp, #144	; 0x90
    5b88:	f7ff faa6 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    5b8c:	b118      	cbz	r0, 5b96 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x9a>
    5b8e:	682b      	ldr	r3, [r5, #0]
    5b90:	f043 0302 	orr.w	r3, r3, #2
    5b94:	602b      	str	r3, [r5, #0]
    5b96:	e894 0003 	ldmia.w	r4, {r0, r1}
    5b9a:	e886 0003 	stmia.w	r6, {r0, r1}
    5b9e:	4630      	mov	r0, r6
    5ba0:	b01c      	add	sp, #112	; 0x70
    5ba2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

00005ba6 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const>:
    5ba6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
    5baa:	b0a6      	sub	sp, #152	; 0x98
    5bac:	f8dd 80c0 	ldr.w	r8, [sp, #192]	; 0xc0
    5bb0:	ac0a      	add	r4, sp, #40	; 0x28
    5bb2:	f108 096c 	add.w	r9, r8, #108	; 0x6c
    5bb6:	4606      	mov	r6, r0
    5bb8:	4648      	mov	r0, r9
    5bba:	e884 000c 	stmia.w	r4, {r2, r3}
    5bbe:	468a      	mov	r10, r1
    5bc0:	9d31      	ldr	r5, [sp, #196]	; 0xc4
    5bc2:	f7fd fd9f 	bl	3704 <std::__timepunct<wchar_t> const& std::use_facet<std::__timepunct<wchar_t> >(std::locale const&)>
    5bc6:	4607      	mov	r7, r0
    5bc8:	4648      	mov	r0, r9
    5bca:	f10d 0938 	add.w	r9, sp, #56	; 0x38
    5bce:	f7fd fce5 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    5bd2:	4638      	mov	r0, r7
    5bd4:	4649      	mov	r1, r9
    5bd6:	f7fd fc90 	bl	34fa <std::__timepunct<wchar_t>::_M_months_abbreviated(wchar_t const**) const>
    5bda:	4638      	mov	r0, r7
    5bdc:	a91a      	add	r1, sp, #104	; 0x68
    5bde:	f7fd fc62 	bl	34a6 <std::__timepunct<wchar_t>::_M_months(wchar_t const**) const>
    5be2:	2300      	movs	r3, #0
    5be4:	930d      	str	r3, [sp, #52]	; 0x34
    5be6:	ab2e      	add	r3, sp, #184	; 0xb8
    5be8:	e893 0003 	ldmia.w	r3, {r0, r1}
    5bec:	ab0c      	add	r3, sp, #48	; 0x30
    5bee:	e88d 0003 	stmia.w	sp, {r0, r1}
    5bf2:	9302      	str	r3, [sp, #8]
    5bf4:	230c      	movs	r3, #12
    5bf6:	9304      	str	r3, [sp, #16]
    5bf8:	ab0d      	add	r3, sp, #52	; 0x34
    5bfa:	af08      	add	r7, sp, #32
    5bfc:	f8cd 900c 	str.w	r9, [sp, #12]
    5c00:	f8cd 8014 	str.w	r8, [sp, #20]
    5c04:	9306      	str	r3, [sp, #24]
    5c06:	4638      	mov	r0, r7
    5c08:	e894 000c 	ldmia.w	r4, {r2, r3}
    5c0c:	4651      	mov	r1, r10
    5c0e:	f7ff fb91 	bl	5334 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    5c12:	e897 0003 	ldmia.w	r7, {r0, r1}
    5c16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5c18:	e884 0003 	stmia.w	r4, {r0, r1}
    5c1c:	b91b      	cbnz	r3, 5c26 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x80>
    5c1e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    5c20:	9b32      	ldr	r3, [sp, #200]	; 0xc8
    5c22:	611a      	str	r2, [r3, #16]
    5c24:	e003      	b.n	5c2e <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x88>
    5c26:	682b      	ldr	r3, [r5, #0]
    5c28:	f043 0304 	orr.w	r3, r3, #4
    5c2c:	602b      	str	r3, [r5, #0]
    5c2e:	4620      	mov	r0, r4
    5c30:	a92e      	add	r1, sp, #184	; 0xb8
    5c32:	f7ff fa51 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    5c36:	b118      	cbz	r0, 5c40 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x9a>
    5c38:	682b      	ldr	r3, [r5, #0]
    5c3a:	f043 0302 	orr.w	r3, r3, #2
    5c3e:	602b      	str	r3, [r5, #0]
    5c40:	e894 0003 	ldmia.w	r4, {r0, r1}
    5c44:	e886 0003 	stmia.w	r6, {r0, r1}
    5c48:	4630      	mov	r0, r6
    5c4a:	b026      	add	sp, #152	; 0x98
    5c4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

00005c50 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const>:
    5c50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    5c54:	b08f      	sub	sp, #60	; 0x3c
    5c56:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
    5c5a:	ac0a      	add	r4, sp, #40	; 0x28
    5c5c:	4606      	mov	r6, r0
    5c5e:	f108 006c 	add.w	r0, r8, #108	; 0x6c
    5c62:	4689      	mov	r9, r1
    5c64:	e884 000c 	stmia.w	r4, {r2, r3}
    5c68:	9d19      	ldr	r5, [sp, #100]	; 0x64
    5c6a:	f7fd fc97 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    5c6e:	2300      	movs	r3, #0
    5c70:	aa16      	add	r2, sp, #88	; 0x58
    5c72:	e892 0003 	ldmia.w	r2, {r0, r1}
    5c76:	930d      	str	r3, [sp, #52]	; 0x34
    5c78:	9303      	str	r3, [sp, #12]
    5c7a:	f242 730f 	movw	r3, #9999	; 0x270f
    5c7e:	e88d 0003 	stmia.w	sp, {r0, r1}
    5c82:	9304      	str	r3, [sp, #16]
    5c84:	2304      	movs	r3, #4
    5c86:	9305      	str	r3, [sp, #20]
    5c88:	aa0c      	add	r2, sp, #48	; 0x30
    5c8a:	ab0d      	add	r3, sp, #52	; 0x34
    5c8c:	af08      	add	r7, sp, #32
    5c8e:	9202      	str	r2, [sp, #8]
    5c90:	f8cd 8018 	str.w	r8, [sp, #24]
    5c94:	9307      	str	r3, [sp, #28]
    5c96:	4638      	mov	r0, r7
    5c98:	e894 000c 	ldmia.w	r4, {r2, r3}
    5c9c:	4649      	mov	r1, r9
    5c9e:	f7ff fa35 	bl	510c <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    5ca2:	e897 0003 	ldmia.w	r7, {r0, r1}
    5ca6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5ca8:	e884 0003 	stmia.w	r4, {r0, r1}
    5cac:	b943      	cbnz	r3, 5cc0 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x70>
    5cae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5cb0:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    5cb2:	2b00      	cmp	r3, #0
    5cb4:	bfb4      	ite	lt
    5cb6:	3364      	addlt	r3, #100	; 0x64
    5cb8:	f2a3 736c 	subwge	r3, r3, #1900	; 0x76c
    5cbc:	6153      	str	r3, [r2, #20]
    5cbe:	e003      	b.n	5cc8 <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x78>
    5cc0:	682b      	ldr	r3, [r5, #0]
    5cc2:	f043 0304 	orr.w	r3, r3, #4
    5cc6:	602b      	str	r3, [r5, #0]
    5cc8:	4620      	mov	r0, r4
    5cca:	a916      	add	r1, sp, #88	; 0x58
    5ccc:	f7ff fa04 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    5cd0:	b118      	cbz	r0, 5cda <std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x8a>
    5cd2:	682b      	ldr	r3, [r5, #0]
    5cd4:	f043 0302 	orr.w	r3, r3, #2
    5cd8:	602b      	str	r3, [r5, #0]
    5cda:	e894 0003 	ldmia.w	r4, {r0, r1}
    5cde:	e886 0003 	stmia.w	r6, {r0, r1}
    5ce2:	4630      	mov	r0, r6
    5ce4:	b00f      	add	sp, #60	; 0x3c
    5ce6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

00005cec <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>:
    5cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    5cf0:	b08f      	sub	sp, #60	; 0x3c
    5cf2:	a908      	add	r1, sp, #32
    5cf4:	e881 000c 	stmia.w	r1, {r2, r3}
    5cf8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    5cfa:	9005      	str	r0, [sp, #20]
    5cfc:	f103 046c 	add.w	r4, r3, #108	; 0x6c
    5d00:	4620      	mov	r0, r4
    5d02:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
    5d04:	f7fd fc4a 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    5d08:	9003      	str	r0, [sp, #12]
    5d0a:	4620      	mov	r0, r4
    5d0c:	f7fd ff4e 	bl	3bac <std::__use_cache<std::__moneypunct_cache<wchar_t, false> >::operator()(std::locale const&) const [clone .isra.39]>
    5d10:	f100 0340 	add.w	r3, r0, #64	; 0x40
    5d14:	9306      	str	r3, [sp, #24]
    5d16:	6a83      	ldr	r3, [r0, #40]	; 0x28
    5d18:	4604      	mov	r4, r0
    5d1a:	b11b      	cbz	r3, 5d24 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x38>
    5d1c:	6b03      	ldr	r3, [r0, #48]	; 0x30
    5d1e:	3300      	adds	r3, #0
    5d20:	bf18      	it	ne
    5d22:	2301      	movne	r3, #1
    5d24:	9301      	str	r3, [sp, #4]
    5d26:	7c22      	ldrb	r2, [r4, #16]
    5d28:	4bae      	ldr	r3, [pc, #696]	; (5fe4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f8>)
    5d2a:	930b      	str	r3, [sp, #44]	; 0x2c
    5d2c:	461d      	mov	r5, r3
    5d2e:	b11a      	cbz	r2, 5d38 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x4c>
    5d30:	a80b      	add	r0, sp, #44	; 0x2c
    5d32:	2120      	movs	r1, #32
    5d34:	f008 ff4b 	bl	ebce <std::string::reserve(unsigned int)>
    5d38:	a80e      	add	r0, sp, #56	; 0x38
    5d3a:	f840 5d08 	str.w	r5, [r0, #-8]!
    5d3e:	2500      	movs	r5, #0
    5d40:	46a8      	mov	r8, r5
    5d42:	462e      	mov	r6, r5
    5d44:	46a9      	mov	r9, r5
    5d46:	46aa      	mov	r10, r5
    5d48:	2120      	movs	r1, #32
    5d4a:	f008 ff40 	bl	ebce <std::string::reserve(unsigned int)>
    5d4e:	f104 0344 	add.w	r3, r4, #68	; 0x44
    5d52:	9307      	str	r3, [sp, #28]
    5d54:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    5d56:	9502      	str	r5, [sp, #8]
    5d58:	930d      	str	r3, [sp, #52]	; 0x34
    5d5a:	ab0d      	add	r3, sp, #52	; 0x34
    5d5c:	5ceb      	ldrb	r3, [r5, r3]
    5d5e:	2b04      	cmp	r3, #4
    5d60:	f200 8161 	bhi.w	6026 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    5d64:	e8df f003 	tbb	[pc, r3]
    5d68:	2e038ea3 	.word	0x2e038ea3
    5d6c:	5e          	.byte	0x5e
    5d6d:	00          	.byte	0x00
    5d6e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    5d70:	68db      	ldr	r3, [r3, #12]
    5d72:	0599      	lsls	r1, r3, #22
    5d74:	f100 814f 	bmi.w	6016 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    5d78:	f1ba 0f01 	cmp.w	r10, #1
    5d7c:	f200 814b 	bhi.w	6016 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    5d80:	2d00      	cmp	r5, #0
    5d82:	f000 8148 	beq.w	6016 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    5d86:	2d01      	cmp	r5, #1
    5d88:	d10c      	bne.n	5da4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xb8>
    5d8a:	9b01      	ldr	r3, [sp, #4]
    5d8c:	2b00      	cmp	r3, #0
    5d8e:	f040 8142 	bne.w	6016 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    5d92:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
    5d96:	2b03      	cmp	r3, #3
    5d98:	f000 813d 	beq.w	6016 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    5d9c:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
    5da0:	2b01      	cmp	r3, #1
    5da2:	e00c      	b.n	5dbe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xd2>
    5da4:	2d02      	cmp	r5, #2
    5da6:	f040 813e 	bne.w	6026 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    5daa:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
    5dae:	2b04      	cmp	r3, #4
    5db0:	f000 8131 	beq.w	6016 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    5db4:	9a01      	ldr	r2, [sp, #4]
    5db6:	2a00      	cmp	r2, #0
    5db8:	f000 8135 	beq.w	6026 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    5dbc:	2b03      	cmp	r3, #3
    5dbe:	f040 8132 	bne.w	6026 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    5dc2:	e128      	b.n	6016 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    5dc4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    5dc6:	2b00      	cmp	r3, #0
    5dc8:	f000 8130 	beq.w	602c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x340>
    5dcc:	a808      	add	r0, sp, #32
    5dce:	a918      	add	r1, sp, #96	; 0x60
    5dd0:	f7ff f995 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    5dd4:	2800      	cmp	r0, #0
    5dd6:	f000 8129 	beq.w	602c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x340>
    5dda:	a808      	add	r0, sp, #32
    5ddc:	f7ff f969 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5de0:	6a63      	ldr	r3, [r4, #36]	; 0x24
    5de2:	681b      	ldr	r3, [r3, #0]
    5de4:	4298      	cmp	r0, r3
    5de6:	f040 8121 	bne.w	602c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x340>
    5dea:	a808      	add	r0, sp, #32
    5dec:	f8d4 a028 	ldr.w	r10, [r4, #40]	; 0x28
    5df0:	f7fe f8a0 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    5df4:	e117      	b.n	6026 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    5df6:	a808      	add	r0, sp, #32
    5df8:	f7ff f95b 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5dfc:	4683      	mov	r11, r0
    5dfe:	220a      	movs	r2, #10
    5e00:	9807      	ldr	r0, [sp, #28]
    5e02:	4659      	mov	r1, r11
    5e04:	f011 f9be 	bl	17184 <wmemchr>
    5e08:	b198      	cbz	r0, 5e32 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x146>
    5e0a:	9b06      	ldr	r3, [sp, #24]
    5e0c:	4a76      	ldr	r2, [pc, #472]	; (5fe8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2fc>)
    5e0e:	1ac0      	subs	r0, r0, r3
    5e10:	6812      	ldr	r2, [r2, #0]
    5e12:	1083      	asrs	r3, r0, #2
    5e14:	5cd1      	ldrb	r1, [r2, r3]
    5e16:	a80c      	add	r0, sp, #48	; 0x30
    5e18:	f008 ffb7 	bl	ed8a <std::string::push_back(char)>
    5e1c:	3601      	adds	r6, #1
    5e1e:	a808      	add	r0, sp, #32
    5e20:	f7fe f888 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    5e24:	a808      	add	r0, sp, #32
    5e26:	a918      	add	r1, sp, #96	; 0x60
    5e28:	f7ff f969 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    5e2c:	2800      	cmp	r0, #0
    5e2e:	d1e2      	bne.n	5df6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x10a>
    5e30:	e01c      	b.n	5e6c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x180>
    5e32:	6963      	ldr	r3, [r4, #20]
    5e34:	459b      	cmp	r11, r3
    5e36:	d10a      	bne.n	5e4e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x162>
    5e38:	f1b8 0f00 	cmp.w	r8, #0
    5e3c:	d107      	bne.n	5e4e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x162>
    5e3e:	6b63      	ldr	r3, [r4, #52]	; 0x34
    5e40:	2b00      	cmp	r3, #0
    5e42:	dd13      	ble.n	5e6c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x180>
    5e44:	9602      	str	r6, [sp, #8]
    5e46:	f04f 0801 	mov.w	r8, #1
    5e4a:	4606      	mov	r6, r0
    5e4c:	e7e7      	b.n	5e1e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x132>
    5e4e:	7c23      	ldrb	r3, [r4, #16]
    5e50:	b163      	cbz	r3, 5e6c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x180>
    5e52:	69a3      	ldr	r3, [r4, #24]
    5e54:	459b      	cmp	r11, r3
    5e56:	d109      	bne.n	5e6c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x180>
    5e58:	f1b8 0f00 	cmp.w	r8, #0
    5e5c:	d106      	bne.n	5e6c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x180>
    5e5e:	b146      	cbz	r6, 5e72 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x186>
    5e60:	b2f1      	uxtb	r1, r6
    5e62:	a80b      	add	r0, sp, #44	; 0x2c
    5e64:	f008 ff91 	bl	ed8a <std::string::push_back(char)>
    5e68:	4646      	mov	r6, r8
    5e6a:	e7d8      	b.n	5e1e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x132>
    5e6c:	f04f 0b01 	mov.w	r11, #1
    5e70:	e000      	b.n	5e74 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x188>
    5e72:	46b3      	mov	r11, r6
    5e74:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5e76:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    5e7a:	2b00      	cmp	r3, #0
    5e7c:	bf08      	it	eq
    5e7e:	f04f 0b00 	moveq.w	r11, #0
    5e82:	e04d      	b.n	5f20 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    5e84:	a808      	add	r0, sp, #32
    5e86:	a918      	add	r1, sp, #96	; 0x60
    5e88:	f7ff f939 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    5e8c:	2800      	cmp	r0, #0
    5e8e:	f000 80ef 	beq.w	6070 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x384>
    5e92:	a808      	add	r0, sp, #32
    5e94:	f7ff f90d 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5e98:	2108      	movs	r1, #8
    5e9a:	4602      	mov	r2, r0
    5e9c:	9803      	ldr	r0, [sp, #12]
    5e9e:	f7fe f854 	bl	3f4a <std::__ctype_abstract_base<wchar_t>::is(char, wchar_t) const>
    5ea2:	2800      	cmp	r0, #0
    5ea4:	f000 80e4 	beq.w	6070 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x384>
    5ea8:	a808      	add	r0, sp, #32
    5eaa:	f7fe f843 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    5eae:	f04f 0b01 	mov.w	r11, #1
    5eb2:	2d03      	cmp	r5, #3
    5eb4:	d034      	beq.n	5f20 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    5eb6:	a808      	add	r0, sp, #32
    5eb8:	a918      	add	r1, sp, #96	; 0x60
    5eba:	f7ff f920 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    5ebe:	b378      	cbz	r0, 5f20 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    5ec0:	a808      	add	r0, sp, #32
    5ec2:	f7ff f8f6 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5ec6:	2108      	movs	r1, #8
    5ec8:	4602      	mov	r2, r0
    5eca:	9803      	ldr	r0, [sp, #12]
    5ecc:	f7fe f83d 	bl	3f4a <std::__ctype_abstract_base<wchar_t>::is(char, wchar_t) const>
    5ed0:	b330      	cbz	r0, 5f20 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    5ed2:	a808      	add	r0, sp, #32
    5ed4:	f7fe f82e 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    5ed8:	e7ed      	b.n	5eb6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1ca>
    5eda:	459b      	cmp	r11, r3
    5edc:	f000 80a3 	beq.w	6026 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    5ee0:	a808      	add	r0, sp, #32
    5ee2:	f7ff f8e6 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5ee6:	69e2      	ldr	r2, [r4, #28]
    5ee8:	f852 202b 	ldr.w	r2, [r2, r11, lsl #2]
    5eec:	4290      	cmp	r0, r2
    5eee:	d10e      	bne.n	5f0e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x222>
    5ef0:	a808      	add	r0, sp, #32
    5ef2:	f7fe f81f 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    5ef6:	f10b 0b01 	add.w	r11, r11, #1
    5efa:	a808      	add	r0, sp, #32
    5efc:	a918      	add	r1, sp, #96	; 0x60
    5efe:	f7ff f8fe 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    5f02:	9b04      	ldr	r3, [sp, #16]
    5f04:	2800      	cmp	r0, #0
    5f06:	d1e8      	bne.n	5eda <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1ee>
    5f08:	459b      	cmp	r11, r3
    5f0a:	f000 808c 	beq.w	6026 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    5f0e:	f1bb 0f00 	cmp.w	r11, #0
    5f12:	f040 8085 	bne.w	6020 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x334>
    5f16:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    5f18:	68da      	ldr	r2, [r3, #12]
    5f1a:	0592      	lsls	r2, r2, #22
    5f1c:	f140 8083 	bpl.w	6026 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    5f20:	3501      	adds	r5, #1
    5f22:	2d04      	cmp	r5, #4
    5f24:	d004      	beq.n	5f30 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x244>
    5f26:	f1bb 0f00 	cmp.w	r11, #0
    5f2a:	f47f af16 	bne.w	5d5a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x6e>
    5f2e:	e0ae      	b.n	608e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a2>
    5f30:	f1ba 0f01 	cmp.w	r10, #1
    5f34:	d922      	bls.n	5f7c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x290>
    5f36:	f1bb 0f00 	cmp.w	r11, #0
    5f3a:	f000 80a8 	beq.w	608e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a2>
    5f3e:	f1b9 0f00 	cmp.w	r9, #0
    5f42:	d001      	beq.n	5f48 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x25c>
    5f44:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    5f46:	e000      	b.n	5f4a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x25e>
    5f48:	6a65      	ldr	r5, [r4, #36]	; 0x24
    5f4a:	f04f 0b01 	mov.w	r11, #1
    5f4e:	a808      	add	r0, sp, #32
    5f50:	a918      	add	r1, sp, #96	; 0x60
    5f52:	f7ff f8d4 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    5f56:	2800      	cmp	r0, #0
    5f58:	f000 808d 	beq.w	6076 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x38a>
    5f5c:	45d3      	cmp	r11, r10
    5f5e:	d011      	beq.n	5f84 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x298>
    5f60:	a808      	add	r0, sp, #32
    5f62:	f7ff f8a6 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    5f66:	f855 302b 	ldr.w	r3, [r5, r11, lsl #2]
    5f6a:	4298      	cmp	r0, r3
    5f6c:	f040 808f 	bne.w	608e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a2>
    5f70:	a808      	add	r0, sp, #32
    5f72:	f7fd ffdf 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    5f76:	f10b 0b01 	add.w	r11, r11, #1
    5f7a:	e7e8      	b.n	5f4e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x262>
    5f7c:	f1bb 0f00 	cmp.w	r11, #0
    5f80:	f000 8085 	beq.w	608e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a2>
    5f84:	ad0e      	add	r5, sp, #56	; 0x38
    5f86:	f855 3d08 	ldr.w	r3, [r5, #-8]!
    5f8a:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    5f8e:	2b01      	cmp	r3, #1
    5f90:	d913      	bls.n	5fba <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2ce>
    5f92:	4628      	mov	r0, r5
    5f94:	2130      	movs	r1, #48	; 0x30
    5f96:	2200      	movs	r2, #0
    5f98:	f008 fc44 	bl	e824 <std::string::find_first_not_of(char, unsigned int) const>
    5f9c:	b168      	cbz	r0, 5fba <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2ce>
    5f9e:	1c43      	adds	r3, r0, #1
    5fa0:	bf0a      	itet	eq
    5fa2:	9b0c      	ldreq	r3, [sp, #48]	; 0x30
    5fa4:	4602      	movne	r2, r0
    5fa6:	f853 0c0c 	ldreq.w	r0, [r3, #-12]
    5faa:	f04f 0100 	mov.w	r1, #0
    5fae:	bf08      	it	eq
    5fb0:	f100 32ff 	addeq.w	r2, r0, #4294967295
    5fb4:	4628      	mov	r0, r5
    5fb6:	f008 fd35 	bl	ea24 <std::string::erase(unsigned int, unsigned int)>
    5fba:	f1b9 0f00 	cmp.w	r9, #0
    5fbe:	d006      	beq.n	5fce <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2e2>
    5fc0:	4628      	mov	r0, r5
    5fc2:	f008 fd17 	bl	e9f4 <std::string::_M_leak()>
    5fc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5fc8:	781b      	ldrb	r3, [r3, #0]
    5fca:	2b30      	cmp	r3, #48	; 0x30
    5fcc:	d156      	bne.n	607c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x390>
    5fce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5fd0:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    5fd4:	b1c3      	cbz	r3, 6008 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x31c>
    5fd6:	f1b8 0f00 	cmp.w	r8, #0
    5fda:	d007      	beq.n	5fec <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x300>
    5fdc:	f89d 1008 	ldrb.w	r1, [sp, #8]
    5fe0:	e005      	b.n	5fee <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x302>
    5fe2:	bf00      	nop
    5fe4:	10000c70 	.word	0x10000c70
    5fe8:	10000168 	.word	0x10000168
    5fec:	b2f1      	uxtb	r1, r6
    5fee:	a80b      	add	r0, sp, #44	; 0x2c
    5ff0:	f008 fecb 	bl	ed8a <std::string::push_back(char)>
    5ff4:	68a0      	ldr	r0, [r4, #8]
    5ff6:	68e1      	ldr	r1, [r4, #12]
    5ff8:	aa0b      	add	r2, sp, #44	; 0x2c
    5ffa:	f009 fff4 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    5ffe:	b918      	cbnz	r0, 6008 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x31c>
    6000:	683b      	ldr	r3, [r7, #0]
    6002:	f043 0304 	orr.w	r3, r3, #4
    6006:	603b      	str	r3, [r7, #0]
    6008:	f1b8 0f00 	cmp.w	r8, #0
    600c:	d04e      	beq.n	60ac <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3c0>
    600e:	6b63      	ldr	r3, [r4, #52]	; 0x34
    6010:	429e      	cmp	r6, r3
    6012:	d13c      	bne.n	608e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a2>
    6014:	e04a      	b.n	60ac <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3c0>
    6016:	6a23      	ldr	r3, [r4, #32]
    6018:	f04f 0b00 	mov.w	r11, #0
    601c:	9304      	str	r3, [sp, #16]
    601e:	e76c      	b.n	5efa <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x20e>
    6020:	f04f 0b00 	mov.w	r11, #0
    6024:	e77c      	b.n	5f20 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    6026:	f04f 0b01 	mov.w	r11, #1
    602a:	e779      	b.n	5f20 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    602c:	6b23      	ldr	r3, [r4, #48]	; 0x30
    602e:	b1a3      	cbz	r3, 605a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x36e>
    6030:	a808      	add	r0, sp, #32
    6032:	a918      	add	r1, sp, #96	; 0x60
    6034:	f7ff f863 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    6038:	b178      	cbz	r0, 605a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x36e>
    603a:	a808      	add	r0, sp, #32
    603c:	f7ff f839 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    6040:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    6042:	681b      	ldr	r3, [r3, #0]
    6044:	4298      	cmp	r0, r3
    6046:	d108      	bne.n	605a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x36e>
    6048:	a808      	add	r0, sp, #32
    604a:	f8d4 a030 	ldr.w	r10, [r4, #48]	; 0x30
    604e:	f7fd ff71 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    6052:	f04f 0901 	mov.w	r9, #1
    6056:	46cb      	mov	r11, r9
    6058:	e762      	b.n	5f20 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    605a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    605c:	b113      	cbz	r3, 6064 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x378>
    605e:	6b23      	ldr	r3, [r4, #48]	; 0x30
    6060:	2b00      	cmp	r3, #0
    6062:	d0f6      	beq.n	6052 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x366>
    6064:	9b01      	ldr	r3, [sp, #4]
    6066:	f083 0b01 	eor.w	r11, r3, #1
    606a:	fa5f fb8b 	uxtb.w	r11, r11
    606e:	e757      	b.n	5f20 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    6070:	f04f 0b00 	mov.w	r11, #0
    6074:	e71d      	b.n	5eb2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1c6>
    6076:	45d3      	cmp	r11, r10
    6078:	d109      	bne.n	608e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a2>
    607a:	e783      	b.n	5f84 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x298>
    607c:	4628      	mov	r0, r5
    607e:	f008 fcc2 	bl	ea06 <std::string::begin()>
    6082:	222d      	movs	r2, #45	; 0x2d
    6084:	4601      	mov	r1, r0
    6086:	4628      	mov	r0, r5
    6088:	f008 fd1e 	bl	eac8 <std::string::insert(__gnu_cxx::__normal_iterator<char*, std::string>, char)>
    608c:	e79f      	b.n	5fce <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2e2>
    608e:	683b      	ldr	r3, [r7, #0]
    6090:	f043 0304 	orr.w	r3, r3, #4
    6094:	603b      	str	r3, [r7, #0]
    6096:	ac08      	add	r4, sp, #32
    6098:	4620      	mov	r0, r4
    609a:	a918      	add	r1, sp, #96	; 0x60
    609c:	f7ff f81c 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    60a0:	b148      	cbz	r0, 60b6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3ca>
    60a2:	683b      	ldr	r3, [r7, #0]
    60a4:	f043 0302 	orr.w	r3, r3, #2
    60a8:	603b      	str	r3, [r7, #0]
    60aa:	e004      	b.n	60b6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3ca>
    60ac:	981c      	ldr	r0, [sp, #112]	; 0x70
    60ae:	4629      	mov	r1, r5
    60b0:	f008 fba4 	bl	e7fc <std::string::swap(std::string&)>
    60b4:	e7ef      	b.n	6096 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3aa>
    60b6:	9b05      	ldr	r3, [sp, #20]
    60b8:	e894 0003 	ldmia.w	r4, {r0, r1}
    60bc:	e883 0003 	stmia.w	r3, {r0, r1}
    60c0:	a80c      	add	r0, sp, #48	; 0x30
    60c2:	f008 fc29 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    60c6:	a80b      	add	r0, sp, #44	; 0x2c
    60c8:	f008 fc26 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    60cc:	9805      	ldr	r0, [sp, #20]
    60ce:	b00f      	add	sp, #60	; 0x3c
    60d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

000060d4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>:
    60d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    60d8:	b08f      	sub	sp, #60	; 0x3c
    60da:	a908      	add	r1, sp, #32
    60dc:	e881 000c 	stmia.w	r1, {r2, r3}
    60e0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    60e2:	9005      	str	r0, [sp, #20]
    60e4:	f103 046c 	add.w	r4, r3, #108	; 0x6c
    60e8:	4620      	mov	r0, r4
    60ea:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
    60ec:	f7fd fa56 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    60f0:	9003      	str	r0, [sp, #12]
    60f2:	4620      	mov	r0, r4
    60f4:	f7fd fe3a 	bl	3d6c <std::__use_cache<std::__moneypunct_cache<wchar_t, true> >::operator()(std::locale const&) const [clone .isra.40]>
    60f8:	f100 0340 	add.w	r3, r0, #64	; 0x40
    60fc:	9306      	str	r3, [sp, #24]
    60fe:	6a83      	ldr	r3, [r0, #40]	; 0x28
    6100:	4604      	mov	r4, r0
    6102:	b11b      	cbz	r3, 610c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x38>
    6104:	6b03      	ldr	r3, [r0, #48]	; 0x30
    6106:	3300      	adds	r3, #0
    6108:	bf18      	it	ne
    610a:	2301      	movne	r3, #1
    610c:	9301      	str	r3, [sp, #4]
    610e:	7c22      	ldrb	r2, [r4, #16]
    6110:	4bae      	ldr	r3, [pc, #696]	; (63cc <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f8>)
    6112:	930b      	str	r3, [sp, #44]	; 0x2c
    6114:	461d      	mov	r5, r3
    6116:	b11a      	cbz	r2, 6120 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x4c>
    6118:	a80b      	add	r0, sp, #44	; 0x2c
    611a:	2120      	movs	r1, #32
    611c:	f008 fd57 	bl	ebce <std::string::reserve(unsigned int)>
    6120:	a80e      	add	r0, sp, #56	; 0x38
    6122:	f840 5d08 	str.w	r5, [r0, #-8]!
    6126:	2500      	movs	r5, #0
    6128:	46a8      	mov	r8, r5
    612a:	462e      	mov	r6, r5
    612c:	46a9      	mov	r9, r5
    612e:	46aa      	mov	r10, r5
    6130:	2120      	movs	r1, #32
    6132:	f008 fd4c 	bl	ebce <std::string::reserve(unsigned int)>
    6136:	f104 0344 	add.w	r3, r4, #68	; 0x44
    613a:	9307      	str	r3, [sp, #28]
    613c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    613e:	9502      	str	r5, [sp, #8]
    6140:	930d      	str	r3, [sp, #52]	; 0x34
    6142:	ab0d      	add	r3, sp, #52	; 0x34
    6144:	5ceb      	ldrb	r3, [r5, r3]
    6146:	2b04      	cmp	r3, #4
    6148:	f200 8161 	bhi.w	640e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    614c:	e8df f003 	tbb	[pc, r3]
    6150:	2e038ea3 	.word	0x2e038ea3
    6154:	5e          	.byte	0x5e
    6155:	00          	.byte	0x00
    6156:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    6158:	68db      	ldr	r3, [r3, #12]
    615a:	0599      	lsls	r1, r3, #22
    615c:	f100 814f 	bmi.w	63fe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    6160:	f1ba 0f01 	cmp.w	r10, #1
    6164:	f200 814b 	bhi.w	63fe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    6168:	2d00      	cmp	r5, #0
    616a:	f000 8148 	beq.w	63fe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    616e:	2d01      	cmp	r5, #1
    6170:	d10c      	bne.n	618c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xb8>
    6172:	9b01      	ldr	r3, [sp, #4]
    6174:	2b00      	cmp	r3, #0
    6176:	f040 8142 	bne.w	63fe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    617a:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
    617e:	2b03      	cmp	r3, #3
    6180:	f000 813d 	beq.w	63fe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    6184:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
    6188:	2b01      	cmp	r3, #1
    618a:	e00c      	b.n	61a6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xd2>
    618c:	2d02      	cmp	r5, #2
    618e:	f040 813e 	bne.w	640e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    6192:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
    6196:	2b04      	cmp	r3, #4
    6198:	f000 8131 	beq.w	63fe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    619c:	9a01      	ldr	r2, [sp, #4]
    619e:	2a00      	cmp	r2, #0
    61a0:	f000 8135 	beq.w	640e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    61a4:	2b03      	cmp	r3, #3
    61a6:	f040 8132 	bne.w	640e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    61aa:	e128      	b.n	63fe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32a>
    61ac:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    61ae:	2b00      	cmp	r3, #0
    61b0:	f000 8130 	beq.w	6414 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x340>
    61b4:	a808      	add	r0, sp, #32
    61b6:	a918      	add	r1, sp, #96	; 0x60
    61b8:	f7fe ffa1 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    61bc:	2800      	cmp	r0, #0
    61be:	f000 8129 	beq.w	6414 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x340>
    61c2:	a808      	add	r0, sp, #32
    61c4:	f7fe ff75 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    61c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
    61ca:	681b      	ldr	r3, [r3, #0]
    61cc:	4298      	cmp	r0, r3
    61ce:	f040 8121 	bne.w	6414 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x340>
    61d2:	a808      	add	r0, sp, #32
    61d4:	f8d4 a028 	ldr.w	r10, [r4, #40]	; 0x28
    61d8:	f7fd feac 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    61dc:	e117      	b.n	640e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    61de:	a808      	add	r0, sp, #32
    61e0:	f7fe ff67 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    61e4:	4683      	mov	r11, r0
    61e6:	220a      	movs	r2, #10
    61e8:	9807      	ldr	r0, [sp, #28]
    61ea:	4659      	mov	r1, r11
    61ec:	f010 ffca 	bl	17184 <wmemchr>
    61f0:	b198      	cbz	r0, 621a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x146>
    61f2:	9b06      	ldr	r3, [sp, #24]
    61f4:	4a76      	ldr	r2, [pc, #472]	; (63d0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2fc>)
    61f6:	1ac0      	subs	r0, r0, r3
    61f8:	6812      	ldr	r2, [r2, #0]
    61fa:	1083      	asrs	r3, r0, #2
    61fc:	5cd1      	ldrb	r1, [r2, r3]
    61fe:	a80c      	add	r0, sp, #48	; 0x30
    6200:	f008 fdc3 	bl	ed8a <std::string::push_back(char)>
    6204:	3601      	adds	r6, #1
    6206:	a808      	add	r0, sp, #32
    6208:	f7fd fe94 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    620c:	a808      	add	r0, sp, #32
    620e:	a918      	add	r1, sp, #96	; 0x60
    6210:	f7fe ff75 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    6214:	2800      	cmp	r0, #0
    6216:	d1e2      	bne.n	61de <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x10a>
    6218:	e01c      	b.n	6254 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x180>
    621a:	6963      	ldr	r3, [r4, #20]
    621c:	459b      	cmp	r11, r3
    621e:	d10a      	bne.n	6236 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x162>
    6220:	f1b8 0f00 	cmp.w	r8, #0
    6224:	d107      	bne.n	6236 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x162>
    6226:	6b63      	ldr	r3, [r4, #52]	; 0x34
    6228:	2b00      	cmp	r3, #0
    622a:	dd13      	ble.n	6254 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x180>
    622c:	9602      	str	r6, [sp, #8]
    622e:	f04f 0801 	mov.w	r8, #1
    6232:	4606      	mov	r6, r0
    6234:	e7e7      	b.n	6206 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x132>
    6236:	7c23      	ldrb	r3, [r4, #16]
    6238:	b163      	cbz	r3, 6254 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x180>
    623a:	69a3      	ldr	r3, [r4, #24]
    623c:	459b      	cmp	r11, r3
    623e:	d109      	bne.n	6254 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x180>
    6240:	f1b8 0f00 	cmp.w	r8, #0
    6244:	d106      	bne.n	6254 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x180>
    6246:	b146      	cbz	r6, 625a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x186>
    6248:	b2f1      	uxtb	r1, r6
    624a:	a80b      	add	r0, sp, #44	; 0x2c
    624c:	f008 fd9d 	bl	ed8a <std::string::push_back(char)>
    6250:	4646      	mov	r6, r8
    6252:	e7d8      	b.n	6206 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x132>
    6254:	f04f 0b01 	mov.w	r11, #1
    6258:	e000      	b.n	625c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x188>
    625a:	46b3      	mov	r11, r6
    625c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    625e:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    6262:	2b00      	cmp	r3, #0
    6264:	bf08      	it	eq
    6266:	f04f 0b00 	moveq.w	r11, #0
    626a:	e04d      	b.n	6308 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    626c:	a808      	add	r0, sp, #32
    626e:	a918      	add	r1, sp, #96	; 0x60
    6270:	f7fe ff45 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    6274:	2800      	cmp	r0, #0
    6276:	f000 80ef 	beq.w	6458 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x384>
    627a:	a808      	add	r0, sp, #32
    627c:	f7fe ff19 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    6280:	2108      	movs	r1, #8
    6282:	4602      	mov	r2, r0
    6284:	9803      	ldr	r0, [sp, #12]
    6286:	f7fd fe60 	bl	3f4a <std::__ctype_abstract_base<wchar_t>::is(char, wchar_t) const>
    628a:	2800      	cmp	r0, #0
    628c:	f000 80e4 	beq.w	6458 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x384>
    6290:	a808      	add	r0, sp, #32
    6292:	f7fd fe4f 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    6296:	f04f 0b01 	mov.w	r11, #1
    629a:	2d03      	cmp	r5, #3
    629c:	d034      	beq.n	6308 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    629e:	a808      	add	r0, sp, #32
    62a0:	a918      	add	r1, sp, #96	; 0x60
    62a2:	f7fe ff2c 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    62a6:	b378      	cbz	r0, 6308 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    62a8:	a808      	add	r0, sp, #32
    62aa:	f7fe ff02 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    62ae:	2108      	movs	r1, #8
    62b0:	4602      	mov	r2, r0
    62b2:	9803      	ldr	r0, [sp, #12]
    62b4:	f7fd fe49 	bl	3f4a <std::__ctype_abstract_base<wchar_t>::is(char, wchar_t) const>
    62b8:	b330      	cbz	r0, 6308 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    62ba:	a808      	add	r0, sp, #32
    62bc:	f7fd fe3a 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    62c0:	e7ed      	b.n	629e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1ca>
    62c2:	459b      	cmp	r11, r3
    62c4:	f000 80a3 	beq.w	640e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    62c8:	a808      	add	r0, sp, #32
    62ca:	f7fe fef2 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    62ce:	69e2      	ldr	r2, [r4, #28]
    62d0:	f852 202b 	ldr.w	r2, [r2, r11, lsl #2]
    62d4:	4290      	cmp	r0, r2
    62d6:	d10e      	bne.n	62f6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x222>
    62d8:	a808      	add	r0, sp, #32
    62da:	f7fd fe2b 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    62de:	f10b 0b01 	add.w	r11, r11, #1
    62e2:	a808      	add	r0, sp, #32
    62e4:	a918      	add	r1, sp, #96	; 0x60
    62e6:	f7fe ff0a 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    62ea:	9b04      	ldr	r3, [sp, #16]
    62ec:	2800      	cmp	r0, #0
    62ee:	d1e8      	bne.n	62c2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1ee>
    62f0:	459b      	cmp	r11, r3
    62f2:	f000 808c 	beq.w	640e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    62f6:	f1bb 0f00 	cmp.w	r11, #0
    62fa:	f040 8085 	bne.w	6408 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x334>
    62fe:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    6300:	68da      	ldr	r2, [r3, #12]
    6302:	0592      	lsls	r2, r2, #22
    6304:	f140 8083 	bpl.w	640e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33a>
    6308:	3501      	adds	r5, #1
    630a:	2d04      	cmp	r5, #4
    630c:	d004      	beq.n	6318 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x244>
    630e:	f1bb 0f00 	cmp.w	r11, #0
    6312:	f47f af16 	bne.w	6142 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x6e>
    6316:	e0ae      	b.n	6476 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a2>
    6318:	f1ba 0f01 	cmp.w	r10, #1
    631c:	d922      	bls.n	6364 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x290>
    631e:	f1bb 0f00 	cmp.w	r11, #0
    6322:	f000 80a8 	beq.w	6476 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a2>
    6326:	f1b9 0f00 	cmp.w	r9, #0
    632a:	d001      	beq.n	6330 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x25c>
    632c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    632e:	e000      	b.n	6332 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x25e>
    6330:	6a65      	ldr	r5, [r4, #36]	; 0x24
    6332:	f04f 0b01 	mov.w	r11, #1
    6336:	a808      	add	r0, sp, #32
    6338:	a918      	add	r1, sp, #96	; 0x60
    633a:	f7fe fee0 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    633e:	2800      	cmp	r0, #0
    6340:	f000 808d 	beq.w	645e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x38a>
    6344:	45d3      	cmp	r11, r10
    6346:	d011      	beq.n	636c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x298>
    6348:	a808      	add	r0, sp, #32
    634a:	f7fe feb2 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    634e:	f855 302b 	ldr.w	r3, [r5, r11, lsl #2]
    6352:	4298      	cmp	r0, r3
    6354:	f040 808f 	bne.w	6476 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a2>
    6358:	a808      	add	r0, sp, #32
    635a:	f7fd fdeb 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    635e:	f10b 0b01 	add.w	r11, r11, #1
    6362:	e7e8      	b.n	6336 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x262>
    6364:	f1bb 0f00 	cmp.w	r11, #0
    6368:	f000 8085 	beq.w	6476 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a2>
    636c:	ad0e      	add	r5, sp, #56	; 0x38
    636e:	f855 3d08 	ldr.w	r3, [r5, #-8]!
    6372:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    6376:	2b01      	cmp	r3, #1
    6378:	d913      	bls.n	63a2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2ce>
    637a:	4628      	mov	r0, r5
    637c:	2130      	movs	r1, #48	; 0x30
    637e:	2200      	movs	r2, #0
    6380:	f008 fa50 	bl	e824 <std::string::find_first_not_of(char, unsigned int) const>
    6384:	b168      	cbz	r0, 63a2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2ce>
    6386:	1c43      	adds	r3, r0, #1
    6388:	bf0a      	itet	eq
    638a:	9b0c      	ldreq	r3, [sp, #48]	; 0x30
    638c:	4602      	movne	r2, r0
    638e:	f853 0c0c 	ldreq.w	r0, [r3, #-12]
    6392:	f04f 0100 	mov.w	r1, #0
    6396:	bf08      	it	eq
    6398:	f100 32ff 	addeq.w	r2, r0, #4294967295
    639c:	4628      	mov	r0, r5
    639e:	f008 fb41 	bl	ea24 <std::string::erase(unsigned int, unsigned int)>
    63a2:	f1b9 0f00 	cmp.w	r9, #0
    63a6:	d006      	beq.n	63b6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2e2>
    63a8:	4628      	mov	r0, r5
    63aa:	f008 fb23 	bl	e9f4 <std::string::_M_leak()>
    63ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    63b0:	781b      	ldrb	r3, [r3, #0]
    63b2:	2b30      	cmp	r3, #48	; 0x30
    63b4:	d156      	bne.n	6464 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x390>
    63b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    63b8:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    63bc:	b1c3      	cbz	r3, 63f0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x31c>
    63be:	f1b8 0f00 	cmp.w	r8, #0
    63c2:	d007      	beq.n	63d4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x300>
    63c4:	f89d 1008 	ldrb.w	r1, [sp, #8]
    63c8:	e005      	b.n	63d6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x302>
    63ca:	bf00      	nop
    63cc:	10000c70 	.word	0x10000c70
    63d0:	10000168 	.word	0x10000168
    63d4:	b2f1      	uxtb	r1, r6
    63d6:	a80b      	add	r0, sp, #44	; 0x2c
    63d8:	f008 fcd7 	bl	ed8a <std::string::push_back(char)>
    63dc:	68a0      	ldr	r0, [r4, #8]
    63de:	68e1      	ldr	r1, [r4, #12]
    63e0:	aa0b      	add	r2, sp, #44	; 0x2c
    63e2:	f009 fe00 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    63e6:	b918      	cbnz	r0, 63f0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x31c>
    63e8:	683b      	ldr	r3, [r7, #0]
    63ea:	f043 0304 	orr.w	r3, r3, #4
    63ee:	603b      	str	r3, [r7, #0]
    63f0:	f1b8 0f00 	cmp.w	r8, #0
    63f4:	d04e      	beq.n	6494 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3c0>
    63f6:	6b63      	ldr	r3, [r4, #52]	; 0x34
    63f8:	429e      	cmp	r6, r3
    63fa:	d13c      	bne.n	6476 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a2>
    63fc:	e04a      	b.n	6494 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3c0>
    63fe:	6a23      	ldr	r3, [r4, #32]
    6400:	f04f 0b00 	mov.w	r11, #0
    6404:	9304      	str	r3, [sp, #16]
    6406:	e76c      	b.n	62e2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x20e>
    6408:	f04f 0b00 	mov.w	r11, #0
    640c:	e77c      	b.n	6308 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    640e:	f04f 0b01 	mov.w	r11, #1
    6412:	e779      	b.n	6308 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    6414:	6b23      	ldr	r3, [r4, #48]	; 0x30
    6416:	b1a3      	cbz	r3, 6442 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x36e>
    6418:	a808      	add	r0, sp, #32
    641a:	a918      	add	r1, sp, #96	; 0x60
    641c:	f7fe fe6f 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    6420:	b178      	cbz	r0, 6442 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x36e>
    6422:	a808      	add	r0, sp, #32
    6424:	f7fe fe45 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    6428:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    642a:	681b      	ldr	r3, [r3, #0]
    642c:	4298      	cmp	r0, r3
    642e:	d108      	bne.n	6442 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x36e>
    6430:	a808      	add	r0, sp, #32
    6432:	f8d4 a030 	ldr.w	r10, [r4, #48]	; 0x30
    6436:	f7fd fd7d 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    643a:	f04f 0901 	mov.w	r9, #1
    643e:	46cb      	mov	r11, r9
    6440:	e762      	b.n	6308 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    6442:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    6444:	b113      	cbz	r3, 644c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x378>
    6446:	6b23      	ldr	r3, [r4, #48]	; 0x30
    6448:	2b00      	cmp	r3, #0
    644a:	d0f6      	beq.n	643a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x366>
    644c:	9b01      	ldr	r3, [sp, #4]
    644e:	f083 0b01 	eor.w	r11, r3, #1
    6452:	fa5f fb8b 	uxtb.w	r11, r11
    6456:	e757      	b.n	6308 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x234>
    6458:	f04f 0b00 	mov.w	r11, #0
    645c:	e71d      	b.n	629a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1c6>
    645e:	45d3      	cmp	r11, r10
    6460:	d109      	bne.n	6476 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a2>
    6462:	e783      	b.n	636c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x298>
    6464:	4628      	mov	r0, r5
    6466:	f008 face 	bl	ea06 <std::string::begin()>
    646a:	222d      	movs	r2, #45	; 0x2d
    646c:	4601      	mov	r1, r0
    646e:	4628      	mov	r0, r5
    6470:	f008 fb2a 	bl	eac8 <std::string::insert(__gnu_cxx::__normal_iterator<char*, std::string>, char)>
    6474:	e79f      	b.n	63b6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2e2>
    6476:	683b      	ldr	r3, [r7, #0]
    6478:	f043 0304 	orr.w	r3, r3, #4
    647c:	603b      	str	r3, [r7, #0]
    647e:	ac08      	add	r4, sp, #32
    6480:	4620      	mov	r0, r4
    6482:	a918      	add	r1, sp, #96	; 0x60
    6484:	f7fe fe28 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    6488:	b148      	cbz	r0, 649e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3ca>
    648a:	683b      	ldr	r3, [r7, #0]
    648c:	f043 0302 	orr.w	r3, r3, #2
    6490:	603b      	str	r3, [r7, #0]
    6492:	e004      	b.n	649e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3ca>
    6494:	981c      	ldr	r0, [sp, #112]	; 0x70
    6496:	4629      	mov	r1, r5
    6498:	f008 f9b0 	bl	e7fc <std::string::swap(std::string&)>
    649c:	e7ef      	b.n	647e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3aa>
    649e:	9b05      	ldr	r3, [sp, #20]
    64a0:	e894 0003 	ldmia.w	r4, {r0, r1}
    64a4:	e883 0003 	stmia.w	r3, {r0, r1}
    64a8:	a80c      	add	r0, sp, #48	; 0x30
    64aa:	f008 fa35 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    64ae:	a80b      	add	r0, sp, #44	; 0x2c
    64b0:	f008 fa32 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    64b4:	9805      	ldr	r0, [sp, #20]
    64b6:	b00f      	add	sp, #60	; 0x3c
    64b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

000064bc <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const>:
    64bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    64c0:	b08c      	sub	sp, #48	; 0x30
    64c2:	ac08      	add	r4, sp, #32
    64c4:	e884 000c 	stmia.w	r4, {r2, r3}
    64c8:	4a22      	ldr	r2, [pc, #136]	; (6554 <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const+0x98>)
    64ca:	4606      	mov	r6, r0
    64cc:	920a      	str	r2, [sp, #40]	; 0x28
    64ce:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
    64d2:	468e      	mov	lr, r1
    64d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
    64d6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    64da:	ad06      	add	r5, sp, #24
    64dc:	af0a      	add	r7, sp, #40	; 0x28
    64de:	b17a      	cbz	r2, 6500 <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const+0x44>
    64e0:	aa12      	add	r2, sp, #72	; 0x48
    64e2:	e892 0003 	ldmia.w	r2, {r0, r1}
    64e6:	e88d 0003 	stmia.w	sp, {r0, r1}
    64ea:	9302      	str	r3, [sp, #8]
    64ec:	f8cd 800c 	str.w	r8, [sp, #12]
    64f0:	9704      	str	r7, [sp, #16]
    64f2:	4628      	mov	r0, r5
    64f4:	e894 000c 	ldmia.w	r4, {r2, r3}
    64f8:	4671      	mov	r1, lr
    64fa:	f7ff fdeb 	bl	60d4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    64fe:	e00e      	b.n	651e <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const+0x62>
    6500:	aa12      	add	r2, sp, #72	; 0x48
    6502:	e892 0003 	ldmia.w	r2, {r0, r1}
    6506:	e88d 0003 	stmia.w	sp, {r0, r1}
    650a:	9302      	str	r3, [sp, #8]
    650c:	f8cd 800c 	str.w	r8, [sp, #12]
    6510:	9704      	str	r7, [sp, #16]
    6512:	4628      	mov	r0, r5
    6514:	e894 000c 	ldmia.w	r4, {r2, r3}
    6518:	4671      	mov	r1, lr
    651a:	f7ff fbe7 	bl	5cec <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    651e:	e895 0003 	ldmia.w	r5, {r0, r1}
    6522:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    6524:	e884 0003 	stmia.w	r4, {r0, r1}
    6528:	f009 fda4 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    652c:	ab0c      	add	r3, sp, #48	; 0x30
    652e:	f843 0d04 	str.w	r0, [r3, #-4]!
    6532:	9917      	ldr	r1, [sp, #92]	; 0x5c
    6534:	4628      	mov	r0, r5
    6536:	4642      	mov	r2, r8
    6538:	f009 ff5c 	bl	103f4 <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)>
    653c:	e894 0003 	ldmia.w	r4, {r0, r1}
    6540:	e886 0003 	stmia.w	r6, {r0, r1}
    6544:	4638      	mov	r0, r7
    6546:	f008 f9e7 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    654a:	4630      	mov	r0, r6
    654c:	b00c      	add	sp, #48	; 0x30
    654e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    6552:	bf00      	nop
    6554:	10000c70 	.word	0x10000c70

00006558 <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const>:
    6558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    655c:	b08d      	sub	sp, #52	; 0x34
    655e:	f8dd a064 	ldr.w	r10, [sp, #100]	; 0x64
    6562:	4607      	mov	r7, r0
    6564:	ac08      	add	r4, sp, #32
    6566:	f10a 006c 	add.w	r0, r10, #108	; 0x6c
    656a:	e884 000c 	stmia.w	r4, {r2, r3}
    656e:	468b      	mov	r11, r1
    6570:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
    6574:	f7fd f812 	bl	359c <std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)>
    6578:	4b26      	ldr	r3, [pc, #152]	; (6614 <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const+0xbc>)
    657a:	4681      	mov	r9, r0
    657c:	930b      	str	r3, [sp, #44]	; 0x2c
    657e:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
    6582:	ad06      	add	r5, sp, #24
    6584:	ae0b      	add	r6, sp, #44	; 0x2c
    6586:	b183      	cbz	r3, 65aa <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const+0x52>
    6588:	ab16      	add	r3, sp, #88	; 0x58
    658a:	e893 0003 	ldmia.w	r3, {r0, r1}
    658e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    6590:	e88d 0003 	stmia.w	sp, {r0, r1}
    6594:	f8cd a008 	str.w	r10, [sp, #8]
    6598:	9303      	str	r3, [sp, #12]
    659a:	9604      	str	r6, [sp, #16]
    659c:	4628      	mov	r0, r5
    659e:	e894 000c 	ldmia.w	r4, {r2, r3}
    65a2:	4659      	mov	r1, r11
    65a4:	f7ff fd96 	bl	60d4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    65a8:	e00f      	b.n	65ca <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const+0x72>
    65aa:	ab16      	add	r3, sp, #88	; 0x58
    65ac:	e893 0003 	ldmia.w	r3, {r0, r1}
    65b0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    65b2:	e88d 0003 	stmia.w	sp, {r0, r1}
    65b6:	f8cd a008 	str.w	r10, [sp, #8]
    65ba:	9303      	str	r3, [sp, #12]
    65bc:	9604      	str	r6, [sp, #16]
    65be:	4628      	mov	r0, r5
    65c0:	e894 000c 	ldmia.w	r4, {r2, r3}
    65c4:	4659      	mov	r1, r11
    65c6:	f7ff fb91 	bl	5cec <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    65ca:	e895 0003 	ldmia.w	r5, {r0, r1}
    65ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    65d0:	e884 0003 	stmia.w	r4, {r0, r1}
    65d4:	f853 5c0c 	ldr.w	r5, [r3, #-12]
    65d8:	b185      	cbz	r5, 65fc <std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const+0xa4>
    65da:	4629      	mov	r1, r5
    65dc:	4640      	mov	r0, r8
    65de:	f008 ff4b 	bl	f478 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned int)>
    65e2:	f8dd a02c 	ldr.w	r10, [sp, #44]	; 0x2c
    65e6:	4640      	mov	r0, r8
    65e8:	4455      	add	r5, r10
    65ea:	f008 fd9b 	bl	f124 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak()>
    65ee:	4648      	mov	r0, r9
    65f0:	4651      	mov	r1, r10
    65f2:	462a      	mov	r2, r5
    65f4:	f8d8 3000 	ldr.w	r3, [r8]
    65f8:	f7fd fa15 	bl	3a26 <std::__ctype_abstract_base<wchar_t>::widen(char const*, char const*, wchar_t*) const>
    65fc:	e894 0003 	ldmia.w	r4, {r0, r1}
    6600:	e887 0003 	stmia.w	r7, {r0, r1}
    6604:	4630      	mov	r0, r6
    6606:	f008 f987 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    660a:	4638      	mov	r0, r7
    660c:	b00d      	add	sp, #52	; 0x34
    660e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    6612:	bf00      	nop
    6614:	10000c70 	.word	0x10000c70

00006618 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>:
    6618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    661c:	b087      	sub	sp, #28
    661e:	9001      	str	r0, [sp, #4]
    6620:	9812      	ldr	r0, [sp, #72]	; 0x48
    6622:	ae02      	add	r6, sp, #8
    6624:	306c      	adds	r0, #108	; 0x6c
    6626:	e886 000c 	stmia.w	r6, {r2, r3}
    662a:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
    662e:	f7fd fc5b 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    6632:	a910      	add	r1, sp, #64	; 0x40
    6634:	4604      	mov	r4, r0
    6636:	4630      	mov	r0, r6
    6638:	f7fe fd4e 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    663c:	9000      	str	r0, [sp, #0]
    663e:	bb40      	cbnz	r0, 6692 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x7a>
    6640:	4630      	mov	r0, r6
    6642:	f7fe fd36 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    6646:	f8d4 20c0 	ldr.w	r2, [r4, #192]	; 0xc0
    664a:	4683      	mov	r11, r0
    664c:	1a81      	subs	r1, r0, r2
    664e:	424a      	negs	r2, r1
    6650:	414a      	adcs	r2, r1
    6652:	b91a      	cbnz	r2, 665c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x44>
    6654:	f8d4 10bc 	ldr.w	r1, [r4, #188]	; 0xbc
    6658:	4288      	cmp	r0, r1
    665a:	d11f      	bne.n	669c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x84>
    665c:	7c21      	ldrb	r1, [r4, #16]
    665e:	b111      	cbz	r1, 6666 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x4e>
    6660:	6aa1      	ldr	r1, [r4, #40]	; 0x28
    6662:	458b      	cmp	r11, r1
    6664:	d01a      	beq.n	669c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x84>
    6666:	6a61      	ldr	r1, [r4, #36]	; 0x24
    6668:	458b      	cmp	r11, r1
    666a:	d017      	beq.n	669c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x84>
    666c:	2a00      	cmp	r2, #0
    666e:	bf14      	ite	ne
    6670:	212b      	movne	r1, #43	; 0x2b
    6672:	212d      	moveq	r1, #45	; 0x2d
    6674:	4640      	mov	r0, r8
    6676:	f008 fb88 	bl	ed8a <std::string::push_back(char)>
    667a:	4630      	mov	r0, r6
    667c:	f7fd fc5a 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    6680:	a910      	add	r1, sp, #64	; 0x40
    6682:	f7fe fd3c 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    6686:	b138      	cbz	r0, 6698 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x80>
    6688:	4630      	mov	r0, r6
    668a:	f7fe fd12 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    668e:	4683      	mov	r11, r0
    6690:	e004      	b.n	669c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x84>
    6692:	f04f 0b00 	mov.w	r11, #0
    6696:	e001      	b.n	669c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x84>
    6698:	2301      	movs	r3, #1
    669a:	9300      	str	r3, [sp, #0]
    669c:	2700      	movs	r7, #0
    669e:	46ba      	mov	r10, r7
    66a0:	9b00      	ldr	r3, [sp, #0]
    66a2:	7c22      	ldrb	r2, [r4, #16]
    66a4:	bb1b      	cbnz	r3, 66ee <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xd6>
    66a6:	b112      	cbz	r2, 66ae <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x96>
    66a8:	6aa1      	ldr	r1, [r4, #40]	; 0x28
    66aa:	458b      	cmp	r11, r1
    66ac:	d01f      	beq.n	66ee <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xd6>
    66ae:	6a61      	ldr	r1, [r4, #36]	; 0x24
    66b0:	458b      	cmp	r11, r1
    66b2:	d01c      	beq.n	66ee <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xd6>
    66b4:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
    66b8:	458b      	cmp	r11, r1
    66ba:	d118      	bne.n	66ee <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xd6>
    66bc:	f1ba 0f00 	cmp.w	r10, #0
    66c0:	d103      	bne.n	66ca <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xb2>
    66c2:	4640      	mov	r0, r8
    66c4:	2130      	movs	r1, #48	; 0x30
    66c6:	f008 fb60 	bl	ed8a <std::string::push_back(char)>
    66ca:	4630      	mov	r0, r6
    66cc:	f7fd fc32 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    66d0:	a910      	add	r1, sp, #64	; 0x40
    66d2:	3701      	adds	r7, #1
    66d4:	f7fe fd13 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    66d8:	b120      	cbz	r0, 66e4 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xcc>
    66da:	4630      	mov	r0, r6
    66dc:	f7fe fce9 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    66e0:	4683      	mov	r11, r0
    66e2:	e001      	b.n	66e8 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xd0>
    66e4:	2301      	movs	r3, #1
    66e6:	9300      	str	r3, [sp, #0]
    66e8:	f04f 0a01 	mov.w	r10, #1
    66ec:	e7d8      	b.n	66a0 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x88>
    66ee:	4994      	ldr	r1, [pc, #592]	; (6940 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x328>)
    66f0:	9105      	str	r1, [sp, #20]
    66f2:	b11a      	cbz	r2, 66fc <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xe4>
    66f4:	a805      	add	r0, sp, #20
    66f6:	2120      	movs	r1, #32
    66f8:	f008 fa69 	bl	ebce <std::string::reserve(unsigned int)>
    66fc:	f894 5124 	ldrb.w	r5, [r4, #292]	; 0x124
    6700:	b91d      	cbnz	r5, 670a <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xf2>
    6702:	9b00      	ldr	r3, [sp, #0]
    6704:	46a9      	mov	r9, r5
    6706:	b313      	cbz	r3, 674e <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x136>
    6708:	e0ef      	b.n	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    670a:	9b00      	ldr	r3, [sp, #0]
    670c:	2500      	movs	r5, #0
    670e:	f104 06cc 	add.w	r6, r4, #204	; 0xcc
    6712:	46a9      	mov	r9, r5
    6714:	2b00      	cmp	r3, #0
    6716:	d078      	beq.n	680a <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1f2>
    6718:	e0e7      	b.n	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    671a:	6a62      	ldr	r2, [r4, #36]	; 0x24
    671c:	4593      	cmp	r11, r2
    671e:	d125      	bne.n	676c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x154>
    6720:	f1b9 0f00 	cmp.w	r9, #0
    6724:	d122      	bne.n	676c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x154>
    6726:	bb0d      	cbnz	r5, 676c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x154>
    6728:	4640      	mov	r0, r8
    672a:	212e      	movs	r1, #46	; 0x2e
    672c:	f008 fb2d 	bl	ed8a <std::string::push_back(char)>
    6730:	f04f 0901 	mov.w	r9, #1
    6734:	4630      	mov	r0, r6
    6736:	f7fd fbfd 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    673a:	a910      	add	r1, sp, #64	; 0x40
    673c:	f7fe fcdf 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    6740:	2800      	cmp	r0, #0
    6742:	f000 80d2 	beq.w	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    6746:	4630      	mov	r0, r6
    6748:	f7fe fcb3 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    674c:	4683      	mov	r11, r0
    674e:	200a      	movs	r0, #10
    6750:	4659      	mov	r1, r11
    6752:	f7fc fcbb 	bl	30cc <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]>
    6756:	1c42      	adds	r2, r0, #1
    6758:	d0df      	beq.n	671a <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x102>
    675a:	f100 0130 	add.w	r1, r0, #48	; 0x30
    675e:	b2c9      	uxtb	r1, r1
    6760:	4640      	mov	r0, r8
    6762:	f008 fb12 	bl	ed8a <std::string::push_back(char)>
    6766:	f04f 0a01 	mov.w	r10, #1
    676a:	e7e3      	b.n	6734 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x11c>
    676c:	f8d4 2104 	ldr.w	r2, [r4, #260]	; 0x104
    6770:	4593      	cmp	r11, r2
    6772:	d004      	beq.n	677e <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x166>
    6774:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
    6778:	4593      	cmp	r11, r2
    677a:	f040 80b6 	bne.w	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    677e:	2d00      	cmp	r5, #0
    6780:	f040 80b3 	bne.w	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    6784:	f1ba 0f00 	cmp.w	r10, #0
    6788:	f000 80af 	beq.w	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    678c:	2165      	movs	r1, #101	; 0x65
    678e:	4640      	mov	r0, r8
    6790:	f008 fafb 	bl	ed8a <std::string::push_back(char)>
    6794:	4630      	mov	r0, r6
    6796:	f7fd fbcd 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    679a:	a910      	add	r1, sp, #64	; 0x40
    679c:	f7fe fcaf 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    67a0:	2800      	cmp	r0, #0
    67a2:	f000 80a1 	beq.w	68e8 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d0>
    67a6:	4630      	mov	r0, r6
    67a8:	f7fe fc83 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    67ac:	f8d4 20c0 	ldr.w	r2, [r4, #192]	; 0xc0
    67b0:	4683      	mov	r11, r0
    67b2:	4290      	cmp	r0, r2
    67b4:	d005      	beq.n	67c2 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1aa>
    67b6:	f8d4 20bc 	ldr.w	r2, [r4, #188]	; 0xbc
    67ba:	4290      	cmp	r0, r2
    67bc:	d107      	bne.n	67ce <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1b6>
    67be:	212d      	movs	r1, #45	; 0x2d
    67c0:	e000      	b.n	67c4 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1ac>
    67c2:	212b      	movs	r1, #43	; 0x2b
    67c4:	4640      	mov	r0, r8
    67c6:	f008 fae0 	bl	ed8a <std::string::push_back(char)>
    67ca:	2501      	movs	r5, #1
    67cc:	e7b2      	b.n	6734 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x11c>
    67ce:	2501      	movs	r5, #1
    67d0:	e7bd      	b.n	674e <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x136>
    67d2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    67d4:	4593      	cmp	r11, r2
    67d6:	d11f      	bne.n	6818 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x200>
    67d8:	f1b9 0f00 	cmp.w	r9, #0
    67dc:	f040 8085 	bne.w	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    67e0:	2d00      	cmp	r5, #0
    67e2:	f040 8082 	bne.w	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    67e6:	b19f      	cbz	r7, 6810 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1f8>
    67e8:	b2f9      	uxtb	r1, r7
    67ea:	a805      	add	r0, sp, #20
    67ec:	f008 facd 	bl	ed8a <std::string::push_back(char)>
    67f0:	462f      	mov	r7, r5
    67f2:	a802      	add	r0, sp, #8
    67f4:	f7fd fb9e 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    67f8:	a910      	add	r1, sp, #64	; 0x40
    67fa:	f7fe fc80 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    67fe:	2800      	cmp	r0, #0
    6800:	d073      	beq.n	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    6802:	a802      	add	r0, sp, #8
    6804:	f7fe fc55 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    6808:	4683      	mov	r11, r0
    680a:	7c22      	ldrb	r2, [r4, #16]
    680c:	b122      	cbz	r2, 6818 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x200>
    680e:	e7e0      	b.n	67d2 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1ba>
    6810:	4640      	mov	r0, r8
    6812:	f008 f8fe 	bl	ea12 <std::string::clear()>
    6816:	e068      	b.n	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    6818:	6a62      	ldr	r2, [r4, #36]	; 0x24
    681a:	4593      	cmp	r11, r2
    681c:	d113      	bne.n	6846 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x22e>
    681e:	f1b9 0f00 	cmp.w	r9, #0
    6822:	d162      	bne.n	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    6824:	2d00      	cmp	r5, #0
    6826:	d160      	bne.n	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    6828:	9b05      	ldr	r3, [sp, #20]
    682a:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    682e:	b11b      	cbz	r3, 6838 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x220>
    6830:	a805      	add	r0, sp, #20
    6832:	b2f9      	uxtb	r1, r7
    6834:	f008 faa9 	bl	ed8a <std::string::push_back(char)>
    6838:	4640      	mov	r0, r8
    683a:	212e      	movs	r1, #46	; 0x2e
    683c:	f008 faa5 	bl	ed8a <std::string::push_back(char)>
    6840:	f04f 0901 	mov.w	r9, #1
    6844:	e7d5      	b.n	67f2 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1da>
    6846:	4630      	mov	r0, r6
    6848:	4659      	mov	r1, r11
    684a:	220a      	movs	r2, #10
    684c:	f010 fc9a 	bl	17184 <wmemchr>
    6850:	b150      	cbz	r0, 6868 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x250>
    6852:	1b81      	subs	r1, r0, r6
    6854:	1089      	asrs	r1, r1, #2
    6856:	3130      	adds	r1, #48	; 0x30
    6858:	4640      	mov	r0, r8
    685a:	b2c9      	uxtb	r1, r1
    685c:	f008 fa95 	bl	ed8a <std::string::push_back(char)>
    6860:	3701      	adds	r7, #1
    6862:	f04f 0a01 	mov.w	r10, #1
    6866:	e7c4      	b.n	67f2 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1da>
    6868:	f8d4 2104 	ldr.w	r2, [r4, #260]	; 0x104
    686c:	4593      	cmp	r11, r2
    686e:	d003      	beq.n	6878 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x260>
    6870:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
    6874:	4593      	cmp	r11, r2
    6876:	d138      	bne.n	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    6878:	2d00      	cmp	r5, #0
    687a:	d136      	bne.n	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    687c:	f1ba 0f00 	cmp.w	r10, #0
    6880:	d033      	beq.n	68ea <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d2>
    6882:	9b05      	ldr	r3, [sp, #20]
    6884:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    6888:	b113      	cbz	r3, 6890 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x278>
    688a:	f1b9 0f00 	cmp.w	r9, #0
    688e:	d044      	beq.n	691a <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x302>
    6890:	2165      	movs	r1, #101	; 0x65
    6892:	4640      	mov	r0, r8
    6894:	f008 fa79 	bl	ed8a <std::string::push_back(char)>
    6898:	a802      	add	r0, sp, #8
    689a:	f7fd fb4b 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    689e:	a910      	add	r1, sp, #64	; 0x40
    68a0:	f7fe fc2d 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    68a4:	b300      	cbz	r0, 68e8 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d0>
    68a6:	a802      	add	r0, sp, #8
    68a8:	f7fe fc03 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    68ac:	f8d4 20c0 	ldr.w	r2, [r4, #192]	; 0xc0
    68b0:	4683      	mov	r11, r0
    68b2:	1a83      	subs	r3, r0, r2
    68b4:	425a      	negs	r2, r3
    68b6:	415a      	adcs	r2, r3
    68b8:	b91a      	cbnz	r2, 68c2 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2aa>
    68ba:	f8d4 10bc 	ldr.w	r1, [r4, #188]	; 0xbc
    68be:	4288      	cmp	r0, r1
    68c0:	d110      	bne.n	68e4 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2cc>
    68c2:	7c21      	ldrb	r1, [r4, #16]
    68c4:	b111      	cbz	r1, 68cc <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2b4>
    68c6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
    68c8:	458b      	cmp	r11, r1
    68ca:	d00b      	beq.n	68e4 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2cc>
    68cc:	6a61      	ldr	r1, [r4, #36]	; 0x24
    68ce:	458b      	cmp	r11, r1
    68d0:	d008      	beq.n	68e4 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2cc>
    68d2:	2a00      	cmp	r2, #0
    68d4:	4640      	mov	r0, r8
    68d6:	bf14      	ite	ne
    68d8:	212b      	movne	r1, #43	; 0x2b
    68da:	212d      	moveq	r1, #45	; 0x2d
    68dc:	f008 fa55 	bl	ed8a <std::string::push_back(char)>
    68e0:	2501      	movs	r5, #1
    68e2:	e786      	b.n	67f2 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1da>
    68e4:	2501      	movs	r5, #1
    68e6:	e790      	b.n	680a <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1f2>
    68e8:	2501      	movs	r5, #1
    68ea:	ae06      	add	r6, sp, #24
    68ec:	f856 3d04 	ldr.w	r3, [r6, #-4]!
    68f0:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    68f4:	b1b3      	cbz	r3, 6924 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x30c>
    68f6:	f1b9 0f00 	cmp.w	r9, #0
    68fa:	d104      	bne.n	6906 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2ee>
    68fc:	b91d      	cbnz	r5, 6906 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2ee>
    68fe:	4630      	mov	r0, r6
    6900:	b2f9      	uxtb	r1, r7
    6902:	f008 fa42 	bl	ed8a <std::string::push_back(char)>
    6906:	68a0      	ldr	r0, [r4, #8]
    6908:	68e1      	ldr	r1, [r4, #12]
    690a:	4632      	mov	r2, r6
    690c:	f009 fb6b 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    6910:	b940      	cbnz	r0, 6924 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x30c>
    6912:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    6914:	2204      	movs	r2, #4
    6916:	601a      	str	r2, [r3, #0]
    6918:	e004      	b.n	6924 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x30c>
    691a:	a805      	add	r0, sp, #20
    691c:	b2f9      	uxtb	r1, r7
    691e:	f008 fa34 	bl	ed8a <std::string::push_back(char)>
    6922:	e7b5      	b.n	6890 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x278>
    6924:	ab02      	add	r3, sp, #8
    6926:	e893 0003 	ldmia.w	r3, {r0, r1}
    692a:	9b01      	ldr	r3, [sp, #4]
    692c:	e883 0003 	stmia.w	r3, {r0, r1}
    6930:	4630      	mov	r0, r6
    6932:	f007 fff1 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    6936:	9801      	ldr	r0, [sp, #4]
    6938:	b007      	add	sp, #28
    693a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    693e:	bf00      	nop
    6940:	10000c70 	.word	0x10000c70

00006944 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, float&) const>:
    6944:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    6948:	4689      	mov	r9, r1
    694a:	b08d      	sub	sp, #52	; 0x34
    694c:	ac08      	add	r4, sp, #32
    694e:	e884 000c 	stmia.w	r4, {r2, r3}
    6952:	4b1f      	ldr	r3, [pc, #124]	; (69d0 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, float&) const+0x8c>)
    6954:	ad0c      	add	r5, sp, #48	; 0x30
    6956:	f845 3d08 	str.w	r3, [r5, #-8]!
    695a:	2120      	movs	r1, #32
    695c:	4607      	mov	r7, r0
    695e:	4628      	mov	r0, r5
    6960:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    6962:	f008 f934 	bl	ebce <std::string::reserve(unsigned int)>
    6966:	ab14      	add	r3, sp, #80	; 0x50
    6968:	e893 0003 	ldmia.w	r3, {r0, r1}
    696c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    696e:	e88d 0003 	stmia.w	sp, {r0, r1}
    6972:	f10d 0818 	add.w	r8, sp, #24
    6976:	9302      	str	r3, [sp, #8]
    6978:	9603      	str	r6, [sp, #12]
    697a:	9504      	str	r5, [sp, #16]
    697c:	e894 000c 	ldmia.w	r4, {r2, r3}
    6980:	4640      	mov	r0, r8
    6982:	4649      	mov	r1, r9
    6984:	f7ff fe48 	bl	6618 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    6988:	e898 0003 	ldmia.w	r8, {r0, r1}
    698c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    6990:	e884 0003 	stmia.w	r4, {r0, r1}
    6994:	f009 fb6e 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    6998:	ab0c      	add	r3, sp, #48	; 0x30
    699a:	f843 0d04 	str.w	r0, [r3, #-4]!
    699e:	9918      	ldr	r1, [sp, #96]	; 0x60
    69a0:	4640      	mov	r0, r8
    69a2:	4632      	mov	r2, r6
    69a4:	f009 fc82 	bl	102ac <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)>
    69a8:	4620      	mov	r0, r4
    69aa:	a914      	add	r1, sp, #80	; 0x50
    69ac:	f7fe fb94 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    69b0:	b118      	cbz	r0, 69ba <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, float&) const+0x76>
    69b2:	6833      	ldr	r3, [r6, #0]
    69b4:	f043 0302 	orr.w	r3, r3, #2
    69b8:	6033      	str	r3, [r6, #0]
    69ba:	e894 0003 	ldmia.w	r4, {r0, r1}
    69be:	e887 0003 	stmia.w	r7, {r0, r1}
    69c2:	4628      	mov	r0, r5
    69c4:	f007 ffa8 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    69c8:	4638      	mov	r0, r7
    69ca:	b00d      	add	sp, #52	; 0x34
    69cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    69d0:	10000c70 	.word	0x10000c70

000069d4 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, double&) const>:
    69d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    69d8:	4689      	mov	r9, r1
    69da:	b08d      	sub	sp, #52	; 0x34
    69dc:	ac08      	add	r4, sp, #32
    69de:	e884 000c 	stmia.w	r4, {r2, r3}
    69e2:	4b1f      	ldr	r3, [pc, #124]	; (6a60 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, double&) const+0x8c>)
    69e4:	ad0c      	add	r5, sp, #48	; 0x30
    69e6:	f845 3d08 	str.w	r3, [r5, #-8]!
    69ea:	2120      	movs	r1, #32
    69ec:	4607      	mov	r7, r0
    69ee:	4628      	mov	r0, r5
    69f0:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    69f2:	f008 f8ec 	bl	ebce <std::string::reserve(unsigned int)>
    69f6:	ab14      	add	r3, sp, #80	; 0x50
    69f8:	e893 0003 	ldmia.w	r3, {r0, r1}
    69fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
    69fe:	e88d 0003 	stmia.w	sp, {r0, r1}
    6a02:	f10d 0818 	add.w	r8, sp, #24
    6a06:	9302      	str	r3, [sp, #8]
    6a08:	9603      	str	r6, [sp, #12]
    6a0a:	9504      	str	r5, [sp, #16]
    6a0c:	e894 000c 	ldmia.w	r4, {r2, r3}
    6a10:	4640      	mov	r0, r8
    6a12:	4649      	mov	r1, r9
    6a14:	f7ff fe00 	bl	6618 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    6a18:	e898 0003 	ldmia.w	r8, {r0, r1}
    6a1c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    6a20:	e884 0003 	stmia.w	r4, {r0, r1}
    6a24:	f009 fb26 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    6a28:	ab0c      	add	r3, sp, #48	; 0x30
    6a2a:	f843 0d04 	str.w	r0, [r3, #-4]!
    6a2e:	9918      	ldr	r1, [sp, #96]	; 0x60
    6a30:	4640      	mov	r0, r8
    6a32:	4632      	mov	r2, r6
    6a34:	f009 fc84 	bl	10340 <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)>
    6a38:	4620      	mov	r0, r4
    6a3a:	a914      	add	r1, sp, #80	; 0x50
    6a3c:	f7fe fb4c 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    6a40:	b118      	cbz	r0, 6a4a <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, double&) const+0x76>
    6a42:	6833      	ldr	r3, [r6, #0]
    6a44:	f043 0302 	orr.w	r3, r3, #2
    6a48:	6033      	str	r3, [r6, #0]
    6a4a:	e894 0003 	ldmia.w	r4, {r0, r1}
    6a4e:	e887 0003 	stmia.w	r7, {r0, r1}
    6a52:	4628      	mov	r0, r5
    6a54:	f007 ff60 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    6a58:	4638      	mov	r0, r7
    6a5a:	b00d      	add	sp, #52	; 0x34
    6a5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    6a60:	10000c70 	.word	0x10000c70

00006a64 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long double&) const>:
    6a64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    6a68:	4689      	mov	r9, r1
    6a6a:	b08d      	sub	sp, #52	; 0x34
    6a6c:	ac08      	add	r4, sp, #32
    6a6e:	e884 000c 	stmia.w	r4, {r2, r3}
    6a72:	4b1f      	ldr	r3, [pc, #124]	; (6af0 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long double&) const+0x8c>)
    6a74:	ad0c      	add	r5, sp, #48	; 0x30
    6a76:	f845 3d08 	str.w	r3, [r5, #-8]!
    6a7a:	2120      	movs	r1, #32
    6a7c:	4607      	mov	r7, r0
    6a7e:	4628      	mov	r0, r5
    6a80:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    6a82:	f008 f8a4 	bl	ebce <std::string::reserve(unsigned int)>
    6a86:	ab14      	add	r3, sp, #80	; 0x50
    6a88:	e893 0003 	ldmia.w	r3, {r0, r1}
    6a8c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    6a8e:	e88d 0003 	stmia.w	sp, {r0, r1}
    6a92:	f10d 0818 	add.w	r8, sp, #24
    6a96:	9302      	str	r3, [sp, #8]
    6a98:	9603      	str	r6, [sp, #12]
    6a9a:	9504      	str	r5, [sp, #16]
    6a9c:	e894 000c 	ldmia.w	r4, {r2, r3}
    6aa0:	4640      	mov	r0, r8
    6aa2:	4649      	mov	r1, r9
    6aa4:	f7ff fdb8 	bl	6618 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    6aa8:	e898 0003 	ldmia.w	r8, {r0, r1}
    6aac:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    6ab0:	e884 0003 	stmia.w	r4, {r0, r1}
    6ab4:	f009 fade 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    6ab8:	ab0c      	add	r3, sp, #48	; 0x30
    6aba:	f843 0d04 	str.w	r0, [r3, #-4]!
    6abe:	9918      	ldr	r1, [sp, #96]	; 0x60
    6ac0:	4640      	mov	r0, r8
    6ac2:	4632      	mov	r2, r6
    6ac4:	f009 fc96 	bl	103f4 <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)>
    6ac8:	4620      	mov	r0, r4
    6aca:	a914      	add	r1, sp, #80	; 0x50
    6acc:	f7fe fb04 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    6ad0:	b118      	cbz	r0, 6ada <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long double&) const+0x76>
    6ad2:	6833      	ldr	r3, [r6, #0]
    6ad4:	f043 0302 	orr.w	r3, r3, #2
    6ad8:	6033      	str	r3, [r6, #0]
    6ada:	e894 0003 	ldmia.w	r4, {r0, r1}
    6ade:	e887 0003 	stmia.w	r7, {r0, r1}
    6ae2:	4628      	mov	r0, r5
    6ae4:	f007 ff18 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    6ae8:	4638      	mov	r0, r7
    6aea:	b00d      	add	sp, #52	; 0x34
    6aec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    6af0:	10000c70 	.word	0x10000c70

00006af4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const>:
    6af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    6af8:	b08b      	sub	sp, #44	; 0x2c
    6afa:	9c16      	ldr	r4, [sp, #88]	; 0x58
    6afc:	9005      	str	r0, [sp, #20]
    6afe:	ad06      	add	r5, sp, #24
    6b00:	f104 006c 	add.w	r0, r4, #108	; 0x6c
    6b04:	e885 000c 	stmia.w	r5, {r2, r3}
    6b08:	f7fd f9ee 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    6b0c:	68e4      	ldr	r4, [r4, #12]
    6b0e:	4683      	mov	r11, r0
    6b10:	f004 044a 	and.w	r4, r4, #74	; 0x4a
    6b14:	2c40      	cmp	r4, #64	; 0x40
    6b16:	d004      	beq.n	6b22 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2e>
    6b18:	2c08      	cmp	r4, #8
    6b1a:	bf14      	ite	ne
    6b1c:	260a      	movne	r6, #10
    6b1e:	2610      	moveq	r6, #16
    6b20:	e000      	b.n	6b24 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x30>
    6b22:	2608      	movs	r6, #8
    6b24:	4628      	mov	r0, r5
    6b26:	a914      	add	r1, sp, #80	; 0x50
    6b28:	f7fe fad6 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    6b2c:	4680      	mov	r8, r0
    6b2e:	bb28      	cbnz	r0, 6b7c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x88>
    6b30:	4628      	mov	r0, r5
    6b32:	f7fe fabe 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    6b36:	f8db 10bc 	ldr.w	r1, [r11, #188]	; 0xbc
    6b3a:	4682      	mov	r10, r0
    6b3c:	1a42      	subs	r2, r0, r1
    6b3e:	4253      	negs	r3, r2
    6b40:	4153      	adcs	r3, r2
    6b42:	9300      	str	r3, [sp, #0]
    6b44:	b91b      	cbnz	r3, 6b4e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x5a>
    6b46:	f8db 10c0 	ldr.w	r1, [r11, #192]	; 0xc0
    6b4a:	4288      	cmp	r0, r1
    6b4c:	d11d      	bne.n	6b8a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x96>
    6b4e:	f89b 1010 	ldrb.w	r1, [r11, #16]
    6b52:	b119      	cbz	r1, 6b5c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x68>
    6b54:	f8db 1028 	ldr.w	r1, [r11, #40]	; 0x28
    6b58:	458a      	cmp	r10, r1
    6b5a:	d016      	beq.n	6b8a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x96>
    6b5c:	f8db 1024 	ldr.w	r1, [r11, #36]	; 0x24
    6b60:	458a      	cmp	r10, r1
    6b62:	d012      	beq.n	6b8a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x96>
    6b64:	4628      	mov	r0, r5
    6b66:	f7fd f9e5 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    6b6a:	a914      	add	r1, sp, #80	; 0x50
    6b6c:	f7fe fac7 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    6b70:	b148      	cbz	r0, 6b86 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x92>
    6b72:	4628      	mov	r0, r5
    6b74:	f7fe fa9d 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    6b78:	4682      	mov	r10, r0
    6b7a:	e006      	b.n	6b8a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x96>
    6b7c:	f04f 0a00 	mov.w	r10, #0
    6b80:	f8cd a000 	str.w	r10, [sp]
    6b84:	e001      	b.n	6b8a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x96>
    6b86:	f04f 0801 	mov.w	r8, #1
    6b8a:	2500      	movs	r5, #0
    6b8c:	462f      	mov	r7, r5
    6b8e:	f1b8 0f00 	cmp.w	r8, #0
    6b92:	d146      	bne.n	6c22 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x12e>
    6b94:	f89b 1010 	ldrb.w	r1, [r11, #16]
    6b98:	b119      	cbz	r1, 6ba2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xae>
    6b9a:	f8db 1028 	ldr.w	r1, [r11, #40]	; 0x28
    6b9e:	458a      	cmp	r10, r1
    6ba0:	d03f      	beq.n	6c22 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x12e>
    6ba2:	f8db 1024 	ldr.w	r1, [r11, #36]	; 0x24
    6ba6:	458a      	cmp	r10, r1
    6ba8:	d03b      	beq.n	6c22 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x12e>
    6baa:	f8db 10cc 	ldr.w	r1, [r11, #204]	; 0xcc
    6bae:	458a      	cmp	r10, r1
    6bb0:	d108      	bne.n	6bc4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xd0>
    6bb2:	b117      	cbz	r7, 6bba <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xc6>
    6bb4:	2e0a      	cmp	r6, #10
    6bb6:	d106      	bne.n	6bc6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xd2>
    6bb8:	e01d      	b.n	6bf6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x102>
    6bba:	b194      	cbz	r4, 6be2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xee>
    6bbc:	2e08      	cmp	r6, #8
    6bbe:	d013      	beq.n	6be8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xf4>
    6bc0:	3501      	adds	r5, #1
    6bc2:	e012      	b.n	6bea <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xf6>
    6bc4:	b36f      	cbz	r7, 6c22 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x12e>
    6bc6:	f8db 10c4 	ldr.w	r1, [r11, #196]	; 0xc4
    6bca:	458a      	cmp	r10, r1
    6bcc:	d003      	beq.n	6bd6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xe2>
    6bce:	f8db 10c8 	ldr.w	r1, [r11, #200]	; 0xc8
    6bd2:	458a      	cmp	r10, r1
    6bd4:	d124      	bne.n	6c20 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x12c>
    6bd6:	b154      	cbz	r4, 6bee <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xfa>
    6bd8:	2e10      	cmp	r6, #16
    6bda:	d125      	bne.n	6c28 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x134>
    6bdc:	2500      	movs	r5, #0
    6bde:	462f      	mov	r7, r5
    6be0:	e00d      	b.n	6bfe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x10a>
    6be2:	4625      	mov	r5, r4
    6be4:	2701      	movs	r7, #1
    6be6:	e009      	b.n	6bfc <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x108>
    6be8:	463d      	mov	r5, r7
    6bea:	2701      	movs	r7, #1
    6bec:	e007      	b.n	6bfe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x10a>
    6bee:	4625      	mov	r5, r4
    6bf0:	4627      	mov	r7, r4
    6bf2:	2610      	movs	r6, #16
    6bf4:	e003      	b.n	6bfe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x10a>
    6bf6:	2c00      	cmp	r4, #0
    6bf8:	d1e2      	bne.n	6bc0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xcc>
    6bfa:	4625      	mov	r5, r4
    6bfc:	2608      	movs	r6, #8
    6bfe:	a806      	add	r0, sp, #24
    6c00:	f7fd f998 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    6c04:	a914      	add	r1, sp, #80	; 0x50
    6c06:	f7fe fa7a 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    6c0a:	b130      	cbz	r0, 6c1a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x126>
    6c0c:	a806      	add	r0, sp, #24
    6c0e:	f7fe fa50 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    6c12:	4682      	mov	r10, r0
    6c14:	2f00      	cmp	r7, #0
    6c16:	d1bd      	bne.n	6b94 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xa0>
    6c18:	e003      	b.n	6c22 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x12e>
    6c1a:	f04f 0801 	mov.w	r8, #1
    6c1e:	e000      	b.n	6c22 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x12e>
    6c20:	2701      	movs	r7, #1
    6c22:	2e10      	cmp	r6, #16
    6c24:	d101      	bne.n	6c2a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x136>
    6c26:	e002      	b.n	6c2e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x13a>
    6c28:	2701      	movs	r7, #1
    6c2a:	9601      	str	r6, [sp, #4]
    6c2c:	e001      	b.n	6c32 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x13e>
    6c2e:	2316      	movs	r3, #22
    6c30:	9301      	str	r3, [sp, #4]
    6c32:	4968      	ldr	r1, [pc, #416]	; (6dd4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2e0>)
    6c34:	9109      	str	r1, [sp, #36]	; 0x24
    6c36:	f89b 1010 	ldrb.w	r1, [r11, #16]
    6c3a:	b119      	cbz	r1, 6c44 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x150>
    6c3c:	a809      	add	r0, sp, #36	; 0x24
    6c3e:	2120      	movs	r1, #32
    6c40:	f007 ffc5 	bl	ebce <std::string::reserve(unsigned int)>
    6c44:	9b00      	ldr	r3, [sp, #0]
    6c46:	f89b 4124 	ldrb.w	r4, [r11, #292]	; 0x124
    6c4a:	2b00      	cmp	r3, #0
    6c4c:	bf14      	ite	ne
    6c4e:	f04f 4300 	movne.w	r3, #2147483648	; 0x80000000
    6c52:	f06f 4300 	mvneq.w	r3, #2147483648	; 0x80000000
    6c56:	9302      	str	r3, [sp, #8]
    6c58:	fbb3 f3f6 	udiv	r3, r3, r6
    6c5c:	9303      	str	r3, [sp, #12]
    6c5e:	b924      	cbnz	r4, 6c6a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x176>
    6c60:	46a1      	mov	r9, r4
    6c62:	f1b8 0f00 	cmp.w	r8, #0
    6c66:	d021      	beq.n	6cac <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1b8>
    6c68:	e069      	b.n	6d3e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x24a>
    6c6a:	f10b 03cc 	add.w	r3, r11, #204	; 0xcc
    6c6e:	2400      	movs	r4, #0
    6c70:	9304      	str	r3, [sp, #16]
    6c72:	46a1      	mov	r9, r4
    6c74:	f1b8 0f00 	cmp.w	r8, #0
    6c78:	d038      	beq.n	6cec <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1f8>
    6c7a:	e060      	b.n	6d3e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x24a>
    6c7c:	9b03      	ldr	r3, [sp, #12]
    6c7e:	429c      	cmp	r4, r3
    6c80:	d81b      	bhi.n	6cba <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1c6>
    6c82:	4374      	muls	r4, r6
    6c84:	9b02      	ldr	r3, [sp, #8]
    6c86:	3501      	adds	r5, #1
    6c88:	1a1a      	subs	r2, r3, r0
    6c8a:	4294      	cmp	r4, r2
    6c8c:	bf88      	it	hi
    6c8e:	f049 0901 	orrhi.w	r9, r9, #1
    6c92:	4404      	add	r4, r0
    6c94:	a806      	add	r0, sp, #24
    6c96:	f7fd f94d 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    6c9a:	a914      	add	r1, sp, #80	; 0x50
    6c9c:	f7fe fa2f 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    6ca0:	2800      	cmp	r0, #0
    6ca2:	d047      	beq.n	6d34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x240>
    6ca4:	a806      	add	r0, sp, #24
    6ca6:	f7fe fa04 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    6caa:	4682      	mov	r10, r0
    6cac:	9801      	ldr	r0, [sp, #4]
    6cae:	4651      	mov	r1, r10
    6cb0:	f7fc fa0c 	bl	30cc <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]>
    6cb4:	1c43      	adds	r3, r0, #1
    6cb6:	d1e1      	bne.n	6c7c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x188>
    6cb8:	e041      	b.n	6d3e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x24a>
    6cba:	f04f 0901 	mov.w	r9, #1
    6cbe:	e7e9      	b.n	6c94 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1a0>
    6cc0:	f8db 1028 	ldr.w	r1, [r11, #40]	; 0x28
    6cc4:	458a      	cmp	r10, r1
    6cc6:	d115      	bne.n	6cf4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x200>
    6cc8:	2d00      	cmp	r5, #0
    6cca:	d036      	beq.n	6d3a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x246>
    6ccc:	b2e9      	uxtb	r1, r5
    6cce:	a809      	add	r0, sp, #36	; 0x24
    6cd0:	f008 f85b 	bl	ed8a <std::string::push_back(char)>
    6cd4:	2500      	movs	r5, #0
    6cd6:	a806      	add	r0, sp, #24
    6cd8:	f7fd f92c 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    6cdc:	a914      	add	r1, sp, #80	; 0x50
    6cde:	f7fe fa0e 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    6ce2:	b338      	cbz	r0, 6d34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x240>
    6ce4:	a806      	add	r0, sp, #24
    6ce6:	f7fe f9e4 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    6cea:	4682      	mov	r10, r0
    6cec:	f89b 1010 	ldrb.w	r1, [r11, #16]
    6cf0:	2900      	cmp	r1, #0
    6cf2:	d1e5      	bne.n	6cc0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1cc>
    6cf4:	f8db 1024 	ldr.w	r1, [r11, #36]	; 0x24
    6cf8:	458a      	cmp	r10, r1
    6cfa:	d020      	beq.n	6d3e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x24a>
    6cfc:	9804      	ldr	r0, [sp, #16]
    6cfe:	4651      	mov	r1, r10
    6d00:	9a01      	ldr	r2, [sp, #4]
    6d02:	f010 fa3f 	bl	17184 <wmemchr>
    6d06:	b1e0      	cbz	r0, 6d42 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x24e>
    6d08:	9b04      	ldr	r3, [sp, #16]
    6d0a:	1ac0      	subs	r0, r0, r3
    6d0c:	1080      	asrs	r0, r0, #2
    6d0e:	9b03      	ldr	r3, [sp, #12]
    6d10:	280f      	cmp	r0, #15
    6d12:	bfc8      	it	gt
    6d14:	3806      	subgt	r0, #6
    6d16:	429c      	cmp	r4, r3
    6d18:	d809      	bhi.n	6d2e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x23a>
    6d1a:	4374      	muls	r4, r6
    6d1c:	9b02      	ldr	r3, [sp, #8]
    6d1e:	3501      	adds	r5, #1
    6d20:	1a1a      	subs	r2, r3, r0
    6d22:	4294      	cmp	r4, r2
    6d24:	bf88      	it	hi
    6d26:	f049 0901 	orrhi.w	r9, r9, #1
    6d2a:	4404      	add	r4, r0
    6d2c:	e7d3      	b.n	6cd6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1e2>
    6d2e:	f04f 0901 	mov.w	r9, #1
    6d32:	e7d0      	b.n	6cd6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1e2>
    6d34:	f04f 0801 	mov.w	r8, #1
    6d38:	e001      	b.n	6d3e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x24a>
    6d3a:	2601      	movs	r6, #1
    6d3c:	e002      	b.n	6d44 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x250>
    6d3e:	2600      	movs	r6, #0
    6d40:	e000      	b.n	6d44 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x250>
    6d42:	4606      	mov	r6, r0
    6d44:	9a09      	ldr	r2, [sp, #36]	; 0x24
    6d46:	f852 2c0c 	ldr.w	r2, [r2, #-12]
    6d4a:	b172      	cbz	r2, 6d6a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x276>
    6d4c:	a809      	add	r0, sp, #36	; 0x24
    6d4e:	b2e9      	uxtb	r1, r5
    6d50:	f008 f81b 	bl	ed8a <std::string::push_back(char)>
    6d54:	f8db 0008 	ldr.w	r0, [r11, #8]
    6d58:	f8db 100c 	ldr.w	r1, [r11, #12]
    6d5c:	aa09      	add	r2, sp, #36	; 0x24
    6d5e:	f009 f942 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    6d62:	b910      	cbnz	r0, 6d6a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x276>
    6d64:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    6d66:	2304      	movs	r3, #4
    6d68:	6013      	str	r3, [r2, #0]
    6d6a:	b925      	cbnz	r5, 6d76 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x282>
    6d6c:	b91f      	cbnz	r7, 6d76 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x282>
    6d6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6d70:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    6d74:	b103      	cbz	r3, 6d78 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x284>
    6d76:	b136      	cbz	r6, 6d86 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x292>
    6d78:	2300      	movs	r3, #0
    6d7a:	9a18      	ldr	r2, [sp, #96]	; 0x60
    6d7c:	6013      	str	r3, [r2, #0]
    6d7e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    6d80:	2304      	movs	r3, #4
    6d82:	6013      	str	r3, [r2, #0]
    6d84:	e007      	b.n	6d96 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2a2>
    6d86:	f1b9 0f00 	cmp.w	r9, #0
    6d8a:	d10e      	bne.n	6daa <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2b6>
    6d8c:	9b00      	ldr	r3, [sp, #0]
    6d8e:	b103      	cbz	r3, 6d92 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x29e>
    6d90:	4264      	negs	r4, r4
    6d92:	9b18      	ldr	r3, [sp, #96]	; 0x60
    6d94:	601c      	str	r4, [r3, #0]
    6d96:	f1b8 0f00 	cmp.w	r8, #0
    6d9a:	d00e      	beq.n	6dba <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2c6>
    6d9c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6d9e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    6da0:	681b      	ldr	r3, [r3, #0]
    6da2:	f043 0302 	orr.w	r3, r3, #2
    6da6:	6013      	str	r3, [r2, #0]
    6da8:	e007      	b.n	6dba <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2c6>
    6daa:	9b00      	ldr	r3, [sp, #0]
    6dac:	b113      	cbz	r3, 6db4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2c0>
    6dae:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    6db2:	e7e2      	b.n	6d7a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x286>
    6db4:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    6db8:	e7df      	b.n	6d7a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x286>
    6dba:	ab06      	add	r3, sp, #24
    6dbc:	e893 0003 	ldmia.w	r3, {r0, r1}
    6dc0:	9b05      	ldr	r3, [sp, #20]
    6dc2:	e883 0003 	stmia.w	r3, {r0, r1}
    6dc6:	a809      	add	r0, sp, #36	; 0x24
    6dc8:	f007 fda6 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    6dcc:	9805      	ldr	r0, [sp, #20]
    6dce:	b00b      	add	sp, #44	; 0x2c
    6dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    6dd4:	10000c70 	.word	0x10000c70

00006dd8 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const>:
    6dd8:	b570      	push	{r4, r5, r6, lr}
    6dda:	4605      	mov	r5, r0
    6ddc:	460e      	mov	r6, r1
    6dde:	b088      	sub	sp, #32
    6de0:	ac06      	add	r4, sp, #24
    6de2:	e884 000c 	stmia.w	r4, {r2, r3}
    6de6:	ab0c      	add	r3, sp, #48	; 0x30
    6de8:	e893 0003 	ldmia.w	r3, {r0, r1}
    6dec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6dee:	e88d 0003 	stmia.w	sp, {r0, r1}
    6df2:	9302      	str	r3, [sp, #8]
    6df4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6df6:	4628      	mov	r0, r5
    6df8:	9303      	str	r3, [sp, #12]
    6dfa:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6dfc:	4631      	mov	r1, r6
    6dfe:	9304      	str	r3, [sp, #16]
    6e00:	e894 000c 	ldmia.w	r4, {r2, r3}
    6e04:	f7ff fe76 	bl	6af4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const>
    6e08:	4628      	mov	r0, r5
    6e0a:	b008      	add	sp, #32
    6e0c:	bd70      	pop	{r4, r5, r6, pc}

00006e0e <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const>:
    6e0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    6e12:	b08f      	sub	sp, #60	; 0x3c
    6e14:	ac0a      	add	r4, sp, #40	; 0x28
    6e16:	e884 000c 	stmia.w	r4, {r2, r3}
    6e1a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    6e1c:	9007      	str	r0, [sp, #28]
    6e1e:	68da      	ldr	r2, [r3, #12]
    6e20:	460e      	mov	r6, r1
    6e22:	07d2      	lsls	r2, r2, #31
    6e24:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
    6e28:	d431      	bmi.n	6e8e <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x80>
    6e2a:	f04f 32ff 	mov.w	r2, #4294967295
    6e2e:	920d      	str	r2, [sp, #52]	; 0x34
    6e30:	aa18      	add	r2, sp, #96	; 0x60
    6e32:	e892 0003 	ldmia.w	r2, {r0, r1}
    6e36:	e88d 0003 	stmia.w	sp, {r0, r1}
    6e3a:	9302      	str	r3, [sp, #8]
    6e3c:	ab0d      	add	r3, sp, #52	; 0x34
    6e3e:	ad08      	add	r5, sp, #32
    6e40:	f8cd 800c 	str.w	r8, [sp, #12]
    6e44:	9304      	str	r3, [sp, #16]
    6e46:	4628      	mov	r0, r5
    6e48:	e894 000c 	ldmia.w	r4, {r2, r3}
    6e4c:	4631      	mov	r1, r6
    6e4e:	f7ff fe51 	bl	6af4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const>
    6e52:	e895 0003 	ldmia.w	r5, {r0, r1}
    6e56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6e58:	e884 0003 	stmia.w	r4, {r0, r1}
    6e5c:	2b01      	cmp	r3, #1
    6e5e:	d804      	bhi.n	6e6a <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x5c>
    6e60:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    6e62:	f003 0301 	and.w	r3, r3, #1
    6e66:	7013      	strb	r3, [r2, #0]
    6e68:	e0ad      	b.n	6fc6 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1b8>
    6e6a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    6e6c:	2301      	movs	r3, #1
    6e6e:	7013      	strb	r3, [r2, #0]
    6e70:	2304      	movs	r3, #4
    6e72:	f8c8 3000 	str.w	r3, [r8]
    6e76:	4620      	mov	r0, r4
    6e78:	a918      	add	r1, sp, #96	; 0x60
    6e7a:	f7fe f92d 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    6e7e:	2800      	cmp	r0, #0
    6e80:	f000 80a1 	beq.w	6fc6 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1b8>
    6e84:	f8d8 3000 	ldr.w	r3, [r8]
    6e88:	f043 0302 	orr.w	r3, r3, #2
    6e8c:	e099      	b.n	6fc2 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1b4>
    6e8e:	f103 006c 	add.w	r0, r3, #108	; 0x6c
    6e92:	f7fd f829 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    6e96:	6a06      	ldr	r6, [r0, #32]
    6e98:	6985      	ldr	r5, [r0, #24]
    6e9a:	fab6 f686 	clz	r6, r6
    6e9e:	fab5 f585 	clz	r5, r5
    6ea2:	f04f 0a01 	mov.w	r10, #1
    6ea6:	4681      	mov	r9, r0
    6ea8:	4657      	mov	r7, r10
    6eaa:	0976      	lsrs	r6, r6, #5
    6eac:	096d      	lsrs	r5, r5, #5
    6eae:	f04f 0b00 	mov.w	r11, #0
    6eb2:	2e00      	cmp	r6, #0
    6eb4:	d13e      	bne.n	6f34 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x126>
    6eb6:	4620      	mov	r0, r4
    6eb8:	a918      	add	r1, sp, #96	; 0x60
    6eba:	f7fe f90d 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    6ebe:	2800      	cmp	r0, #0
    6ec0:	d13c      	bne.n	6f3c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x12e>
    6ec2:	4620      	mov	r0, r4
    6ec4:	f7fe f8f5 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    6ec8:	b936      	cbnz	r6, 6ed8 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xca>
    6eca:	f8d9 101c 	ldr.w	r1, [r9, #28]
    6ece:	f851 702b 	ldr.w	r7, [r1, r11, lsl #2]
    6ed2:	1bc3      	subs	r3, r0, r7
    6ed4:	425f      	negs	r7, r3
    6ed6:	415f      	adcs	r7, r3
    6ed8:	b90f      	cbnz	r7, 6ede <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xd0>
    6eda:	b115      	cbz	r5, 6ee2 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xd4>
    6edc:	e04a      	b.n	6f74 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x166>
    6ede:	2d00      	cmp	r5, #0
    6ee0:	d162      	bne.n	6fa8 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x19a>
    6ee2:	f8d9 3014 	ldr.w	r3, [r9, #20]
    6ee6:	f853 302b 	ldr.w	r3, [r3, r11, lsl #2]
    6eea:	4298      	cmp	r0, r3
    6eec:	d004      	beq.n	6ef8 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xea>
    6eee:	bb46      	cbnz	r6, 6f42 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x134>
    6ef0:	2f00      	cmp	r7, #0
    6ef2:	d052      	beq.n	6f9a <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x18c>
    6ef4:	46b2      	mov	r10, r6
    6ef6:	e001      	b.n	6efc <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xee>
    6ef8:	f04f 0a01 	mov.w	r10, #1
    6efc:	4620      	mov	r0, r4
    6efe:	f10b 0501 	add.w	r5, r11, #1
    6f02:	f7fd f817 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    6f06:	b137      	cbz	r7, 6f16 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x108>
    6f08:	f8d9 6020 	ldr.w	r6, [r9, #32]
    6f0c:	42b5      	cmp	r5, r6
    6f0e:	bf34      	ite	cc
    6f10:	2600      	movcc	r6, #0
    6f12:	2601      	movcs	r6, #1
    6f14:	e000      	b.n	6f18 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x10a>
    6f16:	2601      	movs	r6, #1
    6f18:	f1ba 0f00 	cmp.w	r10, #0
    6f1c:	d006      	beq.n	6f2c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x11e>
    6f1e:	f8d9 1018 	ldr.w	r1, [r9, #24]
    6f22:	428d      	cmp	r5, r1
    6f24:	bf34      	ite	cc
    6f26:	2500      	movcc	r5, #0
    6f28:	2501      	movcs	r5, #1
    6f2a:	e000      	b.n	6f2e <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x120>
    6f2c:	2501      	movs	r5, #1
    6f2e:	f10b 0b01 	add.w	r11, r11, #1
    6f32:	e7be      	b.n	6eb2 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xa4>
    6f34:	2d00      	cmp	r5, #0
    6f36:	d0be      	beq.n	6eb6 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xa8>
    6f38:	2100      	movs	r1, #0
    6f3a:	e000      	b.n	6f3e <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x130>
    6f3c:	2101      	movs	r1, #1
    6f3e:	b91f      	cbnz	r7, 6f48 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x13a>
    6f40:	e014      	b.n	6f6c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x15e>
    6f42:	b357      	cbz	r7, 6f9a <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x18c>
    6f44:	2100      	movs	r1, #0
    6f46:	468a      	mov	r10, r1
    6f48:	f8d9 0020 	ldr.w	r0, [r9, #32]
    6f4c:	4583      	cmp	r11, r0
    6f4e:	d10d      	bne.n	6f6c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x15e>
    6f50:	f1bb 0f00 	cmp.w	r11, #0
    6f54:	d00a      	beq.n	6f6c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x15e>
    6f56:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    6f58:	2000      	movs	r0, #0
    6f5a:	7018      	strb	r0, [r3, #0]
    6f5c:	f1ba 0f00 	cmp.w	r10, #0
    6f60:	d016      	beq.n	6f90 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x182>
    6f62:	f8d9 3018 	ldr.w	r3, [r9, #24]
    6f66:	459b      	cmp	r11, r3
    6f68:	d112      	bne.n	6f90 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x182>
    6f6a:	e029      	b.n	6fc0 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1b2>
    6f6c:	f1ba 0f00 	cmp.w	r10, #0
    6f70:	d014      	beq.n	6f9c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x18e>
    6f72:	e003      	b.n	6f7c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x16e>
    6f74:	f1ba 0f00 	cmp.w	r10, #0
    6f78:	d01f      	beq.n	6fba <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1ac>
    6f7a:	4639      	mov	r1, r7
    6f7c:	f8d9 3018 	ldr.w	r3, [r9, #24]
    6f80:	459b      	cmp	r11, r3
    6f82:	d10b      	bne.n	6f9c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x18e>
    6f84:	f1bb 0f00 	cmp.w	r11, #0
    6f88:	d008      	beq.n	6f9c <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x18e>
    6f8a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    6f8c:	2301      	movs	r3, #1
    6f8e:	7013      	strb	r3, [r2, #0]
    6f90:	2900      	cmp	r1, #0
    6f92:	bf14      	ite	ne
    6f94:	2302      	movne	r3, #2
    6f96:	2300      	moveq	r3, #0
    6f98:	e013      	b.n	6fc2 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1b4>
    6f9a:	4639      	mov	r1, r7
    6f9c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    6f9e:	2300      	movs	r3, #0
    6fa0:	7013      	strb	r3, [r2, #0]
    6fa2:	b169      	cbz	r1, 6fc0 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1b2>
    6fa4:	2306      	movs	r3, #6
    6fa6:	e00c      	b.n	6fc2 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1b4>
    6fa8:	f1ba 0f00 	cmp.w	r10, #0
    6fac:	d09f      	beq.n	6eee <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xe0>
    6fae:	4620      	mov	r0, r4
    6fb0:	f10b 0501 	add.w	r5, r11, #1
    6fb4:	f7fc ffbe 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    6fb8:	e7a6      	b.n	6f08 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xfa>
    6fba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    6fbc:	f883 a000 	strb.w	r10, [r3]
    6fc0:	2304      	movs	r3, #4
    6fc2:	f8c8 3000 	str.w	r3, [r8]
    6fc6:	9b07      	ldr	r3, [sp, #28]
    6fc8:	e894 0003 	ldmia.w	r4, {r0, r1}
    6fcc:	e883 0003 	stmia.w	r3, {r0, r1}
    6fd0:	4618      	mov	r0, r3
    6fd2:	b00f      	add	sp, #60	; 0x3c
    6fd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00006fd8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const>:
    6fd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    6fdc:	b08b      	sub	sp, #44	; 0x2c
    6fde:	9c16      	ldr	r4, [sp, #88]	; 0x58
    6fe0:	9005      	str	r0, [sp, #20]
    6fe2:	ad06      	add	r5, sp, #24
    6fe4:	f104 006c 	add.w	r0, r4, #108	; 0x6c
    6fe8:	e885 000c 	stmia.w	r5, {r2, r3}
    6fec:	f7fc ff7c 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    6ff0:	68e4      	ldr	r4, [r4, #12]
    6ff2:	4683      	mov	r11, r0
    6ff4:	f004 044a 	and.w	r4, r4, #74	; 0x4a
    6ff8:	2c40      	cmp	r4, #64	; 0x40
    6ffa:	d004      	beq.n	7006 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2e>
    6ffc:	2c08      	cmp	r4, #8
    6ffe:	bf14      	ite	ne
    7000:	260a      	movne	r6, #10
    7002:	2610      	moveq	r6, #16
    7004:	e000      	b.n	7008 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x30>
    7006:	2608      	movs	r6, #8
    7008:	4628      	mov	r0, r5
    700a:	a914      	add	r1, sp, #80	; 0x50
    700c:	f7fe f864 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    7010:	4680      	mov	r8, r0
    7012:	bb28      	cbnz	r0, 7060 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x88>
    7014:	4628      	mov	r0, r5
    7016:	f7fe f84c 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    701a:	f8db 10bc 	ldr.w	r1, [r11, #188]	; 0xbc
    701e:	4682      	mov	r10, r0
    7020:	1a42      	subs	r2, r0, r1
    7022:	4253      	negs	r3, r2
    7024:	4153      	adcs	r3, r2
    7026:	9301      	str	r3, [sp, #4]
    7028:	b91b      	cbnz	r3, 7032 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x5a>
    702a:	f8db 10c0 	ldr.w	r1, [r11, #192]	; 0xc0
    702e:	4288      	cmp	r0, r1
    7030:	d11d      	bne.n	706e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x96>
    7032:	f89b 1010 	ldrb.w	r1, [r11, #16]
    7036:	b119      	cbz	r1, 7040 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x68>
    7038:	f8db 1028 	ldr.w	r1, [r11, #40]	; 0x28
    703c:	458a      	cmp	r10, r1
    703e:	d016      	beq.n	706e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x96>
    7040:	f8db 1024 	ldr.w	r1, [r11, #36]	; 0x24
    7044:	458a      	cmp	r10, r1
    7046:	d012      	beq.n	706e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x96>
    7048:	4628      	mov	r0, r5
    704a:	f7fc ff73 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    704e:	a914      	add	r1, sp, #80	; 0x50
    7050:	f7fe f855 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    7054:	b148      	cbz	r0, 706a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x92>
    7056:	4628      	mov	r0, r5
    7058:	f7fe f82b 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    705c:	4682      	mov	r10, r0
    705e:	e006      	b.n	706e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x96>
    7060:	f04f 0a00 	mov.w	r10, #0
    7064:	f8cd a004 	str.w	r10, [sp, #4]
    7068:	e001      	b.n	706e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x96>
    706a:	f04f 0801 	mov.w	r8, #1
    706e:	2500      	movs	r5, #0
    7070:	462f      	mov	r7, r5
    7072:	f1b8 0f00 	cmp.w	r8, #0
    7076:	d146      	bne.n	7106 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x12e>
    7078:	f89b 1010 	ldrb.w	r1, [r11, #16]
    707c:	b119      	cbz	r1, 7086 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xae>
    707e:	f8db 1028 	ldr.w	r1, [r11, #40]	; 0x28
    7082:	458a      	cmp	r10, r1
    7084:	d03f      	beq.n	7106 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x12e>
    7086:	f8db 1024 	ldr.w	r1, [r11, #36]	; 0x24
    708a:	458a      	cmp	r10, r1
    708c:	d03b      	beq.n	7106 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x12e>
    708e:	f8db 10cc 	ldr.w	r1, [r11, #204]	; 0xcc
    7092:	458a      	cmp	r10, r1
    7094:	d108      	bne.n	70a8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xd0>
    7096:	b117      	cbz	r7, 709e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xc6>
    7098:	2e0a      	cmp	r6, #10
    709a:	d106      	bne.n	70aa <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xd2>
    709c:	e01d      	b.n	70da <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x102>
    709e:	b194      	cbz	r4, 70c6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xee>
    70a0:	2e08      	cmp	r6, #8
    70a2:	d013      	beq.n	70cc <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xf4>
    70a4:	3501      	adds	r5, #1
    70a6:	e012      	b.n	70ce <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xf6>
    70a8:	b36f      	cbz	r7, 7106 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x12e>
    70aa:	f8db 10c4 	ldr.w	r1, [r11, #196]	; 0xc4
    70ae:	458a      	cmp	r10, r1
    70b0:	d003      	beq.n	70ba <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xe2>
    70b2:	f8db 10c8 	ldr.w	r1, [r11, #200]	; 0xc8
    70b6:	458a      	cmp	r10, r1
    70b8:	d124      	bne.n	7104 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x12c>
    70ba:	b154      	cbz	r4, 70d2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xfa>
    70bc:	2e10      	cmp	r6, #16
    70be:	d125      	bne.n	710c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x134>
    70c0:	2500      	movs	r5, #0
    70c2:	462f      	mov	r7, r5
    70c4:	e00d      	b.n	70e2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x10a>
    70c6:	4625      	mov	r5, r4
    70c8:	2701      	movs	r7, #1
    70ca:	e009      	b.n	70e0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x108>
    70cc:	463d      	mov	r5, r7
    70ce:	2701      	movs	r7, #1
    70d0:	e007      	b.n	70e2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x10a>
    70d2:	4625      	mov	r5, r4
    70d4:	4627      	mov	r7, r4
    70d6:	2610      	movs	r6, #16
    70d8:	e003      	b.n	70e2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x10a>
    70da:	2c00      	cmp	r4, #0
    70dc:	d1e2      	bne.n	70a4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xcc>
    70de:	4625      	mov	r5, r4
    70e0:	2608      	movs	r6, #8
    70e2:	a806      	add	r0, sp, #24
    70e4:	f7fc ff26 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    70e8:	a914      	add	r1, sp, #80	; 0x50
    70ea:	f7fe f808 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    70ee:	b130      	cbz	r0, 70fe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x126>
    70f0:	a806      	add	r0, sp, #24
    70f2:	f7fd ffde 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    70f6:	4682      	mov	r10, r0
    70f8:	2f00      	cmp	r7, #0
    70fa:	d1bd      	bne.n	7078 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xa0>
    70fc:	e003      	b.n	7106 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x12e>
    70fe:	f04f 0801 	mov.w	r8, #1
    7102:	e000      	b.n	7106 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x12e>
    7104:	2701      	movs	r7, #1
    7106:	2e10      	cmp	r6, #16
    7108:	d101      	bne.n	710e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x136>
    710a:	e002      	b.n	7112 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x13a>
    710c:	2701      	movs	r7, #1
    710e:	9602      	str	r6, [sp, #8]
    7110:	e001      	b.n	7116 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x13e>
    7112:	2316      	movs	r3, #22
    7114:	9302      	str	r3, [sp, #8]
    7116:	4966      	ldr	r1, [pc, #408]	; (72b0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2d8>)
    7118:	9109      	str	r1, [sp, #36]	; 0x24
    711a:	f89b 1010 	ldrb.w	r1, [r11, #16]
    711e:	b119      	cbz	r1, 7128 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x150>
    7120:	a809      	add	r0, sp, #36	; 0x24
    7122:	2120      	movs	r1, #32
    7124:	f007 fd53 	bl	ebce <std::string::reserve(unsigned int)>
    7128:	f64f 71ff 	movw	r1, #65535	; 0xffff
    712c:	fb91 f3f6 	sdiv	r3, r1, r6
    7130:	f89b 4124 	ldrb.w	r4, [r11, #292]	; 0x124
    7134:	9303      	str	r3, [sp, #12]
    7136:	b924      	cbnz	r4, 7142 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x16a>
    7138:	46a1      	mov	r9, r4
    713a:	f1b8 0f00 	cmp.w	r8, #0
    713e:	d024      	beq.n	718a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1b2>
    7140:	e06f      	b.n	7222 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x24a>
    7142:	f10b 03cc 	add.w	r3, r11, #204	; 0xcc
    7146:	2400      	movs	r4, #0
    7148:	9304      	str	r3, [sp, #16]
    714a:	46a1      	mov	r9, r4
    714c:	f1b8 0f00 	cmp.w	r8, #0
    7150:	d03b      	beq.n	71ca <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1f2>
    7152:	e066      	b.n	7222 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x24a>
    7154:	9b03      	ldr	r3, [sp, #12]
    7156:	429c      	cmp	r4, r3
    7158:	d81e      	bhi.n	7198 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1c0>
    715a:	4374      	muls	r4, r6
    715c:	f5c0 427f 	rsb	r2, r0, #65280	; 0xff00
    7160:	b2a4      	uxth	r4, r4
    7162:	32ff      	adds	r2, #255	; 0xff
    7164:	4420      	add	r0, r4
    7166:	4294      	cmp	r4, r2
    7168:	bfc8      	it	gt
    716a:	f049 0901 	orrgt.w	r9, r9, #1
    716e:	3501      	adds	r5, #1
    7170:	b284      	uxth	r4, r0
    7172:	a806      	add	r0, sp, #24
    7174:	f7fc fede 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7178:	a914      	add	r1, sp, #80	; 0x50
    717a:	f7fd ffc0 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    717e:	2800      	cmp	r0, #0
    7180:	d04a      	beq.n	7218 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x240>
    7182:	a806      	add	r0, sp, #24
    7184:	f7fd ff95 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7188:	4682      	mov	r10, r0
    718a:	9802      	ldr	r0, [sp, #8]
    718c:	4651      	mov	r1, r10
    718e:	f7fb ff9d 	bl	30cc <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]>
    7192:	1c43      	adds	r3, r0, #1
    7194:	d1de      	bne.n	7154 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x17c>
    7196:	e044      	b.n	7222 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x24a>
    7198:	f04f 0901 	mov.w	r9, #1
    719c:	e7e9      	b.n	7172 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x19a>
    719e:	f8db 1028 	ldr.w	r1, [r11, #40]	; 0x28
    71a2:	458a      	cmp	r10, r1
    71a4:	d115      	bne.n	71d2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1fa>
    71a6:	2d00      	cmp	r5, #0
    71a8:	d039      	beq.n	721e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x246>
    71aa:	b2e9      	uxtb	r1, r5
    71ac:	a809      	add	r0, sp, #36	; 0x24
    71ae:	f007 fdec 	bl	ed8a <std::string::push_back(char)>
    71b2:	2500      	movs	r5, #0
    71b4:	a806      	add	r0, sp, #24
    71b6:	f7fc febd 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    71ba:	a914      	add	r1, sp, #80	; 0x50
    71bc:	f7fd ff9f 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    71c0:	b350      	cbz	r0, 7218 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x240>
    71c2:	a806      	add	r0, sp, #24
    71c4:	f7fd ff75 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    71c8:	4682      	mov	r10, r0
    71ca:	f89b 1010 	ldrb.w	r1, [r11, #16]
    71ce:	2900      	cmp	r1, #0
    71d0:	d1e5      	bne.n	719e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1c6>
    71d2:	f8db 1024 	ldr.w	r1, [r11, #36]	; 0x24
    71d6:	458a      	cmp	r10, r1
    71d8:	d023      	beq.n	7222 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x24a>
    71da:	9804      	ldr	r0, [sp, #16]
    71dc:	4651      	mov	r1, r10
    71de:	9a02      	ldr	r2, [sp, #8]
    71e0:	f00f ffd0 	bl	17184 <wmemchr>
    71e4:	b1f8      	cbz	r0, 7226 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x24e>
    71e6:	9b04      	ldr	r3, [sp, #16]
    71e8:	1ac0      	subs	r0, r0, r3
    71ea:	1082      	asrs	r2, r0, #2
    71ec:	9b03      	ldr	r3, [sp, #12]
    71ee:	2a0f      	cmp	r2, #15
    71f0:	bfc8      	it	gt
    71f2:	3a06      	subgt	r2, #6
    71f4:	429c      	cmp	r4, r3
    71f6:	d80c      	bhi.n	7212 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x23a>
    71f8:	4374      	muls	r4, r6
    71fa:	f5c2 417f 	rsb	r1, r2, #65280	; 0xff00
    71fe:	b2a4      	uxth	r4, r4
    7200:	31ff      	adds	r1, #255	; 0xff
    7202:	428c      	cmp	r4, r1
    7204:	bfc8      	it	gt
    7206:	f049 0901 	orrgt.w	r9, r9, #1
    720a:	4414      	add	r4, r2
    720c:	b2a4      	uxth	r4, r4
    720e:	3501      	adds	r5, #1
    7210:	e7d0      	b.n	71b4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1dc>
    7212:	f04f 0901 	mov.w	r9, #1
    7216:	e7cd      	b.n	71b4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1dc>
    7218:	f04f 0801 	mov.w	r8, #1
    721c:	e001      	b.n	7222 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x24a>
    721e:	2601      	movs	r6, #1
    7220:	e002      	b.n	7228 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x250>
    7222:	2600      	movs	r6, #0
    7224:	e000      	b.n	7228 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x250>
    7226:	4606      	mov	r6, r0
    7228:	9a09      	ldr	r2, [sp, #36]	; 0x24
    722a:	f852 2c0c 	ldr.w	r2, [r2, #-12]
    722e:	b172      	cbz	r2, 724e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x276>
    7230:	a809      	add	r0, sp, #36	; 0x24
    7232:	b2e9      	uxtb	r1, r5
    7234:	f007 fda9 	bl	ed8a <std::string::push_back(char)>
    7238:	f8db 0008 	ldr.w	r0, [r11, #8]
    723c:	f8db 100c 	ldr.w	r1, [r11, #12]
    7240:	aa09      	add	r2, sp, #36	; 0x24
    7242:	f008 fed0 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    7246:	b910      	cbnz	r0, 724e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x276>
    7248:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    724a:	2304      	movs	r3, #4
    724c:	6013      	str	r3, [r2, #0]
    724e:	b925      	cbnz	r5, 725a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x282>
    7250:	b91f      	cbnz	r7, 725a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x282>
    7252:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7254:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    7258:	b103      	cbz	r3, 725c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x284>
    725a:	b17e      	cbz	r6, 727c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2a4>
    725c:	2300      	movs	r3, #0
    725e:	9a18      	ldr	r2, [sp, #96]	; 0x60
    7260:	8013      	strh	r3, [r2, #0]
    7262:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    7264:	2304      	movs	r3, #4
    7266:	6013      	str	r3, [r2, #0]
    7268:	f1b8 0f00 	cmp.w	r8, #0
    726c:	d013      	beq.n	7296 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2be>
    726e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    7270:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    7272:	681b      	ldr	r3, [r3, #0]
    7274:	f043 0302 	orr.w	r3, r3, #2
    7278:	6013      	str	r3, [r2, #0]
    727a:	e00c      	b.n	7296 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2be>
    727c:	f1b9 0f00 	cmp.w	r9, #0
    7280:	d002      	beq.n	7288 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2b0>
    7282:	f64f 73ff 	movw	r3, #65535	; 0xffff
    7286:	e7ea      	b.n	725e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x286>
    7288:	9b01      	ldr	r3, [sp, #4]
    728a:	b10b      	cbz	r3, 7290 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2b8>
    728c:	4264      	negs	r4, r4
    728e:	b2a4      	uxth	r4, r4
    7290:	9b18      	ldr	r3, [sp, #96]	; 0x60
    7292:	801c      	strh	r4, [r3, #0]
    7294:	e7e8      	b.n	7268 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x290>
    7296:	ab06      	add	r3, sp, #24
    7298:	e893 0003 	ldmia.w	r3, {r0, r1}
    729c:	9b05      	ldr	r3, [sp, #20]
    729e:	e883 0003 	stmia.w	r3, {r0, r1}
    72a2:	a809      	add	r0, sp, #36	; 0x24
    72a4:	f007 fb38 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    72a8:	9805      	ldr	r0, [sp, #20]
    72aa:	b00b      	add	sp, #44	; 0x2c
    72ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    72b0:	10000c70 	.word	0x10000c70

000072b4 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const>:
    72b4:	b570      	push	{r4, r5, r6, lr}
    72b6:	4605      	mov	r5, r0
    72b8:	460e      	mov	r6, r1
    72ba:	b088      	sub	sp, #32
    72bc:	ac06      	add	r4, sp, #24
    72be:	e884 000c 	stmia.w	r4, {r2, r3}
    72c2:	ab0c      	add	r3, sp, #48	; 0x30
    72c4:	e893 0003 	ldmia.w	r3, {r0, r1}
    72c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    72ca:	e88d 0003 	stmia.w	sp, {r0, r1}
    72ce:	9302      	str	r3, [sp, #8]
    72d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    72d2:	4628      	mov	r0, r5
    72d4:	9303      	str	r3, [sp, #12]
    72d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
    72d8:	4631      	mov	r1, r6
    72da:	9304      	str	r3, [sp, #16]
    72dc:	e894 000c 	ldmia.w	r4, {r2, r3}
    72e0:	f7ff fe7a 	bl	6fd8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const>
    72e4:	4628      	mov	r0, r5
    72e6:	b008      	add	sp, #32
    72e8:	bd70      	pop	{r4, r5, r6, pc}
	...

000072ec <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const>:
    72ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    72f0:	b08b      	sub	sp, #44	; 0x2c
    72f2:	9c16      	ldr	r4, [sp, #88]	; 0x58
    72f4:	9005      	str	r0, [sp, #20]
    72f6:	ad06      	add	r5, sp, #24
    72f8:	f104 006c 	add.w	r0, r4, #108	; 0x6c
    72fc:	e885 000c 	stmia.w	r5, {r2, r3}
    7300:	f7fc fdf2 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    7304:	68e4      	ldr	r4, [r4, #12]
    7306:	4683      	mov	r11, r0
    7308:	f004 044a 	and.w	r4, r4, #74	; 0x4a
    730c:	2c40      	cmp	r4, #64	; 0x40
    730e:	d004      	beq.n	731a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2e>
    7310:	2c08      	cmp	r4, #8
    7312:	bf14      	ite	ne
    7314:	260a      	movne	r6, #10
    7316:	2610      	moveq	r6, #16
    7318:	e000      	b.n	731c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x30>
    731a:	2608      	movs	r6, #8
    731c:	4628      	mov	r0, r5
    731e:	a914      	add	r1, sp, #80	; 0x50
    7320:	f7fd feda 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    7324:	4680      	mov	r8, r0
    7326:	bb28      	cbnz	r0, 7374 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x88>
    7328:	4628      	mov	r0, r5
    732a:	f7fd fec2 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    732e:	f8db 10bc 	ldr.w	r1, [r11, #188]	; 0xbc
    7332:	4682      	mov	r10, r0
    7334:	1a42      	subs	r2, r0, r1
    7336:	4253      	negs	r3, r2
    7338:	4153      	adcs	r3, r2
    733a:	9301      	str	r3, [sp, #4]
    733c:	b91b      	cbnz	r3, 7346 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x5a>
    733e:	f8db 10c0 	ldr.w	r1, [r11, #192]	; 0xc0
    7342:	4288      	cmp	r0, r1
    7344:	d11d      	bne.n	7382 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x96>
    7346:	f89b 1010 	ldrb.w	r1, [r11, #16]
    734a:	b119      	cbz	r1, 7354 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x68>
    734c:	f8db 1028 	ldr.w	r1, [r11, #40]	; 0x28
    7350:	458a      	cmp	r10, r1
    7352:	d016      	beq.n	7382 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x96>
    7354:	f8db 1024 	ldr.w	r1, [r11, #36]	; 0x24
    7358:	458a      	cmp	r10, r1
    735a:	d012      	beq.n	7382 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x96>
    735c:	4628      	mov	r0, r5
    735e:	f7fc fde9 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7362:	a914      	add	r1, sp, #80	; 0x50
    7364:	f7fd fecb 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    7368:	b148      	cbz	r0, 737e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x92>
    736a:	4628      	mov	r0, r5
    736c:	f7fd fea1 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7370:	4682      	mov	r10, r0
    7372:	e006      	b.n	7382 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x96>
    7374:	f04f 0a00 	mov.w	r10, #0
    7378:	f8cd a004 	str.w	r10, [sp, #4]
    737c:	e001      	b.n	7382 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x96>
    737e:	f04f 0801 	mov.w	r8, #1
    7382:	2500      	movs	r5, #0
    7384:	462f      	mov	r7, r5
    7386:	f1b8 0f00 	cmp.w	r8, #0
    738a:	d146      	bne.n	741a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x12e>
    738c:	f89b 1010 	ldrb.w	r1, [r11, #16]
    7390:	b119      	cbz	r1, 739a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xae>
    7392:	f8db 1028 	ldr.w	r1, [r11, #40]	; 0x28
    7396:	458a      	cmp	r10, r1
    7398:	d03f      	beq.n	741a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x12e>
    739a:	f8db 1024 	ldr.w	r1, [r11, #36]	; 0x24
    739e:	458a      	cmp	r10, r1
    73a0:	d03b      	beq.n	741a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x12e>
    73a2:	f8db 10cc 	ldr.w	r1, [r11, #204]	; 0xcc
    73a6:	458a      	cmp	r10, r1
    73a8:	d108      	bne.n	73bc <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xd0>
    73aa:	b117      	cbz	r7, 73b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xc6>
    73ac:	2e0a      	cmp	r6, #10
    73ae:	d106      	bne.n	73be <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xd2>
    73b0:	e01d      	b.n	73ee <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x102>
    73b2:	b194      	cbz	r4, 73da <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xee>
    73b4:	2e08      	cmp	r6, #8
    73b6:	d013      	beq.n	73e0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xf4>
    73b8:	3501      	adds	r5, #1
    73ba:	e012      	b.n	73e2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xf6>
    73bc:	b36f      	cbz	r7, 741a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x12e>
    73be:	f8db 10c4 	ldr.w	r1, [r11, #196]	; 0xc4
    73c2:	458a      	cmp	r10, r1
    73c4:	d003      	beq.n	73ce <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xe2>
    73c6:	f8db 10c8 	ldr.w	r1, [r11, #200]	; 0xc8
    73ca:	458a      	cmp	r10, r1
    73cc:	d124      	bne.n	7418 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x12c>
    73ce:	b154      	cbz	r4, 73e6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xfa>
    73d0:	2e10      	cmp	r6, #16
    73d2:	d125      	bne.n	7420 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x134>
    73d4:	2500      	movs	r5, #0
    73d6:	462f      	mov	r7, r5
    73d8:	e00d      	b.n	73f6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x10a>
    73da:	4625      	mov	r5, r4
    73dc:	2701      	movs	r7, #1
    73de:	e009      	b.n	73f4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x108>
    73e0:	463d      	mov	r5, r7
    73e2:	2701      	movs	r7, #1
    73e4:	e007      	b.n	73f6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x10a>
    73e6:	4625      	mov	r5, r4
    73e8:	4627      	mov	r7, r4
    73ea:	2610      	movs	r6, #16
    73ec:	e003      	b.n	73f6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x10a>
    73ee:	2c00      	cmp	r4, #0
    73f0:	d1e2      	bne.n	73b8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xcc>
    73f2:	4625      	mov	r5, r4
    73f4:	2608      	movs	r6, #8
    73f6:	a806      	add	r0, sp, #24
    73f8:	f7fc fd9c 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    73fc:	a914      	add	r1, sp, #80	; 0x50
    73fe:	f7fd fe7e 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    7402:	b130      	cbz	r0, 7412 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x126>
    7404:	a806      	add	r0, sp, #24
    7406:	f7fd fe54 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    740a:	4682      	mov	r10, r0
    740c:	2f00      	cmp	r7, #0
    740e:	d1bd      	bne.n	738c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xa0>
    7410:	e003      	b.n	741a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x12e>
    7412:	f04f 0801 	mov.w	r8, #1
    7416:	e000      	b.n	741a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x12e>
    7418:	2701      	movs	r7, #1
    741a:	2e10      	cmp	r6, #16
    741c:	d101      	bne.n	7422 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x136>
    741e:	e002      	b.n	7426 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x13a>
    7420:	2701      	movs	r7, #1
    7422:	9602      	str	r6, [sp, #8]
    7424:	e001      	b.n	742a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x13e>
    7426:	2316      	movs	r3, #22
    7428:	9302      	str	r3, [sp, #8]
    742a:	4962      	ldr	r1, [pc, #392]	; (75b4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2c8>)
    742c:	9109      	str	r1, [sp, #36]	; 0x24
    742e:	f89b 1010 	ldrb.w	r1, [r11, #16]
    7432:	b119      	cbz	r1, 743c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x150>
    7434:	a809      	add	r0, sp, #36	; 0x24
    7436:	2120      	movs	r1, #32
    7438:	f007 fbc9 	bl	ebce <std::string::reserve(unsigned int)>
    743c:	f04f 31ff 	mov.w	r1, #4294967295
    7440:	fbb1 f3f6 	udiv	r3, r1, r6
    7444:	f89b 4124 	ldrb.w	r4, [r11, #292]	; 0x124
    7448:	9303      	str	r3, [sp, #12]
    744a:	b924      	cbnz	r4, 7456 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x16a>
    744c:	46a1      	mov	r9, r4
    744e:	f1b8 0f00 	cmp.w	r8, #0
    7452:	d020      	beq.n	7496 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1aa>
    7454:	e067      	b.n	7526 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x23a>
    7456:	f10b 03cc 	add.w	r3, r11, #204	; 0xcc
    745a:	2400      	movs	r4, #0
    745c:	9304      	str	r3, [sp, #16]
    745e:	46a1      	mov	r9, r4
    7460:	f1b8 0f00 	cmp.w	r8, #0
    7464:	d037      	beq.n	74d6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1ea>
    7466:	e05e      	b.n	7526 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x23a>
    7468:	9b03      	ldr	r3, [sp, #12]
    746a:	429c      	cmp	r4, r3
    746c:	d81a      	bhi.n	74a4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1b8>
    746e:	43c2      	mvns	r2, r0
    7470:	4374      	muls	r4, r6
    7472:	3501      	adds	r5, #1
    7474:	4294      	cmp	r4, r2
    7476:	bf88      	it	hi
    7478:	f049 0901 	orrhi.w	r9, r9, #1
    747c:	4404      	add	r4, r0
    747e:	a806      	add	r0, sp, #24
    7480:	f7fc fd58 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7484:	a914      	add	r1, sp, #80	; 0x50
    7486:	f7fd fe3a 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    748a:	2800      	cmp	r0, #0
    748c:	d046      	beq.n	751c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x230>
    748e:	a806      	add	r0, sp, #24
    7490:	f7fd fe0f 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7494:	4682      	mov	r10, r0
    7496:	9802      	ldr	r0, [sp, #8]
    7498:	4651      	mov	r1, r10
    749a:	f7fb fe17 	bl	30cc <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]>
    749e:	1c43      	adds	r3, r0, #1
    74a0:	d1e2      	bne.n	7468 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x17c>
    74a2:	e040      	b.n	7526 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x23a>
    74a4:	f04f 0901 	mov.w	r9, #1
    74a8:	e7e9      	b.n	747e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x192>
    74aa:	f8db 1028 	ldr.w	r1, [r11, #40]	; 0x28
    74ae:	458a      	cmp	r10, r1
    74b0:	d115      	bne.n	74de <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1f2>
    74b2:	2d00      	cmp	r5, #0
    74b4:	d035      	beq.n	7522 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x236>
    74b6:	b2e9      	uxtb	r1, r5
    74b8:	a809      	add	r0, sp, #36	; 0x24
    74ba:	f007 fc66 	bl	ed8a <std::string::push_back(char)>
    74be:	2500      	movs	r5, #0
    74c0:	a806      	add	r0, sp, #24
    74c2:	f7fc fd37 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    74c6:	a914      	add	r1, sp, #80	; 0x50
    74c8:	f7fd fe19 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    74cc:	b330      	cbz	r0, 751c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x230>
    74ce:	a806      	add	r0, sp, #24
    74d0:	f7fd fdef 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    74d4:	4682      	mov	r10, r0
    74d6:	f89b 1010 	ldrb.w	r1, [r11, #16]
    74da:	2900      	cmp	r1, #0
    74dc:	d1e5      	bne.n	74aa <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1be>
    74de:	f8db 1024 	ldr.w	r1, [r11, #36]	; 0x24
    74e2:	458a      	cmp	r10, r1
    74e4:	d01f      	beq.n	7526 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x23a>
    74e6:	9804      	ldr	r0, [sp, #16]
    74e8:	4651      	mov	r1, r10
    74ea:	9a02      	ldr	r2, [sp, #8]
    74ec:	f00f fe4a 	bl	17184 <wmemchr>
    74f0:	b1d8      	cbz	r0, 752a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x23e>
    74f2:	9b04      	ldr	r3, [sp, #16]
    74f4:	1ac0      	subs	r0, r0, r3
    74f6:	1080      	asrs	r0, r0, #2
    74f8:	9b03      	ldr	r3, [sp, #12]
    74fa:	280f      	cmp	r0, #15
    74fc:	bfc8      	it	gt
    74fe:	3806      	subgt	r0, #6
    7500:	429c      	cmp	r4, r3
    7502:	d808      	bhi.n	7516 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x22a>
    7504:	43c2      	mvns	r2, r0
    7506:	4374      	muls	r4, r6
    7508:	3501      	adds	r5, #1
    750a:	4294      	cmp	r4, r2
    750c:	bf88      	it	hi
    750e:	f049 0901 	orrhi.w	r9, r9, #1
    7512:	4404      	add	r4, r0
    7514:	e7d4      	b.n	74c0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1d4>
    7516:	f04f 0901 	mov.w	r9, #1
    751a:	e7d1      	b.n	74c0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1d4>
    751c:	f04f 0801 	mov.w	r8, #1
    7520:	e001      	b.n	7526 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x23a>
    7522:	2601      	movs	r6, #1
    7524:	e002      	b.n	752c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x240>
    7526:	2600      	movs	r6, #0
    7528:	e000      	b.n	752c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x240>
    752a:	4606      	mov	r6, r0
    752c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    752e:	f852 2c0c 	ldr.w	r2, [r2, #-12]
    7532:	b172      	cbz	r2, 7552 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x266>
    7534:	a809      	add	r0, sp, #36	; 0x24
    7536:	b2e9      	uxtb	r1, r5
    7538:	f007 fc27 	bl	ed8a <std::string::push_back(char)>
    753c:	f8db 0008 	ldr.w	r0, [r11, #8]
    7540:	f8db 100c 	ldr.w	r1, [r11, #12]
    7544:	aa09      	add	r2, sp, #36	; 0x24
    7546:	f008 fd4e 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    754a:	b910      	cbnz	r0, 7552 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x266>
    754c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    754e:	2304      	movs	r3, #4
    7550:	6013      	str	r3, [r2, #0]
    7552:	b925      	cbnz	r5, 755e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x272>
    7554:	b91f      	cbnz	r7, 755e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x272>
    7556:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7558:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    755c:	b103      	cbz	r3, 7560 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x274>
    755e:	b17e      	cbz	r6, 7580 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x294>
    7560:	2300      	movs	r3, #0
    7562:	9a18      	ldr	r2, [sp, #96]	; 0x60
    7564:	6013      	str	r3, [r2, #0]
    7566:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    7568:	2304      	movs	r3, #4
    756a:	6013      	str	r3, [r2, #0]
    756c:	f1b8 0f00 	cmp.w	r8, #0
    7570:	d012      	beq.n	7598 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2ac>
    7572:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    7574:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    7576:	681b      	ldr	r3, [r3, #0]
    7578:	f043 0302 	orr.w	r3, r3, #2
    757c:	6013      	str	r3, [r2, #0]
    757e:	e00b      	b.n	7598 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2ac>
    7580:	f1b9 0f00 	cmp.w	r9, #0
    7584:	d002      	beq.n	758c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2a0>
    7586:	f04f 33ff 	mov.w	r3, #4294967295
    758a:	e7ea      	b.n	7562 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x276>
    758c:	9b01      	ldr	r3, [sp, #4]
    758e:	b103      	cbz	r3, 7592 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2a6>
    7590:	4264      	negs	r4, r4
    7592:	9b18      	ldr	r3, [sp, #96]	; 0x60
    7594:	601c      	str	r4, [r3, #0]
    7596:	e7e9      	b.n	756c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x280>
    7598:	ab06      	add	r3, sp, #24
    759a:	e893 0003 	ldmia.w	r3, {r0, r1}
    759e:	9b05      	ldr	r3, [sp, #20]
    75a0:	e883 0003 	stmia.w	r3, {r0, r1}
    75a4:	a809      	add	r0, sp, #36	; 0x24
    75a6:	f007 f9b7 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    75aa:	9805      	ldr	r0, [sp, #20]
    75ac:	b00b      	add	sp, #44	; 0x2c
    75ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    75b2:	bf00      	nop
    75b4:	10000c70 	.word	0x10000c70

000075b8 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const>:
    75b8:	b570      	push	{r4, r5, r6, lr}
    75ba:	4605      	mov	r5, r0
    75bc:	460e      	mov	r6, r1
    75be:	b088      	sub	sp, #32
    75c0:	ac06      	add	r4, sp, #24
    75c2:	e884 000c 	stmia.w	r4, {r2, r3}
    75c6:	ab0c      	add	r3, sp, #48	; 0x30
    75c8:	e893 0003 	ldmia.w	r3, {r0, r1}
    75cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    75ce:	e88d 0003 	stmia.w	sp, {r0, r1}
    75d2:	9302      	str	r3, [sp, #8]
    75d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    75d6:	4628      	mov	r0, r5
    75d8:	9303      	str	r3, [sp, #12]
    75da:	9b10      	ldr	r3, [sp, #64]	; 0x40
    75dc:	4631      	mov	r1, r6
    75de:	9304      	str	r3, [sp, #16]
    75e0:	e894 000c 	ldmia.w	r4, {r2, r3}
    75e4:	f7ff fe82 	bl	72ec <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const>
    75e8:	4628      	mov	r0, r5
    75ea:	b008      	add	sp, #32
    75ec:	bd70      	pop	{r4, r5, r6, pc}
	...

000075f0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const>:
    75f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    75f4:	b08b      	sub	sp, #44	; 0x2c
    75f6:	9c16      	ldr	r4, [sp, #88]	; 0x58
    75f8:	9005      	str	r0, [sp, #20]
    75fa:	ad06      	add	r5, sp, #24
    75fc:	f104 006c 	add.w	r0, r4, #108	; 0x6c
    7600:	e885 000c 	stmia.w	r5, {r2, r3}
    7604:	f7fc fc70 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    7608:	68e4      	ldr	r4, [r4, #12]
    760a:	4683      	mov	r11, r0
    760c:	f004 044a 	and.w	r4, r4, #74	; 0x4a
    7610:	2c40      	cmp	r4, #64	; 0x40
    7612:	d004      	beq.n	761e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2e>
    7614:	2c08      	cmp	r4, #8
    7616:	bf14      	ite	ne
    7618:	260a      	movne	r6, #10
    761a:	2610      	moveq	r6, #16
    761c:	e000      	b.n	7620 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x30>
    761e:	2608      	movs	r6, #8
    7620:	4628      	mov	r0, r5
    7622:	a914      	add	r1, sp, #80	; 0x50
    7624:	f7fd fd58 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    7628:	4680      	mov	r8, r0
    762a:	bb28      	cbnz	r0, 7678 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x88>
    762c:	4628      	mov	r0, r5
    762e:	f7fd fd40 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7632:	f8db 10bc 	ldr.w	r1, [r11, #188]	; 0xbc
    7636:	4682      	mov	r10, r0
    7638:	1a42      	subs	r2, r0, r1
    763a:	4253      	negs	r3, r2
    763c:	4153      	adcs	r3, r2
    763e:	9301      	str	r3, [sp, #4]
    7640:	b91b      	cbnz	r3, 764a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x5a>
    7642:	f8db 10c0 	ldr.w	r1, [r11, #192]	; 0xc0
    7646:	4288      	cmp	r0, r1
    7648:	d11d      	bne.n	7686 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x96>
    764a:	f89b 1010 	ldrb.w	r1, [r11, #16]
    764e:	b119      	cbz	r1, 7658 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x68>
    7650:	f8db 1028 	ldr.w	r1, [r11, #40]	; 0x28
    7654:	458a      	cmp	r10, r1
    7656:	d016      	beq.n	7686 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x96>
    7658:	f8db 1024 	ldr.w	r1, [r11, #36]	; 0x24
    765c:	458a      	cmp	r10, r1
    765e:	d012      	beq.n	7686 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x96>
    7660:	4628      	mov	r0, r5
    7662:	f7fc fc67 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7666:	a914      	add	r1, sp, #80	; 0x50
    7668:	f7fd fd49 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    766c:	b148      	cbz	r0, 7682 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x92>
    766e:	4628      	mov	r0, r5
    7670:	f7fd fd1f 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7674:	4682      	mov	r10, r0
    7676:	e006      	b.n	7686 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x96>
    7678:	f04f 0a00 	mov.w	r10, #0
    767c:	f8cd a004 	str.w	r10, [sp, #4]
    7680:	e001      	b.n	7686 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x96>
    7682:	f04f 0801 	mov.w	r8, #1
    7686:	2500      	movs	r5, #0
    7688:	462f      	mov	r7, r5
    768a:	f1b8 0f00 	cmp.w	r8, #0
    768e:	d146      	bne.n	771e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x12e>
    7690:	f89b 1010 	ldrb.w	r1, [r11, #16]
    7694:	b119      	cbz	r1, 769e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xae>
    7696:	f8db 1028 	ldr.w	r1, [r11, #40]	; 0x28
    769a:	458a      	cmp	r10, r1
    769c:	d03f      	beq.n	771e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x12e>
    769e:	f8db 1024 	ldr.w	r1, [r11, #36]	; 0x24
    76a2:	458a      	cmp	r10, r1
    76a4:	d03b      	beq.n	771e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x12e>
    76a6:	f8db 10cc 	ldr.w	r1, [r11, #204]	; 0xcc
    76aa:	458a      	cmp	r10, r1
    76ac:	d108      	bne.n	76c0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xd0>
    76ae:	b117      	cbz	r7, 76b6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xc6>
    76b0:	2e0a      	cmp	r6, #10
    76b2:	d106      	bne.n	76c2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xd2>
    76b4:	e01d      	b.n	76f2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x102>
    76b6:	b194      	cbz	r4, 76de <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xee>
    76b8:	2e08      	cmp	r6, #8
    76ba:	d013      	beq.n	76e4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xf4>
    76bc:	3501      	adds	r5, #1
    76be:	e012      	b.n	76e6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xf6>
    76c0:	b36f      	cbz	r7, 771e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x12e>
    76c2:	f8db 10c4 	ldr.w	r1, [r11, #196]	; 0xc4
    76c6:	458a      	cmp	r10, r1
    76c8:	d003      	beq.n	76d2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xe2>
    76ca:	f8db 10c8 	ldr.w	r1, [r11, #200]	; 0xc8
    76ce:	458a      	cmp	r10, r1
    76d0:	d124      	bne.n	771c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x12c>
    76d2:	b154      	cbz	r4, 76ea <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xfa>
    76d4:	2e10      	cmp	r6, #16
    76d6:	d125      	bne.n	7724 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x134>
    76d8:	2500      	movs	r5, #0
    76da:	462f      	mov	r7, r5
    76dc:	e00d      	b.n	76fa <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x10a>
    76de:	4625      	mov	r5, r4
    76e0:	2701      	movs	r7, #1
    76e2:	e009      	b.n	76f8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x108>
    76e4:	463d      	mov	r5, r7
    76e6:	2701      	movs	r7, #1
    76e8:	e007      	b.n	76fa <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x10a>
    76ea:	4625      	mov	r5, r4
    76ec:	4627      	mov	r7, r4
    76ee:	2610      	movs	r6, #16
    76f0:	e003      	b.n	76fa <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x10a>
    76f2:	2c00      	cmp	r4, #0
    76f4:	d1e2      	bne.n	76bc <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xcc>
    76f6:	4625      	mov	r5, r4
    76f8:	2608      	movs	r6, #8
    76fa:	a806      	add	r0, sp, #24
    76fc:	f7fc fc1a 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7700:	a914      	add	r1, sp, #80	; 0x50
    7702:	f7fd fcfc 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    7706:	b130      	cbz	r0, 7716 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x126>
    7708:	a806      	add	r0, sp, #24
    770a:	f7fd fcd2 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    770e:	4682      	mov	r10, r0
    7710:	2f00      	cmp	r7, #0
    7712:	d1bd      	bne.n	7690 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xa0>
    7714:	e003      	b.n	771e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x12e>
    7716:	f04f 0801 	mov.w	r8, #1
    771a:	e000      	b.n	771e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x12e>
    771c:	2701      	movs	r7, #1
    771e:	2e10      	cmp	r6, #16
    7720:	d101      	bne.n	7726 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x136>
    7722:	e002      	b.n	772a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x13a>
    7724:	2701      	movs	r7, #1
    7726:	9602      	str	r6, [sp, #8]
    7728:	e001      	b.n	772e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x13e>
    772a:	2316      	movs	r3, #22
    772c:	9302      	str	r3, [sp, #8]
    772e:	4962      	ldr	r1, [pc, #392]	; (78b8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2c8>)
    7730:	9109      	str	r1, [sp, #36]	; 0x24
    7732:	f89b 1010 	ldrb.w	r1, [r11, #16]
    7736:	b119      	cbz	r1, 7740 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x150>
    7738:	a809      	add	r0, sp, #36	; 0x24
    773a:	2120      	movs	r1, #32
    773c:	f007 fa47 	bl	ebce <std::string::reserve(unsigned int)>
    7740:	f04f 31ff 	mov.w	r1, #4294967295
    7744:	fbb1 f3f6 	udiv	r3, r1, r6
    7748:	f89b 4124 	ldrb.w	r4, [r11, #292]	; 0x124
    774c:	9303      	str	r3, [sp, #12]
    774e:	b924      	cbnz	r4, 775a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x16a>
    7750:	46a1      	mov	r9, r4
    7752:	f1b8 0f00 	cmp.w	r8, #0
    7756:	d020      	beq.n	779a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1aa>
    7758:	e067      	b.n	782a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x23a>
    775a:	f10b 03cc 	add.w	r3, r11, #204	; 0xcc
    775e:	2400      	movs	r4, #0
    7760:	9304      	str	r3, [sp, #16]
    7762:	46a1      	mov	r9, r4
    7764:	f1b8 0f00 	cmp.w	r8, #0
    7768:	d037      	beq.n	77da <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1ea>
    776a:	e05e      	b.n	782a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x23a>
    776c:	9b03      	ldr	r3, [sp, #12]
    776e:	429c      	cmp	r4, r3
    7770:	d81a      	bhi.n	77a8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1b8>
    7772:	43c2      	mvns	r2, r0
    7774:	4374      	muls	r4, r6
    7776:	3501      	adds	r5, #1
    7778:	4294      	cmp	r4, r2
    777a:	bf88      	it	hi
    777c:	f049 0901 	orrhi.w	r9, r9, #1
    7780:	4404      	add	r4, r0
    7782:	a806      	add	r0, sp, #24
    7784:	f7fc fbd6 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7788:	a914      	add	r1, sp, #80	; 0x50
    778a:	f7fd fcb8 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    778e:	2800      	cmp	r0, #0
    7790:	d046      	beq.n	7820 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x230>
    7792:	a806      	add	r0, sp, #24
    7794:	f7fd fc8d 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7798:	4682      	mov	r10, r0
    779a:	9802      	ldr	r0, [sp, #8]
    779c:	4651      	mov	r1, r10
    779e:	f7fb fc95 	bl	30cc <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]>
    77a2:	1c43      	adds	r3, r0, #1
    77a4:	d1e2      	bne.n	776c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x17c>
    77a6:	e040      	b.n	782a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x23a>
    77a8:	f04f 0901 	mov.w	r9, #1
    77ac:	e7e9      	b.n	7782 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x192>
    77ae:	f8db 1028 	ldr.w	r1, [r11, #40]	; 0x28
    77b2:	458a      	cmp	r10, r1
    77b4:	d115      	bne.n	77e2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1f2>
    77b6:	2d00      	cmp	r5, #0
    77b8:	d035      	beq.n	7826 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x236>
    77ba:	b2e9      	uxtb	r1, r5
    77bc:	a809      	add	r0, sp, #36	; 0x24
    77be:	f007 fae4 	bl	ed8a <std::string::push_back(char)>
    77c2:	2500      	movs	r5, #0
    77c4:	a806      	add	r0, sp, #24
    77c6:	f7fc fbb5 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    77ca:	a914      	add	r1, sp, #80	; 0x50
    77cc:	f7fd fc97 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    77d0:	b330      	cbz	r0, 7820 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x230>
    77d2:	a806      	add	r0, sp, #24
    77d4:	f7fd fc6d 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    77d8:	4682      	mov	r10, r0
    77da:	f89b 1010 	ldrb.w	r1, [r11, #16]
    77de:	2900      	cmp	r1, #0
    77e0:	d1e5      	bne.n	77ae <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1be>
    77e2:	f8db 1024 	ldr.w	r1, [r11, #36]	; 0x24
    77e6:	458a      	cmp	r10, r1
    77e8:	d01f      	beq.n	782a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x23a>
    77ea:	9804      	ldr	r0, [sp, #16]
    77ec:	4651      	mov	r1, r10
    77ee:	9a02      	ldr	r2, [sp, #8]
    77f0:	f00f fcc8 	bl	17184 <wmemchr>
    77f4:	b1d8      	cbz	r0, 782e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x23e>
    77f6:	9b04      	ldr	r3, [sp, #16]
    77f8:	1ac0      	subs	r0, r0, r3
    77fa:	1080      	asrs	r0, r0, #2
    77fc:	9b03      	ldr	r3, [sp, #12]
    77fe:	280f      	cmp	r0, #15
    7800:	bfc8      	it	gt
    7802:	3806      	subgt	r0, #6
    7804:	429c      	cmp	r4, r3
    7806:	d808      	bhi.n	781a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x22a>
    7808:	43c2      	mvns	r2, r0
    780a:	4374      	muls	r4, r6
    780c:	3501      	adds	r5, #1
    780e:	4294      	cmp	r4, r2
    7810:	bf88      	it	hi
    7812:	f049 0901 	orrhi.w	r9, r9, #1
    7816:	4404      	add	r4, r0
    7818:	e7d4      	b.n	77c4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1d4>
    781a:	f04f 0901 	mov.w	r9, #1
    781e:	e7d1      	b.n	77c4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1d4>
    7820:	f04f 0801 	mov.w	r8, #1
    7824:	e001      	b.n	782a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x23a>
    7826:	2601      	movs	r6, #1
    7828:	e002      	b.n	7830 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x240>
    782a:	2600      	movs	r6, #0
    782c:	e000      	b.n	7830 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x240>
    782e:	4606      	mov	r6, r0
    7830:	9a09      	ldr	r2, [sp, #36]	; 0x24
    7832:	f852 2c0c 	ldr.w	r2, [r2, #-12]
    7836:	b172      	cbz	r2, 7856 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x266>
    7838:	a809      	add	r0, sp, #36	; 0x24
    783a:	b2e9      	uxtb	r1, r5
    783c:	f007 faa5 	bl	ed8a <std::string::push_back(char)>
    7840:	f8db 0008 	ldr.w	r0, [r11, #8]
    7844:	f8db 100c 	ldr.w	r1, [r11, #12]
    7848:	aa09      	add	r2, sp, #36	; 0x24
    784a:	f008 fbcc 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    784e:	b910      	cbnz	r0, 7856 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x266>
    7850:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    7852:	2304      	movs	r3, #4
    7854:	6013      	str	r3, [r2, #0]
    7856:	b925      	cbnz	r5, 7862 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x272>
    7858:	b91f      	cbnz	r7, 7862 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x272>
    785a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    785c:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    7860:	b103      	cbz	r3, 7864 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x274>
    7862:	b17e      	cbz	r6, 7884 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x294>
    7864:	2300      	movs	r3, #0
    7866:	9a18      	ldr	r2, [sp, #96]	; 0x60
    7868:	6013      	str	r3, [r2, #0]
    786a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    786c:	2304      	movs	r3, #4
    786e:	6013      	str	r3, [r2, #0]
    7870:	f1b8 0f00 	cmp.w	r8, #0
    7874:	d012      	beq.n	789c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2ac>
    7876:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    7878:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    787a:	681b      	ldr	r3, [r3, #0]
    787c:	f043 0302 	orr.w	r3, r3, #2
    7880:	6013      	str	r3, [r2, #0]
    7882:	e00b      	b.n	789c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2ac>
    7884:	f1b9 0f00 	cmp.w	r9, #0
    7888:	d002      	beq.n	7890 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2a0>
    788a:	f04f 33ff 	mov.w	r3, #4294967295
    788e:	e7ea      	b.n	7866 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x276>
    7890:	9b01      	ldr	r3, [sp, #4]
    7892:	b103      	cbz	r3, 7896 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2a6>
    7894:	4264      	negs	r4, r4
    7896:	9b18      	ldr	r3, [sp, #96]	; 0x60
    7898:	601c      	str	r4, [r3, #0]
    789a:	e7e9      	b.n	7870 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x280>
    789c:	ab06      	add	r3, sp, #24
    789e:	e893 0003 	ldmia.w	r3, {r0, r1}
    78a2:	9b05      	ldr	r3, [sp, #20]
    78a4:	e883 0003 	stmia.w	r3, {r0, r1}
    78a8:	a809      	add	r0, sp, #36	; 0x24
    78aa:	f007 f835 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    78ae:	9805      	ldr	r0, [sp, #20]
    78b0:	b00b      	add	sp, #44	; 0x2c
    78b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    78b6:	bf00      	nop
    78b8:	10000c70 	.word	0x10000c70

000078bc <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const>:
    78bc:	b570      	push	{r4, r5, r6, lr}
    78be:	4605      	mov	r5, r0
    78c0:	460e      	mov	r6, r1
    78c2:	b088      	sub	sp, #32
    78c4:	ac06      	add	r4, sp, #24
    78c6:	e884 000c 	stmia.w	r4, {r2, r3}
    78ca:	ab0c      	add	r3, sp, #48	; 0x30
    78cc:	e893 0003 	ldmia.w	r3, {r0, r1}
    78d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    78d2:	e88d 0003 	stmia.w	sp, {r0, r1}
    78d6:	9302      	str	r3, [sp, #8]
    78d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    78da:	4628      	mov	r0, r5
    78dc:	9303      	str	r3, [sp, #12]
    78de:	9b10      	ldr	r3, [sp, #64]	; 0x40
    78e0:	4631      	mov	r1, r6
    78e2:	9304      	str	r3, [sp, #16]
    78e4:	e894 000c 	ldmia.w	r4, {r2, r3}
    78e8:	f7ff fe82 	bl	75f0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const>
    78ec:	4628      	mov	r0, r5
    78ee:	b008      	add	sp, #32
    78f0:	bd70      	pop	{r4, r5, r6, pc}

000078f2 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, void*&) const>:
    78f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    78f6:	468e      	mov	lr, r1
    78f8:	4606      	mov	r6, r0
    78fa:	b08c      	sub	sp, #48	; 0x30
    78fc:	9d14      	ldr	r5, [sp, #80]	; 0x50
    78fe:	ac08      	add	r4, sp, #32
    7900:	f8d5 800c 	ldr.w	r8, [r5, #12]
    7904:	e884 000c 	stmia.w	r4, {r2, r3}
    7908:	f028 034a 	bic.w	r3, r8, #74	; 0x4a
    790c:	f043 0308 	orr.w	r3, r3, #8
    7910:	60eb      	str	r3, [r5, #12]
    7912:	ab12      	add	r3, sp, #72	; 0x48
    7914:	e893 0003 	ldmia.w	r3, {r0, r1}
    7918:	9b15      	ldr	r3, [sp, #84]	; 0x54
    791a:	e88d 0003 	stmia.w	sp, {r0, r1}
    791e:	9303      	str	r3, [sp, #12]
    7920:	ab0b      	add	r3, sp, #44	; 0x2c
    7922:	af06      	add	r7, sp, #24
    7924:	9502      	str	r5, [sp, #8]
    7926:	9304      	str	r3, [sp, #16]
    7928:	e894 000c 	ldmia.w	r4, {r2, r3}
    792c:	4638      	mov	r0, r7
    792e:	4671      	mov	r1, lr
    7930:	f7ff fe5e 	bl	75f0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const>
    7934:	e897 0003 	ldmia.w	r7, {r0, r1}
    7938:	e884 0003 	stmia.w	r4, {r0, r1}
    793c:	e886 0003 	stmia.w	r6, {r0, r1}
    7940:	4630      	mov	r0, r6
    7942:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    7944:	9b16      	ldr	r3, [sp, #88]	; 0x58
    7946:	f8c5 800c 	str.w	r8, [r5, #12]
    794a:	601a      	str	r2, [r3, #0]
    794c:	b00c      	add	sp, #48	; 0x30
    794e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

00007954 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const>:
    7954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    7958:	b091      	sub	sp, #68	; 0x44
    795a:	9e1c      	ldr	r6, [sp, #112]	; 0x70
    795c:	900b      	str	r0, [sp, #44]	; 0x2c
    795e:	ad0c      	add	r5, sp, #48	; 0x30
    7960:	f106 006c 	add.w	r0, r6, #108	; 0x6c
    7964:	e885 000c 	stmia.w	r5, {r2, r3}
    7968:	f7fc fabe 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    796c:	68f7      	ldr	r7, [r6, #12]
    796e:	4604      	mov	r4, r0
    7970:	f007 074a 	and.w	r7, r7, #74	; 0x4a
    7974:	2f40      	cmp	r7, #64	; 0x40
    7976:	d006      	beq.n	7986 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x32>
    7978:	2f08      	cmp	r7, #8
    797a:	bf14      	ite	ne
    797c:	f04f 0a0a 	movne.w	r10, #10
    7980:	f04f 0a10 	moveq.w	r10, #16
    7984:	e001      	b.n	798a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x36>
    7986:	f04f 0a08 	mov.w	r10, #8
    798a:	4628      	mov	r0, r5
    798c:	a91a      	add	r1, sp, #104	; 0x68
    798e:	f7fd fba3 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    7992:	4680      	mov	r8, r0
    7994:	bb28      	cbnz	r0, 79e2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x8e>
    7996:	4628      	mov	r0, r5
    7998:	f7fd fb8b 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    799c:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
    79a0:	4683      	mov	r11, r0
    79a2:	1ac2      	subs	r2, r0, r3
    79a4:	f1d2 0900 	rsbs	r9, r2, #0
    79a8:	eb49 0902 	adc.w	r9, r9, r2
    79ac:	f1b9 0f00 	cmp.w	r9, #0
    79b0:	d103      	bne.n	79ba <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x66>
    79b2:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
    79b6:	4298      	cmp	r0, r3
    79b8:	d119      	bne.n	79ee <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x9a>
    79ba:	7c23      	ldrb	r3, [r4, #16]
    79bc:	b113      	cbz	r3, 79c4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x70>
    79be:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    79c0:	459b      	cmp	r11, r3
    79c2:	d014      	beq.n	79ee <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x9a>
    79c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
    79c6:	459b      	cmp	r11, r3
    79c8:	d011      	beq.n	79ee <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x9a>
    79ca:	4628      	mov	r0, r5
    79cc:	f7fc fab2 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    79d0:	a91a      	add	r1, sp, #104	; 0x68
    79d2:	f7fd fb94 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    79d6:	b140      	cbz	r0, 79ea <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x96>
    79d8:	4628      	mov	r0, r5
    79da:	f7fd fb6a 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    79de:	4683      	mov	r11, r0
    79e0:	e005      	b.n	79ee <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x9a>
    79e2:	f04f 0b00 	mov.w	r11, #0
    79e6:	46d9      	mov	r9, r11
    79e8:	e001      	b.n	79ee <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x9a>
    79ea:	f04f 0801 	mov.w	r8, #1
    79ee:	2500      	movs	r5, #0
    79f0:	462e      	mov	r6, r5
    79f2:	f1b8 0f00 	cmp.w	r8, #0
    79f6:	d148      	bne.n	7a8a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x136>
    79f8:	7c23      	ldrb	r3, [r4, #16]
    79fa:	b113      	cbz	r3, 7a02 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xae>
    79fc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    79fe:	459b      	cmp	r11, r3
    7a00:	d043      	beq.n	7a8a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x136>
    7a02:	6a63      	ldr	r3, [r4, #36]	; 0x24
    7a04:	459b      	cmp	r11, r3
    7a06:	d040      	beq.n	7a8a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x136>
    7a08:	f8d4 30cc 	ldr.w	r3, [r4, #204]	; 0xcc
    7a0c:	459b      	cmp	r11, r3
    7a0e:	d10a      	bne.n	7a26 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xd2>
    7a10:	b11e      	cbz	r6, 7a1a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xc6>
    7a12:	f1ba 0f0a 	cmp.w	r10, #10
    7a16:	d107      	bne.n	7a28 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xd4>
    7a18:	e020      	b.n	7a5c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x108>
    7a1a:	b1a7      	cbz	r7, 7a46 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xf2>
    7a1c:	f1ba 0f08 	cmp.w	r10, #8
    7a20:	d014      	beq.n	7a4c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xf8>
    7a22:	3501      	adds	r5, #1
    7a24:	e013      	b.n	7a4e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xfa>
    7a26:	b386      	cbz	r6, 7a8a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x136>
    7a28:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
    7a2c:	459b      	cmp	r11, r3
    7a2e:	d003      	beq.n	7a38 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xe4>
    7a30:	f8d4 30c8 	ldr.w	r3, [r4, #200]	; 0xc8
    7a34:	459b      	cmp	r11, r3
    7a36:	d127      	bne.n	7a88 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x134>
    7a38:	b15f      	cbz	r7, 7a52 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xfe>
    7a3a:	f1ba 0f10 	cmp.w	r10, #16
    7a3e:	d128      	bne.n	7a92 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x13e>
    7a40:	2500      	movs	r5, #0
    7a42:	462e      	mov	r6, r5
    7a44:	e00f      	b.n	7a66 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x112>
    7a46:	463d      	mov	r5, r7
    7a48:	2601      	movs	r6, #1
    7a4a:	e00a      	b.n	7a62 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x10e>
    7a4c:	4635      	mov	r5, r6
    7a4e:	2601      	movs	r6, #1
    7a50:	e009      	b.n	7a66 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x112>
    7a52:	463d      	mov	r5, r7
    7a54:	463e      	mov	r6, r7
    7a56:	f04f 0a10 	mov.w	r10, #16
    7a5a:	e004      	b.n	7a66 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x112>
    7a5c:	2f00      	cmp	r7, #0
    7a5e:	d1e0      	bne.n	7a22 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xce>
    7a60:	463d      	mov	r5, r7
    7a62:	f04f 0a08 	mov.w	r10, #8
    7a66:	a80c      	add	r0, sp, #48	; 0x30
    7a68:	f7fc fa64 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7a6c:	a91a      	add	r1, sp, #104	; 0x68
    7a6e:	f7fd fb46 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    7a72:	b130      	cbz	r0, 7a82 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x12e>
    7a74:	a80c      	add	r0, sp, #48	; 0x30
    7a76:	f7fd fb1c 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7a7a:	4683      	mov	r11, r0
    7a7c:	2e00      	cmp	r6, #0
    7a7e:	d1bb      	bne.n	79f8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xa4>
    7a80:	e003      	b.n	7a8a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x136>
    7a82:	f04f 0801 	mov.w	r8, #1
    7a86:	e000      	b.n	7a8a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x136>
    7a88:	2601      	movs	r6, #1
    7a8a:	f1ba 0f10 	cmp.w	r10, #16
    7a8e:	d101      	bne.n	7a94 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x140>
    7a90:	e003      	b.n	7a9a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x146>
    7a92:	2601      	movs	r6, #1
    7a94:	f8cd a01c 	str.w	r10, [sp, #28]
    7a98:	e001      	b.n	7a9e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x14a>
    7a9a:	2316      	movs	r3, #22
    7a9c:	9307      	str	r3, [sp, #28]
    7a9e:	4b8f      	ldr	r3, [pc, #572]	; (7cdc <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x388>)
    7aa0:	930f      	str	r3, [sp, #60]	; 0x3c
    7aa2:	7c23      	ldrb	r3, [r4, #16]
    7aa4:	b11b      	cbz	r3, 7aae <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x15a>
    7aa6:	a80f      	add	r0, sp, #60	; 0x3c
    7aa8:	2120      	movs	r1, #32
    7aaa:	f007 f890 	bl	ebce <std::string::reserve(unsigned int)>
    7aae:	f1b9 0f00 	cmp.w	r9, #0
    7ab2:	d104      	bne.n	7abe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x16a>
    7ab4:	f04f 32ff 	mov.w	r2, #4294967295
    7ab8:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    7abc:	e002      	b.n	7ac4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x170>
    7abe:	2200      	movs	r2, #0
    7ac0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    7ac4:	e9cd 2304 	strd	r2, r3, [sp, #16]
    7ac8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    7acc:	4652      	mov	r2, r10
    7ace:	17d3      	asrs	r3, r2, #31
    7ad0:	e9cd 2302 	strd	r2, r3, [sp, #8]
    7ad4:	f00a fc7e 	bl	123d4 <__aeabi_uldivmod>
    7ad8:	f894 7124 	ldrb.w	r7, [r4, #292]	; 0x124
    7adc:	e9cd 0108 	strd	r0, r1, [sp, #32]
    7ae0:	b93f      	cbnz	r7, 7af2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x19e>
    7ae2:	2200      	movs	r2, #0
    7ae4:	2300      	movs	r3, #0
    7ae6:	e9cd 2300 	strd	r2, r3, [sp]
    7aea:	f1b8 0f00 	cmp.w	r8, #0
    7aee:	d03e      	beq.n	7b6e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x21a>
    7af0:	e09e      	b.n	7c30 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2dc>
    7af2:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
    7af6:	930a      	str	r3, [sp, #40]	; 0x28
    7af8:	2200      	movs	r2, #0
    7afa:	2300      	movs	r3, #0
    7afc:	e9cd 2300 	strd	r2, r3, [sp]
    7b00:	2700      	movs	r7, #0
    7b02:	f1b8 0f00 	cmp.w	r8, #0
    7b06:	d051      	beq.n	7bac <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x258>
    7b08:	e092      	b.n	7c30 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2dc>
    7b0a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    7b0e:	e9dd ab00 	ldrd	r10, r11, [sp]
    7b12:	455b      	cmp	r3, r11
    7b14:	bf08      	it	eq
    7b16:	4552      	cmpeq	r2, r10
    7b18:	d330      	bcc.n	7b7c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x228>
    7b1a:	9b00      	ldr	r3, [sp, #0]
    7b1c:	9a03      	ldr	r2, [sp, #12]
    7b1e:	9902      	ldr	r1, [sp, #8]
    7b20:	4353      	muls	r3, r2
    7b22:	9a01      	ldr	r2, [sp, #4]
    7b24:	3501      	adds	r5, #1
    7b26:	fb01 3302 	mla	r3, r1, r2, r3
    7b2a:	9a00      	ldr	r2, [sp, #0]
    7b2c:	fba2 ab01 	umull	r10, r11, r2, r1
    7b30:	17c1      	asrs	r1, r0, #31
    7b32:	449b      	add	r11, r3
    7b34:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7b38:	1a12      	subs	r2, r2, r0
    7b3a:	eb63 0301 	sbc.w	r3, r3, r1
    7b3e:	455b      	cmp	r3, r11
    7b40:	bf08      	it	eq
    7b42:	4552      	cmpeq	r2, r10
    7b44:	bf38      	it	cc
    7b46:	f047 0701 	orrcc.w	r7, r7, #1
    7b4a:	eb10 020a 	adds.w	r2, r0, r10
    7b4e:	eb41 030b 	adc.w	r3, r1, r11
    7b52:	e9cd 2300 	strd	r2, r3, [sp]
    7b56:	a80c      	add	r0, sp, #48	; 0x30
    7b58:	f7fc f9ec 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7b5c:	a91a      	add	r1, sp, #104	; 0x68
    7b5e:	f7fd face 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    7b62:	2800      	cmp	r0, #0
    7b64:	d05e      	beq.n	7c24 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2d0>
    7b66:	a80c      	add	r0, sp, #48	; 0x30
    7b68:	f7fd faa3 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7b6c:	4683      	mov	r11, r0
    7b6e:	9807      	ldr	r0, [sp, #28]
    7b70:	4659      	mov	r1, r11
    7b72:	f7fb faab 	bl	30cc <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]>
    7b76:	1c43      	adds	r3, r0, #1
    7b78:	d1c7      	bne.n	7b0a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x1b6>
    7b7a:	e059      	b.n	7c30 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2dc>
    7b7c:	2701      	movs	r7, #1
    7b7e:	e7ea      	b.n	7b56 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x202>
    7b80:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    7b82:	459b      	cmp	r11, r3
    7b84:	d115      	bne.n	7bb2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x25e>
    7b86:	2d00      	cmp	r5, #0
    7b88:	d04f      	beq.n	7c2a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2d6>
    7b8a:	b2e9      	uxtb	r1, r5
    7b8c:	a80f      	add	r0, sp, #60	; 0x3c
    7b8e:	f007 f8fc 	bl	ed8a <std::string::push_back(char)>
    7b92:	2500      	movs	r5, #0
    7b94:	a80c      	add	r0, sp, #48	; 0x30
    7b96:	f7fc f9cd 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7b9a:	a91a      	add	r1, sp, #104	; 0x68
    7b9c:	f7fd faaf 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    7ba0:	2800      	cmp	r0, #0
    7ba2:	d03f      	beq.n	7c24 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2d0>
    7ba4:	a80c      	add	r0, sp, #48	; 0x30
    7ba6:	f7fd fa84 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7baa:	4683      	mov	r11, r0
    7bac:	7c23      	ldrb	r3, [r4, #16]
    7bae:	2b00      	cmp	r3, #0
    7bb0:	d1e6      	bne.n	7b80 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x22c>
    7bb2:	6a63      	ldr	r3, [r4, #36]	; 0x24
    7bb4:	459b      	cmp	r11, r3
    7bb6:	d03b      	beq.n	7c30 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2dc>
    7bb8:	980a      	ldr	r0, [sp, #40]	; 0x28
    7bba:	4659      	mov	r1, r11
    7bbc:	9a07      	ldr	r2, [sp, #28]
    7bbe:	f00f fae1 	bl	17184 <wmemchr>
    7bc2:	2800      	cmp	r0, #0
    7bc4:	d037      	beq.n	7c36 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2e2>
    7bc6:	e9dd ab00 	ldrd	r10, r11, [sp]
    7bca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7bcc:	1ac0      	subs	r0, r0, r3
    7bce:	1080      	asrs	r0, r0, #2
    7bd0:	280f      	cmp	r0, #15
    7bd2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    7bd6:	bfc8      	it	gt
    7bd8:	3806      	subgt	r0, #6
    7bda:	455b      	cmp	r3, r11
    7bdc:	bf08      	it	eq
    7bde:	4552      	cmpeq	r2, r10
    7be0:	d31e      	bcc.n	7c20 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2cc>
    7be2:	9b00      	ldr	r3, [sp, #0]
    7be4:	9a03      	ldr	r2, [sp, #12]
    7be6:	9902      	ldr	r1, [sp, #8]
    7be8:	4353      	muls	r3, r2
    7bea:	9a01      	ldr	r2, [sp, #4]
    7bec:	3501      	adds	r5, #1
    7bee:	fb01 3302 	mla	r3, r1, r2, r3
    7bf2:	9a00      	ldr	r2, [sp, #0]
    7bf4:	fba2 ab01 	umull	r10, r11, r2, r1
    7bf8:	17c1      	asrs	r1, r0, #31
    7bfa:	449b      	add	r11, r3
    7bfc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7c00:	1a12      	subs	r2, r2, r0
    7c02:	eb63 0301 	sbc.w	r3, r3, r1
    7c06:	455b      	cmp	r3, r11
    7c08:	bf08      	it	eq
    7c0a:	4552      	cmpeq	r2, r10
    7c0c:	bf38      	it	cc
    7c0e:	f047 0701 	orrcc.w	r7, r7, #1
    7c12:	eb10 020a 	adds.w	r2, r0, r10
    7c16:	eb41 030b 	adc.w	r3, r1, r11
    7c1a:	e9cd 2300 	strd	r2, r3, [sp]
    7c1e:	e7b9      	b.n	7b94 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x240>
    7c20:	2701      	movs	r7, #1
    7c22:	e7b7      	b.n	7b94 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x240>
    7c24:	f04f 0801 	mov.w	r8, #1
    7c28:	e002      	b.n	7c30 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2dc>
    7c2a:	f04f 0a01 	mov.w	r10, #1
    7c2e:	e003      	b.n	7c38 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2e4>
    7c30:	f04f 0a00 	mov.w	r10, #0
    7c34:	e000      	b.n	7c38 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2e4>
    7c36:	4682      	mov	r10, r0
    7c38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7c3a:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    7c3e:	b163      	cbz	r3, 7c5a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x306>
    7c40:	a80f      	add	r0, sp, #60	; 0x3c
    7c42:	b2e9      	uxtb	r1, r5
    7c44:	f007 f8a1 	bl	ed8a <std::string::push_back(char)>
    7c48:	68a0      	ldr	r0, [r4, #8]
    7c4a:	68e1      	ldr	r1, [r4, #12]
    7c4c:	aa0f      	add	r2, sp, #60	; 0x3c
    7c4e:	f008 f9ca 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    7c52:	b910      	cbnz	r0, 7c5a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x306>
    7c54:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    7c56:	2304      	movs	r3, #4
    7c58:	6013      	str	r3, [r2, #0]
    7c5a:	b925      	cbnz	r5, 7c66 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x312>
    7c5c:	b91e      	cbnz	r6, 7c66 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x312>
    7c5e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7c60:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    7c64:	b113      	cbz	r3, 7c6c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x318>
    7c66:	f1ba 0f00 	cmp.w	r10, #0
    7c6a:	d008      	beq.n	7c7e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x32a>
    7c6c:	2200      	movs	r2, #0
    7c6e:	2300      	movs	r3, #0
    7c70:	991e      	ldr	r1, [sp, #120]	; 0x78
    7c72:	e9c1 2300 	strd	r2, r3, [r1]
    7c76:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    7c78:	2304      	movs	r3, #4
    7c7a:	6013      	str	r3, [r2, #0]
    7c7c:	e00b      	b.n	7c96 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x342>
    7c7e:	b9a7      	cbnz	r7, 7caa <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x356>
    7c80:	e9dd 0100 	ldrd	r0, r1, [sp]
    7c84:	f1b9 0f00 	cmp.w	r9, #0
    7c88:	d002      	beq.n	7c90 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x33c>
    7c8a:	4240      	negs	r0, r0
    7c8c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    7c90:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    7c92:	e9c3 0100 	strd	r0, r1, [r3]
    7c96:	f1b8 0f00 	cmp.w	r8, #0
    7c9a:	d012      	beq.n	7cc2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x36e>
    7c9c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    7c9e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    7ca0:	681b      	ldr	r3, [r3, #0]
    7ca2:	f043 0302 	orr.w	r3, r3, #2
    7ca6:	6013      	str	r3, [r2, #0]
    7ca8:	e00b      	b.n	7cc2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x36e>
    7caa:	f1b9 0f00 	cmp.w	r9, #0
    7cae:	d003      	beq.n	7cb8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x364>
    7cb0:	2200      	movs	r2, #0
    7cb2:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    7cb6:	e7db      	b.n	7c70 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x31c>
    7cb8:	f04f 32ff 	mov.w	r2, #4294967295
    7cbc:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    7cc0:	e7d6      	b.n	7c70 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x31c>
    7cc2:	ab0c      	add	r3, sp, #48	; 0x30
    7cc4:	e893 0003 	ldmia.w	r3, {r0, r1}
    7cc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    7cca:	e883 0003 	stmia.w	r3, {r0, r1}
    7cce:	a80f      	add	r0, sp, #60	; 0x3c
    7cd0:	f006 fe22 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    7cd4:	980b      	ldr	r0, [sp, #44]	; 0x2c
    7cd6:	b011      	add	sp, #68	; 0x44
    7cd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    7cdc:	10000c70 	.word	0x10000c70

00007ce0 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const>:
    7ce0:	b570      	push	{r4, r5, r6, lr}
    7ce2:	4605      	mov	r5, r0
    7ce4:	460e      	mov	r6, r1
    7ce6:	b088      	sub	sp, #32
    7ce8:	ac06      	add	r4, sp, #24
    7cea:	e884 000c 	stmia.w	r4, {r2, r3}
    7cee:	ab0c      	add	r3, sp, #48	; 0x30
    7cf0:	e893 0003 	ldmia.w	r3, {r0, r1}
    7cf4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7cf6:	e88d 0003 	stmia.w	sp, {r0, r1}
    7cfa:	9302      	str	r3, [sp, #8]
    7cfc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7cfe:	4628      	mov	r0, r5
    7d00:	9303      	str	r3, [sp, #12]
    7d02:	9b10      	ldr	r3, [sp, #64]	; 0x40
    7d04:	4631      	mov	r1, r6
    7d06:	9304      	str	r3, [sp, #16]
    7d08:	e894 000c 	ldmia.w	r4, {r2, r3}
    7d0c:	f7ff fe22 	bl	7954 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const>
    7d10:	4628      	mov	r0, r5
    7d12:	b008      	add	sp, #32
    7d14:	bd70      	pop	{r4, r5, r6, pc}
	...

00007d18 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const>:
    7d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    7d1c:	b08d      	sub	sp, #52	; 0x34
    7d1e:	9e18      	ldr	r6, [sp, #96]	; 0x60
    7d20:	9007      	str	r0, [sp, #28]
    7d22:	ad08      	add	r5, sp, #32
    7d24:	f106 006c 	add.w	r0, r6, #108	; 0x6c
    7d28:	e885 000c 	stmia.w	r5, {r2, r3}
    7d2c:	f7fc f8dc 	bl	3ee8 <std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.41]>
    7d30:	68f3      	ldr	r3, [r6, #12]
    7d32:	4604      	mov	r4, r0
    7d34:	f003 0a4a 	and.w	r10, r3, #74	; 0x4a
    7d38:	f1ba 0f40 	cmp.w	r10, #64	; 0x40
    7d3c:	d007      	beq.n	7d4e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x36>
    7d3e:	f1ba 0f08 	cmp.w	r10, #8
    7d42:	bf14      	ite	ne
    7d44:	f04f 090a 	movne.w	r9, #10
    7d48:	f04f 0910 	moveq.w	r9, #16
    7d4c:	e001      	b.n	7d52 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x3a>
    7d4e:	f04f 0908 	mov.w	r9, #8
    7d52:	4628      	mov	r0, r5
    7d54:	a916      	add	r1, sp, #88	; 0x58
    7d56:	f7fd f9bf 	bl	50d8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const>
    7d5a:	4607      	mov	r7, r0
    7d5c:	bb10      	cbnz	r0, 7da4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x8c>
    7d5e:	4628      	mov	r0, r5
    7d60:	f7fd f9a7 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7d64:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
    7d68:	4680      	mov	r8, r0
    7d6a:	1ac2      	subs	r2, r0, r3
    7d6c:	4253      	negs	r3, r2
    7d6e:	4153      	adcs	r3, r2
    7d70:	9302      	str	r3, [sp, #8]
    7d72:	b91b      	cbnz	r3, 7d7c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x64>
    7d74:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
    7d78:	4298      	cmp	r0, r3
    7d7a:	d119      	bne.n	7db0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x98>
    7d7c:	7c23      	ldrb	r3, [r4, #16]
    7d7e:	b113      	cbz	r3, 7d86 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x6e>
    7d80:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    7d82:	4598      	cmp	r8, r3
    7d84:	d014      	beq.n	7db0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x98>
    7d86:	6a63      	ldr	r3, [r4, #36]	; 0x24
    7d88:	4598      	cmp	r8, r3
    7d8a:	d011      	beq.n	7db0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x98>
    7d8c:	4628      	mov	r0, r5
    7d8e:	f7fc f8d1 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7d92:	a916      	add	r1, sp, #88	; 0x58
    7d94:	f7fd f9b3 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    7d98:	b148      	cbz	r0, 7dae <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x96>
    7d9a:	4628      	mov	r0, r5
    7d9c:	f7fd f989 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7da0:	4680      	mov	r8, r0
    7da2:	e005      	b.n	7db0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x98>
    7da4:	f04f 0800 	mov.w	r8, #0
    7da8:	f8cd 8008 	str.w	r8, [sp, #8]
    7dac:	e000      	b.n	7db0 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x98>
    7dae:	2701      	movs	r7, #1
    7db0:	2500      	movs	r5, #0
    7db2:	462e      	mov	r6, r5
    7db4:	2f00      	cmp	r7, #0
    7db6:	d14c      	bne.n	7e52 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x13a>
    7db8:	7c23      	ldrb	r3, [r4, #16]
    7dba:	b113      	cbz	r3, 7dc2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xaa>
    7dbc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    7dbe:	4598      	cmp	r8, r3
    7dc0:	d047      	beq.n	7e52 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x13a>
    7dc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
    7dc4:	4598      	cmp	r8, r3
    7dc6:	d044      	beq.n	7e52 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x13a>
    7dc8:	f8d4 30cc 	ldr.w	r3, [r4, #204]	; 0xcc
    7dcc:	4598      	cmp	r8, r3
    7dce:	d10c      	bne.n	7dea <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xd2>
    7dd0:	b11e      	cbz	r6, 7dda <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xc2>
    7dd2:	f1b9 0f0a 	cmp.w	r9, #10
    7dd6:	d109      	bne.n	7dec <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xd4>
    7dd8:	e024      	b.n	7e24 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x10c>
    7dda:	f1ba 0f00 	cmp.w	r10, #0
    7dde:	d016      	beq.n	7e0e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xf6>
    7de0:	f1b9 0f08 	cmp.w	r9, #8
    7de4:	d016      	beq.n	7e14 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xfc>
    7de6:	3501      	adds	r5, #1
    7de8:	e015      	b.n	7e16 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xfe>
    7dea:	b396      	cbz	r6, 7e52 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x13a>
    7dec:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
    7df0:	4598      	cmp	r8, r3
    7df2:	d003      	beq.n	7dfc <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xe4>
    7df4:	f8d4 30c8 	ldr.w	r3, [r4, #200]	; 0xc8
    7df8:	4598      	cmp	r8, r3
    7dfa:	d129      	bne.n	7e50 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x138>
    7dfc:	f1ba 0f00 	cmp.w	r10, #0
    7e00:	d00b      	beq.n	7e1a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x102>
    7e02:	f1b9 0f10 	cmp.w	r9, #16
    7e06:	d128      	bne.n	7e5a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x142>
    7e08:	2500      	movs	r5, #0
    7e0a:	462e      	mov	r6, r5
    7e0c:	e010      	b.n	7e30 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x118>
    7e0e:	4655      	mov	r5, r10
    7e10:	2601      	movs	r6, #1
    7e12:	e00b      	b.n	7e2c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x114>
    7e14:	4635      	mov	r5, r6
    7e16:	2601      	movs	r6, #1
    7e18:	e00a      	b.n	7e30 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x118>
    7e1a:	4655      	mov	r5, r10
    7e1c:	4656      	mov	r6, r10
    7e1e:	f04f 0910 	mov.w	r9, #16
    7e22:	e005      	b.n	7e30 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x118>
    7e24:	f1ba 0f00 	cmp.w	r10, #0
    7e28:	d1dd      	bne.n	7de6 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xce>
    7e2a:	4655      	mov	r5, r10
    7e2c:	f04f 0908 	mov.w	r9, #8
    7e30:	a808      	add	r0, sp, #32
    7e32:	f7fc f87f 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7e36:	a916      	add	r1, sp, #88	; 0x58
    7e38:	f7fd f961 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    7e3c:	b130      	cbz	r0, 7e4c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x134>
    7e3e:	a808      	add	r0, sp, #32
    7e40:	f7fd f937 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7e44:	4680      	mov	r8, r0
    7e46:	2e00      	cmp	r6, #0
    7e48:	d1b6      	bne.n	7db8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xa0>
    7e4a:	e002      	b.n	7e52 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x13a>
    7e4c:	2701      	movs	r7, #1
    7e4e:	e000      	b.n	7e52 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x13a>
    7e50:	2601      	movs	r6, #1
    7e52:	f1b9 0f10 	cmp.w	r9, #16
    7e56:	d101      	bne.n	7e5c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x144>
    7e58:	e003      	b.n	7e62 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x14a>
    7e5a:	2601      	movs	r6, #1
    7e5c:	f8cd 900c 	str.w	r9, [sp, #12]
    7e60:	e001      	b.n	7e66 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x14e>
    7e62:	2316      	movs	r3, #22
    7e64:	9303      	str	r3, [sp, #12]
    7e66:	4b7f      	ldr	r3, [pc, #508]	; (8064 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x34c>)
    7e68:	930b      	str	r3, [sp, #44]	; 0x2c
    7e6a:	7c23      	ldrb	r3, [r4, #16]
    7e6c:	b11b      	cbz	r3, 7e76 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x15e>
    7e6e:	a80b      	add	r0, sp, #44	; 0x2c
    7e70:	2120      	movs	r1, #32
    7e72:	f006 feac 	bl	ebce <std::string::reserve(unsigned int)>
    7e76:	464a      	mov	r2, r9
    7e78:	f04f 30ff 	mov.w	r0, #4294967295
    7e7c:	17d3      	asrs	r3, r2, #31
    7e7e:	f04f 31ff 	mov.w	r1, #4294967295
    7e82:	e9cd 2300 	strd	r2, r3, [sp]
    7e86:	f00a faa5 	bl	123d4 <__aeabi_uldivmod>
    7e8a:	f894 3124 	ldrb.w	r3, [r4, #292]	; 0x124
    7e8e:	e9cd 0104 	strd	r0, r1, [sp, #16]
    7e92:	b93b      	cbnz	r3, 7ea4 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x18c>
    7e94:	f04f 0a00 	mov.w	r10, #0
    7e98:	f04f 0b00 	mov.w	r11, #0
    7e9c:	4699      	mov	r9, r3
    7e9e:	2f00      	cmp	r7, #0
    7ea0:	d037      	beq.n	7f12 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x1fa>
    7ea2:	e08e      	b.n	7fc2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2aa>
    7ea4:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
    7ea8:	9306      	str	r3, [sp, #24]
    7eaa:	f04f 0a00 	mov.w	r10, #0
    7eae:	f04f 0b00 	mov.w	r11, #0
    7eb2:	f04f 0900 	mov.w	r9, #0
    7eb6:	2f00      	cmp	r7, #0
    7eb8:	d04b      	beq.n	7f52 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x23a>
    7eba:	e082      	b.n	7fc2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2aa>
    7ebc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7ec0:	455b      	cmp	r3, r11
    7ec2:	bf08      	it	eq
    7ec4:	4552      	cmpeq	r2, r10
    7ec6:	d32b      	bcc.n	7f20 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x208>
    7ec8:	9b01      	ldr	r3, [sp, #4]
    7eca:	3501      	adds	r5, #1
    7ecc:	fb0a f103 	mul.w	r1, r10, r3
    7ed0:	9b00      	ldr	r3, [sp, #0]
    7ed2:	fb03 110b 	mla	r1, r3, r11, r1
    7ed6:	fbaa 2303 	umull	r2, r3, r10, r3
    7eda:	440b      	add	r3, r1
    7edc:	17c1      	asrs	r1, r0, #31
    7ede:	ea6f 0b01 	mvn.w	r11, r1
    7ee2:	ea6f 0a00 	mvn.w	r10, r0
    7ee6:	459b      	cmp	r11, r3
    7ee8:	bf08      	it	eq
    7eea:	4592      	cmpeq	r10, r2
    7eec:	bf38      	it	cc
    7eee:	f049 0901 	orrcc.w	r9, r9, #1
    7ef2:	eb10 0a02 	adds.w	r10, r0, r2
    7ef6:	eb41 0b03 	adc.w	r11, r1, r3
    7efa:	a808      	add	r0, sp, #32
    7efc:	f7fc f81a 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7f00:	a916      	add	r1, sp, #88	; 0x58
    7f02:	f7fd f8fc 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    7f06:	2800      	cmp	r0, #0
    7f08:	d056      	beq.n	7fb8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2a0>
    7f0a:	a808      	add	r0, sp, #32
    7f0c:	f7fd f8d1 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7f10:	4680      	mov	r8, r0
    7f12:	9803      	ldr	r0, [sp, #12]
    7f14:	4641      	mov	r1, r8
    7f16:	f7fb f8d9 	bl	30cc <__gnu_cxx::__enable_if<std::__is_char<wchar_t>::__value, int>::__type std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_find<wchar_t>(wchar_t const*, unsigned int, wchar_t) const [clone .isra.32]>
    7f1a:	1c43      	adds	r3, r0, #1
    7f1c:	d1ce      	bne.n	7ebc <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x1a4>
    7f1e:	e050      	b.n	7fc2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2aa>
    7f20:	f04f 0901 	mov.w	r9, #1
    7f24:	e7e9      	b.n	7efa <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x1e2>
    7f26:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    7f28:	4598      	cmp	r8, r3
    7f2a:	d115      	bne.n	7f58 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x240>
    7f2c:	2d00      	cmp	r5, #0
    7f2e:	d045      	beq.n	7fbc <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2a4>
    7f30:	b2e9      	uxtb	r1, r5
    7f32:	a80b      	add	r0, sp, #44	; 0x2c
    7f34:	f006 ff29 	bl	ed8a <std::string::push_back(char)>
    7f38:	2500      	movs	r5, #0
    7f3a:	a808      	add	r0, sp, #32
    7f3c:	f7fb fffa 	bl	3f34 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::operator++()>
    7f40:	a916      	add	r1, sp, #88	; 0x58
    7f42:	f7fd f8dc 	bl	50fe <bool std::operator!=<wchar_t, std::char_traits<wchar_t> >(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&)>
    7f46:	2800      	cmp	r0, #0
    7f48:	d036      	beq.n	7fb8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2a0>
    7f4a:	a808      	add	r0, sp, #32
    7f4c:	f7fd f8b1 	bl	50b2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const>
    7f50:	4680      	mov	r8, r0
    7f52:	7c23      	ldrb	r3, [r4, #16]
    7f54:	2b00      	cmp	r3, #0
    7f56:	d1e6      	bne.n	7f26 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x20e>
    7f58:	6a63      	ldr	r3, [r4, #36]	; 0x24
    7f5a:	4598      	cmp	r8, r3
    7f5c:	d031      	beq.n	7fc2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2aa>
    7f5e:	9806      	ldr	r0, [sp, #24]
    7f60:	4641      	mov	r1, r8
    7f62:	9a03      	ldr	r2, [sp, #12]
    7f64:	f00f f90e 	bl	17184 <wmemchr>
    7f68:	b370      	cbz	r0, 7fc8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2b0>
    7f6a:	9b06      	ldr	r3, [sp, #24]
    7f6c:	1ac0      	subs	r0, r0, r3
    7f6e:	1080      	asrs	r0, r0, #2
    7f70:	280f      	cmp	r0, #15
    7f72:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7f76:	bfc8      	it	gt
    7f78:	3806      	subgt	r0, #6
    7f7a:	455b      	cmp	r3, r11
    7f7c:	bf08      	it	eq
    7f7e:	4552      	cmpeq	r2, r10
    7f80:	d317      	bcc.n	7fb2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x29a>
    7f82:	9b01      	ldr	r3, [sp, #4]
    7f84:	9a00      	ldr	r2, [sp, #0]
    7f86:	fb0a f303 	mul.w	r3, r10, r3
    7f8a:	fb02 330b 	mla	r3, r2, r11, r3
    7f8e:	fbaa ab02 	umull	r10, r11, r10, r2
    7f92:	17c1      	asrs	r1, r0, #31
    7f94:	449b      	add	r11, r3
    7f96:	43cb      	mvns	r3, r1
    7f98:	43c2      	mvns	r2, r0
    7f9a:	455b      	cmp	r3, r11
    7f9c:	bf08      	it	eq
    7f9e:	4552      	cmpeq	r2, r10
    7fa0:	bf38      	it	cc
    7fa2:	f049 0901 	orrcc.w	r9, r9, #1
    7fa6:	eb1a 0a00 	adds.w	r10, r10, r0
    7faa:	eb4b 0b01 	adc.w	r11, r11, r1
    7fae:	3501      	adds	r5, #1
    7fb0:	e7c3      	b.n	7f3a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x222>
    7fb2:	f04f 0901 	mov.w	r9, #1
    7fb6:	e7c0      	b.n	7f3a <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x222>
    7fb8:	2701      	movs	r7, #1
    7fba:	e002      	b.n	7fc2 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2aa>
    7fbc:	f04f 0801 	mov.w	r8, #1
    7fc0:	e003      	b.n	7fca <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2b2>
    7fc2:	f04f 0800 	mov.w	r8, #0
    7fc6:	e000      	b.n	7fca <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2b2>
    7fc8:	4680      	mov	r8, r0
    7fca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    7fcc:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    7fd0:	b163      	cbz	r3, 7fec <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2d4>
    7fd2:	a80b      	add	r0, sp, #44	; 0x2c
    7fd4:	b2e9      	uxtb	r1, r5
    7fd6:	f006 fed8 	bl	ed8a <std::string::push_back(char)>
    7fda:	68a0      	ldr	r0, [r4, #8]
    7fdc:	68e1      	ldr	r1, [r4, #12]
    7fde:	aa0b      	add	r2, sp, #44	; 0x2c
    7fe0:	f008 f801 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    7fe4:	b910      	cbnz	r0, 7fec <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2d4>
    7fe6:	9a19      	ldr	r2, [sp, #100]	; 0x64
    7fe8:	2304      	movs	r3, #4
    7fea:	6013      	str	r3, [r2, #0]
    7fec:	b925      	cbnz	r5, 7ff8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2e0>
    7fee:	b91e      	cbnz	r6, 7ff8 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2e0>
    7ff0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    7ff2:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    7ff6:	b113      	cbz	r3, 7ffe <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2e6>
    7ff8:	f1b8 0f00 	cmp.w	r8, #0
    7ffc:	d00f      	beq.n	801e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x306>
    7ffe:	2200      	movs	r2, #0
    8000:	2300      	movs	r3, #0
    8002:	991a      	ldr	r1, [sp, #104]	; 0x68
    8004:	e9c1 2300 	strd	r2, r3, [r1]
    8008:	9a19      	ldr	r2, [sp, #100]	; 0x64
    800a:	2304      	movs	r3, #4
    800c:	6013      	str	r3, [r2, #0]
    800e:	b1df      	cbz	r7, 8048 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x330>
    8010:	9b19      	ldr	r3, [sp, #100]	; 0x64
    8012:	9a19      	ldr	r2, [sp, #100]	; 0x64
    8014:	681b      	ldr	r3, [r3, #0]
    8016:	f043 0302 	orr.w	r3, r3, #2
    801a:	6013      	str	r3, [r2, #0]
    801c:	e014      	b.n	8048 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x330>
    801e:	f1b9 0f00 	cmp.w	r9, #0
    8022:	d004      	beq.n	802e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x316>
    8024:	f04f 32ff 	mov.w	r2, #4294967295
    8028:	f04f 33ff 	mov.w	r3, #4294967295
    802c:	e7e9      	b.n	8002 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2ea>
    802e:	9b02      	ldr	r3, [sp, #8]
    8030:	b123      	cbz	r3, 803c <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x324>
    8032:	f1da 0000 	rsbs	r0, r10, #0
    8036:	eb6b 014b 	sbc.w	r1, r11, r11, lsl #1
    803a:	e001      	b.n	8040 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x328>
    803c:	4650      	mov	r0, r10
    803e:	4659      	mov	r1, r11
    8040:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    8042:	e9c3 0100 	strd	r0, r1, [r3]
    8046:	e7e2      	b.n	800e <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2f6>
    8048:	ab08      	add	r3, sp, #32
    804a:	e893 0003 	ldmia.w	r3, {r0, r1}
    804e:	9b07      	ldr	r3, [sp, #28]
    8050:	e883 0003 	stmia.w	r3, {r0, r1}
    8054:	a80b      	add	r0, sp, #44	; 0x2c
    8056:	f006 fc5f 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    805a:	9807      	ldr	r0, [sp, #28]
    805c:	b00d      	add	sp, #52	; 0x34
    805e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    8062:	bf00      	nop
    8064:	10000c70 	.word	0x10000c70

00008068 <std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const>:
    8068:	b570      	push	{r4, r5, r6, lr}
    806a:	4605      	mov	r5, r0
    806c:	460e      	mov	r6, r1
    806e:	b088      	sub	sp, #32
    8070:	ac06      	add	r4, sp, #24
    8072:	e884 000c 	stmia.w	r4, {r2, r3}
    8076:	ab0c      	add	r3, sp, #48	; 0x30
    8078:	e893 0003 	ldmia.w	r3, {r0, r1}
    807c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    807e:	e88d 0003 	stmia.w	sp, {r0, r1}
    8082:	9302      	str	r3, [sp, #8]
    8084:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8086:	4628      	mov	r0, r5
    8088:	9303      	str	r3, [sp, #12]
    808a:	9b10      	ldr	r3, [sp, #64]	; 0x40
    808c:	4631      	mov	r1, r6
    808e:	9304      	str	r3, [sp, #16]
    8090:	e894 000c 	ldmia.w	r4, {r2, r3}
    8094:	f7ff fe40 	bl	7d18 <std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const>
    8098:	4628      	mov	r0, r5
    809a:	b008      	add	sp, #32
    809c:	bd70      	pop	{r4, r5, r6, pc}
	...

000080a0 <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE>:
    80a0:	4b24      	ldr	r3, [pc, #144]	; (8134 <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE+0x94>)
    80a2:	681a      	ldr	r2, [r3, #0]
    80a4:	07d0      	lsls	r0, r2, #31
    80a6:	bf5c      	itt	pl
    80a8:	2201      	movpl	r2, #1
    80aa:	601a      	strpl	r2, [r3, #0]
    80ac:	4b22      	ldr	r3, [pc, #136]	; (8138 <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE+0x98>)
    80ae:	681a      	ldr	r2, [r3, #0]
    80b0:	07d1      	lsls	r1, r2, #31
    80b2:	bf5c      	itt	pl
    80b4:	2201      	movpl	r2, #1
    80b6:	601a      	strpl	r2, [r3, #0]
    80b8:	4b20      	ldr	r3, [pc, #128]	; (813c <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE+0x9c>)
    80ba:	681a      	ldr	r2, [r3, #0]
    80bc:	07d2      	lsls	r2, r2, #31
    80be:	bf5c      	itt	pl
    80c0:	2201      	movpl	r2, #1
    80c2:	601a      	strpl	r2, [r3, #0]
    80c4:	4b1e      	ldr	r3, [pc, #120]	; (8140 <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE+0xa0>)
    80c6:	681a      	ldr	r2, [r3, #0]
    80c8:	07d0      	lsls	r0, r2, #31
    80ca:	bf5c      	itt	pl
    80cc:	2201      	movpl	r2, #1
    80ce:	601a      	strpl	r2, [r3, #0]
    80d0:	4b1c      	ldr	r3, [pc, #112]	; (8144 <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE+0xa4>)
    80d2:	681a      	ldr	r2, [r3, #0]
    80d4:	07d1      	lsls	r1, r2, #31
    80d6:	bf5c      	itt	pl
    80d8:	2201      	movpl	r2, #1
    80da:	601a      	strpl	r2, [r3, #0]
    80dc:	4b1a      	ldr	r3, [pc, #104]	; (8148 <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE+0xa8>)
    80de:	681a      	ldr	r2, [r3, #0]
    80e0:	07d2      	lsls	r2, r2, #31
    80e2:	bf5c      	itt	pl
    80e4:	2201      	movpl	r2, #1
    80e6:	601a      	strpl	r2, [r3, #0]
    80e8:	4b18      	ldr	r3, [pc, #96]	; (814c <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE+0xac>)
    80ea:	681a      	ldr	r2, [r3, #0]
    80ec:	07d0      	lsls	r0, r2, #31
    80ee:	bf5c      	itt	pl
    80f0:	2201      	movpl	r2, #1
    80f2:	601a      	strpl	r2, [r3, #0]
    80f4:	4b16      	ldr	r3, [pc, #88]	; (8150 <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE+0xb0>)
    80f6:	681a      	ldr	r2, [r3, #0]
    80f8:	07d1      	lsls	r1, r2, #31
    80fa:	bf5c      	itt	pl
    80fc:	2201      	movpl	r2, #1
    80fe:	601a      	strpl	r2, [r3, #0]
    8100:	4b14      	ldr	r3, [pc, #80]	; (8154 <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE+0xb4>)
    8102:	681a      	ldr	r2, [r3, #0]
    8104:	07d2      	lsls	r2, r2, #31
    8106:	bf5c      	itt	pl
    8108:	2201      	movpl	r2, #1
    810a:	601a      	strpl	r2, [r3, #0]
    810c:	4b12      	ldr	r3, [pc, #72]	; (8158 <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE+0xb8>)
    810e:	681a      	ldr	r2, [r3, #0]
    8110:	07d0      	lsls	r0, r2, #31
    8112:	bf5c      	itt	pl
    8114:	2201      	movpl	r2, #1
    8116:	601a      	strpl	r2, [r3, #0]
    8118:	4b10      	ldr	r3, [pc, #64]	; (815c <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE+0xbc>)
    811a:	681a      	ldr	r2, [r3, #0]
    811c:	07d1      	lsls	r1, r2, #31
    811e:	bf5c      	itt	pl
    8120:	2201      	movpl	r2, #1
    8122:	601a      	strpl	r2, [r3, #0]
    8124:	4b0e      	ldr	r3, [pc, #56]	; (8160 <_GLOBAL__sub_I__ZTSSt16__numpunct_cacheIwE+0xc0>)
    8126:	681a      	ldr	r2, [r3, #0]
    8128:	07d2      	lsls	r2, r2, #31
    812a:	bf5c      	itt	pl
    812c:	2201      	movpl	r2, #1
    812e:	601a      	strpl	r2, [r3, #0]
    8130:	4770      	bx	lr
    8132:	bf00      	nop
    8134:	10000660 	.word	0x10000660
    8138:	1000065c 	.word	0x1000065c
    813c:	10000658 	.word	0x10000658
    8140:	10000654 	.word	0x10000654
    8144:	10000650 	.word	0x10000650
    8148:	1000064c 	.word	0x1000064c
    814c:	10000648 	.word	0x10000648
    8150:	10000644 	.word	0x10000644
    8154:	10000640 	.word	0x10000640
    8158:	1000063c 	.word	0x1000063c
    815c:	10000638 	.word	0x10000638
    8160:	10000634 	.word	0x10000634

00008164 <std::__timepunct<char>::_M_put(char*, unsigned int, char const*, tm const*) const>:
    8164:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
    8168:	4681      	mov	r9, r0
    816a:	2000      	movs	r0, #0
    816c:	460c      	mov	r4, r1
    816e:	4601      	mov	r1, r0
    8170:	461f      	mov	r7, r3
    8172:	4690      	mov	r8, r2
    8174:	f00b f9ba 	bl	134ec <setlocale>
    8178:	4682      	mov	r10, r0
    817a:	f00d f80d 	bl	15198 <strlen>
    817e:	1c45      	adds	r5, r0, #1
    8180:	4628      	mov	r0, r5
    8182:	f7fa f9d6 	bl	2532 <operator new[](unsigned int)>
    8186:	462a      	mov	r2, r5
    8188:	4651      	mov	r1, r10
    818a:	4606      	mov	r6, r0
    818c:	f00b fa7e 	bl	1368c <memcpy>
    8190:	f8d9 1010 	ldr.w	r1, [r9, #16]
    8194:	2000      	movs	r0, #0
    8196:	f00b f9a9 	bl	134ec <setlocale>
    819a:	4641      	mov	r1, r8
    819c:	463a      	mov	r2, r7
    819e:	9b08      	ldr	r3, [sp, #32]
    81a0:	4620      	mov	r0, r4
    81a2:	f00c fbbb 	bl	1491c <strftime>
    81a6:	4605      	mov	r5, r0
    81a8:	4631      	mov	r1, r6
    81aa:	2000      	movs	r0, #0
    81ac:	f00b f99e 	bl	134ec <setlocale>
    81b0:	4630      	mov	r0, r6
    81b2:	f7fa f9bc 	bl	252e <operator delete[](void*)>
    81b6:	b905      	cbnz	r5, 81ba <std::__timepunct<char>::_M_put(char*, unsigned int, char const*, tm const*) const+0x56>
    81b8:	7025      	strb	r5, [r4, #0]
    81ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
	...

000081c0 <std::__timepunct<char>::_M_initialize_timepunct(int*)>:
    81c0:	b538      	push	{r3, r4, r5, lr}
    81c2:	6884      	ldr	r4, [r0, #8]
    81c4:	4605      	mov	r5, r0
    81c6:	2c00      	cmp	r4, #0
    81c8:	d148      	bne.n	825c <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x9c>
    81ca:	20c8      	movs	r0, #200	; 0xc8
    81cc:	f7fa f98e 	bl	24ec <operator new(unsigned int)>
    81d0:	4b58      	ldr	r3, [pc, #352]	; (8334 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x174>)
    81d2:	6044      	str	r4, [r0, #4]
    81d4:	6003      	str	r3, [r0, #0]
    81d6:	6084      	str	r4, [r0, #8]
    81d8:	60c4      	str	r4, [r0, #12]
    81da:	6104      	str	r4, [r0, #16]
    81dc:	6144      	str	r4, [r0, #20]
    81de:	6184      	str	r4, [r0, #24]
    81e0:	61c4      	str	r4, [r0, #28]
    81e2:	6204      	str	r4, [r0, #32]
    81e4:	6244      	str	r4, [r0, #36]	; 0x24
    81e6:	6284      	str	r4, [r0, #40]	; 0x28
    81e8:	62c4      	str	r4, [r0, #44]	; 0x2c
    81ea:	6304      	str	r4, [r0, #48]	; 0x30
    81ec:	6344      	str	r4, [r0, #52]	; 0x34
    81ee:	6384      	str	r4, [r0, #56]	; 0x38
    81f0:	63c4      	str	r4, [r0, #60]	; 0x3c
    81f2:	6404      	str	r4, [r0, #64]	; 0x40
    81f4:	6444      	str	r4, [r0, #68]	; 0x44
    81f6:	6484      	str	r4, [r0, #72]	; 0x48
    81f8:	64c4      	str	r4, [r0, #76]	; 0x4c
    81fa:	6504      	str	r4, [r0, #80]	; 0x50
    81fc:	6544      	str	r4, [r0, #84]	; 0x54
    81fe:	6584      	str	r4, [r0, #88]	; 0x58
    8200:	65c4      	str	r4, [r0, #92]	; 0x5c
    8202:	6604      	str	r4, [r0, #96]	; 0x60
    8204:	6644      	str	r4, [r0, #100]	; 0x64
    8206:	6684      	str	r4, [r0, #104]	; 0x68
    8208:	66c4      	str	r4, [r0, #108]	; 0x6c
    820a:	6704      	str	r4, [r0, #112]	; 0x70
    820c:	6744      	str	r4, [r0, #116]	; 0x74
    820e:	6784      	str	r4, [r0, #120]	; 0x78
    8210:	67c4      	str	r4, [r0, #124]	; 0x7c
    8212:	f8c0 4080 	str.w	r4, [r0, #128]	; 0x80
    8216:	f8c0 4084 	str.w	r4, [r0, #132]	; 0x84
    821a:	f8c0 4088 	str.w	r4, [r0, #136]	; 0x88
    821e:	f8c0 408c 	str.w	r4, [r0, #140]	; 0x8c
    8222:	f8c0 4090 	str.w	r4, [r0, #144]	; 0x90
    8226:	f8c0 4094 	str.w	r4, [r0, #148]	; 0x94
    822a:	f8c0 4098 	str.w	r4, [r0, #152]	; 0x98
    822e:	f8c0 409c 	str.w	r4, [r0, #156]	; 0x9c
    8232:	f8c0 40a0 	str.w	r4, [r0, #160]	; 0xa0
    8236:	f8c0 40a4 	str.w	r4, [r0, #164]	; 0xa4
    823a:	f8c0 40a8 	str.w	r4, [r0, #168]	; 0xa8
    823e:	f8c0 40ac 	str.w	r4, [r0, #172]	; 0xac
    8242:	f8c0 40b0 	str.w	r4, [r0, #176]	; 0xb0
    8246:	f8c0 40b4 	str.w	r4, [r0, #180]	; 0xb4
    824a:	f8c0 40b8 	str.w	r4, [r0, #184]	; 0xb8
    824e:	f8c0 40bc 	str.w	r4, [r0, #188]	; 0xbc
    8252:	f8c0 40c0 	str.w	r4, [r0, #192]	; 0xc0
    8256:	f880 40c4 	strb.w	r4, [r0, #196]	; 0xc4
    825a:	60a8      	str	r0, [r5, #8]
    825c:	68ab      	ldr	r3, [r5, #8]
    825e:	4a36      	ldr	r2, [pc, #216]	; (8338 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x178>)
    8260:	4936      	ldr	r1, [pc, #216]	; (833c <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x17c>)
    8262:	609a      	str	r2, [r3, #8]
    8264:	60da      	str	r2, [r3, #12]
    8266:	4a36      	ldr	r2, [pc, #216]	; (8340 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x180>)
    8268:	6219      	str	r1, [r3, #32]
    826a:	611a      	str	r2, [r3, #16]
    826c:	615a      	str	r2, [r3, #20]
    826e:	4a35      	ldr	r2, [pc, #212]	; (8344 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x184>)
    8270:	4935      	ldr	r1, [pc, #212]	; (8348 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x188>)
    8272:	619a      	str	r2, [r3, #24]
    8274:	61da      	str	r2, [r3, #28]
    8276:	629a      	str	r2, [r3, #40]	; 0x28
    8278:	4a34      	ldr	r2, [pc, #208]	; (834c <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x18c>)
    827a:	6259      	str	r1, [r3, #36]	; 0x24
    827c:	62da      	str	r2, [r3, #44]	; 0x2c
    827e:	4a34      	ldr	r2, [pc, #208]	; (8350 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x190>)
    8280:	4934      	ldr	r1, [pc, #208]	; (8354 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x194>)
    8282:	631a      	str	r2, [r3, #48]	; 0x30
    8284:	4a34      	ldr	r2, [pc, #208]	; (8358 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x198>)
    8286:	6799      	str	r1, [r3, #120]	; 0x78
    8288:	635a      	str	r2, [r3, #52]	; 0x34
    828a:	4a34      	ldr	r2, [pc, #208]	; (835c <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x19c>)
    828c:	4934      	ldr	r1, [pc, #208]	; (8360 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1a0>)
    828e:	639a      	str	r2, [r3, #56]	; 0x38
    8290:	4a34      	ldr	r2, [pc, #208]	; (8364 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1a4>)
    8292:	67d9      	str	r1, [r3, #124]	; 0x7c
    8294:	63da      	str	r2, [r3, #60]	; 0x3c
    8296:	4a34      	ldr	r2, [pc, #208]	; (8368 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1a8>)
    8298:	4934      	ldr	r1, [pc, #208]	; (836c <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1ac>)
    829a:	641a      	str	r2, [r3, #64]	; 0x40
    829c:	4a34      	ldr	r2, [pc, #208]	; (8370 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1b0>)
    829e:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
    82a2:	645a      	str	r2, [r3, #68]	; 0x44
    82a4:	4a33      	ldr	r2, [pc, #204]	; (8374 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1b4>)
    82a6:	4934      	ldr	r1, [pc, #208]	; (8378 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1b8>)
    82a8:	649a      	str	r2, [r3, #72]	; 0x48
    82aa:	4a34      	ldr	r2, [pc, #208]	; (837c <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1bc>)
    82ac:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
    82b0:	64da      	str	r2, [r3, #76]	; 0x4c
    82b2:	4a33      	ldr	r2, [pc, #204]	; (8380 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1c0>)
    82b4:	4933      	ldr	r1, [pc, #204]	; (8384 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1c4>)
    82b6:	651a      	str	r2, [r3, #80]	; 0x50
    82b8:	4a33      	ldr	r2, [pc, #204]	; (8388 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1c8>)
    82ba:	655a      	str	r2, [r3, #84]	; 0x54
    82bc:	4a33      	ldr	r2, [pc, #204]	; (838c <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1cc>)
    82be:	659a      	str	r2, [r3, #88]	; 0x58
    82c0:	4a33      	ldr	r2, [pc, #204]	; (8390 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1d0>)
    82c2:	65da      	str	r2, [r3, #92]	; 0x5c
    82c4:	4a33      	ldr	r2, [pc, #204]	; (8394 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1d4>)
    82c6:	661a      	str	r2, [r3, #96]	; 0x60
    82c8:	4a33      	ldr	r2, [pc, #204]	; (8398 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1d8>)
    82ca:	665a      	str	r2, [r3, #100]	; 0x64
    82cc:	4a33      	ldr	r2, [pc, #204]	; (839c <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1dc>)
    82ce:	669a      	str	r2, [r3, #104]	; 0x68
    82d0:	4a33      	ldr	r2, [pc, #204]	; (83a0 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1e0>)
    82d2:	66da      	str	r2, [r3, #108]	; 0x6c
    82d4:	4a33      	ldr	r2, [pc, #204]	; (83a4 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1e4>)
    82d6:	671a      	str	r2, [r3, #112]	; 0x70
    82d8:	4a33      	ldr	r2, [pc, #204]	; (83a8 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1e8>)
    82da:	675a      	str	r2, [r3, #116]	; 0x74
    82dc:	f8c3 1088 	str.w	r1, [r3, #136]	; 0x88
    82e0:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
    82e4:	4a31      	ldr	r2, [pc, #196]	; (83ac <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1ec>)
    82e6:	4932      	ldr	r1, [pc, #200]	; (83b0 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1f0>)
    82e8:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
    82ec:	4a31      	ldr	r2, [pc, #196]	; (83b4 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1f4>)
    82ee:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
    82f2:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
    82f6:	4930      	ldr	r1, [pc, #192]	; (83b8 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1f8>)
    82f8:	4a30      	ldr	r2, [pc, #192]	; (83bc <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x1fc>)
    82fa:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
    82fe:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
    8302:	492f      	ldr	r1, [pc, #188]	; (83c0 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x200>)
    8304:	4a2f      	ldr	r2, [pc, #188]	; (83c4 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x204>)
    8306:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
    830a:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
    830e:	492e      	ldr	r1, [pc, #184]	; (83c8 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x208>)
    8310:	4a2e      	ldr	r2, [pc, #184]	; (83cc <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x20c>)
    8312:	f8c3 1098 	str.w	r1, [r3, #152]	; 0x98
    8316:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
    831a:	492d      	ldr	r1, [pc, #180]	; (83d0 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x210>)
    831c:	4a2d      	ldr	r2, [pc, #180]	; (83d4 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x214>)
    831e:	f8c3 109c 	str.w	r1, [r3, #156]	; 0x9c
    8322:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
    8326:	492c      	ldr	r1, [pc, #176]	; (83d8 <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x218>)
    8328:	4a2c      	ldr	r2, [pc, #176]	; (83dc <std::__timepunct<char>::_M_initialize_timepunct(int*)+0x21c>)
    832a:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
    832e:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
    8332:	bd38      	pop	{r3, r4, r5, pc}
    8334:	0001b7c0 	.word	0x0001b7c0
    8338:	0001b154 	.word	0x0001b154
    833c:	0001b1b6 	.word	0x0001b1b6
    8340:	0001b163 	.word	0x0001b163
    8344:	0001c156 	.word	0x0001c156
    8348:	0001b1b9 	.word	0x0001b1b9
    834c:	0001b1bc 	.word	0x0001b1bc
    8350:	0001b1c3 	.word	0x0001b1c3
    8354:	0001b232 	.word	0x0001b232
    8358:	0001b1ca 	.word	0x0001b1ca
    835c:	0001b1d2 	.word	0x0001b1d2
    8360:	0001b237 	.word	0x0001b237
    8364:	0001b1dc 	.word	0x0001b1dc
    8368:	0001b1e5 	.word	0x0001b1e5
    836c:	0001b23c 	.word	0x0001b23c
    8370:	0001b1ec 	.word	0x0001b1ec
    8374:	0001b1f5 	.word	0x0001b1f5
    8378:	0001b243 	.word	0x0001b243
    837c:	0001b1f9 	.word	0x0001b1f9
    8380:	0001b1fd 	.word	0x0001b1fd
    8384:	0001b24d 	.word	0x0001b24d
    8388:	0001b201 	.word	0x0001b201
    838c:	0001b205 	.word	0x0001b205
    8390:	0001b209 	.word	0x0001b209
    8394:	0001b20d 	.word	0x0001b20d
    8398:	0001b211 	.word	0x0001b211
    839c:	0001b219 	.word	0x0001b219
    83a0:	0001b222 	.word	0x0001b222
    83a4:	0001b228 	.word	0x0001b228
    83a8:	0001b22e 	.word	0x0001b22e
    83ac:	0001b277 	.word	0x0001b277
    83b0:	0001b255 	.word	0x0001b255
    83b4:	0001b27b 	.word	0x0001b27b
    83b8:	0001b25e 	.word	0x0001b25e
    83bc:	0001b27f 	.word	0x0001b27f
    83c0:	0001b267 	.word	0x0001b267
    83c4:	0001b283 	.word	0x0001b283
    83c8:	0001b26b 	.word	0x0001b26b
    83cc:	0001b287 	.word	0x0001b287
    83d0:	0001b26f 	.word	0x0001b26f
    83d4:	0001b28b 	.word	0x0001b28b
    83d8:	0001b273 	.word	0x0001b273
    83dc:	0001b28f 	.word	0x0001b28f

000083e0 <std::__timepunct<wchar_t>::_M_put(wchar_t*, unsigned int, wchar_t const*, tm const*) const>:
    83e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
    83e4:	4681      	mov	r9, r0
    83e6:	2000      	movs	r0, #0
    83e8:	460c      	mov	r4, r1
    83ea:	4601      	mov	r1, r0
    83ec:	461f      	mov	r7, r3
    83ee:	4690      	mov	r8, r2
    83f0:	f00b f87c 	bl	134ec <setlocale>
    83f4:	4682      	mov	r10, r0
    83f6:	f00c fecf 	bl	15198 <strlen>
    83fa:	1c45      	adds	r5, r0, #1
    83fc:	4628      	mov	r0, r5
    83fe:	f7fa f898 	bl	2532 <operator new[](unsigned int)>
    8402:	462a      	mov	r2, r5
    8404:	4651      	mov	r1, r10
    8406:	4606      	mov	r6, r0
    8408:	f00b f940 	bl	1368c <memcpy>
    840c:	f8d9 1010 	ldr.w	r1, [r9, #16]
    8410:	2000      	movs	r0, #0
    8412:	f00b f86b 	bl	134ec <setlocale>
    8416:	4641      	mov	r1, r8
    8418:	463a      	mov	r2, r7
    841a:	9b08      	ldr	r3, [sp, #32]
    841c:	4620      	mov	r0, r4
    841e:	f00e f8cb 	bl	165b8 <wcsftime>
    8422:	4605      	mov	r5, r0
    8424:	4631      	mov	r1, r6
    8426:	2000      	movs	r0, #0
    8428:	f00b f860 	bl	134ec <setlocale>
    842c:	4630      	mov	r0, r6
    842e:	f7fa f87e 	bl	252e <operator delete[](void*)>
    8432:	b905      	cbnz	r5, 8436 <std::__timepunct<wchar_t>::_M_put(wchar_t*, unsigned int, wchar_t const*, tm const*) const+0x56>
    8434:	6025      	str	r5, [r4, #0]
    8436:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
	...

0000843c <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)>:
    843c:	b538      	push	{r3, r4, r5, lr}
    843e:	6884      	ldr	r4, [r0, #8]
    8440:	4605      	mov	r5, r0
    8442:	2c00      	cmp	r4, #0
    8444:	d148      	bne.n	84d8 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x9c>
    8446:	20c8      	movs	r0, #200	; 0xc8
    8448:	f7fa f850 	bl	24ec <operator new(unsigned int)>
    844c:	4b58      	ldr	r3, [pc, #352]	; (85b0 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x174>)
    844e:	6044      	str	r4, [r0, #4]
    8450:	6003      	str	r3, [r0, #0]
    8452:	6084      	str	r4, [r0, #8]
    8454:	60c4      	str	r4, [r0, #12]
    8456:	6104      	str	r4, [r0, #16]
    8458:	6144      	str	r4, [r0, #20]
    845a:	6184      	str	r4, [r0, #24]
    845c:	61c4      	str	r4, [r0, #28]
    845e:	6204      	str	r4, [r0, #32]
    8460:	6244      	str	r4, [r0, #36]	; 0x24
    8462:	6284      	str	r4, [r0, #40]	; 0x28
    8464:	62c4      	str	r4, [r0, #44]	; 0x2c
    8466:	6304      	str	r4, [r0, #48]	; 0x30
    8468:	6344      	str	r4, [r0, #52]	; 0x34
    846a:	6384      	str	r4, [r0, #56]	; 0x38
    846c:	63c4      	str	r4, [r0, #60]	; 0x3c
    846e:	6404      	str	r4, [r0, #64]	; 0x40
    8470:	6444      	str	r4, [r0, #68]	; 0x44
    8472:	6484      	str	r4, [r0, #72]	; 0x48
    8474:	64c4      	str	r4, [r0, #76]	; 0x4c
    8476:	6504      	str	r4, [r0, #80]	; 0x50
    8478:	6544      	str	r4, [r0, #84]	; 0x54
    847a:	6584      	str	r4, [r0, #88]	; 0x58
    847c:	65c4      	str	r4, [r0, #92]	; 0x5c
    847e:	6604      	str	r4, [r0, #96]	; 0x60
    8480:	6644      	str	r4, [r0, #100]	; 0x64
    8482:	6684      	str	r4, [r0, #104]	; 0x68
    8484:	66c4      	str	r4, [r0, #108]	; 0x6c
    8486:	6704      	str	r4, [r0, #112]	; 0x70
    8488:	6744      	str	r4, [r0, #116]	; 0x74
    848a:	6784      	str	r4, [r0, #120]	; 0x78
    848c:	67c4      	str	r4, [r0, #124]	; 0x7c
    848e:	f8c0 4080 	str.w	r4, [r0, #128]	; 0x80
    8492:	f8c0 4084 	str.w	r4, [r0, #132]	; 0x84
    8496:	f8c0 4088 	str.w	r4, [r0, #136]	; 0x88
    849a:	f8c0 408c 	str.w	r4, [r0, #140]	; 0x8c
    849e:	f8c0 4090 	str.w	r4, [r0, #144]	; 0x90
    84a2:	f8c0 4094 	str.w	r4, [r0, #148]	; 0x94
    84a6:	f8c0 4098 	str.w	r4, [r0, #152]	; 0x98
    84aa:	f8c0 409c 	str.w	r4, [r0, #156]	; 0x9c
    84ae:	f8c0 40a0 	str.w	r4, [r0, #160]	; 0xa0
    84b2:	f8c0 40a4 	str.w	r4, [r0, #164]	; 0xa4
    84b6:	f8c0 40a8 	str.w	r4, [r0, #168]	; 0xa8
    84ba:	f8c0 40ac 	str.w	r4, [r0, #172]	; 0xac
    84be:	f8c0 40b0 	str.w	r4, [r0, #176]	; 0xb0
    84c2:	f8c0 40b4 	str.w	r4, [r0, #180]	; 0xb4
    84c6:	f8c0 40b8 	str.w	r4, [r0, #184]	; 0xb8
    84ca:	f8c0 40bc 	str.w	r4, [r0, #188]	; 0xbc
    84ce:	f8c0 40c0 	str.w	r4, [r0, #192]	; 0xc0
    84d2:	f880 40c4 	strb.w	r4, [r0, #196]	; 0xc4
    84d6:	60a8      	str	r0, [r5, #8]
    84d8:	68ab      	ldr	r3, [r5, #8]
    84da:	4a36      	ldr	r2, [pc, #216]	; (85b4 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x178>)
    84dc:	4936      	ldr	r1, [pc, #216]	; (85b8 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x17c>)
    84de:	609a      	str	r2, [r3, #8]
    84e0:	60da      	str	r2, [r3, #12]
    84e2:	4a36      	ldr	r2, [pc, #216]	; (85bc <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x180>)
    84e4:	6219      	str	r1, [r3, #32]
    84e6:	611a      	str	r2, [r3, #16]
    84e8:	615a      	str	r2, [r3, #20]
    84ea:	4a35      	ldr	r2, [pc, #212]	; (85c0 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x184>)
    84ec:	4935      	ldr	r1, [pc, #212]	; (85c4 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x188>)
    84ee:	619a      	str	r2, [r3, #24]
    84f0:	61da      	str	r2, [r3, #28]
    84f2:	629a      	str	r2, [r3, #40]	; 0x28
    84f4:	4a34      	ldr	r2, [pc, #208]	; (85c8 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x18c>)
    84f6:	6259      	str	r1, [r3, #36]	; 0x24
    84f8:	62da      	str	r2, [r3, #44]	; 0x2c
    84fa:	4a34      	ldr	r2, [pc, #208]	; (85cc <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x190>)
    84fc:	4934      	ldr	r1, [pc, #208]	; (85d0 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x194>)
    84fe:	631a      	str	r2, [r3, #48]	; 0x30
    8500:	4a34      	ldr	r2, [pc, #208]	; (85d4 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x198>)
    8502:	6799      	str	r1, [r3, #120]	; 0x78
    8504:	635a      	str	r2, [r3, #52]	; 0x34
    8506:	4a34      	ldr	r2, [pc, #208]	; (85d8 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x19c>)
    8508:	4934      	ldr	r1, [pc, #208]	; (85dc <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1a0>)
    850a:	639a      	str	r2, [r3, #56]	; 0x38
    850c:	4a34      	ldr	r2, [pc, #208]	; (85e0 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1a4>)
    850e:	67d9      	str	r1, [r3, #124]	; 0x7c
    8510:	63da      	str	r2, [r3, #60]	; 0x3c
    8512:	4a34      	ldr	r2, [pc, #208]	; (85e4 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1a8>)
    8514:	4934      	ldr	r1, [pc, #208]	; (85e8 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1ac>)
    8516:	641a      	str	r2, [r3, #64]	; 0x40
    8518:	4a34      	ldr	r2, [pc, #208]	; (85ec <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1b0>)
    851a:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
    851e:	645a      	str	r2, [r3, #68]	; 0x44
    8520:	4a33      	ldr	r2, [pc, #204]	; (85f0 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1b4>)
    8522:	4934      	ldr	r1, [pc, #208]	; (85f4 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1b8>)
    8524:	649a      	str	r2, [r3, #72]	; 0x48
    8526:	4a34      	ldr	r2, [pc, #208]	; (85f8 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1bc>)
    8528:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
    852c:	64da      	str	r2, [r3, #76]	; 0x4c
    852e:	4a33      	ldr	r2, [pc, #204]	; (85fc <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1c0>)
    8530:	4933      	ldr	r1, [pc, #204]	; (8600 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1c4>)
    8532:	651a      	str	r2, [r3, #80]	; 0x50
    8534:	4a33      	ldr	r2, [pc, #204]	; (8604 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1c8>)
    8536:	655a      	str	r2, [r3, #84]	; 0x54
    8538:	4a33      	ldr	r2, [pc, #204]	; (8608 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1cc>)
    853a:	659a      	str	r2, [r3, #88]	; 0x58
    853c:	4a33      	ldr	r2, [pc, #204]	; (860c <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1d0>)
    853e:	65da      	str	r2, [r3, #92]	; 0x5c
    8540:	4a33      	ldr	r2, [pc, #204]	; (8610 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1d4>)
    8542:	661a      	str	r2, [r3, #96]	; 0x60
    8544:	4a33      	ldr	r2, [pc, #204]	; (8614 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1d8>)
    8546:	665a      	str	r2, [r3, #100]	; 0x64
    8548:	4a33      	ldr	r2, [pc, #204]	; (8618 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1dc>)
    854a:	669a      	str	r2, [r3, #104]	; 0x68
    854c:	4a33      	ldr	r2, [pc, #204]	; (861c <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1e0>)
    854e:	66da      	str	r2, [r3, #108]	; 0x6c
    8550:	4a33      	ldr	r2, [pc, #204]	; (8620 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1e4>)
    8552:	671a      	str	r2, [r3, #112]	; 0x70
    8554:	4a33      	ldr	r2, [pc, #204]	; (8624 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1e8>)
    8556:	675a      	str	r2, [r3, #116]	; 0x74
    8558:	f8c3 1088 	str.w	r1, [r3, #136]	; 0x88
    855c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
    8560:	4a31      	ldr	r2, [pc, #196]	; (8628 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1ec>)
    8562:	4932      	ldr	r1, [pc, #200]	; (862c <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1f0>)
    8564:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
    8568:	4a31      	ldr	r2, [pc, #196]	; (8630 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1f4>)
    856a:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
    856e:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
    8572:	4930      	ldr	r1, [pc, #192]	; (8634 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1f8>)
    8574:	4a30      	ldr	r2, [pc, #192]	; (8638 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x1fc>)
    8576:	f8c3 1090 	str.w	r1, [r3, #144]	; 0x90
    857a:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
    857e:	492f      	ldr	r1, [pc, #188]	; (863c <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x200>)
    8580:	4a2f      	ldr	r2, [pc, #188]	; (8640 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x204>)
    8582:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
    8586:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
    858a:	492e      	ldr	r1, [pc, #184]	; (8644 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x208>)
    858c:	4a2e      	ldr	r2, [pc, #184]	; (8648 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x20c>)
    858e:	f8c3 1098 	str.w	r1, [r3, #152]	; 0x98
    8592:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
    8596:	492d      	ldr	r1, [pc, #180]	; (864c <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x210>)
    8598:	4a2d      	ldr	r2, [pc, #180]	; (8650 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x214>)
    859a:	f8c3 109c 	str.w	r1, [r3, #156]	; 0x9c
    859e:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
    85a2:	492c      	ldr	r1, [pc, #176]	; (8654 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x218>)
    85a4:	4a2c      	ldr	r2, [pc, #176]	; (8658 <std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)+0x21c>)
    85a6:	f8c3 10a0 	str.w	r1, [r3, #160]	; 0xa0
    85aa:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
    85ae:	bd38      	pop	{r3, r4, r5, pc}
    85b0:	0001ac40 	.word	0x0001ac40
    85b4:	0001b294 	.word	0x0001b294
    85b8:	0001b2dc 	.word	0x0001b2dc
    85bc:	0001b2b8 	.word	0x0001b2b8
    85c0:	0001cd10 	.word	0x0001cd10
    85c4:	0001b2e8 	.word	0x0001b2e8
    85c8:	0001b2f4 	.word	0x0001b2f4
    85cc:	0001b310 	.word	0x0001b310
    85d0:	0001b4cc 	.word	0x0001b4cc
    85d4:	0001b32c 	.word	0x0001b32c
    85d8:	0001b34c 	.word	0x0001b34c
    85dc:	0001b4e0 	.word	0x0001b4e0
    85e0:	0001b374 	.word	0x0001b374
    85e4:	0001b398 	.word	0x0001b398
    85e8:	0001b4f4 	.word	0x0001b4f4
    85ec:	0001b3b4 	.word	0x0001b3b4
    85f0:	0001b3d8 	.word	0x0001b3d8
    85f4:	0001b510 	.word	0x0001b510
    85f8:	0001b3e8 	.word	0x0001b3e8
    85fc:	0001b3f8 	.word	0x0001b3f8
    8600:	0001b538 	.word	0x0001b538
    8604:	0001b408 	.word	0x0001b408
    8608:	0001b418 	.word	0x0001b418
    860c:	0001b428 	.word	0x0001b428
    8610:	0001b438 	.word	0x0001b438
    8614:	0001b448 	.word	0x0001b448
    8618:	0001b468 	.word	0x0001b468
    861c:	0001b48c 	.word	0x0001b48c
    8620:	0001b4a4 	.word	0x0001b4a4
    8624:	0001b4bc 	.word	0x0001b4bc
    8628:	0001b5e0 	.word	0x0001b5e0
    862c:	0001b558 	.word	0x0001b558
    8630:	0001b5f0 	.word	0x0001b5f0
    8634:	0001b57c 	.word	0x0001b57c
    8638:	0001b600 	.word	0x0001b600
    863c:	0001b5a0 	.word	0x0001b5a0
    8640:	0001b610 	.word	0x0001b610
    8644:	0001b5b0 	.word	0x0001b5b0
    8648:	0001b620 	.word	0x0001b620
    864c:	0001b5c0 	.word	0x0001b5c0
    8650:	0001b630 	.word	0x0001b630
    8654:	0001b5d0 	.word	0x0001b5d0
    8658:	0001b640 	.word	0x0001b640

0000865c <std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const>:
    865c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    8660:	4614      	mov	r4, r2
    8662:	b085      	sub	sp, #20
    8664:	461e      	mov	r6, r3
    8666:	af02      	add	r7, sp, #8
    8668:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
    866a:	f8dd a040 	ldr.w	r10, [sp, #64]	; 0x40
    866e:	4688      	mov	r8, r1
    8670:	c903      	ldmia	r1, {r0, r1}
    8672:	e887 0003 	stmia.w	r7, {r0, r1}
    8676:	f00a ff2f 	bl	134d8 <__locale_mb_cur_max>
    867a:	1b33      	subs	r3, r6, r4
    867c:	109b      	asrs	r3, r3, #2
    867e:	ebca 0205 	rsb	r2, r10, r5
    8682:	fb03 2000 	mla	r0, r3, r0, r2
    8686:	2800      	cmp	r0, #0
    8688:	dc2f      	bgt.n	86ea <std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const+0x8e>
    868a:	42b4      	cmp	r4, r6
    868c:	46a1      	mov	r9, r4
    868e:	d232      	bcs.n	86f6 <std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const+0x9a>
    8690:	463a      	mov	r2, r7
    8692:	4628      	mov	r0, r5
    8694:	f8d9 1000 	ldr.w	r1, [r9]
    8698:	f00d ff0e 	bl	164b8 <wcrtomb>
    869c:	1c42      	adds	r2, r0, #1
    869e:	f104 0404 	add.w	r4, r4, #4
    86a2:	4603      	mov	r3, r0
    86a4:	d02c      	beq.n	8700 <std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const+0xa4>
    86a6:	e897 0003 	ldmia.w	r7, {r0, r1}
    86aa:	441d      	add	r5, r3
    86ac:	e888 0003 	stmia.w	r8, {r0, r1}
    86b0:	e7eb      	b.n	868a <std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const+0x2e>
    86b2:	4555      	cmp	r5, r10
    86b4:	d21f      	bcs.n	86f6 <std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const+0x9a>
    86b6:	a801      	add	r0, sp, #4
    86b8:	f8d9 1000 	ldr.w	r1, [r9]
    86bc:	463a      	mov	r2, r7
    86be:	f00d fefb 	bl	164b8 <wcrtomb>
    86c2:	f1b0 3fff 	cmp.w	r0, #4294967295
    86c6:	f104 0404 	add.w	r4, r4, #4
    86ca:	4683      	mov	r11, r0
    86cc:	d018      	beq.n	8700 <std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const+0xa4>
    86ce:	ebc5 030a 	rsb	r3, r5, r10
    86d2:	4298      	cmp	r0, r3
    86d4:	d80d      	bhi.n	86f2 <std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const+0x96>
    86d6:	4628      	mov	r0, r5
    86d8:	a901      	add	r1, sp, #4
    86da:	465a      	mov	r2, r11
    86dc:	f00a ffd6 	bl	1368c <memcpy>
    86e0:	e897 0003 	ldmia.w	r7, {r0, r1}
    86e4:	e888 0003 	stmia.w	r8, {r0, r1}
    86e8:	445d      	add	r5, r11
    86ea:	42b4      	cmp	r4, r6
    86ec:	46a1      	mov	r9, r4
    86ee:	d3e0      	bcc.n	86b2 <std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const+0x56>
    86f0:	e001      	b.n	86f6 <std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const+0x9a>
    86f2:	2001      	movs	r0, #1
    86f4:	e005      	b.n	8702 <std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const+0xa6>
    86f6:	45b1      	cmp	r9, r6
    86f8:	bf2c      	ite	cs
    86fa:	2000      	movcs	r0, #0
    86fc:	2001      	movcc	r0, #1
    86fe:	e000      	b.n	8702 <std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const+0xa6>
    8700:	2002      	movs	r0, #2
    8702:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    8704:	f8c3 9000 	str.w	r9, [r3]
    8708:	9b11      	ldr	r3, [sp, #68]	; 0x44
    870a:	601d      	str	r5, [r3, #0]
    870c:	b005      	add	sp, #20
    870e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00008712 <std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const>:
    8712:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    8716:	4615      	mov	r5, r2
    8718:	461c      	mov	r4, r3
    871a:	46e8      	mov	r8, sp
    871c:	4689      	mov	r9, r1
    871e:	c903      	ldmia	r1, {r0, r1}
    8720:	e88d 0003 	stmia.w	sp, {r0, r1}
    8724:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    8726:	9f0c      	ldr	r7, [sp, #48]	; 0x30
    8728:	42a5      	cmp	r5, r4
    872a:	d21a      	bcs.n	8762 <std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const+0x50>
    872c:	42be      	cmp	r6, r7
    872e:	d218      	bcs.n	8762 <std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const+0x50>
    8730:	4629      	mov	r1, r5
    8732:	4643      	mov	r3, r8
    8734:	4630      	mov	r0, r6
    8736:	1b62      	subs	r2, r4, r5
    8738:	f00a ff68 	bl	1360c <mbrtowc>
    873c:	1c41      	adds	r1, r0, #1
    873e:	4603      	mov	r3, r0
    8740:	d00b      	beq.n	875a <std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const+0x48>
    8742:	1c82      	adds	r2, r0, #2
    8744:	d00b      	beq.n	875e <std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const+0x4c>
    8746:	b908      	cbnz	r0, 874c <std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const+0x3a>
    8748:	6030      	str	r0, [r6, #0]
    874a:	2301      	movs	r3, #1
    874c:	e898 0003 	ldmia.w	r8, {r0, r1}
    8750:	3604      	adds	r6, #4
    8752:	e889 0003 	stmia.w	r9, {r0, r1}
    8756:	441d      	add	r5, r3
    8758:	e7e6      	b.n	8728 <std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const+0x16>
    875a:	2002      	movs	r0, #2
    875c:	e005      	b.n	876a <std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const+0x58>
    875e:	2001      	movs	r0, #1
    8760:	e003      	b.n	876a <std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const+0x58>
    8762:	42a5      	cmp	r5, r4
    8764:	bf2c      	ite	cs
    8766:	2000      	movcs	r0, #0
    8768:	2001      	movcc	r0, #1
    876a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    876c:	601d      	str	r5, [r3, #0]
    876e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8770:	601e      	str	r6, [r3, #0]
    8772:	b003      	add	sp, #12
    8774:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00008778 <std::codecvt<wchar_t, char, _mbstate_t>::do_encoding() const>:
    8778:	b508      	push	{r3, lr}
    877a:	f00a fead 	bl	134d8 <__locale_mb_cur_max>
    877e:	1e43      	subs	r3, r0, #1
    8780:	4258      	negs	r0, r3
    8782:	4158      	adcs	r0, r3
    8784:	bd08      	pop	{r3, pc}

00008786 <std::codecvt<wchar_t, char, _mbstate_t>::do_max_length() const>:
    8786:	f00a bea7 	b.w	134d8 <__locale_mb_cur_max>

0000878a <std::codecvt<wchar_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned int) const>:
    878a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    878e:	4614      	mov	r4, r2
    8790:	4699      	mov	r9, r3
    8792:	466d      	mov	r5, sp
    8794:	460e      	mov	r6, r1
    8796:	c903      	ldmia	r1, {r0, r1}
    8798:	e88d 0003 	stmia.w	sp, {r0, r1}
    879c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    87a0:	2700      	movs	r7, #0
    87a2:	454c      	cmp	r4, r9
    87a4:	d21b      	bcs.n	87de <std::codecvt<wchar_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned int) const+0x54>
    87a6:	f1b8 0f00 	cmp.w	r8, #0
    87aa:	d018      	beq.n	87de <std::codecvt<wchar_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned int) const+0x54>
    87ac:	ebc4 0209 	rsb	r2, r4, r9
    87b0:	462b      	mov	r3, r5
    87b2:	2000      	movs	r0, #0
    87b4:	4621      	mov	r1, r4
    87b6:	f00a ff29 	bl	1360c <mbrtowc>
    87ba:	1c82      	adds	r2, r0, #2
    87bc:	2a01      	cmp	r2, #1
    87be:	4603      	mov	r3, r0
    87c0:	d90d      	bls.n	87de <std::codecvt<wchar_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned int) const+0x54>
    87c2:	2800      	cmp	r0, #0
    87c4:	bf18      	it	ne
    87c6:	4603      	movne	r3, r0
    87c8:	e895 0003 	ldmia.w	r5, {r0, r1}
    87cc:	bf08      	it	eq
    87ce:	2301      	moveq	r3, #1
    87d0:	e886 0003 	stmia.w	r6, {r0, r1}
    87d4:	441c      	add	r4, r3
    87d6:	441f      	add	r7, r3
    87d8:	f108 38ff 	add.w	r8, r8, #4294967295
    87dc:	e7e1      	b.n	87a2 <std::codecvt<wchar_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned int) const+0x18>
    87de:	4638      	mov	r0, r7
    87e0:	b003      	add	sp, #12
    87e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

000087e6 <std::codecvt<char, char, _mbstate_t>::do_out(_mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const>:
    87e6:	9b00      	ldr	r3, [sp, #0]
    87e8:	2003      	movs	r0, #3
    87ea:	601a      	str	r2, [r3, #0]
    87ec:	9b03      	ldr	r3, [sp, #12]
    87ee:	9a01      	ldr	r2, [sp, #4]
    87f0:	601a      	str	r2, [r3, #0]
    87f2:	4770      	bx	lr

000087f4 <std::codecvt<char, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const>:
    87f4:	9b00      	ldr	r3, [sp, #0]
    87f6:	2003      	movs	r0, #3
    87f8:	601a      	str	r2, [r3, #0]
    87fa:	4770      	bx	lr

000087fc <std::codecvt<char, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const>:
    87fc:	9b00      	ldr	r3, [sp, #0]
    87fe:	2003      	movs	r0, #3
    8800:	601a      	str	r2, [r3, #0]
    8802:	9b03      	ldr	r3, [sp, #12]
    8804:	9a01      	ldr	r2, [sp, #4]
    8806:	601a      	str	r2, [r3, #0]
    8808:	4770      	bx	lr

0000880a <std::codecvt<char, char, _mbstate_t>::do_encoding() const>:
    880a:	2001      	movs	r0, #1
    880c:	4770      	bx	lr

0000880e <std::codecvt<char, char, _mbstate_t>::do_always_noconv() const>:
    880e:	2001      	movs	r0, #1
    8810:	4770      	bx	lr

00008812 <std::codecvt<char, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned int) const>:
    8812:	9900      	ldr	r1, [sp, #0]
    8814:	1a98      	subs	r0, r3, r2
    8816:	4288      	cmp	r0, r1
    8818:	bf28      	it	cs
    881a:	4608      	movcs	r0, r1
    881c:	4770      	bx	lr

0000881e <std::codecvt<char, char, _mbstate_t>::do_max_length() const>:
    881e:	2001      	movs	r0, #1
    8820:	4770      	bx	lr

00008822 <std::codecvt<wchar_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const>:
    8822:	9b00      	ldr	r3, [sp, #0]
    8824:	2003      	movs	r0, #3
    8826:	601a      	str	r2, [r3, #0]
    8828:	4770      	bx	lr

0000882a <std::codecvt<wchar_t, char, _mbstate_t>::do_always_noconv() const>:
    882a:	2000      	movs	r0, #0
    882c:	4770      	bx	lr
	...

00008830 <std::codecvt<char, char, _mbstate_t>::~codecvt()>:
    8830:	b510      	push	{r4, lr}
    8832:	4604      	mov	r4, r0
    8834:	4b05      	ldr	r3, [pc, #20]	; (884c <std::codecvt<char, char, _mbstate_t>::~codecvt()+0x1c>)
    8836:	f840 3b08 	str.w	r3, [r0], #8
    883a:	f007 fe45 	bl	104c8 <std::locale::facet::_S_destroy_c_locale(int*&)>
    883e:	4b04      	ldr	r3, [pc, #16]	; (8850 <std::codecvt<char, char, _mbstate_t>::~codecvt()+0x20>)
    8840:	4620      	mov	r0, r4
    8842:	6023      	str	r3, [r4, #0]
    8844:	f007 fbfc 	bl	10040 <std::locale::facet::~facet()>
    8848:	4620      	mov	r0, r4
    884a:	bd10      	pop	{r4, pc}
    884c:	0001b6b0 	.word	0x0001b6b0
    8850:	0001b870 	.word	0x0001b870

00008854 <std::codecvt<char, char, _mbstate_t>::~codecvt()>:
    8854:	b510      	push	{r4, lr}
    8856:	4604      	mov	r4, r0
    8858:	f7ff ffea 	bl	8830 <std::codecvt<char, char, _mbstate_t>::~codecvt()>
    885c:	4620      	mov	r0, r4
    885e:	f7f9 fe56 	bl	250e <operator delete(void*)>
    8862:	4620      	mov	r0, r4
    8864:	bd10      	pop	{r4, pc}
	...

00008868 <std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()>:
    8868:	b510      	push	{r4, lr}
    886a:	4604      	mov	r4, r0
    886c:	4b05      	ldr	r3, [pc, #20]	; (8884 <std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()+0x1c>)
    886e:	f840 3b08 	str.w	r3, [r0], #8
    8872:	f007 fe29 	bl	104c8 <std::locale::facet::_S_destroy_c_locale(int*&)>
    8876:	4b04      	ldr	r3, [pc, #16]	; (8888 <std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()+0x20>)
    8878:	4620      	mov	r0, r4
    887a:	6023      	str	r3, [r4, #0]
    887c:	f007 fbe0 	bl	10040 <std::locale::facet::~facet()>
    8880:	4620      	mov	r0, r4
    8882:	bd10      	pop	{r4, pc}
    8884:	0001b680 	.word	0x0001b680
    8888:	0001acf0 	.word	0x0001acf0

0000888c <std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()>:
    888c:	b510      	push	{r4, lr}
    888e:	4604      	mov	r4, r0
    8890:	f7ff ffea 	bl	8868 <std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()>
    8894:	4620      	mov	r0, r4
    8896:	f7f9 fe3a 	bl	250e <operator delete(void*)>
    889a:	4620      	mov	r0, r4
    889c:	bd10      	pop	{r4, pc}
	...

000088a0 <std::codecvt<char, char, _mbstate_t>::codecvt(unsigned int)>:
    88a0:	3100      	adds	r1, #0
    88a2:	4b06      	ldr	r3, [pc, #24]	; (88bc <std::codecvt<char, char, _mbstate_t>::codecvt(unsigned int)+0x1c>)
    88a4:	bf18      	it	ne
    88a6:	2101      	movne	r1, #1
    88a8:	b510      	push	{r4, lr}
    88aa:	6041      	str	r1, [r0, #4]
    88ac:	6003      	str	r3, [r0, #0]
    88ae:	4604      	mov	r4, r0
    88b0:	f007 fbe0 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    88b4:	60a0      	str	r0, [r4, #8]
    88b6:	4620      	mov	r0, r4
    88b8:	bd10      	pop	{r4, pc}
    88ba:	bf00      	nop
    88bc:	0001b6b0 	.word	0x0001b6b0

000088c0 <std::codecvt<wchar_t, char, _mbstate_t>::codecvt(unsigned int)>:
    88c0:	3100      	adds	r1, #0
    88c2:	4b06      	ldr	r3, [pc, #24]	; (88dc <std::codecvt<wchar_t, char, _mbstate_t>::codecvt(unsigned int)+0x1c>)
    88c4:	bf18      	it	ne
    88c6:	2101      	movne	r1, #1
    88c8:	b510      	push	{r4, lr}
    88ca:	6041      	str	r1, [r0, #4]
    88cc:	6003      	str	r3, [r0, #0]
    88ce:	4604      	mov	r4, r0
    88d0:	f007 fbd0 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    88d4:	60a0      	str	r0, [r4, #8]
    88d6:	4620      	mov	r0, r4
    88d8:	bd10      	pop	{r4, pc}
    88da:	bf00      	nop
    88dc:	0001b680 	.word	0x0001b680

000088e0 <std::moneypunct<char, false>::do_decimal_point() const>:
    88e0:	6883      	ldr	r3, [r0, #8]
    88e2:	7c58      	ldrb	r0, [r3, #17]
    88e4:	4770      	bx	lr

000088e6 <std::moneypunct<char, false>::do_thousands_sep() const>:
    88e6:	6883      	ldr	r3, [r0, #8]
    88e8:	7c98      	ldrb	r0, [r3, #18]
    88ea:	4770      	bx	lr

000088ec <std::moneypunct<char, false>::do_frac_digits() const>:
    88ec:	6883      	ldr	r3, [r0, #8]
    88ee:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
    88f0:	4770      	bx	lr

000088f2 <std::moneypunct<char, false>::do_pos_format() const>:
    88f2:	6883      	ldr	r3, [r0, #8]
    88f4:	2000      	movs	r0, #0
    88f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    88f8:	b082      	sub	sp, #8
    88fa:	b2da      	uxtb	r2, r3
    88fc:	f362 0007 	bfi	r0, r2, #0, #8
    8900:	f3c3 2207 	ubfx	r2, r3, #8, #8
    8904:	f362 200f 	bfi	r0, r2, #8, #8
    8908:	f3c3 4207 	ubfx	r2, r3, #16, #8
    890c:	f362 4017 	bfi	r0, r2, #16, #8
    8910:	0e1b      	lsrs	r3, r3, #24
    8912:	f363 601f 	bfi	r0, r3, #24, #8
    8916:	b002      	add	sp, #8
    8918:	4770      	bx	lr

0000891a <std::moneypunct<char, false>::do_neg_format() const>:
    891a:	6883      	ldr	r3, [r0, #8]
    891c:	2000      	movs	r0, #0
    891e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    8920:	b082      	sub	sp, #8
    8922:	b2da      	uxtb	r2, r3
    8924:	f362 0007 	bfi	r0, r2, #0, #8
    8928:	f3c3 2207 	ubfx	r2, r3, #8, #8
    892c:	f362 200f 	bfi	r0, r2, #8, #8
    8930:	f3c3 4207 	ubfx	r2, r3, #16, #8
    8934:	f362 4017 	bfi	r0, r2, #16, #8
    8938:	0e1b      	lsrs	r3, r3, #24
    893a:	f363 601f 	bfi	r0, r3, #24, #8
    893e:	b002      	add	sp, #8
    8940:	4770      	bx	lr

00008942 <std::moneypunct<char, true>::do_decimal_point() const>:
    8942:	6883      	ldr	r3, [r0, #8]
    8944:	7c58      	ldrb	r0, [r3, #17]
    8946:	4770      	bx	lr

00008948 <std::moneypunct<char, true>::do_thousands_sep() const>:
    8948:	6883      	ldr	r3, [r0, #8]
    894a:	7c98      	ldrb	r0, [r3, #18]
    894c:	4770      	bx	lr

0000894e <std::moneypunct<char, true>::do_frac_digits() const>:
    894e:	6883      	ldr	r3, [r0, #8]
    8950:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
    8952:	4770      	bx	lr

00008954 <std::moneypunct<char, true>::do_pos_format() const>:
    8954:	6883      	ldr	r3, [r0, #8]
    8956:	2000      	movs	r0, #0
    8958:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    895a:	b082      	sub	sp, #8
    895c:	b2da      	uxtb	r2, r3
    895e:	f362 0007 	bfi	r0, r2, #0, #8
    8962:	f3c3 2207 	ubfx	r2, r3, #8, #8
    8966:	f362 200f 	bfi	r0, r2, #8, #8
    896a:	f3c3 4207 	ubfx	r2, r3, #16, #8
    896e:	f362 4017 	bfi	r0, r2, #16, #8
    8972:	0e1b      	lsrs	r3, r3, #24
    8974:	f363 601f 	bfi	r0, r3, #24, #8
    8978:	b002      	add	sp, #8
    897a:	4770      	bx	lr

0000897c <std::moneypunct<char, true>::do_neg_format() const>:
    897c:	6883      	ldr	r3, [r0, #8]
    897e:	2000      	movs	r0, #0
    8980:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    8982:	b082      	sub	sp, #8
    8984:	b2da      	uxtb	r2, r3
    8986:	f362 0007 	bfi	r0, r2, #0, #8
    898a:	f3c3 2207 	ubfx	r2, r3, #8, #8
    898e:	f362 200f 	bfi	r0, r2, #8, #8
    8992:	f3c3 4207 	ubfx	r2, r3, #16, #8
    8996:	f362 4017 	bfi	r0, r2, #16, #8
    899a:	0e1b      	lsrs	r3, r3, #24
    899c:	f363 601f 	bfi	r0, r3, #24, #8
    89a0:	b002      	add	sp, #8
    89a2:	4770      	bx	lr

000089a4 <std::numpunct<char>::do_decimal_point() const>:
    89a4:	6883      	ldr	r3, [r0, #8]
    89a6:	f893 0024 	ldrb.w	r0, [r3, #36]	; 0x24
    89aa:	4770      	bx	lr

000089ac <std::numpunct<char>::do_thousands_sep() const>:
    89ac:	6883      	ldr	r3, [r0, #8]
    89ae:	f893 0025 	ldrb.w	r0, [r3, #37]	; 0x25
    89b2:	4770      	bx	lr

000089b4 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_date_order() const>:
    89b4:	2000      	movs	r0, #0
    89b6:	4770      	bx	lr

000089b8 <std::messages<char>::do_open(std::string const&, std::locale const&) const>:
    89b8:	2000      	movs	r0, #0
    89ba:	4770      	bx	lr

000089bc <std::messages<char>::do_close(int) const>:
    89bc:	4770      	bx	lr

000089be <std::collate<char>::do_hash(char const*, char const*) const>:
    89be:	2000      	movs	r0, #0
    89c0:	4291      	cmp	r1, r2
    89c2:	d204      	bcs.n	89ce <std::collate<char>::do_hash(char const*, char const*) const+0x10>
    89c4:	f811 3b01 	ldrb.w	r3, [r1], #1
    89c8:	eb03 6070 	add.w	r0, r3, r0, ror #25
    89cc:	e7f8      	b.n	89c0 <std::collate<char>::do_hash(char const*, char const*) const+0x2>
    89ce:	4770      	bx	lr

000089d0 <std::moneypunct<char, false>::do_grouping() const>:
    89d0:	b513      	push	{r0, r1, r4, lr}
    89d2:	4604      	mov	r4, r0
    89d4:	688b      	ldr	r3, [r1, #8]
    89d6:	aa01      	add	r2, sp, #4
    89d8:	6899      	ldr	r1, [r3, #8]
    89da:	f006 fa31 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    89de:	4620      	mov	r0, r4
    89e0:	b002      	add	sp, #8
    89e2:	bd10      	pop	{r4, pc}

000089e4 <std::moneypunct<char, false>::do_curr_symbol() const>:
    89e4:	b513      	push	{r0, r1, r4, lr}
    89e6:	4604      	mov	r4, r0
    89e8:	688b      	ldr	r3, [r1, #8]
    89ea:	aa01      	add	r2, sp, #4
    89ec:	6959      	ldr	r1, [r3, #20]
    89ee:	f006 fa27 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    89f2:	4620      	mov	r0, r4
    89f4:	b002      	add	sp, #8
    89f6:	bd10      	pop	{r4, pc}

000089f8 <std::moneypunct<char, false>::do_positive_sign() const>:
    89f8:	b513      	push	{r0, r1, r4, lr}
    89fa:	4604      	mov	r4, r0
    89fc:	688b      	ldr	r3, [r1, #8]
    89fe:	aa01      	add	r2, sp, #4
    8a00:	69d9      	ldr	r1, [r3, #28]
    8a02:	f006 fa1d 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    8a06:	4620      	mov	r0, r4
    8a08:	b002      	add	sp, #8
    8a0a:	bd10      	pop	{r4, pc}

00008a0c <std::moneypunct<char, false>::do_negative_sign() const>:
    8a0c:	b513      	push	{r0, r1, r4, lr}
    8a0e:	4604      	mov	r4, r0
    8a10:	688b      	ldr	r3, [r1, #8]
    8a12:	aa01      	add	r2, sp, #4
    8a14:	6a59      	ldr	r1, [r3, #36]	; 0x24
    8a16:	f006 fa13 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    8a1a:	4620      	mov	r0, r4
    8a1c:	b002      	add	sp, #8
    8a1e:	bd10      	pop	{r4, pc}

00008a20 <std::moneypunct<char, true>::do_grouping() const>:
    8a20:	b513      	push	{r0, r1, r4, lr}
    8a22:	4604      	mov	r4, r0
    8a24:	688b      	ldr	r3, [r1, #8]
    8a26:	aa01      	add	r2, sp, #4
    8a28:	6899      	ldr	r1, [r3, #8]
    8a2a:	f006 fa09 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    8a2e:	4620      	mov	r0, r4
    8a30:	b002      	add	sp, #8
    8a32:	bd10      	pop	{r4, pc}

00008a34 <std::moneypunct<char, true>::do_curr_symbol() const>:
    8a34:	b513      	push	{r0, r1, r4, lr}
    8a36:	4604      	mov	r4, r0
    8a38:	688b      	ldr	r3, [r1, #8]
    8a3a:	aa01      	add	r2, sp, #4
    8a3c:	6959      	ldr	r1, [r3, #20]
    8a3e:	f006 f9ff 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    8a42:	4620      	mov	r0, r4
    8a44:	b002      	add	sp, #8
    8a46:	bd10      	pop	{r4, pc}

00008a48 <std::moneypunct<char, true>::do_positive_sign() const>:
    8a48:	b513      	push	{r0, r1, r4, lr}
    8a4a:	4604      	mov	r4, r0
    8a4c:	688b      	ldr	r3, [r1, #8]
    8a4e:	aa01      	add	r2, sp, #4
    8a50:	69d9      	ldr	r1, [r3, #28]
    8a52:	f006 f9f5 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    8a56:	4620      	mov	r0, r4
    8a58:	b002      	add	sp, #8
    8a5a:	bd10      	pop	{r4, pc}

00008a5c <std::moneypunct<char, true>::do_negative_sign() const>:
    8a5c:	b513      	push	{r0, r1, r4, lr}
    8a5e:	4604      	mov	r4, r0
    8a60:	688b      	ldr	r3, [r1, #8]
    8a62:	aa01      	add	r2, sp, #4
    8a64:	6a59      	ldr	r1, [r3, #36]	; 0x24
    8a66:	f006 f9eb 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    8a6a:	4620      	mov	r0, r4
    8a6c:	b002      	add	sp, #8
    8a6e:	bd10      	pop	{r4, pc}

00008a70 <std::numpunct<char>::do_grouping() const>:
    8a70:	b513      	push	{r0, r1, r4, lr}
    8a72:	4604      	mov	r4, r0
    8a74:	688b      	ldr	r3, [r1, #8]
    8a76:	aa01      	add	r2, sp, #4
    8a78:	6899      	ldr	r1, [r3, #8]
    8a7a:	f006 f9e1 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    8a7e:	4620      	mov	r0, r4
    8a80:	b002      	add	sp, #8
    8a82:	bd10      	pop	{r4, pc}

00008a84 <std::numpunct<char>::do_truename() const>:
    8a84:	b513      	push	{r0, r1, r4, lr}
    8a86:	4604      	mov	r4, r0
    8a88:	688b      	ldr	r3, [r1, #8]
    8a8a:	aa01      	add	r2, sp, #4
    8a8c:	6959      	ldr	r1, [r3, #20]
    8a8e:	f006 f9d7 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    8a92:	4620      	mov	r0, r4
    8a94:	b002      	add	sp, #8
    8a96:	bd10      	pop	{r4, pc}

00008a98 <std::numpunct<char>::do_falsename() const>:
    8a98:	b513      	push	{r0, r1, r4, lr}
    8a9a:	4604      	mov	r4, r0
    8a9c:	688b      	ldr	r3, [r1, #8]
    8a9e:	aa01      	add	r2, sp, #4
    8aa0:	69d9      	ldr	r1, [r3, #28]
    8aa2:	f006 f9cd 	bl	ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>
    8aa6:	4620      	mov	r0, r4
    8aa8:	b002      	add	sp, #8
    8aaa:	bd10      	pop	{r4, pc}

00008aac <std::__moneypunct_cache<char, false>::~__moneypunct_cache()>:
    8aac:	4b0d      	ldr	r3, [pc, #52]	; (8ae4 <std::__moneypunct_cache<char, false>::~__moneypunct_cache()+0x38>)
    8aae:	b510      	push	{r4, lr}
    8ab0:	6003      	str	r3, [r0, #0]
    8ab2:	f890 3043 	ldrb.w	r3, [r0, #67]	; 0x43
    8ab6:	4604      	mov	r4, r0
    8ab8:	b17b      	cbz	r3, 8ada <std::__moneypunct_cache<char, false>::~__moneypunct_cache()+0x2e>
    8aba:	6880      	ldr	r0, [r0, #8]
    8abc:	b108      	cbz	r0, 8ac2 <std::__moneypunct_cache<char, false>::~__moneypunct_cache()+0x16>
    8abe:	f7f9 fd36 	bl	252e <operator delete[](void*)>
    8ac2:	6960      	ldr	r0, [r4, #20]
    8ac4:	b108      	cbz	r0, 8aca <std::__moneypunct_cache<char, false>::~__moneypunct_cache()+0x1e>
    8ac6:	f7f9 fd32 	bl	252e <operator delete[](void*)>
    8aca:	69e0      	ldr	r0, [r4, #28]
    8acc:	b108      	cbz	r0, 8ad2 <std::__moneypunct_cache<char, false>::~__moneypunct_cache()+0x26>
    8ace:	f7f9 fd2e 	bl	252e <operator delete[](void*)>
    8ad2:	6a60      	ldr	r0, [r4, #36]	; 0x24
    8ad4:	b108      	cbz	r0, 8ada <std::__moneypunct_cache<char, false>::~__moneypunct_cache()+0x2e>
    8ad6:	f7f9 fd2a 	bl	252e <operator delete[](void*)>
    8ada:	4620      	mov	r0, r4
    8adc:	f007 fab0 	bl	10040 <std::locale::facet::~facet()>
    8ae0:	4620      	mov	r0, r4
    8ae2:	bd10      	pop	{r4, pc}
    8ae4:	0001b910 	.word	0x0001b910

00008ae8 <std::__moneypunct_cache<char, true>::~__moneypunct_cache()>:
    8ae8:	4b0d      	ldr	r3, [pc, #52]	; (8b20 <std::__moneypunct_cache<char, true>::~__moneypunct_cache()+0x38>)
    8aea:	b510      	push	{r4, lr}
    8aec:	6003      	str	r3, [r0, #0]
    8aee:	f890 3043 	ldrb.w	r3, [r0, #67]	; 0x43
    8af2:	4604      	mov	r4, r0
    8af4:	b17b      	cbz	r3, 8b16 <std::__moneypunct_cache<char, true>::~__moneypunct_cache()+0x2e>
    8af6:	6880      	ldr	r0, [r0, #8]
    8af8:	b108      	cbz	r0, 8afe <std::__moneypunct_cache<char, true>::~__moneypunct_cache()+0x16>
    8afa:	f7f9 fd18 	bl	252e <operator delete[](void*)>
    8afe:	6960      	ldr	r0, [r4, #20]
    8b00:	b108      	cbz	r0, 8b06 <std::__moneypunct_cache<char, true>::~__moneypunct_cache()+0x1e>
    8b02:	f7f9 fd14 	bl	252e <operator delete[](void*)>
    8b06:	69e0      	ldr	r0, [r4, #28]
    8b08:	b108      	cbz	r0, 8b0e <std::__moneypunct_cache<char, true>::~__moneypunct_cache()+0x26>
    8b0a:	f7f9 fd10 	bl	252e <operator delete[](void*)>
    8b0e:	6a60      	ldr	r0, [r4, #36]	; 0x24
    8b10:	b108      	cbz	r0, 8b16 <std::__moneypunct_cache<char, true>::~__moneypunct_cache()+0x2e>
    8b12:	f7f9 fd0c 	bl	252e <operator delete[](void*)>
    8b16:	4620      	mov	r0, r4
    8b18:	f007 fa92 	bl	10040 <std::locale::facet::~facet()>
    8b1c:	4620      	mov	r0, r4
    8b1e:	bd10      	pop	{r4, pc}
    8b20:	0001b920 	.word	0x0001b920

00008b24 <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()>:
    8b24:	b510      	push	{r4, lr}
    8b26:	4604      	mov	r4, r0
    8b28:	4b02      	ldr	r3, [pc, #8]	; (8b34 <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()+0x10>)
    8b2a:	6003      	str	r3, [r0, #0]
    8b2c:	f007 fa88 	bl	10040 <std::locale::facet::~facet()>
    8b30:	4620      	mov	r0, r4
    8b32:	bd10      	pop	{r4, pc}
    8b34:	0001b8a0 	.word	0x0001b8a0

00008b38 <std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()>:
    8b38:	b510      	push	{r4, lr}
    8b3a:	4604      	mov	r4, r0
    8b3c:	4b02      	ldr	r3, [pc, #8]	; (8b48 <std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()+0x10>)
    8b3e:	6003      	str	r3, [r0, #0]
    8b40:	f007 fa7e 	bl	10040 <std::locale::facet::~facet()>
    8b44:	4620      	mov	r0, r4
    8b46:	bd10      	pop	{r4, pc}
    8b48:	0001b8b8 	.word	0x0001b8b8

00008b4c <std::__numpunct_cache<char>::~__numpunct_cache()>:
    8b4c:	4b0b      	ldr	r3, [pc, #44]	; (8b7c <std::__numpunct_cache<char>::~__numpunct_cache()+0x30>)
    8b4e:	b510      	push	{r4, lr}
    8b50:	6003      	str	r3, [r0, #0]
    8b52:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
    8b56:	4604      	mov	r4, r0
    8b58:	b15b      	cbz	r3, 8b72 <std::__numpunct_cache<char>::~__numpunct_cache()+0x26>
    8b5a:	6880      	ldr	r0, [r0, #8]
    8b5c:	b108      	cbz	r0, 8b62 <std::__numpunct_cache<char>::~__numpunct_cache()+0x16>
    8b5e:	f7f9 fce6 	bl	252e <operator delete[](void*)>
    8b62:	6960      	ldr	r0, [r4, #20]
    8b64:	b108      	cbz	r0, 8b6a <std::__numpunct_cache<char>::~__numpunct_cache()+0x1e>
    8b66:	f7f9 fce2 	bl	252e <operator delete[](void*)>
    8b6a:	69e0      	ldr	r0, [r4, #28]
    8b6c:	b108      	cbz	r0, 8b72 <std::__numpunct_cache<char>::~__numpunct_cache()+0x26>
    8b6e:	f7f9 fcde 	bl	252e <operator delete[](void*)>
    8b72:	4620      	mov	r0, r4
    8b74:	f007 fa64 	bl	10040 <std::locale::facet::~facet()>
    8b78:	4620      	mov	r0, r4
    8b7a:	bd10      	pop	{r4, pc}
    8b7c:	0001b930 	.word	0x0001b930

00008b80 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()>:
    8b80:	b510      	push	{r4, lr}
    8b82:	4604      	mov	r4, r0
    8b84:	4b02      	ldr	r3, [pc, #8]	; (8b90 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()+0x10>)
    8b86:	6003      	str	r3, [r0, #0]
    8b88:	f007 fa5a 	bl	10040 <std::locale::facet::~facet()>
    8b8c:	4620      	mov	r0, r4
    8b8e:	bd10      	pop	{r4, pc}
    8b90:	0001b750 	.word	0x0001b750

00008b94 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()>:
    8b94:	b510      	push	{r4, lr}
    8b96:	4604      	mov	r4, r0
    8b98:	4b02      	ldr	r3, [pc, #8]	; (8ba4 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()+0x10>)
    8b9a:	6003      	str	r3, [r0, #0]
    8b9c:	f007 fa50 	bl	10040 <std::locale::facet::~facet()>
    8ba0:	4620      	mov	r0, r4
    8ba2:	bd10      	pop	{r4, pc}
    8ba4:	0001b790 	.word	0x0001b790

00008ba8 <std::__timepunct_cache<char>::~__timepunct_cache()>:
    8ba8:	b510      	push	{r4, lr}
    8baa:	4604      	mov	r4, r0
    8bac:	4b02      	ldr	r3, [pc, #8]	; (8bb8 <std::__timepunct_cache<char>::~__timepunct_cache()+0x10>)
    8bae:	6003      	str	r3, [r0, #0]
    8bb0:	f007 fa46 	bl	10040 <std::locale::facet::~facet()>
    8bb4:	4620      	mov	r0, r4
    8bb6:	bd10      	pop	{r4, pc}
    8bb8:	0001b7c0 	.word	0x0001b7c0

00008bbc <std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()>:
    8bbc:	b510      	push	{r4, lr}
    8bbe:	4604      	mov	r4, r0
    8bc0:	4b02      	ldr	r3, [pc, #8]	; (8bcc <std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()+0x10>)
    8bc2:	6003      	str	r3, [r0, #0]
    8bc4:	f007 fa3c 	bl	10040 <std::locale::facet::~facet()>
    8bc8:	4620      	mov	r0, r4
    8bca:	bd10      	pop	{r4, pc}
    8bcc:	0001b8d0 	.word	0x0001b8d0

00008bd0 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()>:
    8bd0:	b510      	push	{r4, lr}
    8bd2:	4604      	mov	r4, r0
    8bd4:	4b02      	ldr	r3, [pc, #8]	; (8be0 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()+0x10>)
    8bd6:	6003      	str	r3, [r0, #0]
    8bd8:	f007 fa32 	bl	10040 <std::locale::facet::~facet()>
    8bdc:	4620      	mov	r0, r4
    8bde:	bd10      	pop	{r4, pc}
    8be0:	0001b8e8 	.word	0x0001b8e8

00008be4 <std::__moneypunct_cache<char, false>::~__moneypunct_cache()>:
    8be4:	b510      	push	{r4, lr}
    8be6:	4604      	mov	r4, r0
    8be8:	f7ff ff60 	bl	8aac <std::__moneypunct_cache<char, false>::~__moneypunct_cache()>
    8bec:	4620      	mov	r0, r4
    8bee:	f7f9 fc8e 	bl	250e <operator delete(void*)>
    8bf2:	4620      	mov	r0, r4
    8bf4:	bd10      	pop	{r4, pc}

00008bf6 <std::__moneypunct_cache<char, true>::~__moneypunct_cache()>:
    8bf6:	b510      	push	{r4, lr}
    8bf8:	4604      	mov	r4, r0
    8bfa:	f7ff ff75 	bl	8ae8 <std::__moneypunct_cache<char, true>::~__moneypunct_cache()>
    8bfe:	4620      	mov	r0, r4
    8c00:	f7f9 fc85 	bl	250e <operator delete(void*)>
    8c04:	4620      	mov	r0, r4
    8c06:	bd10      	pop	{r4, pc}

00008c08 <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()>:
    8c08:	b510      	push	{r4, lr}
    8c0a:	4604      	mov	r4, r0
    8c0c:	f7ff ff8a 	bl	8b24 <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()>
    8c10:	4620      	mov	r0, r4
    8c12:	f7f9 fc7c 	bl	250e <operator delete(void*)>
    8c16:	4620      	mov	r0, r4
    8c18:	bd10      	pop	{r4, pc}

00008c1a <std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()>:
    8c1a:	b510      	push	{r4, lr}
    8c1c:	4604      	mov	r4, r0
    8c1e:	f7ff ff8b 	bl	8b38 <std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()>
    8c22:	4620      	mov	r0, r4
    8c24:	f7f9 fc73 	bl	250e <operator delete(void*)>
    8c28:	4620      	mov	r0, r4
    8c2a:	bd10      	pop	{r4, pc}

00008c2c <std::__numpunct_cache<char>::~__numpunct_cache()>:
    8c2c:	b510      	push	{r4, lr}
    8c2e:	4604      	mov	r4, r0
    8c30:	f7ff ff8c 	bl	8b4c <std::__numpunct_cache<char>::~__numpunct_cache()>
    8c34:	4620      	mov	r0, r4
    8c36:	f7f9 fc6a 	bl	250e <operator delete(void*)>
    8c3a:	4620      	mov	r0, r4
    8c3c:	bd10      	pop	{r4, pc}

00008c3e <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()>:
    8c3e:	b510      	push	{r4, lr}
    8c40:	4604      	mov	r4, r0
    8c42:	f7ff ff9d 	bl	8b80 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()>
    8c46:	4620      	mov	r0, r4
    8c48:	f7f9 fc61 	bl	250e <operator delete(void*)>
    8c4c:	4620      	mov	r0, r4
    8c4e:	bd10      	pop	{r4, pc}

00008c50 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()>:
    8c50:	b510      	push	{r4, lr}
    8c52:	4604      	mov	r4, r0
    8c54:	f7ff ff9e 	bl	8b94 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()>
    8c58:	4620      	mov	r0, r4
    8c5a:	f7f9 fc58 	bl	250e <operator delete(void*)>
    8c5e:	4620      	mov	r0, r4
    8c60:	bd10      	pop	{r4, pc}

00008c62 <std::__timepunct_cache<char>::~__timepunct_cache()>:
    8c62:	b510      	push	{r4, lr}
    8c64:	4604      	mov	r4, r0
    8c66:	f7ff ff9f 	bl	8ba8 <std::__timepunct_cache<char>::~__timepunct_cache()>
    8c6a:	4620      	mov	r0, r4
    8c6c:	f7f9 fc4f 	bl	250e <operator delete(void*)>
    8c70:	4620      	mov	r0, r4
    8c72:	bd10      	pop	{r4, pc}

00008c74 <std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()>:
    8c74:	b510      	push	{r4, lr}
    8c76:	4604      	mov	r4, r0
    8c78:	f7ff ffa0 	bl	8bbc <std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()>
    8c7c:	4620      	mov	r0, r4
    8c7e:	f7f9 fc46 	bl	250e <operator delete(void*)>
    8c82:	4620      	mov	r0, r4
    8c84:	bd10      	pop	{r4, pc}

00008c86 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()>:
    8c86:	b510      	push	{r4, lr}
    8c88:	4604      	mov	r4, r0
    8c8a:	f7ff ffa1 	bl	8bd0 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()>
    8c8e:	4620      	mov	r0, r4
    8c90:	f7f9 fc3d 	bl	250e <operator delete(void*)>
    8c94:	4620      	mov	r0, r4
    8c96:	bd10      	pop	{r4, pc}

00008c98 <std::messages<char>::~messages()>:
    8c98:	b510      	push	{r4, lr}
    8c9a:	4604      	mov	r4, r0
    8c9c:	4b04      	ldr	r3, [pc, #16]	; (8cb0 <std::messages<char>::~messages()+0x18>)
    8c9e:	f840 3b08 	str.w	r3, [r0], #8
    8ca2:	f007 fc11 	bl	104c8 <std::locale::facet::_S_destroy_c_locale(int*&)>
    8ca6:	4620      	mov	r0, r4
    8ca8:	f007 f9ca 	bl	10040 <std::locale::facet::~facet()>
    8cac:	4620      	mov	r0, r4
    8cae:	bd10      	pop	{r4, pc}
    8cb0:	0001b850 	.word	0x0001b850

00008cb4 <std::messages<char>::~messages()>:
    8cb4:	b510      	push	{r4, lr}
    8cb6:	4604      	mov	r4, r0
    8cb8:	f7ff ffee 	bl	8c98 <std::messages<char>::~messages()>
    8cbc:	4620      	mov	r0, r4
    8cbe:	f7f9 fc26 	bl	250e <operator delete(void*)>
    8cc2:	4620      	mov	r0, r4
    8cc4:	bd10      	pop	{r4, pc}
	...

00008cc8 <std::collate<char>::~collate()>:
    8cc8:	b510      	push	{r4, lr}
    8cca:	4604      	mov	r4, r0
    8ccc:	4b04      	ldr	r3, [pc, #16]	; (8ce0 <std::collate<char>::~collate()+0x18>)
    8cce:	f840 3b08 	str.w	r3, [r0], #8
    8cd2:	f007 fbf9 	bl	104c8 <std::locale::facet::_S_destroy_c_locale(int*&)>
    8cd6:	4620      	mov	r0, r4
    8cd8:	f007 f9b2 	bl	10040 <std::locale::facet::~facet()>
    8cdc:	4620      	mov	r0, r4
    8cde:	bd10      	pop	{r4, pc}
    8ce0:	0001b708 	.word	0x0001b708

00008ce4 <std::collate<char>::~collate()>:
    8ce4:	b510      	push	{r4, lr}
    8ce6:	4604      	mov	r4, r0
    8ce8:	f7ff ffee 	bl	8cc8 <std::collate<char>::~collate()>
    8cec:	4620      	mov	r0, r4
    8cee:	f7f9 fc0e 	bl	250e <operator delete(void*)>
    8cf2:	4620      	mov	r0, r4
    8cf4:	bd10      	pop	{r4, pc}
	...

00008cf8 <std::__timepunct<char>::~__timepunct()>:
    8cf8:	b538      	push	{r3, r4, r5, lr}
    8cfa:	4b0d      	ldr	r3, [pc, #52]	; (8d30 <std::__timepunct<char>::~__timepunct()+0x38>)
    8cfc:	6905      	ldr	r5, [r0, #16]
    8cfe:	6003      	str	r3, [r0, #0]
    8d00:	4604      	mov	r4, r0
    8d02:	f007 f9c3 	bl	1008c <std::locale::facet::_S_get_c_name()>
    8d06:	4285      	cmp	r5, r0
    8d08:	d003      	beq.n	8d12 <std::__timepunct<char>::~__timepunct()+0x1a>
    8d0a:	b115      	cbz	r5, 8d12 <std::__timepunct<char>::~__timepunct()+0x1a>
    8d0c:	4628      	mov	r0, r5
    8d0e:	f7f9 fc0e 	bl	252e <operator delete[](void*)>
    8d12:	68a0      	ldr	r0, [r4, #8]
    8d14:	b110      	cbz	r0, 8d1c <std::__timepunct<char>::~__timepunct()+0x24>
    8d16:	6803      	ldr	r3, [r0, #0]
    8d18:	685b      	ldr	r3, [r3, #4]
    8d1a:	4798      	blx	r3
    8d1c:	f104 000c 	add.w	r0, r4, #12
    8d20:	f007 fbd2 	bl	104c8 <std::locale::facet::_S_destroy_c_locale(int*&)>
    8d24:	4620      	mov	r0, r4
    8d26:	f007 f98b 	bl	10040 <std::locale::facet::~facet()>
    8d2a:	4620      	mov	r0, r4
    8d2c:	bd38      	pop	{r3, r4, r5, pc}
    8d2e:	bf00      	nop
    8d30:	0001b7d0 	.word	0x0001b7d0

00008d34 <std::__timepunct<char>::~__timepunct()>:
    8d34:	b510      	push	{r4, lr}
    8d36:	4604      	mov	r4, r0
    8d38:	f7ff ffde 	bl	8cf8 <std::__timepunct<char>::~__timepunct()>
    8d3c:	4620      	mov	r0, r4
    8d3e:	f7f9 fbe6 	bl	250e <operator delete(void*)>
    8d42:	4620      	mov	r0, r4
    8d44:	bd10      	pop	{r4, pc}

00008d46 <std::collate<char>::do_compare(char const*, char const*, char const*, char const*) const>:
    8d46:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    8d4a:	461c      	mov	r4, r3
    8d4c:	4680      	mov	r8, r0
    8d4e:	ab03      	add	r3, sp, #12
    8d50:	a802      	add	r0, sp, #8
    8d52:	f006 f88a 	bl	ee6a <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char const*>(char const*, char const*, std::allocator<char> const&)>
    8d56:	4621      	mov	r1, r4
    8d58:	a803      	add	r0, sp, #12
    8d5a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8d5c:	ab01      	add	r3, sp, #4
    8d5e:	f006 f884 	bl	ee6a <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char const*>(char const*, char const*, std::allocator<char> const&)>
    8d62:	9d02      	ldr	r5, [sp, #8]
    8d64:	9c03      	ldr	r4, [sp, #12]
    8d66:	f855 7c0c 	ldr.w	r7, [r5, #-12]
    8d6a:	f854 6c0c 	ldr.w	r6, [r4, #-12]
    8d6e:	442f      	add	r7, r5
    8d70:	4426      	add	r6, r4
    8d72:	4640      	mov	r0, r8
    8d74:	4629      	mov	r1, r5
    8d76:	4622      	mov	r2, r4
    8d78:	f005 f90a 	bl	df90 <std::collate<char>::_M_compare(char const*, char const*) const>
    8d7c:	b998      	cbnz	r0, 8da6 <std::collate<char>::do_compare(char const*, char const*, char const*, char const*) const+0x60>
    8d7e:	4628      	mov	r0, r5
    8d80:	f00c fa0a 	bl	15198 <strlen>
    8d84:	4405      	add	r5, r0
    8d86:	4620      	mov	r0, r4
    8d88:	f00c fa06 	bl	15198 <strlen>
    8d8c:	42bd      	cmp	r5, r7
    8d8e:	4420      	add	r0, r4
    8d90:	d104      	bne.n	8d9c <std::collate<char>::do_compare(char const*, char const*, char const*, char const*) const+0x56>
    8d92:	1b84      	subs	r4, r0, r6
    8d94:	bf18      	it	ne
    8d96:	f04f 34ff 	movne.w	r4, #4294967295
    8d9a:	e007      	b.n	8dac <std::collate<char>::do_compare(char const*, char const*, char const*, char const*) const+0x66>
    8d9c:	42b0      	cmp	r0, r6
    8d9e:	d004      	beq.n	8daa <std::collate<char>::do_compare(char const*, char const*, char const*, char const*) const+0x64>
    8da0:	3501      	adds	r5, #1
    8da2:	1c44      	adds	r4, r0, #1
    8da4:	e7e5      	b.n	8d72 <std::collate<char>::do_compare(char const*, char const*, char const*, char const*) const+0x2c>
    8da6:	4604      	mov	r4, r0
    8da8:	e000      	b.n	8dac <std::collate<char>::do_compare(char const*, char const*, char const*, char const*) const+0x66>
    8daa:	2401      	movs	r4, #1
    8dac:	a803      	add	r0, sp, #12
    8dae:	f005 fdb3 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    8db2:	a802      	add	r0, sp, #8
    8db4:	f005 fdb0 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    8db8:	4620      	mov	r0, r4
    8dba:	b004      	add	sp, #16
    8dbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00008dc0 <std::collate<char>::do_transform(char const*, char const*) const>:
    8dc0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    8dc4:	461c      	mov	r4, r3
    8dc6:	4616      	mov	r6, r2
    8dc8:	4b23      	ldr	r3, [pc, #140]	; (8e58 <std::collate<char>::do_transform(char const*, char const*) const+0x98>)
    8dca:	4607      	mov	r7, r0
    8dcc:	6003      	str	r3, [r0, #0]
    8dce:	4689      	mov	r9, r1
    8dd0:	466b      	mov	r3, sp
    8dd2:	4611      	mov	r1, r2
    8dd4:	a801      	add	r0, sp, #4
    8dd6:	4622      	mov	r2, r4
    8dd8:	f006 f847 	bl	ee6a <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char const*>(char const*, char const*, std::allocator<char> const&)>
    8ddc:	9d01      	ldr	r5, [sp, #4]
    8dde:	1ba4      	subs	r4, r4, r6
    8de0:	f855 3c0c 	ldr.w	r3, [r5, #-12]
    8de4:	0064      	lsls	r4, r4, #1
    8de6:	4620      	mov	r0, r4
    8de8:	eb05 0803 	add.w	r8, r5, r3
    8dec:	f7f9 fba1 	bl	2532 <operator new[](unsigned int)>
    8df0:	4606      	mov	r6, r0
    8df2:	462a      	mov	r2, r5
    8df4:	4648      	mov	r0, r9
    8df6:	4631      	mov	r1, r6
    8df8:	4623      	mov	r3, r4
    8dfa:	f005 f8d5 	bl	dfa8 <std::collate<char>::_M_transform(char*, char const*, unsigned int) const>
    8dfe:	42a0      	cmp	r0, r4
    8e00:	4602      	mov	r2, r0
    8e02:	d30e      	bcc.n	8e22 <std::collate<char>::do_transform(char const*, char const*) const+0x62>
    8e04:	1c44      	adds	r4, r0, #1
    8e06:	4630      	mov	r0, r6
    8e08:	f7f9 fb91 	bl	252e <operator delete[](void*)>
    8e0c:	4620      	mov	r0, r4
    8e0e:	f7f9 fb90 	bl	2532 <operator new[](unsigned int)>
    8e12:	4606      	mov	r6, r0
    8e14:	462a      	mov	r2, r5
    8e16:	4648      	mov	r0, r9
    8e18:	4631      	mov	r1, r6
    8e1a:	4623      	mov	r3, r4
    8e1c:	f005 f8c4 	bl	dfa8 <std::collate<char>::_M_transform(char*, char const*, unsigned int) const>
    8e20:	4602      	mov	r2, r0
    8e22:	4631      	mov	r1, r6
    8e24:	4638      	mov	r0, r7
    8e26:	f005 ff1f 	bl	ec68 <std::string::append(char const*, unsigned int)>
    8e2a:	4628      	mov	r0, r5
    8e2c:	f00c f9b4 	bl	15198 <strlen>
    8e30:	4428      	add	r0, r5
    8e32:	4540      	cmp	r0, r8
    8e34:	d005      	beq.n	8e42 <std::collate<char>::do_transform(char const*, char const*) const+0x82>
    8e36:	1c45      	adds	r5, r0, #1
    8e38:	2100      	movs	r1, #0
    8e3a:	4638      	mov	r0, r7
    8e3c:	f005 ffa5 	bl	ed8a <std::string::push_back(char)>
    8e40:	e7d7      	b.n	8df2 <std::collate<char>::do_transform(char const*, char const*) const+0x32>
    8e42:	4630      	mov	r0, r6
    8e44:	f7f9 fb73 	bl	252e <operator delete[](void*)>
    8e48:	a801      	add	r0, sp, #4
    8e4a:	f005 fd65 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    8e4e:	4638      	mov	r0, r7
    8e50:	b003      	add	sp, #12
    8e52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    8e56:	bf00      	nop
    8e58:	10000c70 	.word	0x10000c70

00008e5c <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]>:
    8e5c:	280a      	cmp	r0, #10
    8e5e:	d808      	bhi.n	8e72 <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]+0x16>
    8e60:	292f      	cmp	r1, #47	; 0x2f
    8e62:	d918      	bls.n	8e96 <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]+0x3a>
    8e64:	3030      	adds	r0, #48	; 0x30
    8e66:	b2c0      	uxtb	r0, r0
    8e68:	4281      	cmp	r1, r0
    8e6a:	d214      	bcs.n	8e96 <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]+0x3a>
    8e6c:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
    8e70:	4770      	bx	lr
    8e72:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    8e76:	2b09      	cmp	r3, #9
    8e78:	d9f8      	bls.n	8e6c <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]+0x10>
    8e7a:	f1a1 0361 	sub.w	r3, r1, #97	; 0x61
    8e7e:	2b05      	cmp	r3, #5
    8e80:	d802      	bhi.n	8e88 <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]+0x2c>
    8e82:	f1a1 0057 	sub.w	r0, r1, #87	; 0x57
    8e86:	4770      	bx	lr
    8e88:	f1a1 0341 	sub.w	r3, r1, #65	; 0x41
    8e8c:	2b05      	cmp	r3, #5
    8e8e:	d802      	bhi.n	8e96 <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]+0x3a>
    8e90:	f1a1 0037 	sub.w	r0, r1, #55	; 0x37
    8e94:	4770      	bx	lr
    8e96:	f04f 30ff 	mov.w	r0, #4294967295
    8e9a:	4770      	bx	lr

00008e9c <std::ctype<char>::widen(char) const>:
    8e9c:	b570      	push	{r4, r5, r6, lr}
    8e9e:	7f03      	ldrb	r3, [r0, #28]
    8ea0:	4605      	mov	r5, r0
    8ea2:	460c      	mov	r4, r1
    8ea4:	b943      	cbnz	r3, 8eb8 <std::ctype<char>::widen(char) const+0x1c>
    8ea6:	f006 ffd0 	bl	fe4a <std::ctype<char>::_M_widen_init() const>
    8eaa:	682b      	ldr	r3, [r5, #0]
    8eac:	4628      	mov	r0, r5
    8eae:	4621      	mov	r1, r4
    8eb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    8eb4:	699b      	ldr	r3, [r3, #24]
    8eb6:	4718      	bx	r3
    8eb8:	4404      	add	r4, r0
    8eba:	7f60      	ldrb	r0, [r4, #29]
    8ebc:	bd70      	pop	{r4, r5, r6, pc}

00008ebe <std::ctype<char>::widen(char const*, char const*, char*) const>:
    8ebe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    8ec2:	461e      	mov	r6, r3
    8ec4:	7f03      	ldrb	r3, [r0, #28]
    8ec6:	4605      	mov	r5, r0
    8ec8:	2b01      	cmp	r3, #1
    8eca:	460f      	mov	r7, r1
    8ecc:	4614      	mov	r4, r2
    8ece:	d00d      	beq.n	8eec <std::ctype<char>::widen(char const*, char const*, char*) const+0x2e>
    8ed0:	b90b      	cbnz	r3, 8ed6 <std::ctype<char>::widen(char const*, char const*, char*) const+0x18>
    8ed2:	f006 ffba 	bl	fe4a <std::ctype<char>::_M_widen_init() const>
    8ed6:	682b      	ldr	r3, [r5, #0]
    8ed8:	4628      	mov	r0, r5
    8eda:	f8d3 e01c 	ldr.w	lr, [r3, #28]
    8ede:	4639      	mov	r1, r7
    8ee0:	4622      	mov	r2, r4
    8ee2:	4633      	mov	r3, r6
    8ee4:	46f4      	mov	r12, lr
    8ee6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    8eea:	4760      	bx	r12
    8eec:	4630      	mov	r0, r6
    8eee:	1a52      	subs	r2, r2, r1
    8ef0:	f00a fbcc 	bl	1368c <memcpy>
    8ef4:	4620      	mov	r0, r4
    8ef6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00008efa <std::ctype<char>::narrow(char, char) const>:
    8efa:	b570      	push	{r4, r5, r6, lr}
    8efc:	1844      	adds	r4, r0, r1
    8efe:	f894 311d 	ldrb.w	r3, [r4, #285]	; 0x11d
    8f02:	4616      	mov	r6, r2
    8f04:	b93b      	cbnz	r3, 8f16 <std::ctype<char>::narrow(char, char) const+0x1c>
    8f06:	6803      	ldr	r3, [r0, #0]
    8f08:	6a1b      	ldr	r3, [r3, #32]
    8f0a:	4798      	blx	r3
    8f0c:	4603      	mov	r3, r0
    8f0e:	42b0      	cmp	r0, r6
    8f10:	bf18      	it	ne
    8f12:	f884 011d 	strbne.w	r0, [r4, #285]	; 0x11d
    8f16:	4618      	mov	r0, r3
    8f18:	bd70      	pop	{r4, r5, r6, pc}
	...

00008f1c <std::moneypunct<char, false>::moneypunct(std::__moneypunct_cache<char, false>*, unsigned int)>:
    8f1c:	b510      	push	{r4, lr}
    8f1e:	4604      	mov	r4, r0
    8f20:	3200      	adds	r2, #0
    8f22:	4b06      	ldr	r3, [pc, #24]	; (8f3c <std::moneypunct<char, false>::moneypunct(std::__moneypunct_cache<char, false>*, unsigned int)+0x20>)
    8f24:	bf18      	it	ne
    8f26:	2201      	movne	r2, #1
    8f28:	6081      	str	r1, [r0, #8]
    8f2a:	2100      	movs	r1, #0
    8f2c:	6042      	str	r2, [r0, #4]
    8f2e:	6003      	str	r3, [r0, #0]
    8f30:	460a      	mov	r2, r1
    8f32:	f007 fb13 	bl	1055c <std::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)>
    8f36:	4620      	mov	r0, r4
    8f38:	bd10      	pop	{r4, pc}
    8f3a:	bf00      	nop
    8f3c:	0001b818 	.word	0x0001b818

00008f40 <std::moneypunct<char, false>::decimal_point() const>:
    8f40:	6803      	ldr	r3, [r0, #0]
    8f42:	689b      	ldr	r3, [r3, #8]
    8f44:	4718      	bx	r3

00008f46 <std::moneypunct<char, false>::thousands_sep() const>:
    8f46:	6803      	ldr	r3, [r0, #0]
    8f48:	68db      	ldr	r3, [r3, #12]
    8f4a:	4718      	bx	r3

00008f4c <std::moneypunct<char, false>::grouping() const>:
    8f4c:	b510      	push	{r4, lr}
    8f4e:	4604      	mov	r4, r0
    8f50:	680b      	ldr	r3, [r1, #0]
    8f52:	691b      	ldr	r3, [r3, #16]
    8f54:	4798      	blx	r3
    8f56:	4620      	mov	r0, r4
    8f58:	bd10      	pop	{r4, pc}

00008f5a <std::moneypunct<char, false>::curr_symbol() const>:
    8f5a:	b510      	push	{r4, lr}
    8f5c:	4604      	mov	r4, r0
    8f5e:	680b      	ldr	r3, [r1, #0]
    8f60:	695b      	ldr	r3, [r3, #20]
    8f62:	4798      	blx	r3
    8f64:	4620      	mov	r0, r4
    8f66:	bd10      	pop	{r4, pc}

00008f68 <std::moneypunct<char, false>::positive_sign() const>:
    8f68:	b510      	push	{r4, lr}
    8f6a:	4604      	mov	r4, r0
    8f6c:	680b      	ldr	r3, [r1, #0]
    8f6e:	699b      	ldr	r3, [r3, #24]
    8f70:	4798      	blx	r3
    8f72:	4620      	mov	r0, r4
    8f74:	bd10      	pop	{r4, pc}

00008f76 <std::moneypunct<char, false>::negative_sign() const>:
    8f76:	b510      	push	{r4, lr}
    8f78:	4604      	mov	r4, r0
    8f7a:	680b      	ldr	r3, [r1, #0]
    8f7c:	69db      	ldr	r3, [r3, #28]
    8f7e:	4798      	blx	r3
    8f80:	4620      	mov	r0, r4
    8f82:	bd10      	pop	{r4, pc}

00008f84 <std::moneypunct<char, false>::frac_digits() const>:
    8f84:	6803      	ldr	r3, [r0, #0]
    8f86:	6a1b      	ldr	r3, [r3, #32]
    8f88:	4718      	bx	r3

00008f8a <std::moneypunct<char, false>::pos_format() const>:
    8f8a:	6803      	ldr	r3, [r0, #0]
    8f8c:	b507      	push	{r0, r1, r2, lr}
    8f8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    8f90:	4798      	blx	r3
    8f92:	4603      	mov	r3, r0
    8f94:	2000      	movs	r0, #0
    8f96:	b2da      	uxtb	r2, r3
    8f98:	f362 0007 	bfi	r0, r2, #0, #8
    8f9c:	f3c3 2207 	ubfx	r2, r3, #8, #8
    8fa0:	f362 200f 	bfi	r0, r2, #8, #8
    8fa4:	f3c3 4207 	ubfx	r2, r3, #16, #8
    8fa8:	f362 4017 	bfi	r0, r2, #16, #8
    8fac:	0e1b      	lsrs	r3, r3, #24
    8fae:	f363 601f 	bfi	r0, r3, #24, #8
    8fb2:	b003      	add	sp, #12
    8fb4:	f85d fb04 	ldr.w	pc, [sp], #4

00008fb8 <std::moneypunct<char, false>::neg_format() const>:
    8fb8:	6803      	ldr	r3, [r0, #0]
    8fba:	b507      	push	{r0, r1, r2, lr}
    8fbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    8fbe:	4798      	blx	r3
    8fc0:	4603      	mov	r3, r0
    8fc2:	2000      	movs	r0, #0
    8fc4:	b2da      	uxtb	r2, r3
    8fc6:	f362 0007 	bfi	r0, r2, #0, #8
    8fca:	f3c3 2207 	ubfx	r2, r3, #8, #8
    8fce:	f362 200f 	bfi	r0, r2, #8, #8
    8fd2:	f3c3 4207 	ubfx	r2, r3, #16, #8
    8fd6:	f362 4017 	bfi	r0, r2, #16, #8
    8fda:	0e1b      	lsrs	r3, r3, #24
    8fdc:	f363 601f 	bfi	r0, r3, #24, #8
    8fe0:	b003      	add	sp, #12
    8fe2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

00008fe8 <std::moneypunct<char, true>::moneypunct(std::__moneypunct_cache<char, true>*, unsigned int)>:
    8fe8:	b510      	push	{r4, lr}
    8fea:	4604      	mov	r4, r0
    8fec:	3200      	adds	r2, #0
    8fee:	4b06      	ldr	r3, [pc, #24]	; (9008 <std::moneypunct<char, true>::moneypunct(std::__moneypunct_cache<char, true>*, unsigned int)+0x20>)
    8ff0:	bf18      	it	ne
    8ff2:	2201      	movne	r2, #1
    8ff4:	6081      	str	r1, [r0, #8]
    8ff6:	2100      	movs	r1, #0
    8ff8:	6042      	str	r2, [r0, #4]
    8ffa:	6003      	str	r3, [r0, #0]
    8ffc:	460a      	mov	r2, r1
    8ffe:	f007 fa67 	bl	104d0 <std::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)>
    9002:	4620      	mov	r0, r4
    9004:	bd10      	pop	{r4, pc}
    9006:	bf00      	nop
    9008:	0001b7e0 	.word	0x0001b7e0

0000900c <std::moneypunct<char, true>::decimal_point() const>:
    900c:	6803      	ldr	r3, [r0, #0]
    900e:	689b      	ldr	r3, [r3, #8]
    9010:	4718      	bx	r3

00009012 <std::moneypunct<char, true>::thousands_sep() const>:
    9012:	6803      	ldr	r3, [r0, #0]
    9014:	68db      	ldr	r3, [r3, #12]
    9016:	4718      	bx	r3

00009018 <std::moneypunct<char, true>::grouping() const>:
    9018:	b510      	push	{r4, lr}
    901a:	4604      	mov	r4, r0
    901c:	680b      	ldr	r3, [r1, #0]
    901e:	691b      	ldr	r3, [r3, #16]
    9020:	4798      	blx	r3
    9022:	4620      	mov	r0, r4
    9024:	bd10      	pop	{r4, pc}

00009026 <std::moneypunct<char, true>::curr_symbol() const>:
    9026:	b510      	push	{r4, lr}
    9028:	4604      	mov	r4, r0
    902a:	680b      	ldr	r3, [r1, #0]
    902c:	695b      	ldr	r3, [r3, #20]
    902e:	4798      	blx	r3
    9030:	4620      	mov	r0, r4
    9032:	bd10      	pop	{r4, pc}

00009034 <std::moneypunct<char, true>::positive_sign() const>:
    9034:	b510      	push	{r4, lr}
    9036:	4604      	mov	r4, r0
    9038:	680b      	ldr	r3, [r1, #0]
    903a:	699b      	ldr	r3, [r3, #24]
    903c:	4798      	blx	r3
    903e:	4620      	mov	r0, r4
    9040:	bd10      	pop	{r4, pc}

00009042 <std::moneypunct<char, true>::negative_sign() const>:
    9042:	b510      	push	{r4, lr}
    9044:	4604      	mov	r4, r0
    9046:	680b      	ldr	r3, [r1, #0]
    9048:	69db      	ldr	r3, [r3, #28]
    904a:	4798      	blx	r3
    904c:	4620      	mov	r0, r4
    904e:	bd10      	pop	{r4, pc}

00009050 <std::moneypunct<char, true>::frac_digits() const>:
    9050:	6803      	ldr	r3, [r0, #0]
    9052:	6a1b      	ldr	r3, [r3, #32]
    9054:	4718      	bx	r3

00009056 <std::moneypunct<char, true>::pos_format() const>:
    9056:	6803      	ldr	r3, [r0, #0]
    9058:	b507      	push	{r0, r1, r2, lr}
    905a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    905c:	4798      	blx	r3
    905e:	4603      	mov	r3, r0
    9060:	2000      	movs	r0, #0
    9062:	b2da      	uxtb	r2, r3
    9064:	f362 0007 	bfi	r0, r2, #0, #8
    9068:	f3c3 2207 	ubfx	r2, r3, #8, #8
    906c:	f362 200f 	bfi	r0, r2, #8, #8
    9070:	f3c3 4207 	ubfx	r2, r3, #16, #8
    9074:	f362 4017 	bfi	r0, r2, #16, #8
    9078:	0e1b      	lsrs	r3, r3, #24
    907a:	f363 601f 	bfi	r0, r3, #24, #8
    907e:	b003      	add	sp, #12
    9080:	f85d fb04 	ldr.w	pc, [sp], #4

00009084 <std::moneypunct<char, true>::neg_format() const>:
    9084:	6803      	ldr	r3, [r0, #0]
    9086:	b507      	push	{r0, r1, r2, lr}
    9088:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    908a:	4798      	blx	r3
    908c:	4603      	mov	r3, r0
    908e:	2000      	movs	r0, #0
    9090:	b2da      	uxtb	r2, r3
    9092:	f362 0007 	bfi	r0, r2, #0, #8
    9096:	f3c3 2207 	ubfx	r2, r3, #8, #8
    909a:	f362 200f 	bfi	r0, r2, #8, #8
    909e:	f3c3 4207 	ubfx	r2, r3, #16, #8
    90a2:	f362 4017 	bfi	r0, r2, #16, #8
    90a6:	0e1b      	lsrs	r3, r3, #24
    90a8:	f363 601f 	bfi	r0, r3, #24, #8
    90ac:	b003      	add	sp, #12
    90ae:	f85d fb04 	ldr.w	pc, [sp], #4
	...

000090b4 <std::__moneypunct_cache<char, false>::__moneypunct_cache(unsigned int)>:
    90b4:	4a0b      	ldr	r2, [pc, #44]	; (90e4 <std::__moneypunct_cache<char, false>::__moneypunct_cache(unsigned int)+0x30>)
    90b6:	3100      	adds	r1, #0
    90b8:	bf18      	it	ne
    90ba:	2101      	movne	r1, #1
    90bc:	6002      	str	r2, [r0, #0]
    90be:	2200      	movs	r2, #0
    90c0:	6041      	str	r1, [r0, #4]
    90c2:	6082      	str	r2, [r0, #8]
    90c4:	60c2      	str	r2, [r0, #12]
    90c6:	7402      	strb	r2, [r0, #16]
    90c8:	7442      	strb	r2, [r0, #17]
    90ca:	7482      	strb	r2, [r0, #18]
    90cc:	6142      	str	r2, [r0, #20]
    90ce:	6182      	str	r2, [r0, #24]
    90d0:	61c2      	str	r2, [r0, #28]
    90d2:	6202      	str	r2, [r0, #32]
    90d4:	6242      	str	r2, [r0, #36]	; 0x24
    90d6:	6282      	str	r2, [r0, #40]	; 0x28
    90d8:	62c2      	str	r2, [r0, #44]	; 0x2c
    90da:	6302      	str	r2, [r0, #48]	; 0x30
    90dc:	6342      	str	r2, [r0, #52]	; 0x34
    90de:	f880 2043 	strb.w	r2, [r0, #67]	; 0x43
    90e2:	4770      	bx	lr
    90e4:	0001b910 	.word	0x0001b910

000090e8 <std::__moneypunct_cache<char, true>::__moneypunct_cache(unsigned int)>:
    90e8:	4a0b      	ldr	r2, [pc, #44]	; (9118 <std::__moneypunct_cache<char, true>::__moneypunct_cache(unsigned int)+0x30>)
    90ea:	3100      	adds	r1, #0
    90ec:	bf18      	it	ne
    90ee:	2101      	movne	r1, #1
    90f0:	6002      	str	r2, [r0, #0]
    90f2:	2200      	movs	r2, #0
    90f4:	6041      	str	r1, [r0, #4]
    90f6:	6082      	str	r2, [r0, #8]
    90f8:	60c2      	str	r2, [r0, #12]
    90fa:	7402      	strb	r2, [r0, #16]
    90fc:	7442      	strb	r2, [r0, #17]
    90fe:	7482      	strb	r2, [r0, #18]
    9100:	6142      	str	r2, [r0, #20]
    9102:	6182      	str	r2, [r0, #24]
    9104:	61c2      	str	r2, [r0, #28]
    9106:	6202      	str	r2, [r0, #32]
    9108:	6242      	str	r2, [r0, #36]	; 0x24
    910a:	6282      	str	r2, [r0, #40]	; 0x28
    910c:	62c2      	str	r2, [r0, #44]	; 0x2c
    910e:	6302      	str	r2, [r0, #48]	; 0x30
    9110:	6342      	str	r2, [r0, #52]	; 0x34
    9112:	f880 2043 	strb.w	r2, [r0, #67]	; 0x43
    9116:	4770      	bx	lr
    9118:	0001b920 	.word	0x0001b920

0000911c <std::numpunct<char>::numpunct(std::__numpunct_cache<char>*, unsigned int)>:
    911c:	b510      	push	{r4, lr}
    911e:	4604      	mov	r4, r0
    9120:	3200      	adds	r2, #0
    9122:	4b05      	ldr	r3, [pc, #20]	; (9138 <std::numpunct<char>::numpunct(std::__numpunct_cache<char>*, unsigned int)+0x1c>)
    9124:	bf18      	it	ne
    9126:	2201      	movne	r2, #1
    9128:	6042      	str	r2, [r0, #4]
    912a:	6003      	str	r3, [r0, #0]
    912c:	6081      	str	r1, [r0, #8]
    912e:	2100      	movs	r1, #0
    9130:	f007 fbae 	bl	10890 <std::numpunct<char>::_M_initialize_numpunct(int*)>
    9134:	4620      	mov	r0, r4
    9136:	bd10      	pop	{r4, pc}
    9138:	0001b728 	.word	0x0001b728

0000913c <std::numpunct<char>::decimal_point() const>:
    913c:	6803      	ldr	r3, [r0, #0]
    913e:	689b      	ldr	r3, [r3, #8]
    9140:	4718      	bx	r3

00009142 <std::numpunct<char>::thousands_sep() const>:
    9142:	6803      	ldr	r3, [r0, #0]
    9144:	68db      	ldr	r3, [r3, #12]
    9146:	4718      	bx	r3

00009148 <std::numpunct<char>::grouping() const>:
    9148:	b510      	push	{r4, lr}
    914a:	4604      	mov	r4, r0
    914c:	680b      	ldr	r3, [r1, #0]
    914e:	691b      	ldr	r3, [r3, #16]
    9150:	4798      	blx	r3
    9152:	4620      	mov	r0, r4
    9154:	bd10      	pop	{r4, pc}

00009156 <std::numpunct<char>::truename() const>:
    9156:	b510      	push	{r4, lr}
    9158:	4604      	mov	r4, r0
    915a:	680b      	ldr	r3, [r1, #0]
    915c:	695b      	ldr	r3, [r3, #20]
    915e:	4798      	blx	r3
    9160:	4620      	mov	r0, r4
    9162:	bd10      	pop	{r4, pc}

00009164 <std::numpunct<char>::falsename() const>:
    9164:	b510      	push	{r4, lr}
    9166:	4604      	mov	r4, r0
    9168:	680b      	ldr	r3, [r1, #0]
    916a:	699b      	ldr	r3, [r3, #24]
    916c:	4798      	blx	r3
    916e:	4620      	mov	r0, r4
    9170:	bd10      	pop	{r4, pc}
	...

00009174 <std::__numpunct_cache<char>::__numpunct_cache(unsigned int)>:
    9174:	4a0a      	ldr	r2, [pc, #40]	; (91a0 <std::__numpunct_cache<char>::__numpunct_cache(unsigned int)+0x2c>)
    9176:	3100      	adds	r1, #0
    9178:	bf18      	it	ne
    917a:	2101      	movne	r1, #1
    917c:	6002      	str	r2, [r0, #0]
    917e:	2200      	movs	r2, #0
    9180:	6041      	str	r1, [r0, #4]
    9182:	6082      	str	r2, [r0, #8]
    9184:	60c2      	str	r2, [r0, #12]
    9186:	7402      	strb	r2, [r0, #16]
    9188:	6142      	str	r2, [r0, #20]
    918a:	6182      	str	r2, [r0, #24]
    918c:	61c2      	str	r2, [r0, #28]
    918e:	6202      	str	r2, [r0, #32]
    9190:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
    9194:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
    9198:	f880 2064 	strb.w	r2, [r0, #100]	; 0x64
    919c:	4770      	bx	lr
    919e:	bf00      	nop
    91a0:	0001b930 	.word	0x0001b930

000091a4 <std::__timepunct<char>::__timepunct(std::__timepunct_cache<char>*, unsigned int)>:
    91a4:	3200      	adds	r2, #0
    91a6:	4b08      	ldr	r3, [pc, #32]	; (91c8 <std::__timepunct<char>::__timepunct(std::__timepunct_cache<char>*, unsigned int)+0x24>)
    91a8:	bf18      	it	ne
    91aa:	2201      	movne	r2, #1
    91ac:	b510      	push	{r4, lr}
    91ae:	6042      	str	r2, [r0, #4]
    91b0:	6003      	str	r3, [r0, #0]
    91b2:	6081      	str	r1, [r0, #8]
    91b4:	4604      	mov	r4, r0
    91b6:	f006 ff69 	bl	1008c <std::locale::facet::_S_get_c_name()>
    91ba:	2100      	movs	r1, #0
    91bc:	6120      	str	r0, [r4, #16]
    91be:	4620      	mov	r0, r4
    91c0:	f7fe fffe 	bl	81c0 <std::__timepunct<char>::_M_initialize_timepunct(int*)>
    91c4:	4620      	mov	r0, r4
    91c6:	bd10      	pop	{r4, pc}
    91c8:	0001b7d0 	.word	0x0001b7d0

000091cc <std::__timepunct<char>::_M_date_formats(char const**) const>:
    91cc:	6883      	ldr	r3, [r0, #8]
    91ce:	689b      	ldr	r3, [r3, #8]
    91d0:	600b      	str	r3, [r1, #0]
    91d2:	6883      	ldr	r3, [r0, #8]
    91d4:	68db      	ldr	r3, [r3, #12]
    91d6:	604b      	str	r3, [r1, #4]
    91d8:	4770      	bx	lr

000091da <std::__timepunct<char>::_M_time_formats(char const**) const>:
    91da:	6883      	ldr	r3, [r0, #8]
    91dc:	691b      	ldr	r3, [r3, #16]
    91de:	600b      	str	r3, [r1, #0]
    91e0:	6883      	ldr	r3, [r0, #8]
    91e2:	695b      	ldr	r3, [r3, #20]
    91e4:	604b      	str	r3, [r1, #4]
    91e6:	4770      	bx	lr

000091e8 <std::__timepunct<char>::_M_date_time_formats(char const**) const>:
    91e8:	6883      	ldr	r3, [r0, #8]
    91ea:	699b      	ldr	r3, [r3, #24]
    91ec:	600b      	str	r3, [r1, #0]
    91ee:	6883      	ldr	r3, [r0, #8]
    91f0:	69db      	ldr	r3, [r3, #28]
    91f2:	604b      	str	r3, [r1, #4]
    91f4:	4770      	bx	lr

000091f6 <std::__timepunct<char>::_M_days(char const**) const>:
    91f6:	6883      	ldr	r3, [r0, #8]
    91f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    91fa:	600b      	str	r3, [r1, #0]
    91fc:	6883      	ldr	r3, [r0, #8]
    91fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    9200:	604b      	str	r3, [r1, #4]
    9202:	6883      	ldr	r3, [r0, #8]
    9204:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    9206:	608b      	str	r3, [r1, #8]
    9208:	6883      	ldr	r3, [r0, #8]
    920a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    920c:	60cb      	str	r3, [r1, #12]
    920e:	6883      	ldr	r3, [r0, #8]
    9210:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    9212:	610b      	str	r3, [r1, #16]
    9214:	6883      	ldr	r3, [r0, #8]
    9216:	6c1b      	ldr	r3, [r3, #64]	; 0x40
    9218:	614b      	str	r3, [r1, #20]
    921a:	6883      	ldr	r3, [r0, #8]
    921c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    921e:	618b      	str	r3, [r1, #24]
    9220:	4770      	bx	lr

00009222 <std::__timepunct<char>::_M_days_abbreviated(char const**) const>:
    9222:	6883      	ldr	r3, [r0, #8]
    9224:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    9226:	600b      	str	r3, [r1, #0]
    9228:	6883      	ldr	r3, [r0, #8]
    922a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    922c:	604b      	str	r3, [r1, #4]
    922e:	6883      	ldr	r3, [r0, #8]
    9230:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    9232:	608b      	str	r3, [r1, #8]
    9234:	6883      	ldr	r3, [r0, #8]
    9236:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    9238:	60cb      	str	r3, [r1, #12]
    923a:	6883      	ldr	r3, [r0, #8]
    923c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
    923e:	610b      	str	r3, [r1, #16]
    9240:	6883      	ldr	r3, [r0, #8]
    9242:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    9244:	614b      	str	r3, [r1, #20]
    9246:	6883      	ldr	r3, [r0, #8]
    9248:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    924a:	618b      	str	r3, [r1, #24]
    924c:	4770      	bx	lr

0000924e <std::__timepunct<char>::_M_months(char const**) const>:
    924e:	6883      	ldr	r3, [r0, #8]
    9250:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    9252:	600b      	str	r3, [r1, #0]
    9254:	6883      	ldr	r3, [r0, #8]
    9256:	6e9b      	ldr	r3, [r3, #104]	; 0x68
    9258:	604b      	str	r3, [r1, #4]
    925a:	6883      	ldr	r3, [r0, #8]
    925c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
    925e:	608b      	str	r3, [r1, #8]
    9260:	6883      	ldr	r3, [r0, #8]
    9262:	6f1b      	ldr	r3, [r3, #112]	; 0x70
    9264:	60cb      	str	r3, [r1, #12]
    9266:	6883      	ldr	r3, [r0, #8]
    9268:	6f5b      	ldr	r3, [r3, #116]	; 0x74
    926a:	610b      	str	r3, [r1, #16]
    926c:	6883      	ldr	r3, [r0, #8]
    926e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
    9270:	614b      	str	r3, [r1, #20]
    9272:	6883      	ldr	r3, [r0, #8]
    9274:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    9276:	618b      	str	r3, [r1, #24]
    9278:	6883      	ldr	r3, [r0, #8]
    927a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    927e:	61cb      	str	r3, [r1, #28]
    9280:	6883      	ldr	r3, [r0, #8]
    9282:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    9286:	620b      	str	r3, [r1, #32]
    9288:	6883      	ldr	r3, [r0, #8]
    928a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    928e:	624b      	str	r3, [r1, #36]	; 0x24
    9290:	6883      	ldr	r3, [r0, #8]
    9292:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    9296:	628b      	str	r3, [r1, #40]	; 0x28
    9298:	6883      	ldr	r3, [r0, #8]
    929a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    929e:	62cb      	str	r3, [r1, #44]	; 0x2c
    92a0:	4770      	bx	lr

000092a2 <std::__timepunct<char>::_M_months_abbreviated(char const**) const>:
    92a2:	6883      	ldr	r3, [r0, #8]
    92a4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
    92a8:	600b      	str	r3, [r1, #0]
    92aa:	6883      	ldr	r3, [r0, #8]
    92ac:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
    92b0:	604b      	str	r3, [r1, #4]
    92b2:	6883      	ldr	r3, [r0, #8]
    92b4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
    92b8:	608b      	str	r3, [r1, #8]
    92ba:	6883      	ldr	r3, [r0, #8]
    92bc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    92c0:	60cb      	str	r3, [r1, #12]
    92c2:	6883      	ldr	r3, [r0, #8]
    92c4:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
    92c8:	610b      	str	r3, [r1, #16]
    92ca:	6883      	ldr	r3, [r0, #8]
    92cc:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
    92d0:	614b      	str	r3, [r1, #20]
    92d2:	6883      	ldr	r3, [r0, #8]
    92d4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    92d8:	618b      	str	r3, [r1, #24]
    92da:	6883      	ldr	r3, [r0, #8]
    92dc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
    92e0:	61cb      	str	r3, [r1, #28]
    92e2:	6883      	ldr	r3, [r0, #8]
    92e4:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
    92e8:	620b      	str	r3, [r1, #32]
    92ea:	6883      	ldr	r3, [r0, #8]
    92ec:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
    92f0:	624b      	str	r3, [r1, #36]	; 0x24
    92f2:	6883      	ldr	r3, [r0, #8]
    92f4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
    92f8:	628b      	str	r3, [r1, #40]	; 0x28
    92fa:	6883      	ldr	r3, [r0, #8]
    92fc:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
    9300:	62cb      	str	r3, [r1, #44]	; 0x2c
    9302:	4770      	bx	lr

00009304 <std::messages<char>::messages(unsigned int)>:
    9304:	3100      	adds	r1, #0
    9306:	4b06      	ldr	r3, [pc, #24]	; (9320 <std::messages<char>::messages(unsigned int)+0x1c>)
    9308:	bf18      	it	ne
    930a:	2101      	movne	r1, #1
    930c:	b510      	push	{r4, lr}
    930e:	6041      	str	r1, [r0, #4]
    9310:	6003      	str	r3, [r0, #0]
    9312:	4604      	mov	r4, r0
    9314:	f006 feae 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    9318:	60a0      	str	r0, [r4, #8]
    931a:	4620      	mov	r0, r4
    931c:	bd10      	pop	{r4, pc}
    931e:	bf00      	nop
    9320:	0001b850 	.word	0x0001b850

00009324 <std::collate<char>::collate(unsigned int)>:
    9324:	3100      	adds	r1, #0
    9326:	4b06      	ldr	r3, [pc, #24]	; (9340 <std::collate<char>::collate(unsigned int)+0x1c>)
    9328:	bf18      	it	ne
    932a:	2101      	movne	r1, #1
    932c:	b510      	push	{r4, lr}
    932e:	6041      	str	r1, [r0, #4]
    9330:	6003      	str	r3, [r0, #0]
    9332:	4604      	mov	r4, r0
    9334:	f006 fe9e 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    9338:	60a0      	str	r0, [r4, #8]
    933a:	4620      	mov	r0, r4
    933c:	bd10      	pop	{r4, pc}
    933e:	bf00      	nop
    9340:	0001b708 	.word	0x0001b708

00009344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>:
    9344:	b510      	push	{r4, lr}
    9346:	4604      	mov	r4, r0
    9348:	480a      	ldr	r0, [pc, #40]	; (9374 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)+0x30>)
    934a:	f006 ff27 	bl	1019c <std::locale::id::_M_id() const>
    934e:	6823      	ldr	r3, [r4, #0]
    9350:	685a      	ldr	r2, [r3, #4]
    9352:	689b      	ldr	r3, [r3, #8]
    9354:	4298      	cmp	r0, r3
    9356:	d202      	bcs.n	935e <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)+0x1a>
    9358:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    935c:	b908      	cbnz	r0, 9362 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)+0x1e>
    935e:	f005 f9b5 	bl	e6cc <std::__throw_bad_cast()>
    9362:	4905      	ldr	r1, [pc, #20]	; (9378 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)+0x34>)
    9364:	4a05      	ldr	r2, [pc, #20]	; (937c <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)+0x38>)
    9366:	2300      	movs	r3, #0
    9368:	f006 f996 	bl	f698 <__dynamic_cast>
    936c:	b908      	cbnz	r0, 9372 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)+0x2e>
    936e:	f006 f9ed 	bl	f74c <__cxa_bad_cast>
    9372:	bd10      	pop	{r4, pc}
    9374:	10000c88 	.word	0x10000c88
    9378:	0001c4d8 	.word	0x0001c4d8
    937c:	0001c290 	.word	0x0001c290

00009380 <std::numpunct<char> const& std::use_facet<std::numpunct<char> >(std::locale const&)>:
    9380:	b510      	push	{r4, lr}
    9382:	4604      	mov	r4, r0
    9384:	480a      	ldr	r0, [pc, #40]	; (93b0 <std::numpunct<char> const& std::use_facet<std::numpunct<char> >(std::locale const&)+0x30>)
    9386:	f006 ff09 	bl	1019c <std::locale::id::_M_id() const>
    938a:	6823      	ldr	r3, [r4, #0]
    938c:	685a      	ldr	r2, [r3, #4]
    938e:	689b      	ldr	r3, [r3, #8]
    9390:	4298      	cmp	r0, r3
    9392:	d202      	bcs.n	939a <std::numpunct<char> const& std::use_facet<std::numpunct<char> >(std::locale const&)+0x1a>
    9394:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    9398:	b908      	cbnz	r0, 939e <std::numpunct<char> const& std::use_facet<std::numpunct<char> >(std::locale const&)+0x1e>
    939a:	f005 f997 	bl	e6cc <std::__throw_bad_cast()>
    939e:	4905      	ldr	r1, [pc, #20]	; (93b4 <std::numpunct<char> const& std::use_facet<std::numpunct<char> >(std::locale const&)+0x34>)
    93a0:	4a05      	ldr	r2, [pc, #20]	; (93b8 <std::numpunct<char> const& std::use_facet<std::numpunct<char> >(std::locale const&)+0x38>)
    93a2:	2300      	movs	r3, #0
    93a4:	f006 f978 	bl	f698 <__dynamic_cast>
    93a8:	b908      	cbnz	r0, 93ae <std::numpunct<char> const& std::use_facet<std::numpunct<char> >(std::locale const&)+0x2e>
    93aa:	f006 f9cf 	bl	f74c <__cxa_bad_cast>
    93ae:	bd10      	pop	{r4, pc}
    93b0:	100006e8 	.word	0x100006e8
    93b4:	0001c4d8 	.word	0x0001c4d8
    93b8:	0001bb60 	.word	0x0001bb60

000093bc <std::__numpunct_cache<char>::_M_cache(std::locale const&)>:
    93bc:	2301      	movs	r3, #1
    93be:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    93c0:	4604      	mov	r4, r0
    93c2:	f880 3064 	strb.w	r3, [r0, #100]	; 0x64
    93c6:	4608      	mov	r0, r1
    93c8:	460f      	mov	r7, r1
    93ca:	f7ff ffd9 	bl	9380 <std::numpunct<char> const& std::use_facet<std::numpunct<char> >(std::locale const&)>
    93ce:	4605      	mov	r5, r0
    93d0:	a801      	add	r0, sp, #4
    93d2:	4629      	mov	r1, r5
    93d4:	f7ff feb8 	bl	9148 <std::numpunct<char>::grouping() const>
    93d8:	9b01      	ldr	r3, [sp, #4]
    93da:	a801      	add	r0, sp, #4
    93dc:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    93e0:	60e3      	str	r3, [r4, #12]
    93e2:	f005 fa99 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    93e6:	68e0      	ldr	r0, [r4, #12]
    93e8:	f7f9 f8a3 	bl	2532 <operator new[](unsigned int)>
    93ec:	4606      	mov	r6, r0
    93ee:	4629      	mov	r1, r5
    93f0:	a801      	add	r0, sp, #4
    93f2:	f7ff fea9 	bl	9148 <std::numpunct<char>::grouping() const>
    93f6:	2300      	movs	r3, #0
    93f8:	4631      	mov	r1, r6
    93fa:	68e2      	ldr	r2, [r4, #12]
    93fc:	a801      	add	r0, sp, #4
    93fe:	f005 f9e3 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    9402:	a801      	add	r0, sp, #4
    9404:	f005 fa88 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    9408:	68e3      	ldr	r3, [r4, #12]
    940a:	60a6      	str	r6, [r4, #8]
    940c:	b12b      	cbz	r3, 941a <std::__numpunct_cache<char>::_M_cache(std::locale const&)+0x5e>
    940e:	f996 3000 	ldrsb.w	r3, [r6]
    9412:	2b00      	cmp	r3, #0
    9414:	bfd4      	ite	le
    9416:	2300      	movle	r3, #0
    9418:	2301      	movgt	r3, #1
    941a:	4629      	mov	r1, r5
    941c:	7423      	strb	r3, [r4, #16]
    941e:	a801      	add	r0, sp, #4
    9420:	f7ff fe99 	bl	9156 <std::numpunct<char>::truename() const>
    9424:	9b01      	ldr	r3, [sp, #4]
    9426:	a801      	add	r0, sp, #4
    9428:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    942c:	61a3      	str	r3, [r4, #24]
    942e:	f005 fa73 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    9432:	69a0      	ldr	r0, [r4, #24]
    9434:	f7f9 f87d 	bl	2532 <operator new[](unsigned int)>
    9438:	4606      	mov	r6, r0
    943a:	4629      	mov	r1, r5
    943c:	a801      	add	r0, sp, #4
    943e:	f7ff fe8a 	bl	9156 <std::numpunct<char>::truename() const>
    9442:	69a2      	ldr	r2, [r4, #24]
    9444:	4631      	mov	r1, r6
    9446:	2300      	movs	r3, #0
    9448:	a801      	add	r0, sp, #4
    944a:	f005 f9bd 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    944e:	a801      	add	r0, sp, #4
    9450:	f005 fa62 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    9454:	4629      	mov	r1, r5
    9456:	6166      	str	r6, [r4, #20]
    9458:	a801      	add	r0, sp, #4
    945a:	f7ff fe83 	bl	9164 <std::numpunct<char>::falsename() const>
    945e:	9b01      	ldr	r3, [sp, #4]
    9460:	a801      	add	r0, sp, #4
    9462:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    9466:	6223      	str	r3, [r4, #32]
    9468:	f005 fa56 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    946c:	6a20      	ldr	r0, [r4, #32]
    946e:	f7f9 f860 	bl	2532 <operator new[](unsigned int)>
    9472:	4606      	mov	r6, r0
    9474:	4629      	mov	r1, r5
    9476:	a801      	add	r0, sp, #4
    9478:	f7ff fe74 	bl	9164 <std::numpunct<char>::falsename() const>
    947c:	4631      	mov	r1, r6
    947e:	6a22      	ldr	r2, [r4, #32]
    9480:	2300      	movs	r3, #0
    9482:	a801      	add	r0, sp, #4
    9484:	f005 f9a0 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    9488:	a801      	add	r0, sp, #4
    948a:	f005 fa45 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    948e:	61e6      	str	r6, [r4, #28]
    9490:	4628      	mov	r0, r5
    9492:	f7ff fe53 	bl	913c <std::numpunct<char>::decimal_point() const>
    9496:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
    949a:	4628      	mov	r0, r5
    949c:	f7ff fe51 	bl	9142 <std::numpunct<char>::thousands_sep() const>
    94a0:	f884 0025 	strb.w	r0, [r4, #37]	; 0x25
    94a4:	4638      	mov	r0, r7
    94a6:	f7ff ff4d 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    94aa:	4605      	mov	r5, r0
    94ac:	4b09      	ldr	r3, [pc, #36]	; (94d4 <std::__numpunct_cache<char>::_M_cache(std::locale const&)+0x118>)
    94ae:	6819      	ldr	r1, [r3, #0]
    94b0:	f104 0326 	add.w	r3, r4, #38	; 0x26
    94b4:	f101 0224 	add.w	r2, r1, #36	; 0x24
    94b8:	f7ff fd01 	bl	8ebe <std::ctype<char>::widen(char const*, char const*, char*) const>
    94bc:	4b06      	ldr	r3, [pc, #24]	; (94d8 <std::__numpunct_cache<char>::_M_cache(std::locale const&)+0x11c>)
    94be:	4628      	mov	r0, r5
    94c0:	6819      	ldr	r1, [r3, #0]
    94c2:	f104 034a 	add.w	r3, r4, #74	; 0x4a
    94c6:	f101 021a 	add.w	r2, r1, #26
    94ca:	f7ff fcf8 	bl	8ebe <std::ctype<char>::widen(char const*, char const*, char*) const>
    94ce:	b003      	add	sp, #12
    94d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    94d2:	bf00      	nop
    94d4:	1000016c 	.word	0x1000016c
    94d8:	10000164 	.word	0x10000164

000094dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>:
    94dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    94e0:	4605      	mov	r5, r0
    94e2:	480f      	ldr	r0, [pc, #60]	; (9520 <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]+0x44>)
    94e4:	f006 fe5a 	bl	1019c <std::locale::id::_M_id() const>
    94e8:	682b      	ldr	r3, [r5, #0]
    94ea:	4604      	mov	r4, r0
    94ec:	68de      	ldr	r6, [r3, #12]
    94ee:	f856 8020 	ldr.w	r8, [r6, r0, lsl #2]
    94f2:	f1b8 0f00 	cmp.w	r8, #0
    94f6:	d10f      	bne.n	9518 <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]+0x3c>
    94f8:	2068      	movs	r0, #104	; 0x68
    94fa:	f7f8 fff7 	bl	24ec <operator new(unsigned int)>
    94fe:	4607      	mov	r7, r0
    9500:	4641      	mov	r1, r8
    9502:	f7ff fe37 	bl	9174 <std::__numpunct_cache<char>::__numpunct_cache(unsigned int)>
    9506:	4638      	mov	r0, r7
    9508:	4629      	mov	r1, r5
    950a:	f7ff ff57 	bl	93bc <std::__numpunct_cache<char>::_M_cache(std::locale const&)>
    950e:	6828      	ldr	r0, [r5, #0]
    9510:	4639      	mov	r1, r7
    9512:	4622      	mov	r2, r4
    9514:	f006 fe1e 	bl	10154 <std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned int)>
    9518:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
    951c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9520:	100006e8 	.word	0x100006e8

00009524 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)>:
    9524:	b510      	push	{r4, lr}
    9526:	4604      	mov	r4, r0
    9528:	480a      	ldr	r0, [pc, #40]	; (9554 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x30>)
    952a:	f006 fe37 	bl	1019c <std::locale::id::_M_id() const>
    952e:	6823      	ldr	r3, [r4, #0]
    9530:	685a      	ldr	r2, [r3, #4]
    9532:	689b      	ldr	r3, [r3, #8]
    9534:	4298      	cmp	r0, r3
    9536:	d202      	bcs.n	953e <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x1a>
    9538:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    953c:	b908      	cbnz	r0, 9542 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x1e>
    953e:	f005 f8c5 	bl	e6cc <std::__throw_bad_cast()>
    9542:	4905      	ldr	r1, [pc, #20]	; (9558 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x34>)
    9544:	4a05      	ldr	r2, [pc, #20]	; (955c <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x38>)
    9546:	2300      	movs	r3, #0
    9548:	f006 f8a6 	bl	f698 <__dynamic_cast>
    954c:	b908      	cbnz	r0, 9552 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x2e>
    954e:	f006 f8fd 	bl	f74c <__cxa_bad_cast>
    9552:	bd10      	pop	{r4, pc}
    9554:	100006e0 	.word	0x100006e0
    9558:	0001c4d8 	.word	0x0001c4d8
    955c:	0001b9b0 	.word	0x0001b9b0

00009560 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)>:
    9560:	b510      	push	{r4, lr}
    9562:	4604      	mov	r4, r0
    9564:	480a      	ldr	r0, [pc, #40]	; (9590 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x30>)
    9566:	f006 fe19 	bl	1019c <std::locale::id::_M_id() const>
    956a:	6823      	ldr	r3, [r4, #0]
    956c:	685a      	ldr	r2, [r3, #4]
    956e:	689b      	ldr	r3, [r3, #8]
    9570:	4298      	cmp	r0, r3
    9572:	d202      	bcs.n	957a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x1a>
    9574:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    9578:	b908      	cbnz	r0, 957e <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x1e>
    957a:	f005 f8a7 	bl	e6cc <std::__throw_bad_cast()>
    957e:	4905      	ldr	r1, [pc, #20]	; (9594 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x34>)
    9580:	4a05      	ldr	r2, [pc, #20]	; (9598 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x38>)
    9582:	2300      	movs	r3, #0
    9584:	f006 f888 	bl	f698 <__dynamic_cast>
    9588:	b908      	cbnz	r0, 958e <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x2e>
    958a:	f006 f8df 	bl	f74c <__cxa_bad_cast>
    958e:	bd10      	pop	{r4, pc}
    9590:	100006e4 	.word	0x100006e4
    9594:	0001c4d8 	.word	0x0001c4d8
    9598:	0001bac0 	.word	0x0001bac0

0000959c <std::moneypunct<char, true> const& std::use_facet<std::moneypunct<char, true> >(std::locale const&)>:
    959c:	b510      	push	{r4, lr}
    959e:	4604      	mov	r4, r0
    95a0:	480a      	ldr	r0, [pc, #40]	; (95cc <std::moneypunct<char, true> const& std::use_facet<std::moneypunct<char, true> >(std::locale const&)+0x30>)
    95a2:	f006 fdfb 	bl	1019c <std::locale::id::_M_id() const>
    95a6:	6823      	ldr	r3, [r4, #0]
    95a8:	685a      	ldr	r2, [r3, #4]
    95aa:	689b      	ldr	r3, [r3, #8]
    95ac:	4298      	cmp	r0, r3
    95ae:	d202      	bcs.n	95b6 <std::moneypunct<char, true> const& std::use_facet<std::moneypunct<char, true> >(std::locale const&)+0x1a>
    95b0:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    95b4:	b908      	cbnz	r0, 95ba <std::moneypunct<char, true> const& std::use_facet<std::moneypunct<char, true> >(std::locale const&)+0x1e>
    95b6:	f005 f889 	bl	e6cc <std::__throw_bad_cast()>
    95ba:	4905      	ldr	r1, [pc, #20]	; (95d0 <std::moneypunct<char, true> const& std::use_facet<std::moneypunct<char, true> >(std::locale const&)+0x34>)
    95bc:	4a05      	ldr	r2, [pc, #20]	; (95d4 <std::moneypunct<char, true> const& std::use_facet<std::moneypunct<char, true> >(std::locale const&)+0x38>)
    95be:	2300      	movs	r3, #0
    95c0:	f006 f86a 	bl	f698 <__dynamic_cast>
    95c4:	b908      	cbnz	r0, 95ca <std::moneypunct<char, true> const& std::use_facet<std::moneypunct<char, true> >(std::locale const&)+0x2e>
    95c6:	f006 f8c1 	bl	f74c <__cxa_bad_cast>
    95ca:	bd10      	pop	{r4, pc}
    95cc:	100006f4 	.word	0x100006f4
    95d0:	0001c4d8 	.word	0x0001c4d8
    95d4:	0001bb34 	.word	0x0001bb34

000095d8 <std::__moneypunct_cache<char, true>::_M_cache(std::locale const&)>:
    95d8:	2301      	movs	r3, #1
    95da:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    95dc:	4604      	mov	r4, r0
    95de:	f880 3043 	strb.w	r3, [r0, #67]	; 0x43
    95e2:	4608      	mov	r0, r1
    95e4:	460f      	mov	r7, r1
    95e6:	f7ff ffd9 	bl	959c <std::moneypunct<char, true> const& std::use_facet<std::moneypunct<char, true> >(std::locale const&)>
    95ea:	4605      	mov	r5, r0
    95ec:	f7ff fd0e 	bl	900c <std::moneypunct<char, true>::decimal_point() const>
    95f0:	7460      	strb	r0, [r4, #17]
    95f2:	4628      	mov	r0, r5
    95f4:	f7ff fd0d 	bl	9012 <std::moneypunct<char, true>::thousands_sep() const>
    95f8:	74a0      	strb	r0, [r4, #18]
    95fa:	4628      	mov	r0, r5
    95fc:	f7ff fd28 	bl	9050 <std::moneypunct<char, true>::frac_digits() const>
    9600:	4629      	mov	r1, r5
    9602:	62e0      	str	r0, [r4, #44]	; 0x2c
    9604:	a801      	add	r0, sp, #4
    9606:	f7ff fd07 	bl	9018 <std::moneypunct<char, true>::grouping() const>
    960a:	9b01      	ldr	r3, [sp, #4]
    960c:	a801      	add	r0, sp, #4
    960e:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    9612:	60e3      	str	r3, [r4, #12]
    9614:	f005 f980 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    9618:	68e0      	ldr	r0, [r4, #12]
    961a:	f7f8 ff8a 	bl	2532 <operator new[](unsigned int)>
    961e:	4606      	mov	r6, r0
    9620:	4629      	mov	r1, r5
    9622:	a801      	add	r0, sp, #4
    9624:	f7ff fcf8 	bl	9018 <std::moneypunct<char, true>::grouping() const>
    9628:	2300      	movs	r3, #0
    962a:	4631      	mov	r1, r6
    962c:	68e2      	ldr	r2, [r4, #12]
    962e:	a801      	add	r0, sp, #4
    9630:	f005 f8ca 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    9634:	a801      	add	r0, sp, #4
    9636:	f005 f96f 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    963a:	68e3      	ldr	r3, [r4, #12]
    963c:	60a6      	str	r6, [r4, #8]
    963e:	b12b      	cbz	r3, 964c <std::__moneypunct_cache<char, true>::_M_cache(std::locale const&)+0x74>
    9640:	f996 3000 	ldrsb.w	r3, [r6]
    9644:	2b00      	cmp	r3, #0
    9646:	bfd4      	ite	le
    9648:	2300      	movle	r3, #0
    964a:	2301      	movgt	r3, #1
    964c:	4629      	mov	r1, r5
    964e:	7423      	strb	r3, [r4, #16]
    9650:	a801      	add	r0, sp, #4
    9652:	f7ff fce8 	bl	9026 <std::moneypunct<char, true>::curr_symbol() const>
    9656:	9b01      	ldr	r3, [sp, #4]
    9658:	a801      	add	r0, sp, #4
    965a:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    965e:	61a3      	str	r3, [r4, #24]
    9660:	f005 f95a 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    9664:	69a0      	ldr	r0, [r4, #24]
    9666:	f7f8 ff64 	bl	2532 <operator new[](unsigned int)>
    966a:	4606      	mov	r6, r0
    966c:	4629      	mov	r1, r5
    966e:	a801      	add	r0, sp, #4
    9670:	f7ff fcd9 	bl	9026 <std::moneypunct<char, true>::curr_symbol() const>
    9674:	69a2      	ldr	r2, [r4, #24]
    9676:	4631      	mov	r1, r6
    9678:	2300      	movs	r3, #0
    967a:	a801      	add	r0, sp, #4
    967c:	f005 f8a4 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    9680:	a801      	add	r0, sp, #4
    9682:	f005 f949 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    9686:	4629      	mov	r1, r5
    9688:	6166      	str	r6, [r4, #20]
    968a:	a801      	add	r0, sp, #4
    968c:	f7ff fcd2 	bl	9034 <std::moneypunct<char, true>::positive_sign() const>
    9690:	9b01      	ldr	r3, [sp, #4]
    9692:	a801      	add	r0, sp, #4
    9694:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    9698:	6223      	str	r3, [r4, #32]
    969a:	f005 f93d 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    969e:	6a20      	ldr	r0, [r4, #32]
    96a0:	f7f8 ff47 	bl	2532 <operator new[](unsigned int)>
    96a4:	4606      	mov	r6, r0
    96a6:	4629      	mov	r1, r5
    96a8:	a801      	add	r0, sp, #4
    96aa:	f7ff fcc3 	bl	9034 <std::moneypunct<char, true>::positive_sign() const>
    96ae:	6a22      	ldr	r2, [r4, #32]
    96b0:	4631      	mov	r1, r6
    96b2:	2300      	movs	r3, #0
    96b4:	a801      	add	r0, sp, #4
    96b6:	f005 f887 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    96ba:	a801      	add	r0, sp, #4
    96bc:	f005 f92c 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    96c0:	4629      	mov	r1, r5
    96c2:	61e6      	str	r6, [r4, #28]
    96c4:	a801      	add	r0, sp, #4
    96c6:	f7ff fcbc 	bl	9042 <std::moneypunct<char, true>::negative_sign() const>
    96ca:	9b01      	ldr	r3, [sp, #4]
    96cc:	a801      	add	r0, sp, #4
    96ce:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    96d2:	62a3      	str	r3, [r4, #40]	; 0x28
    96d4:	f005 f920 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    96d8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
    96da:	f7f8 ff2a 	bl	2532 <operator new[](unsigned int)>
    96de:	4606      	mov	r6, r0
    96e0:	4629      	mov	r1, r5
    96e2:	a801      	add	r0, sp, #4
    96e4:	f7ff fcad 	bl	9042 <std::moneypunct<char, true>::negative_sign() const>
    96e8:	4631      	mov	r1, r6
    96ea:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    96ec:	2300      	movs	r3, #0
    96ee:	a801      	add	r0, sp, #4
    96f0:	f005 f86a 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    96f4:	a801      	add	r0, sp, #4
    96f6:	f005 f90f 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    96fa:	6266      	str	r6, [r4, #36]	; 0x24
    96fc:	4628      	mov	r0, r5
    96fe:	f7ff fcaa 	bl	9056 <std::moneypunct<char, true>::pos_format() const>
    9702:	6320      	str	r0, [r4, #48]	; 0x30
    9704:	4628      	mov	r0, r5
    9706:	f7ff fcbd 	bl	9084 <std::moneypunct<char, true>::neg_format() const>
    970a:	6360      	str	r0, [r4, #52]	; 0x34
    970c:	4638      	mov	r0, r7
    970e:	f7ff fe19 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    9712:	4b05      	ldr	r3, [pc, #20]	; (9728 <std::__moneypunct_cache<char, true>::_M_cache(std::locale const&)+0x150>)
    9714:	6819      	ldr	r1, [r3, #0]
    9716:	f104 0338 	add.w	r3, r4, #56	; 0x38
    971a:	f101 020b 	add.w	r2, r1, #11
    971e:	f7ff fbce 	bl	8ebe <std::ctype<char>::widen(char const*, char const*, char*) const>
    9722:	b003      	add	sp, #12
    9724:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9726:	bf00      	nop
    9728:	10000168 	.word	0x10000168

0000972c <std::__use_cache<std::__moneypunct_cache<char, true> >::operator()(std::locale const&) const [clone .isra.32]>:
    972c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9730:	4605      	mov	r5, r0
    9732:	480f      	ldr	r0, [pc, #60]	; (9770 <std::__use_cache<std::__moneypunct_cache<char, true> >::operator()(std::locale const&) const [clone .isra.32]+0x44>)
    9734:	f006 fd32 	bl	1019c <std::locale::id::_M_id() const>
    9738:	682b      	ldr	r3, [r5, #0]
    973a:	4604      	mov	r4, r0
    973c:	68de      	ldr	r6, [r3, #12]
    973e:	f856 8020 	ldr.w	r8, [r6, r0, lsl #2]
    9742:	f1b8 0f00 	cmp.w	r8, #0
    9746:	d10f      	bne.n	9768 <std::__use_cache<std::__moneypunct_cache<char, true> >::operator()(std::locale const&) const [clone .isra.32]+0x3c>
    9748:	2044      	movs	r0, #68	; 0x44
    974a:	f7f8 fecf 	bl	24ec <operator new(unsigned int)>
    974e:	4607      	mov	r7, r0
    9750:	4641      	mov	r1, r8
    9752:	f7ff fcc9 	bl	90e8 <std::__moneypunct_cache<char, true>::__moneypunct_cache(unsigned int)>
    9756:	4638      	mov	r0, r7
    9758:	4629      	mov	r1, r5
    975a:	f7ff ff3d 	bl	95d8 <std::__moneypunct_cache<char, true>::_M_cache(std::locale const&)>
    975e:	6828      	ldr	r0, [r5, #0]
    9760:	4639      	mov	r1, r7
    9762:	4622      	mov	r2, r4
    9764:	f006 fcf6 	bl	10154 <std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned int)>
    9768:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
    976c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9770:	100006f4 	.word	0x100006f4

00009774 <std::moneypunct<char, false> const& std::use_facet<std::moneypunct<char, false> >(std::locale const&)>:
    9774:	b510      	push	{r4, lr}
    9776:	4604      	mov	r4, r0
    9778:	480a      	ldr	r0, [pc, #40]	; (97a4 <std::moneypunct<char, false> const& std::use_facet<std::moneypunct<char, false> >(std::locale const&)+0x30>)
    977a:	f006 fd0f 	bl	1019c <std::locale::id::_M_id() const>
    977e:	6823      	ldr	r3, [r4, #0]
    9780:	685a      	ldr	r2, [r3, #4]
    9782:	689b      	ldr	r3, [r3, #8]
    9784:	4298      	cmp	r0, r3
    9786:	d202      	bcs.n	978e <std::moneypunct<char, false> const& std::use_facet<std::moneypunct<char, false> >(std::locale const&)+0x1a>
    9788:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    978c:	b908      	cbnz	r0, 9792 <std::moneypunct<char, false> const& std::use_facet<std::moneypunct<char, false> >(std::locale const&)+0x1e>
    978e:	f004 ff9d 	bl	e6cc <std::__throw_bad_cast()>
    9792:	4905      	ldr	r1, [pc, #20]	; (97a8 <std::moneypunct<char, false> const& std::use_facet<std::moneypunct<char, false> >(std::locale const&)+0x34>)
    9794:	4a05      	ldr	r2, [pc, #20]	; (97ac <std::moneypunct<char, false> const& std::use_facet<std::moneypunct<char, false> >(std::locale const&)+0x38>)
    9796:	2300      	movs	r3, #0
    9798:	f005 ff7e 	bl	f698 <__dynamic_cast>
    979c:	b908      	cbnz	r0, 97a2 <std::moneypunct<char, false> const& std::use_facet<std::moneypunct<char, false> >(std::locale const&)+0x2e>
    979e:	f005 ffd5 	bl	f74c <__cxa_bad_cast>
    97a2:	bd10      	pop	{r4, pc}
    97a4:	100006f8 	.word	0x100006f8
    97a8:	0001c4d8 	.word	0x0001c4d8
    97ac:	0001bba0 	.word	0x0001bba0

000097b0 <std::__moneypunct_cache<char, false>::_M_cache(std::locale const&)>:
    97b0:	2301      	movs	r3, #1
    97b2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    97b4:	4604      	mov	r4, r0
    97b6:	f880 3043 	strb.w	r3, [r0, #67]	; 0x43
    97ba:	4608      	mov	r0, r1
    97bc:	460f      	mov	r7, r1
    97be:	f7ff ffd9 	bl	9774 <std::moneypunct<char, false> const& std::use_facet<std::moneypunct<char, false> >(std::locale const&)>
    97c2:	4605      	mov	r5, r0
    97c4:	f7ff fbbc 	bl	8f40 <std::moneypunct<char, false>::decimal_point() const>
    97c8:	7460      	strb	r0, [r4, #17]
    97ca:	4628      	mov	r0, r5
    97cc:	f7ff fbbb 	bl	8f46 <std::moneypunct<char, false>::thousands_sep() const>
    97d0:	74a0      	strb	r0, [r4, #18]
    97d2:	4628      	mov	r0, r5
    97d4:	f7ff fbd6 	bl	8f84 <std::moneypunct<char, false>::frac_digits() const>
    97d8:	4629      	mov	r1, r5
    97da:	62e0      	str	r0, [r4, #44]	; 0x2c
    97dc:	a801      	add	r0, sp, #4
    97de:	f7ff fbb5 	bl	8f4c <std::moneypunct<char, false>::grouping() const>
    97e2:	9b01      	ldr	r3, [sp, #4]
    97e4:	a801      	add	r0, sp, #4
    97e6:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    97ea:	60e3      	str	r3, [r4, #12]
    97ec:	f005 f894 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    97f0:	68e0      	ldr	r0, [r4, #12]
    97f2:	f7f8 fe9e 	bl	2532 <operator new[](unsigned int)>
    97f6:	4606      	mov	r6, r0
    97f8:	4629      	mov	r1, r5
    97fa:	a801      	add	r0, sp, #4
    97fc:	f7ff fba6 	bl	8f4c <std::moneypunct<char, false>::grouping() const>
    9800:	2300      	movs	r3, #0
    9802:	4631      	mov	r1, r6
    9804:	68e2      	ldr	r2, [r4, #12]
    9806:	a801      	add	r0, sp, #4
    9808:	f004 ffde 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    980c:	a801      	add	r0, sp, #4
    980e:	f005 f883 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    9812:	68e3      	ldr	r3, [r4, #12]
    9814:	60a6      	str	r6, [r4, #8]
    9816:	b12b      	cbz	r3, 9824 <std::__moneypunct_cache<char, false>::_M_cache(std::locale const&)+0x74>
    9818:	f996 3000 	ldrsb.w	r3, [r6]
    981c:	2b00      	cmp	r3, #0
    981e:	bfd4      	ite	le
    9820:	2300      	movle	r3, #0
    9822:	2301      	movgt	r3, #1
    9824:	4629      	mov	r1, r5
    9826:	7423      	strb	r3, [r4, #16]
    9828:	a801      	add	r0, sp, #4
    982a:	f7ff fb96 	bl	8f5a <std::moneypunct<char, false>::curr_symbol() const>
    982e:	9b01      	ldr	r3, [sp, #4]
    9830:	a801      	add	r0, sp, #4
    9832:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    9836:	61a3      	str	r3, [r4, #24]
    9838:	f005 f86e 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    983c:	69a0      	ldr	r0, [r4, #24]
    983e:	f7f8 fe78 	bl	2532 <operator new[](unsigned int)>
    9842:	4606      	mov	r6, r0
    9844:	4629      	mov	r1, r5
    9846:	a801      	add	r0, sp, #4
    9848:	f7ff fb87 	bl	8f5a <std::moneypunct<char, false>::curr_symbol() const>
    984c:	69a2      	ldr	r2, [r4, #24]
    984e:	4631      	mov	r1, r6
    9850:	2300      	movs	r3, #0
    9852:	a801      	add	r0, sp, #4
    9854:	f004 ffb8 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    9858:	a801      	add	r0, sp, #4
    985a:	f005 f85d 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    985e:	4629      	mov	r1, r5
    9860:	6166      	str	r6, [r4, #20]
    9862:	a801      	add	r0, sp, #4
    9864:	f7ff fb80 	bl	8f68 <std::moneypunct<char, false>::positive_sign() const>
    9868:	9b01      	ldr	r3, [sp, #4]
    986a:	a801      	add	r0, sp, #4
    986c:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    9870:	6223      	str	r3, [r4, #32]
    9872:	f005 f851 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    9876:	6a20      	ldr	r0, [r4, #32]
    9878:	f7f8 fe5b 	bl	2532 <operator new[](unsigned int)>
    987c:	4606      	mov	r6, r0
    987e:	4629      	mov	r1, r5
    9880:	a801      	add	r0, sp, #4
    9882:	f7ff fb71 	bl	8f68 <std::moneypunct<char, false>::positive_sign() const>
    9886:	6a22      	ldr	r2, [r4, #32]
    9888:	4631      	mov	r1, r6
    988a:	2300      	movs	r3, #0
    988c:	a801      	add	r0, sp, #4
    988e:	f004 ff9b 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    9892:	a801      	add	r0, sp, #4
    9894:	f005 f840 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    9898:	4629      	mov	r1, r5
    989a:	61e6      	str	r6, [r4, #28]
    989c:	a801      	add	r0, sp, #4
    989e:	f7ff fb6a 	bl	8f76 <std::moneypunct<char, false>::negative_sign() const>
    98a2:	9b01      	ldr	r3, [sp, #4]
    98a4:	a801      	add	r0, sp, #4
    98a6:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    98aa:	62a3      	str	r3, [r4, #40]	; 0x28
    98ac:	f005 f834 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    98b0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
    98b2:	f7f8 fe3e 	bl	2532 <operator new[](unsigned int)>
    98b6:	4606      	mov	r6, r0
    98b8:	4629      	mov	r1, r5
    98ba:	a801      	add	r0, sp, #4
    98bc:	f7ff fb5b 	bl	8f76 <std::moneypunct<char, false>::negative_sign() const>
    98c0:	4631      	mov	r1, r6
    98c2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    98c4:	2300      	movs	r3, #0
    98c6:	a801      	add	r0, sp, #4
    98c8:	f004 ff7e 	bl	e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>
    98cc:	a801      	add	r0, sp, #4
    98ce:	f005 f823 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    98d2:	6266      	str	r6, [r4, #36]	; 0x24
    98d4:	4628      	mov	r0, r5
    98d6:	f7ff fb58 	bl	8f8a <std::moneypunct<char, false>::pos_format() const>
    98da:	6320      	str	r0, [r4, #48]	; 0x30
    98dc:	4628      	mov	r0, r5
    98de:	f7ff fb6b 	bl	8fb8 <std::moneypunct<char, false>::neg_format() const>
    98e2:	6360      	str	r0, [r4, #52]	; 0x34
    98e4:	4638      	mov	r0, r7
    98e6:	f7ff fd2d 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    98ea:	4b05      	ldr	r3, [pc, #20]	; (9900 <std::__moneypunct_cache<char, false>::_M_cache(std::locale const&)+0x150>)
    98ec:	6819      	ldr	r1, [r3, #0]
    98ee:	f104 0338 	add.w	r3, r4, #56	; 0x38
    98f2:	f101 020b 	add.w	r2, r1, #11
    98f6:	f7ff fae2 	bl	8ebe <std::ctype<char>::widen(char const*, char const*, char*) const>
    98fa:	b003      	add	sp, #12
    98fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    98fe:	bf00      	nop
    9900:	10000168 	.word	0x10000168

00009904 <std::__use_cache<std::__moneypunct_cache<char, false> >::operator()(std::locale const&) const [clone .isra.31]>:
    9904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9908:	4605      	mov	r5, r0
    990a:	480f      	ldr	r0, [pc, #60]	; (9948 <std::__use_cache<std::__moneypunct_cache<char, false> >::operator()(std::locale const&) const [clone .isra.31]+0x44>)
    990c:	f006 fc46 	bl	1019c <std::locale::id::_M_id() const>
    9910:	682b      	ldr	r3, [r5, #0]
    9912:	4604      	mov	r4, r0
    9914:	68de      	ldr	r6, [r3, #12]
    9916:	f856 8020 	ldr.w	r8, [r6, r0, lsl #2]
    991a:	f1b8 0f00 	cmp.w	r8, #0
    991e:	d10f      	bne.n	9940 <std::__use_cache<std::__moneypunct_cache<char, false> >::operator()(std::locale const&) const [clone .isra.31]+0x3c>
    9920:	2044      	movs	r0, #68	; 0x44
    9922:	f7f8 fde3 	bl	24ec <operator new(unsigned int)>
    9926:	4607      	mov	r7, r0
    9928:	4641      	mov	r1, r8
    992a:	f7ff fbc3 	bl	90b4 <std::__moneypunct_cache<char, false>::__moneypunct_cache(unsigned int)>
    992e:	4638      	mov	r0, r7
    9930:	4629      	mov	r1, r5
    9932:	f7ff ff3d 	bl	97b0 <std::__moneypunct_cache<char, false>::_M_cache(std::locale const&)>
    9936:	6828      	ldr	r0, [r5, #0]
    9938:	4639      	mov	r1, r7
    993a:	4622      	mov	r2, r4
    993c:	f006 fc0a 	bl	10154 <std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned int)>
    9940:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
    9944:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9948:	100006f8 	.word	0x100006f8

0000994c <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)>:
    994c:	b510      	push	{r4, lr}
    994e:	4604      	mov	r4, r0
    9950:	480a      	ldr	r0, [pc, #40]	; (997c <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)+0x30>)
    9952:	f006 fc23 	bl	1019c <std::locale::id::_M_id() const>
    9956:	6823      	ldr	r3, [r4, #0]
    9958:	685a      	ldr	r2, [r3, #4]
    995a:	689b      	ldr	r3, [r3, #8]
    995c:	4298      	cmp	r0, r3
    995e:	d202      	bcs.n	9966 <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)+0x1a>
    9960:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    9964:	b908      	cbnz	r0, 996a <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)+0x1e>
    9966:	f004 feb1 	bl	e6cc <std::__throw_bad_cast()>
    996a:	4905      	ldr	r1, [pc, #20]	; (9980 <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)+0x34>)
    996c:	4a05      	ldr	r2, [pc, #20]	; (9984 <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)+0x38>)
    996e:	2300      	movs	r3, #0
    9970:	f005 fe92 	bl	f698 <__dynamic_cast>
    9974:	b908      	cbnz	r0, 997a <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)+0x2e>
    9976:	f005 fee9 	bl	f74c <__cxa_bad_cast>
    997a:	bd10      	pop	{r4, pc}
    997c:	100006dc 	.word	0x100006dc
    9980:	0001c4d8 	.word	0x0001c4d8
    9984:	0001baec 	.word	0x0001baec

00009988 <bool std::has_facet<std::ctype<char> >(std::locale const&)>:
    9988:	b510      	push	{r4, lr}
    998a:	4604      	mov	r4, r0
    998c:	480a      	ldr	r0, [pc, #40]	; (99b8 <bool std::has_facet<std::ctype<char> >(std::locale const&)+0x30>)
    998e:	f006 fc05 	bl	1019c <std::locale::id::_M_id() const>
    9992:	6823      	ldr	r3, [r4, #0]
    9994:	685a      	ldr	r2, [r3, #4]
    9996:	689b      	ldr	r3, [r3, #8]
    9998:	4298      	cmp	r0, r3
    999a:	d20b      	bcs.n	99b4 <bool std::has_facet<std::ctype<char> >(std::locale const&)+0x2c>
    999c:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    99a0:	b148      	cbz	r0, 99b6 <bool std::has_facet<std::ctype<char> >(std::locale const&)+0x2e>
    99a2:	4906      	ldr	r1, [pc, #24]	; (99bc <bool std::has_facet<std::ctype<char> >(std::locale const&)+0x34>)
    99a4:	4a06      	ldr	r2, [pc, #24]	; (99c0 <bool std::has_facet<std::ctype<char> >(std::locale const&)+0x38>)
    99a6:	2300      	movs	r3, #0
    99a8:	f005 fe76 	bl	f698 <__dynamic_cast>
    99ac:	3000      	adds	r0, #0
    99ae:	bf18      	it	ne
    99b0:	2001      	movne	r0, #1
    99b2:	bd10      	pop	{r4, pc}
    99b4:	2000      	movs	r0, #0
    99b6:	bd10      	pop	{r4, pc}
    99b8:	10000c88 	.word	0x10000c88
    99bc:	0001c4d8 	.word	0x0001c4d8
    99c0:	0001c290 	.word	0x0001c290

000099c4 <bool std::has_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)>:
    99c4:	b510      	push	{r4, lr}
    99c6:	4604      	mov	r4, r0
    99c8:	480a      	ldr	r0, [pc, #40]	; (99f4 <bool std::has_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x30>)
    99ca:	f006 fbe7 	bl	1019c <std::locale::id::_M_id() const>
    99ce:	6823      	ldr	r3, [r4, #0]
    99d0:	685a      	ldr	r2, [r3, #4]
    99d2:	689b      	ldr	r3, [r3, #8]
    99d4:	4298      	cmp	r0, r3
    99d6:	d20b      	bcs.n	99f0 <bool std::has_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x2c>
    99d8:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    99dc:	b148      	cbz	r0, 99f2 <bool std::has_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x2e>
    99de:	4906      	ldr	r1, [pc, #24]	; (99f8 <bool std::has_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x34>)
    99e0:	4a06      	ldr	r2, [pc, #24]	; (99fc <bool std::has_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x38>)
    99e2:	2300      	movs	r3, #0
    99e4:	f005 fe58 	bl	f698 <__dynamic_cast>
    99e8:	3000      	adds	r0, #0
    99ea:	bf18      	it	ne
    99ec:	2001      	movne	r0, #1
    99ee:	bd10      	pop	{r4, pc}
    99f0:	2000      	movs	r0, #0
    99f2:	bd10      	pop	{r4, pc}
    99f4:	100006e0 	.word	0x100006e0
    99f8:	0001c4d8 	.word	0x0001c4d8
    99fc:	0001b9b0 	.word	0x0001b9b0

00009a00 <bool std::has_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)>:
    9a00:	b510      	push	{r4, lr}
    9a02:	4604      	mov	r4, r0
    9a04:	480a      	ldr	r0, [pc, #40]	; (9a30 <bool std::has_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x30>)
    9a06:	f006 fbc9 	bl	1019c <std::locale::id::_M_id() const>
    9a0a:	6823      	ldr	r3, [r4, #0]
    9a0c:	685a      	ldr	r2, [r3, #4]
    9a0e:	689b      	ldr	r3, [r3, #8]
    9a10:	4298      	cmp	r0, r3
    9a12:	d20b      	bcs.n	9a2c <bool std::has_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x2c>
    9a14:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
    9a18:	b148      	cbz	r0, 9a2e <bool std::has_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x2e>
    9a1a:	4906      	ldr	r1, [pc, #24]	; (9a34 <bool std::has_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x34>)
    9a1c:	4a06      	ldr	r2, [pc, #24]	; (9a38 <bool std::has_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)+0x38>)
    9a1e:	2300      	movs	r3, #0
    9a20:	f005 fe3a 	bl	f698 <__dynamic_cast>
    9a24:	3000      	adds	r0, #0
    9a26:	bf18      	it	ne
    9a28:	2001      	movne	r0, #1
    9a2a:	bd10      	pop	{r4, pc}
    9a2c:	2000      	movs	r0, #0
    9a2e:	bd10      	pop	{r4, pc}
    9a30:	100006e4 	.word	0x100006e4
    9a34:	0001c4d8 	.word	0x0001c4d8
    9a38:	0001bac0 	.word	0x0001bac0

00009a3c <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)>:
    9a3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9a40:	2600      	movs	r6, #0
    9a42:	4637      	mov	r7, r6
    9a44:	9d06      	ldr	r5, [sp, #24]
    9a46:	f8dd e01c 	ldr.w	lr, [sp, #28]
    9a4a:	f812 c007 	ldrb.w	r12, [r2, r7]
    9a4e:	ebc5 080e 	rsb	r8, r5, lr
    9a52:	45e0      	cmp	r8, r12
    9a54:	eb02 0407 	add.w	r4, r2, r7
    9a58:	dc02      	bgt.n	9a60 <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0x24>
    9a5a:	1e47      	subs	r7, r0, #1
    9a5c:	462b      	mov	r3, r5
    9a5e:	e00c      	b.n	9a7a <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0x3e>
    9a60:	fa4f f88c 	sxtb.w	r8, r12
    9a64:	f1b8 0f00 	cmp.w	r8, #0
    9a68:	ddf7      	ble.n	9a5a <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0x1e>
    9a6a:	1e5c      	subs	r4, r3, #1
    9a6c:	42a7      	cmp	r7, r4
    9a6e:	ebcc 0e0e 	rsb	lr, r12, lr
    9a72:	bf34      	ite	cc
    9a74:	3701      	addcc	r7, #1
    9a76:	3601      	addcs	r6, #1
    9a78:	e7e7      	b.n	9a4a <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0xe>
    9a7a:	4573      	cmp	r3, lr
    9a7c:	d004      	beq.n	9a88 <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0x4c>
    9a7e:	f813 cb01 	ldrb.w	r12, [r3], #1
    9a82:	f807 cf01 	strb.w	r12, [r7, #1]!
    9a86:	e7f8      	b.n	9a7a <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0x3e>
    9a88:	1b5d      	subs	r5, r3, r5
    9a8a:	f116 36ff 	adds.w	r6, r6, #4294967295
    9a8e:	4428      	add	r0, r5
    9a90:	d30f      	bcc.n	9ab2 <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0x76>
    9a92:	4607      	mov	r7, r0
    9a94:	7001      	strb	r1, [r0, #0]
    9a96:	7825      	ldrb	r5, [r4, #0]
    9a98:	eb03 0e05 	add.w	lr, r3, r5
    9a9c:	4573      	cmp	r3, lr
    9a9e:	d004      	beq.n	9aaa <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0x6e>
    9aa0:	f813 cb01 	ldrb.w	r12, [r3], #1
    9aa4:	f807 cf01 	strb.w	r12, [r7, #1]!
    9aa8:	e7f8      	b.n	9a9c <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0x60>
    9aaa:	3501      	adds	r5, #1
    9aac:	e7ed      	b.n	9a8a <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0x4e>
    9aae:	3501      	adds	r5, #1
    9ab0:	4428      	add	r0, r5
    9ab2:	4294      	cmp	r4, r2
    9ab4:	d00b      	beq.n	9ace <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0x92>
    9ab6:	4606      	mov	r6, r0
    9ab8:	7001      	strb	r1, [r0, #0]
    9aba:	f814 5d01 	ldrb.w	r5, [r4, #-1]!
    9abe:	195f      	adds	r7, r3, r5
    9ac0:	42bb      	cmp	r3, r7
    9ac2:	d0f4      	beq.n	9aae <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0x72>
    9ac4:	f813 eb01 	ldrb.w	lr, [r3], #1
    9ac8:	f806 ef01 	strb.w	lr, [r6, #1]!
    9acc:	e7f8      	b.n	9ac0 <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)+0x84>
    9ace:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00009ad2 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_float(char const*, unsigned int, char, char const*, char*, char*, int&) const>:
    9ad2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    9ad4:	9f08      	ldr	r7, [sp, #32]
    9ad6:	4696      	mov	lr, r2
    9ad8:	468c      	mov	r12, r1
    9ada:	9c09      	ldr	r4, [sp, #36]	; 0x24
    9adc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9ade:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    9ae0:	b10f      	cbz	r7, 9ae6 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_float(char const*, unsigned int, char, char const*, char*, char*, int&) const+0x14>
    9ae2:	1abe      	subs	r6, r7, r2
    9ae4:	e000      	b.n	9ae8 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_float(char const*, unsigned int, char, char const*, char*, char*, int&) const+0x16>
    9ae6:	682e      	ldr	r6, [r5, #0]
    9ae8:	9200      	str	r2, [sp, #0]
    9aea:	4432      	add	r2, r6
    9aec:	9201      	str	r2, [sp, #4]
    9aee:	4620      	mov	r0, r4
    9af0:	4619      	mov	r1, r3
    9af2:	4662      	mov	r2, r12
    9af4:	4673      	mov	r3, lr
    9af6:	f7ff ffa1 	bl	9a3c <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)>
    9afa:	1b04      	subs	r4, r0, r4
    9afc:	b13f      	cbz	r7, 9b0e <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_float(char const*, unsigned int, char, char const*, char*, char*, int&) const+0x3c>
    9afe:	682a      	ldr	r2, [r5, #0]
    9b00:	4639      	mov	r1, r7
    9b02:	1b92      	subs	r2, r2, r6
    9b04:	f009 fdc2 	bl	1368c <memcpy>
    9b08:	682b      	ldr	r3, [r5, #0]
    9b0a:	1b9e      	subs	r6, r3, r6
    9b0c:	4434      	add	r4, r6
    9b0e:	602c      	str	r4, [r5, #0]
    9b10:	b003      	add	sp, #12
    9b12:	bdf0      	pop	{r4, r5, r6, r7, pc}

00009b14 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_int(char const*, unsigned int, char, std::ios_base&, char*, char*, int&) const>:
    9b14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    9b16:	460f      	mov	r7, r1
    9b18:	4616      	mov	r6, r2
    9b1a:	990a      	ldr	r1, [sp, #40]	; 0x28
    9b1c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    9b1e:	9100      	str	r1, [sp, #0]
    9b20:	682a      	ldr	r2, [r5, #0]
    9b22:	9c09      	ldr	r4, [sp, #36]	; 0x24
    9b24:	440a      	add	r2, r1
    9b26:	9201      	str	r2, [sp, #4]
    9b28:	4619      	mov	r1, r3
    9b2a:	4620      	mov	r0, r4
    9b2c:	463a      	mov	r2, r7
    9b2e:	4633      	mov	r3, r6
    9b30:	f7ff ff84 	bl	9a3c <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)>
    9b34:	1b00      	subs	r0, r0, r4
    9b36:	6028      	str	r0, [r5, #0]
    9b38:	b003      	add	sp, #12
    9b3a:	bdf0      	pop	{r4, r5, r6, r7, pc}

00009b3c <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)>:
    9b3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9b40:	461d      	mov	r5, r3
    9b42:	68c3      	ldr	r3, [r0, #12]
    9b44:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
    9b48:	9f08      	ldr	r7, [sp, #32]
    9b4a:	f003 03b0 	and.w	r3, r3, #176	; 0xb0
    9b4e:	2b20      	cmp	r3, #32
    9b50:	4689      	mov	r9, r1
    9b52:	4614      	mov	r4, r2
    9b54:	ebc8 0707 	rsb	r7, r8, r7
    9b58:	d10c      	bne.n	9b74 <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)+0x38>
    9b5a:	4629      	mov	r1, r5
    9b5c:	4610      	mov	r0, r2
    9b5e:	4642      	mov	r2, r8
    9b60:	f009 fd94 	bl	1368c <memcpy>
    9b64:	eb04 0008 	add.w	r0, r4, r8
    9b68:	4649      	mov	r1, r9
    9b6a:	463a      	mov	r2, r7
    9b6c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9b70:	f009 bdb2 	b.w	136d8 <memset>
    9b74:	2b10      	cmp	r3, #16
    9b76:	d11a      	bne.n	9bae <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)+0x72>
    9b78:	306c      	adds	r0, #108	; 0x6c
    9b7a:	f7ff fbe3 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    9b7e:	212d      	movs	r1, #45	; 0x2d
    9b80:	4606      	mov	r6, r0
    9b82:	f7ff f98b 	bl	8e9c <std::ctype<char>::widen(char) const>
    9b86:	782b      	ldrb	r3, [r5, #0]
    9b88:	4283      	cmp	r3, r0
    9b8a:	d01e      	beq.n	9bca <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)+0x8e>
    9b8c:	4630      	mov	r0, r6
    9b8e:	212b      	movs	r1, #43	; 0x2b
    9b90:	f7ff f984 	bl	8e9c <std::ctype<char>::widen(char) const>
    9b94:	782b      	ldrb	r3, [r5, #0]
    9b96:	4283      	cmp	r3, r0
    9b98:	d017      	beq.n	9bca <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)+0x8e>
    9b9a:	4630      	mov	r0, r6
    9b9c:	2130      	movs	r1, #48	; 0x30
    9b9e:	f7ff f97d 	bl	8e9c <std::ctype<char>::widen(char) const>
    9ba2:	782b      	ldrb	r3, [r5, #0]
    9ba4:	4283      	cmp	r3, r0
    9ba6:	d102      	bne.n	9bae <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)+0x72>
    9ba8:	f1b8 0f01 	cmp.w	r8, #1
    9bac:	dc12      	bgt.n	9bd4 <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)+0x98>
    9bae:	2600      	movs	r6, #0
    9bb0:	4649      	mov	r1, r9
    9bb2:	463a      	mov	r2, r7
    9bb4:	4620      	mov	r0, r4
    9bb6:	f009 fd8f 	bl	136d8 <memset>
    9bba:	19e0      	adds	r0, r4, r7
    9bbc:	19a9      	adds	r1, r5, r6
    9bbe:	ebc6 0208 	rsb	r2, r6, r8
    9bc2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9bc6:	f009 bd61 	b.w	1368c <memcpy>
    9bca:	782b      	ldrb	r3, [r5, #0]
    9bcc:	2601      	movs	r6, #1
    9bce:	f804 3b01 	strb.w	r3, [r4], #1
    9bd2:	e7ed      	b.n	9bb0 <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)+0x74>
    9bd4:	4630      	mov	r0, r6
    9bd6:	2178      	movs	r1, #120	; 0x78
    9bd8:	f7ff f960 	bl	8e9c <std::ctype<char>::widen(char) const>
    9bdc:	786b      	ldrb	r3, [r5, #1]
    9bde:	4283      	cmp	r3, r0
    9be0:	d006      	beq.n	9bf0 <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)+0xb4>
    9be2:	4630      	mov	r0, r6
    9be4:	2158      	movs	r1, #88	; 0x58
    9be6:	f7ff f959 	bl	8e9c <std::ctype<char>::widen(char) const>
    9bea:	786b      	ldrb	r3, [r5, #1]
    9bec:	4283      	cmp	r3, r0
    9bee:	d1de      	bne.n	9bae <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)+0x72>
    9bf0:	782b      	ldrb	r3, [r5, #0]
    9bf2:	3402      	adds	r4, #2
    9bf4:	f804 3c02 	strb.w	r3, [r4, #-2]
    9bf8:	786b      	ldrb	r3, [r5, #1]
    9bfa:	2602      	movs	r6, #2
    9bfc:	f804 3c01 	strb.w	r3, [r4, #-1]
    9c00:	e7d6      	b.n	9bb0 <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)+0x74>

00009c02 <int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)>:
    9c02:	b570      	push	{r4, r5, r6, lr}
    9c04:	f89d 4010 	ldrb.w	r4, [sp, #16]
    9c08:	b16c      	cbz	r4, 9c26 <int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)+0x24>
    9c0a:	4603      	mov	r3, r0
    9c0c:	240a      	movs	r4, #10
    9c0e:	fbb1 f5f4 	udiv	r5, r1, r4
    9c12:	fb04 1115 	mls	r1, r4, r5, r1
    9c16:	4411      	add	r1, r2
    9c18:	7909      	ldrb	r1, [r1, #4]
    9c1a:	f803 1d01 	strb.w	r1, [r3, #-1]!
    9c1e:	4629      	mov	r1, r5
    9c20:	2d00      	cmp	r5, #0
    9c22:	d1f3      	bne.n	9c0c <int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)+0xa>
    9c24:	e01b      	b.n	9c5e <int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)+0x5c>
    9c26:	f003 044a 	and.w	r4, r3, #74	; 0x4a
    9c2a:	2c40      	cmp	r4, #64	; 0x40
    9c2c:	d109      	bne.n	9c42 <int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)+0x40>
    9c2e:	4603      	mov	r3, r0
    9c30:	f001 0407 	and.w	r4, r1, #7
    9c34:	4414      	add	r4, r2
    9c36:	7924      	ldrb	r4, [r4, #4]
    9c38:	08c9      	lsrs	r1, r1, #3
    9c3a:	f803 4d01 	strb.w	r4, [r3, #-1]!
    9c3e:	d1f7      	bne.n	9c30 <int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)+0x2e>
    9c40:	e00d      	b.n	9c5e <int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)+0x5c>
    9c42:	f413 4f80 	tst.w	r3, #16384	; 0x4000
    9c46:	4603      	mov	r3, r0
    9c48:	bf14      	ite	ne
    9c4a:	2614      	movne	r6, #20
    9c4c:	2604      	moveq	r6, #4
    9c4e:	f001 040f 	and.w	r4, r1, #15
    9c52:	1995      	adds	r5, r2, r6
    9c54:	5d2c      	ldrb	r4, [r5, r4]
    9c56:	0909      	lsrs	r1, r1, #4
    9c58:	f803 4d01 	strb.w	r4, [r3, #-1]!
    9c5c:	d1f7      	bne.n	9c4e <int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)+0x4c>
    9c5e:	1ac0      	subs	r0, r0, r3
    9c60:	bd70      	pop	{r4, r5, r6, pc}

00009c62 <int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)>:
    9c62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9c66:	4614      	mov	r4, r2
    9c68:	f89d 2020 	ldrb.w	r2, [sp, #32]
    9c6c:	461d      	mov	r5, r3
    9c6e:	4607      	mov	r7, r0
    9c70:	f8dd 8018 	ldr.w	r8, [sp, #24]
    9c74:	9b07      	ldr	r3, [sp, #28]
    9c76:	b1b2      	cbz	r2, 9ca6 <int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)+0x44>
    9c78:	4606      	mov	r6, r0
    9c7a:	4620      	mov	r0, r4
    9c7c:	4629      	mov	r1, r5
    9c7e:	220a      	movs	r2, #10
    9c80:	2300      	movs	r3, #0
    9c82:	f008 fba7 	bl	123d4 <__aeabi_uldivmod>
    9c86:	4442      	add	r2, r8
    9c88:	7913      	ldrb	r3, [r2, #4]
    9c8a:	4620      	mov	r0, r4
    9c8c:	f806 3d01 	strb.w	r3, [r6, #-1]!
    9c90:	4629      	mov	r1, r5
    9c92:	2300      	movs	r3, #0
    9c94:	220a      	movs	r2, #10
    9c96:	f008 fb9d 	bl	123d4 <__aeabi_uldivmod>
    9c9a:	4604      	mov	r4, r0
    9c9c:	460d      	mov	r5, r1
    9c9e:	ea54 0305 	orrs.w	r3, r4, r5
    9ca2:	d1ea      	bne.n	9c7a <int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)+0x18>
    9ca4:	e02a      	b.n	9cfc <int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)+0x9a>
    9ca6:	f003 024a 	and.w	r2, r3, #74	; 0x4a
    9caa:	2a40      	cmp	r2, #64	; 0x40
    9cac:	d110      	bne.n	9cd0 <int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)+0x6e>
    9cae:	4606      	mov	r6, r0
    9cb0:	f004 0307 	and.w	r3, r4, #7
    9cb4:	4443      	add	r3, r8
    9cb6:	791b      	ldrb	r3, [r3, #4]
    9cb8:	08ea      	lsrs	r2, r5, #3
    9cba:	f806 3d01 	strb.w	r3, [r6, #-1]!
    9cbe:	08e3      	lsrs	r3, r4, #3
    9cc0:	ea43 7345 	orr.w	r3, r3, r5, lsl #29
    9cc4:	461c      	mov	r4, r3
    9cc6:	4615      	mov	r5, r2
    9cc8:	ea54 0305 	orrs.w	r3, r4, r5
    9ccc:	d1f0      	bne.n	9cb0 <int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)+0x4e>
    9cce:	e015      	b.n	9cfc <int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)+0x9a>
    9cd0:	4606      	mov	r6, r0
    9cd2:	f413 4f80 	tst.w	r3, #16384	; 0x4000
    9cd6:	bf14      	ite	ne
    9cd8:	2114      	movne	r1, #20
    9cda:	2104      	moveq	r1, #4
    9cdc:	f004 030f 	and.w	r3, r4, #15
    9ce0:	eb08 0201 	add.w	r2, r8, r1
    9ce4:	5cd3      	ldrb	r3, [r2, r3]
    9ce6:	092a      	lsrs	r2, r5, #4
    9ce8:	f806 3d01 	strb.w	r3, [r6, #-1]!
    9cec:	0923      	lsrs	r3, r4, #4
    9cee:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
    9cf2:	461c      	mov	r4, r3
    9cf4:	4615      	mov	r5, r2
    9cf6:	ea54 0305 	orrs.w	r3, r4, r5
    9cfa:	d1ef      	bne.n	9cdc <int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)+0x7a>
    9cfc:	1bb8      	subs	r0, r7, r6
    9cfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00009d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>:
    9d02:	b510      	push	{r4, lr}
    9d04:	4604      	mov	r4, r0
    9d06:	6800      	ldr	r0, [r0, #0]
    9d08:	b120      	cbz	r0, 9d14 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()+0x12>
    9d0a:	f004 fb8a 	bl	e422 <std::basic_streambuf<char, std::char_traits<char> >::sbumpc()>
    9d0e:	f04f 33ff 	mov.w	r3, #4294967295
    9d12:	6063      	str	r3, [r4, #4]
    9d14:	4620      	mov	r0, r4
    9d16:	bd10      	pop	{r4, pc}

00009d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>:
    9d18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    9d1a:	e88d 0006 	stmia.w	sp, {r1, r2}
    9d1e:	f89d 5004 	ldrb.w	r5, [sp, #4]
    9d22:	4606      	mov	r6, r0
    9d24:	466c      	mov	r4, sp
    9d26:	9f08      	ldr	r7, [sp, #32]
    9d28:	b93d      	cbnz	r5, 9d3a <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)+0x22>
    9d2a:	4608      	mov	r0, r1
    9d2c:	463a      	mov	r2, r7
    9d2e:	4619      	mov	r1, r3
    9d30:	f004 fb8c 	bl	e44c <std::basic_streambuf<char, std::char_traits<char> >::sputn(char const*, int)>
    9d34:	42b8      	cmp	r0, r7
    9d36:	bf18      	it	ne
    9d38:	2501      	movne	r5, #1
    9d3a:	f88d 5004 	strb.w	r5, [sp, #4]
    9d3e:	e894 0003 	ldmia.w	r4, {r0, r1}
    9d42:	e886 0003 	stmia.w	r6, {r0, r1}
    9d46:	4630      	mov	r0, r6
    9d48:	b003      	add	sp, #12
    9d4a:	bdf0      	pop	{r4, r5, r6, r7, pc}

00009d4c <std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, tm const*, char, char) const>:
    9d4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    9d50:	b0a7      	sub	sp, #156	; 0x9c
    9d52:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
    9d54:	4607      	mov	r7, r0
    9d56:	356c      	adds	r5, #108	; 0x6c
    9d58:	4628      	mov	r0, r5
    9d5a:	ac02      	add	r4, sp, #8
    9d5c:	e884 000c 	stmia.w	r4, {r2, r3}
    9d60:	f89d 80c4 	ldrb.w	r8, [sp, #196]	; 0xc4
    9d64:	f89d 60c8 	ldrb.w	r6, [sp, #200]	; 0xc8
    9d68:	f7ff faec 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    9d6c:	4681      	mov	r9, r0
    9d6e:	4628      	mov	r0, r5
    9d70:	f7ff fdec 	bl	994c <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)>
    9d74:	2125      	movs	r1, #37	; 0x25
    9d76:	4605      	mov	r5, r0
    9d78:	4648      	mov	r0, r9
    9d7a:	f7ff f88f 	bl	8e9c <std::ctype<char>::widen(char) const>
    9d7e:	f88d 0014 	strb.w	r0, [sp, #20]
    9d82:	b926      	cbnz	r6, 9d8e <std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, tm const*, char, char) const+0x42>
    9d84:	f88d 8015 	strb.w	r8, [sp, #21]
    9d88:	f88d 6016 	strb.w	r6, [sp, #22]
    9d8c:	e006      	b.n	9d9c <std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, tm const*, char, char) const+0x50>
    9d8e:	2300      	movs	r3, #0
    9d90:	f88d 6015 	strb.w	r6, [sp, #21]
    9d94:	f88d 8016 	strb.w	r8, [sp, #22]
    9d98:	f88d 3017 	strb.w	r3, [sp, #23]
    9d9c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
    9d9e:	a906      	add	r1, sp, #24
    9da0:	9300      	str	r3, [sp, #0]
    9da2:	4628      	mov	r0, r5
    9da4:	ab05      	add	r3, sp, #20
    9da6:	2280      	movs	r2, #128	; 0x80
    9da8:	f7fe f9dc 	bl	8164 <std::__timepunct<char>::_M_put(char*, unsigned int, char const*, tm const*) const>
    9dac:	a806      	add	r0, sp, #24
    9dae:	f00b f9f3 	bl	15198 <strlen>
    9db2:	9000      	str	r0, [sp, #0]
    9db4:	e894 0006 	ldmia.w	r4, {r1, r2}
    9db8:	4638      	mov	r0, r7
    9dba:	ab06      	add	r3, sp, #24
    9dbc:	f7ff ffac 	bl	9d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>
    9dc0:	4638      	mov	r0, r7
    9dc2:	b027      	add	sp, #156	; 0x9c
    9dc4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00009dc8 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const>:
    9dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    9dcc:	b08d      	sub	sp, #52	; 0x34
    9dce:	af04      	add	r7, sp, #16
    9dd0:	6cbe      	ldr	r6, [r7, #72]	; 0x48
    9dd2:	60b9      	str	r1, [r7, #8]
    9dd4:	4683      	mov	r11, r0
    9dd6:	f107 0110 	add.w	r1, r7, #16
    9dda:	f106 006c 	add.w	r0, r6, #108	; 0x6c
    9dde:	e881 000c 	stmia.w	r1, {r2, r3}
    9de2:	f8d7 8050 	ldr.w	r8, [r7, #80]	; 0x50
    9de6:	f7ff fb79 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    9dea:	68f5      	ldr	r5, [r6, #12]
    9dec:	f100 0326 	add.w	r3, r0, #38	; 0x26
    9df0:	f005 0a4a 	and.w	r10, r5, #74	; 0x4a
    9df4:	b088      	sub	sp, #32
    9df6:	f1ba 0f40 	cmp.w	r10, #64	; 0x40
    9dfa:	4604      	mov	r4, r0
    9dfc:	60fb      	str	r3, [r7, #12]
    9dfe:	f10d 0c10 	add.w	r12, sp, #16
    9e02:	d002      	beq.n	9e0a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0x42>
    9e04:	f1ba 0f08 	cmp.w	r10, #8
    9e08:	d102      	bne.n	9e10 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0x48>
    9e0a:	f04f 0900 	mov.w	r9, #0
    9e0e:	e004      	b.n	9e1a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0x52>
    9e10:	f1b8 0f00 	cmp.w	r8, #0
    9e14:	dd03      	ble.n	9e1e <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0x56>
    9e16:	f04f 0901 	mov.w	r9, #1
    9e1a:	4641      	mov	r1, r8
    9e1c:	e003      	b.n	9e26 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0x5e>
    9e1e:	f1c8 0100 	rsb	r1, r8, #0
    9e22:	f04f 0901 	mov.w	r9, #1
    9e26:	f10c 0014 	add.w	r0, r12, #20
    9e2a:	68fa      	ldr	r2, [r7, #12]
    9e2c:	462b      	mov	r3, r5
    9e2e:	f8cd 9000 	str.w	r9, [sp]
    9e32:	f8c7 c004 	str.w	r12, [r7, #4]
    9e36:	f7ff fee4 	bl	9c02 <int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)>
    9e3a:	f8d7 c004 	ldr.w	r12, [r7, #4]
    9e3e:	7c22      	ldrb	r2, [r4, #16]
    9e40:	f1c0 0314 	rsb	r3, r0, #20
    9e44:	61f8      	str	r0, [r7, #28]
    9e46:	4463      	add	r3, r12
    9e48:	b1d2      	cbz	r2, 9e80 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0xb8>
    9e4a:	0040      	lsls	r0, r0, #1
    9e4c:	3010      	adds	r0, #16
    9e4e:	f020 0007 	bic.w	r0, r0, #7
    9e52:	ebad 0d00 	sub.w	sp, sp, r0
    9e56:	f10d 0c12 	add.w	r12, sp, #18
    9e5a:	f894 e025 	ldrb.w	lr, [r4, #37]	; 0x25
    9e5e:	e88d 1040 	stmia.w	sp, {r6, r12}
    9e62:	9302      	str	r3, [sp, #8]
    9e64:	f107 031c 	add.w	r3, r7, #28
    9e68:	9303      	str	r3, [sp, #12]
    9e6a:	68b8      	ldr	r0, [r7, #8]
    9e6c:	4673      	mov	r3, lr
    9e6e:	68a1      	ldr	r1, [r4, #8]
    9e70:	68e2      	ldr	r2, [r4, #12]
    9e72:	f8c7 c004 	str.w	r12, [r7, #4]
    9e76:	f7ff fe4d 	bl	9b14 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_int(char const*, unsigned int, char, std::ios_base&, char*, char*, int&) const>
    9e7a:	f8d7 c004 	ldr.w	r12, [r7, #4]
    9e7e:	4663      	mov	r3, r12
    9e80:	69fa      	ldr	r2, [r7, #28]
    9e82:	f1b9 0f00 	cmp.w	r9, #0
    9e86:	d008      	beq.n	9e9a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0xd2>
    9e88:	f1b8 0f00 	cmp.w	r8, #0
    9e8c:	db02      	blt.n	9e94 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0xcc>
    9e8e:	0528      	lsls	r0, r5, #20
    9e90:	d42d      	bmi.n	9eee <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0x126>
    9e92:	e016      	b.n	9ec2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0xfa>
    9e94:	f894 1026 	ldrb.w	r1, [r4, #38]	; 0x26
    9e98:	e02b      	b.n	9ef2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0x12a>
    9e9a:	05a9      	lsls	r1, r5, #22
    9e9c:	d511      	bpl.n	9ec2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0xfa>
    9e9e:	f1b8 0f00 	cmp.w	r8, #0
    9ea2:	d12c      	bne.n	9efe <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0x136>
    9ea4:	e00d      	b.n	9ec2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0xfa>
    9ea6:	68f9      	ldr	r1, [r7, #12]
    9ea8:	f3c5 3580 	ubfx	r5, r5, #14, #1
    9eac:	4429      	add	r1, r5
    9eae:	7889      	ldrb	r1, [r1, #2]
    9eb0:	3202      	adds	r2, #2
    9eb2:	f803 1c01 	strb.w	r1, [r3, #-1]
    9eb6:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
    9eba:	61fa      	str	r2, [r7, #28]
    9ebc:	f803 1c02 	strb.w	r1, [r3, #-2]
    9ec0:	3b02      	subs	r3, #2
    9ec2:	68b4      	ldr	r4, [r6, #8]
    9ec4:	69f9      	ldr	r1, [r7, #28]
    9ec6:	428c      	cmp	r4, r1
    9ec8:	dd1f      	ble.n	9f0a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0x142>
    9eca:	f104 020e 	add.w	r2, r4, #14
    9ece:	f022 0207 	bic.w	r2, r2, #7
    9ed2:	ebad 0d02 	sub.w	sp, sp, r2
    9ed6:	ad04      	add	r5, sp, #16
    9ed8:	9101      	str	r1, [sp, #4]
    9eda:	9400      	str	r4, [sp, #0]
    9edc:	4630      	mov	r0, r6
    9ede:	f897 104c 	ldrb.w	r1, [r7, #76]	; 0x4c
    9ee2:	462a      	mov	r2, r5
    9ee4:	f7ff fe2a 	bl	9b3c <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)>
    9ee8:	61fc      	str	r4, [r7, #28]
    9eea:	462b      	mov	r3, r5
    9eec:	e00d      	b.n	9f0a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0x142>
    9eee:	f894 1027 	ldrb.w	r1, [r4, #39]	; 0x27
    9ef2:	3201      	adds	r2, #1
    9ef4:	f803 1c01 	strb.w	r1, [r3, #-1]
    9ef8:	61fa      	str	r2, [r7, #28]
    9efa:	3b01      	subs	r3, #1
    9efc:	e7e1      	b.n	9ec2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0xfa>
    9efe:	f1ba 0f40 	cmp.w	r10, #64	; 0x40
    9f02:	d1d0      	bne.n	9ea6 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0xde>
    9f04:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
    9f08:	e7f3      	b.n	9ef2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const+0x12a>
    9f0a:	2200      	movs	r2, #0
    9f0c:	60b2      	str	r2, [r6, #8]
    9f0e:	69fa      	ldr	r2, [r7, #28]
    9f10:	4658      	mov	r0, r11
    9f12:	9200      	str	r2, [sp, #0]
    9f14:	f107 0210 	add.w	r2, r7, #16
    9f18:	ca06      	ldmia	r2, {r1, r2}
    9f1a:	f7ff fefd 	bl	9d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>
    9f1e:	4658      	mov	r0, r11
    9f20:	3724      	adds	r7, #36	; 0x24
    9f22:	46bd      	mov	sp, r7
    9f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00009f28 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const>:
    9f28:	b530      	push	{r4, r5, lr}
    9f2a:	4605      	mov	r5, r0
    9f2c:	b087      	sub	sp, #28
    9f2e:	ac04      	add	r4, sp, #16
    9f30:	e884 000c 	stmia.w	r4, {r2, r3}
    9f34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    9f36:	9300      	str	r3, [sp, #0]
    9f38:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
    9f3c:	9301      	str	r3, [sp, #4]
    9f3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    9f40:	9302      	str	r3, [sp, #8]
    9f42:	e894 000c 	ldmia.w	r4, {r2, r3}
    9f46:	f7ff ff3f 	bl	9dc8 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const>
    9f4a:	4628      	mov	r0, r5
    9f4c:	b007      	add	sp, #28
    9f4e:	bd30      	pop	{r4, r5, pc}

00009f50 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const>:
    9f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    9f54:	b08d      	sub	sp, #52	; 0x34
    9f56:	af04      	add	r7, sp, #16
    9f58:	f8d7 a048 	ldr.w	r10, [r7, #72]	; 0x48
    9f5c:	f107 0510 	add.w	r5, r7, #16
    9f60:	e885 000c 	stmia.w	r5, {r2, r3}
    9f64:	f8da 300c 	ldr.w	r3, [r10, #12]
    9f68:	60b8      	str	r0, [r7, #8]
    9f6a:	f013 0f01 	tst.w	r3, #1
    9f6e:	f897 204c 	ldrb.w	r2, [r7, #76]	; 0x4c
    9f72:	f897 6050 	ldrb.w	r6, [r7, #80]	; 0x50
    9f76:	60fb      	str	r3, [r7, #12]
    9f78:	f107 0418 	add.w	r4, r7, #24
    9f7c:	d109      	bne.n	9f92 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const+0x42>
    9f7e:	9201      	str	r2, [sp, #4]
    9f80:	f8cd a000 	str.w	r10, [sp]
    9f84:	9602      	str	r6, [sp, #8]
    9f86:	4620      	mov	r0, r4
    9f88:	e895 000c 	ldmia.w	r5, {r2, r3}
    9f8c:	f7ff ff1c 	bl	9dc8 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const>
    9f90:	e054      	b.n	a03c <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const+0xec>
    9f92:	f10a 006c 	add.w	r0, r10, #108	; 0x6c
    9f96:	607a      	str	r2, [r7, #4]
    9f98:	f7ff faa0 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    9f9c:	687a      	ldr	r2, [r7, #4]
    9f9e:	b126      	cbz	r6, 9faa <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const+0x5a>
    9fa0:	f8d0 9014 	ldr.w	r9, [r0, #20]
    9fa4:	f8d0 8018 	ldr.w	r8, [r0, #24]
    9fa8:	e003      	b.n	9fb2 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const+0x62>
    9faa:	f8d0 901c 	ldr.w	r9, [r0, #28]
    9fae:	f8d0 8020 	ldr.w	r8, [r0, #32]
    9fb2:	f8da 6008 	ldr.w	r6, [r10, #8]
    9fb6:	4546      	cmp	r6, r8
    9fb8:	dd35      	ble.n	a026 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const+0xd6>
    9fba:	ebc8 0606 	rsb	r6, r8, r6
    9fbe:	f106 010e 	add.w	r1, r6, #14
    9fc2:	f021 0107 	bic.w	r1, r1, #7
    9fc6:	ebad 0d01 	sub.w	sp, sp, r1
    9fca:	f10d 0b10 	add.w	r11, sp, #16
    9fce:	4611      	mov	r1, r2
    9fd0:	4658      	mov	r0, r11
    9fd2:	4632      	mov	r2, r6
    9fd4:	f009 fb80 	bl	136d8 <memset>
    9fd8:	68fb      	ldr	r3, [r7, #12]
    9fda:	2200      	movs	r2, #0
    9fdc:	f8ca 2008 	str.w	r2, [r10, #8]
    9fe0:	f003 0ab0 	and.w	r10, r3, #176	; 0xb0
    9fe4:	f1ba 0f20 	cmp.w	r10, #32
    9fe8:	d111      	bne.n	a00e <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const+0xbe>
    9fea:	e895 0006 	ldmia.w	r5, {r1, r2}
    9fee:	4620      	mov	r0, r4
    9ff0:	464b      	mov	r3, r9
    9ff2:	f8cd 8000 	str.w	r8, [sp]
    9ff6:	f7ff fe8f 	bl	9d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>
    9ffa:	e894 0003 	ldmia.w	r4, {r0, r1}
    9ffe:	6138      	str	r0, [r7, #16]
    a000:	7539      	strb	r1, [r7, #20]
    a002:	9600      	str	r6, [sp, #0]
    a004:	4620      	mov	r0, r4
    a006:	e895 0006 	ldmia.w	r5, {r1, r2}
    a00a:	465b      	mov	r3, r11
    a00c:	e014      	b.n	a038 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const+0xe8>
    a00e:	4620      	mov	r0, r4
    a010:	e895 0006 	ldmia.w	r5, {r1, r2}
    a014:	9600      	str	r6, [sp, #0]
    a016:	465b      	mov	r3, r11
    a018:	f7ff fe7e 	bl	9d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>
    a01c:	e894 0003 	ldmia.w	r4, {r0, r1}
    a020:	6138      	str	r0, [r7, #16]
    a022:	7539      	strb	r1, [r7, #20]
    a024:	e002      	b.n	a02c <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const+0xdc>
    a026:	2200      	movs	r2, #0
    a028:	f8ca 2008 	str.w	r2, [r10, #8]
    a02c:	4620      	mov	r0, r4
    a02e:	e895 0006 	ldmia.w	r5, {r1, r2}
    a032:	464b      	mov	r3, r9
    a034:	f8cd 8000 	str.w	r8, [sp]
    a038:	f7ff fe6e 	bl	9d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>
    a03c:	e894 0003 	ldmia.w	r4, {r0, r1}
    a040:	68bb      	ldr	r3, [r7, #8]
    a042:	6138      	str	r0, [r7, #16]
    a044:	7539      	strb	r1, [r7, #20]
    a046:	e895 0003 	ldmia.w	r5, {r0, r1}
    a04a:	e883 0003 	stmia.w	r3, {r0, r1}
    a04e:	4618      	mov	r0, r3
    a050:	3724      	adds	r7, #36	; 0x24
    a052:	46bd      	mov	sp, r7
    a054:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000a058 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const>:
    a058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    a05c:	b08b      	sub	sp, #44	; 0x2c
    a05e:	af04      	add	r7, sp, #16
    a060:	6c3e      	ldr	r6, [r7, #64]	; 0x40
    a062:	6079      	str	r1, [r7, #4]
    a064:	4682      	mov	r10, r0
    a066:	f107 0108 	add.w	r1, r7, #8
    a06a:	f106 006c 	add.w	r0, r6, #108	; 0x6c
    a06e:	e881 000c 	stmia.w	r1, {r2, r3}
    a072:	f7ff fa33 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    a076:	68f4      	ldr	r4, [r6, #12]
    a078:	b088      	sub	sp, #32
    a07a:	f004 084a 	and.w	r8, r4, #74	; 0x4a
    a07e:	f1b8 0f40 	cmp.w	r8, #64	; 0x40
    a082:	4605      	mov	r5, r0
    a084:	f100 0b26 	add.w	r11, r0, #38	; 0x26
    a088:	f10d 0c10 	add.w	r12, sp, #16
    a08c:	d005      	beq.n	a09a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const+0x42>
    a08e:	f1b8 0908 	subs.w	r9, r8, #8
    a092:	bf18      	it	ne
    a094:	f04f 0901 	movne.w	r9, #1
    a098:	e001      	b.n	a09e <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const+0x46>
    a09a:	f04f 0900 	mov.w	r9, #0
    a09e:	f10c 0014 	add.w	r0, r12, #20
    a0a2:	465a      	mov	r2, r11
    a0a4:	4623      	mov	r3, r4
    a0a6:	f8cd 9000 	str.w	r9, [sp]
    a0aa:	6cb9      	ldr	r1, [r7, #72]	; 0x48
    a0ac:	f8c7 c000 	str.w	r12, [r7]
    a0b0:	f7ff fda7 	bl	9c02 <int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)>
    a0b4:	f8d7 c000 	ldr.w	r12, [r7]
    a0b8:	7c2a      	ldrb	r2, [r5, #16]
    a0ba:	f1c0 0314 	rsb	r3, r0, #20
    a0be:	6178      	str	r0, [r7, #20]
    a0c0:	4463      	add	r3, r12
    a0c2:	b1d2      	cbz	r2, a0fa <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const+0xa2>
    a0c4:	0040      	lsls	r0, r0, #1
    a0c6:	3010      	adds	r0, #16
    a0c8:	f020 0007 	bic.w	r0, r0, #7
    a0cc:	ebad 0d00 	sub.w	sp, sp, r0
    a0d0:	f10d 0c12 	add.w	r12, sp, #18
    a0d4:	f895 e025 	ldrb.w	lr, [r5, #37]	; 0x25
    a0d8:	e88d 1040 	stmia.w	sp, {r6, r12}
    a0dc:	9302      	str	r3, [sp, #8]
    a0de:	f107 0314 	add.w	r3, r7, #20
    a0e2:	9303      	str	r3, [sp, #12]
    a0e4:	6878      	ldr	r0, [r7, #4]
    a0e6:	4673      	mov	r3, lr
    a0e8:	68a9      	ldr	r1, [r5, #8]
    a0ea:	68ea      	ldr	r2, [r5, #12]
    a0ec:	f8c7 c000 	str.w	r12, [r7]
    a0f0:	f7ff fd10 	bl	9b14 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_int(char const*, unsigned int, char, std::ios_base&, char*, char*, int&) const>
    a0f4:	f8d7 c000 	ldr.w	r12, [r7]
    a0f8:	4663      	mov	r3, r12
    a0fa:	f1b9 0f00 	cmp.w	r9, #0
    a0fe:	d10e      	bne.n	a11e <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const+0xc6>
    a100:	05a2      	lsls	r2, r4, #22
    a102:	d50c      	bpl.n	a11e <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const+0xc6>
    a104:	6cba      	ldr	r2, [r7, #72]	; 0x48
    a106:	b152      	cbz	r2, a11e <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const+0xc6>
    a108:	f1b8 0f40 	cmp.w	r8, #64	; 0x40
    a10c:	697a      	ldr	r2, [r7, #20]
    a10e:	d11c      	bne.n	a14a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const+0xf2>
    a110:	f895 102a 	ldrb.w	r1, [r5, #42]	; 0x2a
    a114:	3201      	adds	r2, #1
    a116:	f803 1c01 	strb.w	r1, [r3, #-1]
    a11a:	617a      	str	r2, [r7, #20]
    a11c:	3b01      	subs	r3, #1
    a11e:	68b4      	ldr	r4, [r6, #8]
    a120:	6979      	ldr	r1, [r7, #20]
    a122:	428c      	cmp	r4, r1
    a124:	dd20      	ble.n	a168 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const+0x110>
    a126:	f104 020e 	add.w	r2, r4, #14
    a12a:	f022 0207 	bic.w	r2, r2, #7
    a12e:	ebad 0d02 	sub.w	sp, sp, r2
    a132:	ad04      	add	r5, sp, #16
    a134:	9101      	str	r1, [sp, #4]
    a136:	9400      	str	r4, [sp, #0]
    a138:	4630      	mov	r0, r6
    a13a:	f897 1044 	ldrb.w	r1, [r7, #68]	; 0x44
    a13e:	462a      	mov	r2, r5
    a140:	f7ff fcfc 	bl	9b3c <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)>
    a144:	617c      	str	r4, [r7, #20]
    a146:	462b      	mov	r3, r5
    a148:	e00e      	b.n	a168 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const+0x110>
    a14a:	f3c4 3480 	ubfx	r4, r4, #14, #1
    a14e:	44a3      	add	r11, r4
    a150:	f89b 1002 	ldrb.w	r1, [r11, #2]
    a154:	3202      	adds	r2, #2
    a156:	f803 1c01 	strb.w	r1, [r3, #-1]
    a15a:	f895 102a 	ldrb.w	r1, [r5, #42]	; 0x2a
    a15e:	617a      	str	r2, [r7, #20]
    a160:	f803 1c02 	strb.w	r1, [r3, #-2]
    a164:	3b02      	subs	r3, #2
    a166:	e7da      	b.n	a11e <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const+0xc6>
    a168:	2200      	movs	r2, #0
    a16a:	60b2      	str	r2, [r6, #8]
    a16c:	697a      	ldr	r2, [r7, #20]
    a16e:	4650      	mov	r0, r10
    a170:	9200      	str	r2, [sp, #0]
    a172:	f107 0208 	add.w	r2, r7, #8
    a176:	ca06      	ldmia	r2, {r1, r2}
    a178:	f7ff fdce 	bl	9d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>
    a17c:	4650      	mov	r0, r10
    a17e:	371c      	adds	r7, #28
    a180:	46bd      	mov	sp, r7
    a182:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000a186 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const>:
    a186:	b530      	push	{r4, r5, lr}
    a188:	4605      	mov	r5, r0
    a18a:	b087      	sub	sp, #28
    a18c:	ac04      	add	r4, sp, #16
    a18e:	e884 000c 	stmia.w	r4, {r2, r3}
    a192:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a194:	9300      	str	r3, [sp, #0]
    a196:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
    a19a:	9301      	str	r3, [sp, #4]
    a19c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a19e:	9302      	str	r3, [sp, #8]
    a1a0:	e894 000c 	ldmia.w	r4, {r2, r3}
    a1a4:	f7ff ff58 	bl	a058 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const>
    a1a8:	4628      	mov	r0, r5
    a1aa:	b007      	add	sp, #28
    a1ac:	bd30      	pop	{r4, r5, pc}

0000a1ae <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, void const*) const>:
    a1ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a1b2:	4606      	mov	r6, r0
    a1b4:	b088      	sub	sp, #32
    a1b6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
    a1b8:	ac04      	add	r4, sp, #16
    a1ba:	f8d5 800c 	ldr.w	r8, [r5, #12]
    a1be:	e884 000c 	stmia.w	r4, {r2, r3}
    a1c2:	f428 4380 	bic.w	r3, r8, #16384	; 0x4000
    a1c6:	f023 034a 	bic.w	r3, r3, #74	; 0x4a
    a1ca:	f443 7302 	orr.w	r3, r3, #520	; 0x208
    a1ce:	60eb      	str	r3, [r5, #12]
    a1d0:	f89d 303c 	ldrb.w	r3, [sp, #60]	; 0x3c
    a1d4:	af06      	add	r7, sp, #24
    a1d6:	9301      	str	r3, [sp, #4]
    a1d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a1da:	9500      	str	r5, [sp, #0]
    a1dc:	9302      	str	r3, [sp, #8]
    a1de:	4638      	mov	r0, r7
    a1e0:	e894 000c 	ldmia.w	r4, {r2, r3}
    a1e4:	f7ff ff38 	bl	a058 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const>
    a1e8:	e897 0003 	ldmia.w	r7, {r0, r1}
    a1ec:	9004      	str	r0, [sp, #16]
    a1ee:	f88d 1014 	strb.w	r1, [sp, #20]
    a1f2:	e894 0003 	ldmia.w	r4, {r0, r1}
    a1f6:	e886 0003 	stmia.w	r6, {r0, r1}
    a1fa:	4630      	mov	r0, r6
    a1fc:	f8c5 800c 	str.w	r8, [r5, #12]
    a200:	b008      	add	sp, #32
    a202:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000a206 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const>:
    a206:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    a20a:	b08b      	sub	sp, #44	; 0x2c
    a20c:	af04      	add	r7, sp, #16
    a20e:	6c3e      	ldr	r6, [r7, #64]	; 0x40
    a210:	6079      	str	r1, [r7, #4]
    a212:	4682      	mov	r10, r0
    a214:	f107 0108 	add.w	r1, r7, #8
    a218:	f106 006c 	add.w	r0, r6, #108	; 0x6c
    a21c:	e881 000c 	stmia.w	r1, {r2, r3}
    a220:	f7ff f95c 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    a224:	68f5      	ldr	r5, [r6, #12]
    a226:	b08c      	sub	sp, #48	; 0x30
    a228:	f005 094a 	and.w	r9, r5, #74	; 0x4a
    a22c:	f1b9 0f40 	cmp.w	r9, #64	; 0x40
    a230:	4604      	mov	r4, r0
    a232:	f100 0b26 	add.w	r11, r0, #38	; 0x26
    a236:	a904      	add	r1, sp, #16
    a238:	d002      	beq.n	a240 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x3a>
    a23a:	f1b9 0f08 	cmp.w	r9, #8
    a23e:	d102      	bne.n	a246 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x40>
    a240:	f04f 0800 	mov.w	r8, #0
    a244:	e007      	b.n	a256 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x50>
    a246:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
    a24a:	2a01      	cmp	r2, #1
    a24c:	f173 0300 	sbcs.w	r3, r3, #0
    a250:	db04      	blt.n	a25c <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x56>
    a252:	f04f 0801 	mov.w	r8, #1
    a256:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
    a25a:	e006      	b.n	a26a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x64>
    a25c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
    a260:	4252      	negs	r2, r2
    a262:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
    a266:	f04f 0801 	mov.w	r8, #1
    a26a:	f101 0028 	add.w	r0, r1, #40	; 0x28
    a26e:	f8cd b000 	str.w	r11, [sp]
    a272:	9501      	str	r5, [sp, #4]
    a274:	f8cd 8008 	str.w	r8, [sp, #8]
    a278:	6039      	str	r1, [r7, #0]
    a27a:	f7ff fcf2 	bl	9c62 <int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)>
    a27e:	6839      	ldr	r1, [r7, #0]
    a280:	7c22      	ldrb	r2, [r4, #16]
    a282:	f1c0 0328 	rsb	r3, r0, #40	; 0x28
    a286:	6178      	str	r0, [r7, #20]
    a288:	440b      	add	r3, r1
    a28a:	b1d2      	cbz	r2, a2c2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0xbc>
    a28c:	0040      	lsls	r0, r0, #1
    a28e:	3010      	adds	r0, #16
    a290:	f020 0007 	bic.w	r0, r0, #7
    a294:	ebad 0d00 	sub.w	sp, sp, r0
    a298:	f10d 0c12 	add.w	r12, sp, #18
    a29c:	f894 e025 	ldrb.w	lr, [r4, #37]	; 0x25
    a2a0:	e88d 1040 	stmia.w	sp, {r6, r12}
    a2a4:	9302      	str	r3, [sp, #8]
    a2a6:	f107 0314 	add.w	r3, r7, #20
    a2aa:	9303      	str	r3, [sp, #12]
    a2ac:	6878      	ldr	r0, [r7, #4]
    a2ae:	4673      	mov	r3, lr
    a2b0:	68a1      	ldr	r1, [r4, #8]
    a2b2:	68e2      	ldr	r2, [r4, #12]
    a2b4:	f8c7 c000 	str.w	r12, [r7]
    a2b8:	f7ff fc2c 	bl	9b14 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_int(char const*, unsigned int, char, std::ios_base&, char*, char*, int&) const>
    a2bc:	f8d7 c000 	ldr.w	r12, [r7]
    a2c0:	4663      	mov	r3, r12
    a2c2:	697a      	ldr	r2, [r7, #20]
    a2c4:	f1b8 0f00 	cmp.w	r8, #0
    a2c8:	d00b      	beq.n	a2e2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0xdc>
    a2ca:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
    a2ce:	2800      	cmp	r0, #0
    a2d0:	f171 0100 	sbcs.w	r1, r1, #0
    a2d4:	db02      	blt.n	a2dc <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0xd6>
    a2d6:	0528      	lsls	r0, r5, #20
    a2d8:	d42d      	bmi.n	a336 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x130>
    a2da:	e016      	b.n	a30a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x104>
    a2dc:	f894 1026 	ldrb.w	r1, [r4, #38]	; 0x26
    a2e0:	e02b      	b.n	a33a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x134>
    a2e2:	05a9      	lsls	r1, r5, #22
    a2e4:	d511      	bpl.n	a30a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x104>
    a2e6:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
    a2ea:	4301      	orrs	r1, r0
    a2ec:	d12b      	bne.n	a346 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x140>
    a2ee:	e00c      	b.n	a30a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x104>
    a2f0:	f3c5 3580 	ubfx	r5, r5, #14, #1
    a2f4:	445d      	add	r5, r11
    a2f6:	78a9      	ldrb	r1, [r5, #2]
    a2f8:	3202      	adds	r2, #2
    a2fa:	f803 1c01 	strb.w	r1, [r3, #-1]
    a2fe:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
    a302:	617a      	str	r2, [r7, #20]
    a304:	f803 1c02 	strb.w	r1, [r3, #-2]
    a308:	3b02      	subs	r3, #2
    a30a:	68b4      	ldr	r4, [r6, #8]
    a30c:	6979      	ldr	r1, [r7, #20]
    a30e:	428c      	cmp	r4, r1
    a310:	dd1f      	ble.n	a352 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x14c>
    a312:	f104 020e 	add.w	r2, r4, #14
    a316:	f022 0207 	bic.w	r2, r2, #7
    a31a:	ebad 0d02 	sub.w	sp, sp, r2
    a31e:	ad04      	add	r5, sp, #16
    a320:	9101      	str	r1, [sp, #4]
    a322:	9400      	str	r4, [sp, #0]
    a324:	4630      	mov	r0, r6
    a326:	f897 1044 	ldrb.w	r1, [r7, #68]	; 0x44
    a32a:	462a      	mov	r2, r5
    a32c:	f7ff fc06 	bl	9b3c <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)>
    a330:	617c      	str	r4, [r7, #20]
    a332:	462b      	mov	r3, r5
    a334:	e00d      	b.n	a352 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x14c>
    a336:	f894 1027 	ldrb.w	r1, [r4, #39]	; 0x27
    a33a:	3201      	adds	r2, #1
    a33c:	f803 1c01 	strb.w	r1, [r3, #-1]
    a340:	617a      	str	r2, [r7, #20]
    a342:	3b01      	subs	r3, #1
    a344:	e7e1      	b.n	a30a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x104>
    a346:	f1b9 0f40 	cmp.w	r9, #64	; 0x40
    a34a:	d1d1      	bne.n	a2f0 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0xea>
    a34c:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
    a350:	e7f3      	b.n	a33a <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const+0x134>
    a352:	2200      	movs	r2, #0
    a354:	60b2      	str	r2, [r6, #8]
    a356:	697a      	ldr	r2, [r7, #20]
    a358:	4650      	mov	r0, r10
    a35a:	9200      	str	r2, [sp, #0]
    a35c:	f107 0208 	add.w	r2, r7, #8
    a360:	ca06      	ldmia	r2, {r1, r2}
    a362:	f7ff fcd9 	bl	9d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>
    a366:	4650      	mov	r0, r10
    a368:	371c      	adds	r7, #28
    a36a:	46bd      	mov	sp, r7
    a36c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000a370 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const>:
    a370:	b530      	push	{r4, r5, lr}
    a372:	4605      	mov	r5, r0
    a374:	b087      	sub	sp, #28
    a376:	ac04      	add	r4, sp, #16
    a378:	e884 000c 	stmia.w	r4, {r2, r3}
    a37c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a37e:	9300      	str	r3, [sp, #0]
    a380:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
    a384:	9301      	str	r3, [sp, #4]
    a386:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
    a38a:	e9cd 2302 	strd	r2, r3, [sp, #8]
    a38e:	e894 000c 	ldmia.w	r4, {r2, r3}
    a392:	f7ff ff38 	bl	a206 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const>
    a396:	4628      	mov	r0, r5
    a398:	b007      	add	sp, #28
    a39a:	bd30      	pop	{r4, r5, pc}

0000a39c <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const>:
    a39c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    a3a0:	b08b      	sub	sp, #44	; 0x2c
    a3a2:	af04      	add	r7, sp, #16
    a3a4:	6c3e      	ldr	r6, [r7, #64]	; 0x40
    a3a6:	6079      	str	r1, [r7, #4]
    a3a8:	4682      	mov	r10, r0
    a3aa:	f107 0108 	add.w	r1, r7, #8
    a3ae:	f106 006c 	add.w	r0, r6, #108	; 0x6c
    a3b2:	e881 000c 	stmia.w	r1, {r2, r3}
    a3b6:	f7ff f891 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    a3ba:	68f4      	ldr	r4, [r6, #12]
    a3bc:	b08c      	sub	sp, #48	; 0x30
    a3be:	f004 084a 	and.w	r8, r4, #74	; 0x4a
    a3c2:	f1b8 0f40 	cmp.w	r8, #64	; 0x40
    a3c6:	4605      	mov	r5, r0
    a3c8:	f100 0b26 	add.w	r11, r0, #38	; 0x26
    a3cc:	a904      	add	r1, sp, #16
    a3ce:	d005      	beq.n	a3dc <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const+0x40>
    a3d0:	f1b8 0908 	subs.w	r9, r8, #8
    a3d4:	bf18      	it	ne
    a3d6:	f04f 0901 	movne.w	r9, #1
    a3da:	e001      	b.n	a3e0 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const+0x44>
    a3dc:	f04f 0900 	mov.w	r9, #0
    a3e0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
    a3e4:	f101 0028 	add.w	r0, r1, #40	; 0x28
    a3e8:	f8cd b000 	str.w	r11, [sp]
    a3ec:	9401      	str	r4, [sp, #4]
    a3ee:	f8cd 9008 	str.w	r9, [sp, #8]
    a3f2:	6039      	str	r1, [r7, #0]
    a3f4:	f7ff fc35 	bl	9c62 <int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)>
    a3f8:	6839      	ldr	r1, [r7, #0]
    a3fa:	7c2a      	ldrb	r2, [r5, #16]
    a3fc:	f1c0 0328 	rsb	r3, r0, #40	; 0x28
    a400:	6178      	str	r0, [r7, #20]
    a402:	440b      	add	r3, r1
    a404:	b1d2      	cbz	r2, a43c <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const+0xa0>
    a406:	0040      	lsls	r0, r0, #1
    a408:	3010      	adds	r0, #16
    a40a:	f020 0007 	bic.w	r0, r0, #7
    a40e:	ebad 0d00 	sub.w	sp, sp, r0
    a412:	f10d 0c12 	add.w	r12, sp, #18
    a416:	f895 e025 	ldrb.w	lr, [r5, #37]	; 0x25
    a41a:	e88d 1040 	stmia.w	sp, {r6, r12}
    a41e:	9302      	str	r3, [sp, #8]
    a420:	f107 0314 	add.w	r3, r7, #20
    a424:	9303      	str	r3, [sp, #12]
    a426:	6878      	ldr	r0, [r7, #4]
    a428:	4673      	mov	r3, lr
    a42a:	68a9      	ldr	r1, [r5, #8]
    a42c:	68ea      	ldr	r2, [r5, #12]
    a42e:	f8c7 c000 	str.w	r12, [r7]
    a432:	f7ff fb6f 	bl	9b14 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_int(char const*, unsigned int, char, std::ios_base&, char*, char*, int&) const>
    a436:	f8d7 c000 	ldr.w	r12, [r7]
    a43a:	4663      	mov	r3, r12
    a43c:	f1b9 0f00 	cmp.w	r9, #0
    a440:	d111      	bne.n	a466 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const+0xca>
    a442:	05a2      	lsls	r2, r4, #22
    a444:	d50f      	bpl.n	a466 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const+0xca>
    a446:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
    a44a:	ea50 0201 	orrs.w	r2, r0, r1
    a44e:	d00a      	beq.n	a466 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const+0xca>
    a450:	f1b8 0f40 	cmp.w	r8, #64	; 0x40
    a454:	697a      	ldr	r2, [r7, #20]
    a456:	d11c      	bne.n	a492 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const+0xf6>
    a458:	f895 102a 	ldrb.w	r1, [r5, #42]	; 0x2a
    a45c:	3201      	adds	r2, #1
    a45e:	f803 1c01 	strb.w	r1, [r3, #-1]
    a462:	617a      	str	r2, [r7, #20]
    a464:	3b01      	subs	r3, #1
    a466:	68b4      	ldr	r4, [r6, #8]
    a468:	6979      	ldr	r1, [r7, #20]
    a46a:	428c      	cmp	r4, r1
    a46c:	dd1f      	ble.n	a4ae <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const+0x112>
    a46e:	f104 020e 	add.w	r2, r4, #14
    a472:	f022 0207 	bic.w	r2, r2, #7
    a476:	ebad 0d02 	sub.w	sp, sp, r2
    a47a:	ad04      	add	r5, sp, #16
    a47c:	9101      	str	r1, [sp, #4]
    a47e:	9400      	str	r4, [sp, #0]
    a480:	4630      	mov	r0, r6
    a482:	f897 1044 	ldrb.w	r1, [r7, #68]	; 0x44
    a486:	462a      	mov	r2, r5
    a488:	f7ff fb58 	bl	9b3c <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)>
    a48c:	617c      	str	r4, [r7, #20]
    a48e:	462b      	mov	r3, r5
    a490:	e00d      	b.n	a4ae <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const+0x112>
    a492:	f3c4 3480 	ubfx	r4, r4, #14, #1
    a496:	445c      	add	r4, r11
    a498:	78a1      	ldrb	r1, [r4, #2]
    a49a:	3202      	adds	r2, #2
    a49c:	f803 1c01 	strb.w	r1, [r3, #-1]
    a4a0:	f895 102a 	ldrb.w	r1, [r5, #42]	; 0x2a
    a4a4:	617a      	str	r2, [r7, #20]
    a4a6:	f803 1c02 	strb.w	r1, [r3, #-2]
    a4aa:	3b02      	subs	r3, #2
    a4ac:	e7db      	b.n	a466 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const+0xca>
    a4ae:	2200      	movs	r2, #0
    a4b0:	60b2      	str	r2, [r6, #8]
    a4b2:	697a      	ldr	r2, [r7, #20]
    a4b4:	4650      	mov	r0, r10
    a4b6:	9200      	str	r2, [sp, #0]
    a4b8:	f107 0208 	add.w	r2, r7, #8
    a4bc:	ca06      	ldmia	r2, {r1, r2}
    a4be:	f7ff fc2b 	bl	9d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>
    a4c2:	4650      	mov	r0, r10
    a4c4:	371c      	adds	r7, #28
    a4c6:	46bd      	mov	sp, r7
    a4c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000a4cc <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const>:
    a4cc:	b530      	push	{r4, r5, lr}
    a4ce:	4605      	mov	r5, r0
    a4d0:	b087      	sub	sp, #28
    a4d2:	ac04      	add	r4, sp, #16
    a4d4:	e884 000c 	stmia.w	r4, {r2, r3}
    a4d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a4da:	9300      	str	r3, [sp, #0]
    a4dc:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
    a4e0:	9301      	str	r3, [sp, #4]
    a4e2:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
    a4e6:	e9cd 2302 	strd	r2, r3, [sp, #8]
    a4ea:	e894 000c 	ldmia.w	r4, {r2, r3}
    a4ee:	f7ff ff55 	bl	a39c <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const>
    a4f2:	4628      	mov	r0, r5
    a4f4:	b007      	add	sp, #28
    a4f6:	bd30      	pop	{r4, r5, pc}

0000a4f8 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const>:
    a4f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    a4fc:	b091      	sub	sp, #68	; 0x44
    a4fe:	af04      	add	r7, sp, #16
    a500:	6dbe      	ldr	r6, [r7, #88]	; 0x58
    a502:	4682      	mov	r10, r0
    a504:	f106 046c 	add.w	r4, r6, #108	; 0x6c
    a508:	4620      	mov	r0, r4
    a50a:	f107 0910 	add.w	r9, r7, #16
    a50e:	e889 000c 	stmia.w	r9, {r2, r3}
    a512:	60f9      	str	r1, [r7, #12]
    a514:	f7fe ffe2 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    a518:	6873      	ldr	r3, [r6, #4]
    a51a:	f107 0120 	add.w	r1, r7, #32
    a51e:	2b00      	cmp	r3, #0
    a520:	bfa8      	it	ge
    a522:	469b      	movge	r11, r3
    a524:	f897 2060 	ldrb.w	r2, [r7, #96]	; 0x60
    a528:	4680      	mov	r8, r0
    a52a:	4630      	mov	r0, r6
    a52c:	bfb8      	it	lt
    a52e:	f04f 0b06 	movlt.w	r11, #6
    a532:	f005 fd24 	bl	ff7e <std::__num_base::_S_format_float(std::ios_base const&, char*, char)>
    a536:	68f2      	ldr	r2, [r6, #12]
    a538:	0753      	lsls	r3, r2, #29
    a53a:	bf4c      	ite	mi
    a53c:	f50b 729c 	addmi.w	r2, r11, #312	; 0x138
    a540:	f10b 021e 	addpl.w	r2, r11, #30
    a544:	320e      	adds	r2, #14
    a546:	f022 0207 	bic.w	r2, r2, #7
    a54a:	ebad 0d02 	sub.w	sp, sp, r2
    a54e:	f005 fd91 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    a552:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
    a556:	f107 0130 	add.w	r1, r7, #48	; 0x30
    a55a:	ad04      	add	r5, sp, #16
    a55c:	f841 0d14 	str.w	r0, [r1, #-20]!
    a560:	4608      	mov	r0, r1
    a562:	e9cd 2302 	strd	r2, r3, [sp, #8]
    a566:	4629      	mov	r1, r5
    a568:	2200      	movs	r2, #0
    a56a:	f107 0320 	add.w	r3, r7, #32
    a56e:	f8cd b000 	str.w	r11, [sp]
    a572:	f7f8 fdcb 	bl	310c <std::__convert_from_v(int* const&, char*, int, char const*, ...)>
    a576:	61b8      	str	r0, [r7, #24]
    a578:	4620      	mov	r0, r4
    a57a:	f7fe fee3 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    a57e:	69ba      	ldr	r2, [r7, #24]
    a580:	4629      	mov	r1, r5
    a582:	f102 030e 	add.w	r3, r2, #14
    a586:	f023 0307 	bic.w	r3, r3, #7
    a58a:	ebad 0d03 	sub.w	sp, sp, r3
    a58e:	f10d 0c17 	add.w	r12, sp, #23
    a592:	ea4f 0cdc 	mov.w	r12, r12, lsr #3
    a596:	ea4f 04cc 	mov.w	r4, r12, lsl #3
    a59a:	442a      	add	r2, r5
    a59c:	4623      	mov	r3, r4
    a59e:	f8c7 c004 	str.w	r12, [r7, #4]
    a5a2:	f7fe fc8c 	bl	8ebe <std::ctype<char>::widen(char const*, char const*, char*) const>
    a5a6:	69bb      	ldr	r3, [r7, #24]
    a5a8:	4628      	mov	r0, r5
    a5aa:	461a      	mov	r2, r3
    a5ac:	212e      	movs	r1, #46	; 0x2e
    a5ae:	60bb      	str	r3, [r7, #8]
    a5b0:	f009 f84e 	bl	13650 <memchr>
    a5b4:	68bb      	ldr	r3, [r7, #8]
    a5b6:	b138      	cbz	r0, a5c8 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const+0xd0>
    a5b8:	f898 1024 	ldrb.w	r1, [r8, #36]	; 0x24
    a5bc:	f8d7 c004 	ldr.w	r12, [r7, #4]
    a5c0:	1b42      	subs	r2, r0, r5
    a5c2:	18a0      	adds	r0, r4, r2
    a5c4:	f802 103c 	strb.w	r1, [r2, r12, lsl #3]
    a5c8:	f898 2010 	ldrb.w	r2, [r8, #16]
    a5cc:	2a00      	cmp	r2, #0
    a5ce:	d03a      	beq.n	a646 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const+0x14e>
    a5d0:	b950      	cbnz	r0, a5e8 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const+0xf0>
    a5d2:	2b02      	cmp	r3, #2
    a5d4:	dd08      	ble.n	a5e8 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const+0xf0>
    a5d6:	7869      	ldrb	r1, [r5, #1]
    a5d8:	2939      	cmp	r1, #57	; 0x39
    a5da:	d834      	bhi.n	a646 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const+0x14e>
    a5dc:	292f      	cmp	r1, #47	; 0x2f
    a5de:	78aa      	ldrb	r2, [r5, #2]
    a5e0:	d931      	bls.n	a646 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const+0x14e>
    a5e2:	3a30      	subs	r2, #48	; 0x30
    a5e4:	2a09      	cmp	r2, #9
    a5e6:	d82e      	bhi.n	a646 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const+0x14e>
    a5e8:	005a      	lsls	r2, r3, #1
    a5ea:	320e      	adds	r2, #14
    a5ec:	f022 0207 	bic.w	r2, r2, #7
    a5f0:	ebad 0d02 	sub.w	sp, sp, r2
    a5f4:	782a      	ldrb	r2, [r5, #0]
    a5f6:	f10d 0c10 	add.w	r12, sp, #16
    a5fa:	2a2d      	cmp	r2, #45	; 0x2d
    a5fc:	d001      	beq.n	a602 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const+0x10a>
    a5fe:	2a2b      	cmp	r2, #43	; 0x2b
    a600:	d106      	bne.n	a610 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const+0x118>
    a602:	7822      	ldrb	r2, [r4, #0]
    a604:	3b01      	subs	r3, #1
    a606:	f88c 2000 	strb.w	r2, [r12]
    a60a:	61bb      	str	r3, [r7, #24]
    a60c:	2501      	movs	r5, #1
    a60e:	e000      	b.n	a612 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const+0x11a>
    a610:	2500      	movs	r5, #0
    a612:	eb0c 0205 	add.w	r2, r12, r5
    a616:	f898 3025 	ldrb.w	r3, [r8, #37]	; 0x25
    a61a:	442c      	add	r4, r5
    a61c:	9201      	str	r2, [sp, #4]
    a61e:	f107 0218 	add.w	r2, r7, #24
    a622:	9000      	str	r0, [sp, #0]
    a624:	9402      	str	r4, [sp, #8]
    a626:	9203      	str	r2, [sp, #12]
    a628:	68f8      	ldr	r0, [r7, #12]
    a62a:	f8d8 1008 	ldr.w	r1, [r8, #8]
    a62e:	f8d8 200c 	ldr.w	r2, [r8, #12]
    a632:	f8c7 c008 	str.w	r12, [r7, #8]
    a636:	f7ff fa4c 	bl	9ad2 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_float(char const*, unsigned int, char, char const*, char*, char*, int&) const>
    a63a:	f8d7 c008 	ldr.w	r12, [r7, #8]
    a63e:	69bb      	ldr	r3, [r7, #24]
    a640:	4664      	mov	r4, r12
    a642:	441d      	add	r5, r3
    a644:	61bd      	str	r5, [r7, #24]
    a646:	68b5      	ldr	r5, [r6, #8]
    a648:	69ba      	ldr	r2, [r7, #24]
    a64a:	4295      	cmp	r5, r2
    a64c:	dd12      	ble.n	a674 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const+0x17c>
    a64e:	f105 030e 	add.w	r3, r5, #14
    a652:	f023 0307 	bic.w	r3, r3, #7
    a656:	ebad 0d03 	sub.w	sp, sp, r3
    a65a:	f10d 0810 	add.w	r8, sp, #16
    a65e:	4623      	mov	r3, r4
    a660:	4644      	mov	r4, r8
    a662:	9201      	str	r2, [sp, #4]
    a664:	9500      	str	r5, [sp, #0]
    a666:	4630      	mov	r0, r6
    a668:	f897 105c 	ldrb.w	r1, [r7, #92]	; 0x5c
    a66c:	4642      	mov	r2, r8
    a66e:	f7ff fa65 	bl	9b3c <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)>
    a672:	61bd      	str	r5, [r7, #24]
    a674:	2300      	movs	r3, #0
    a676:	60b3      	str	r3, [r6, #8]
    a678:	69bb      	ldr	r3, [r7, #24]
    a67a:	4650      	mov	r0, r10
    a67c:	e899 0006 	ldmia.w	r9, {r1, r2}
    a680:	9300      	str	r3, [sp, #0]
    a682:	4623      	mov	r3, r4
    a684:	f7ff fb48 	bl	9d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>
    a688:	4650      	mov	r0, r10
    a68a:	3734      	adds	r7, #52	; 0x34
    a68c:	46bd      	mov	sp, r7
    a68e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000a692 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, double) const>:
    a692:	b530      	push	{r4, r5, lr}
    a694:	4605      	mov	r5, r0
    a696:	b089      	sub	sp, #36	; 0x24
    a698:	ac06      	add	r4, sp, #24
    a69a:	e884 000c 	stmia.w	r4, {r2, r3}
    a69e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a6a0:	9300      	str	r3, [sp, #0]
    a6a2:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
    a6a6:	9301      	str	r3, [sp, #4]
    a6a8:	2300      	movs	r3, #0
    a6aa:	9302      	str	r3, [sp, #8]
    a6ac:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    a6b0:	e9cd 2304 	strd	r2, r3, [sp, #16]
    a6b4:	e894 000c 	ldmia.w	r4, {r2, r3}
    a6b8:	f7ff ff1e 	bl	a4f8 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const>
    a6bc:	4628      	mov	r0, r5
    a6be:	b009      	add	sp, #36	; 0x24
    a6c0:	bd30      	pop	{r4, r5, pc}

0000a6c2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const>:
    a6c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    a6c6:	b091      	sub	sp, #68	; 0x44
    a6c8:	af04      	add	r7, sp, #16
    a6ca:	6dbe      	ldr	r6, [r7, #88]	; 0x58
    a6cc:	4682      	mov	r10, r0
    a6ce:	f106 046c 	add.w	r4, r6, #108	; 0x6c
    a6d2:	4620      	mov	r0, r4
    a6d4:	f107 0910 	add.w	r9, r7, #16
    a6d8:	e889 000c 	stmia.w	r9, {r2, r3}
    a6dc:	60f9      	str	r1, [r7, #12]
    a6de:	f7fe fefd 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    a6e2:	6873      	ldr	r3, [r6, #4]
    a6e4:	f107 0120 	add.w	r1, r7, #32
    a6e8:	2b00      	cmp	r3, #0
    a6ea:	bfa8      	it	ge
    a6ec:	469b      	movge	r11, r3
    a6ee:	f897 2060 	ldrb.w	r2, [r7, #96]	; 0x60
    a6f2:	4680      	mov	r8, r0
    a6f4:	4630      	mov	r0, r6
    a6f6:	bfb8      	it	lt
    a6f8:	f04f 0b06 	movlt.w	r11, #6
    a6fc:	f005 fc3f 	bl	ff7e <std::__num_base::_S_format_float(std::ios_base const&, char*, char)>
    a700:	68f2      	ldr	r2, [r6, #12]
    a702:	0753      	lsls	r3, r2, #29
    a704:	bf4c      	ite	mi
    a706:	f50b 729c 	addmi.w	r2, r11, #312	; 0x138
    a70a:	f10b 021e 	addpl.w	r2, r11, #30
    a70e:	320e      	adds	r2, #14
    a710:	f022 0207 	bic.w	r2, r2, #7
    a714:	ebad 0d02 	sub.w	sp, sp, r2
    a718:	f005 fcac 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    a71c:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
    a720:	f107 0130 	add.w	r1, r7, #48	; 0x30
    a724:	ad04      	add	r5, sp, #16
    a726:	f841 0d14 	str.w	r0, [r1, #-20]!
    a72a:	4608      	mov	r0, r1
    a72c:	e9cd 2302 	strd	r2, r3, [sp, #8]
    a730:	4629      	mov	r1, r5
    a732:	2200      	movs	r2, #0
    a734:	f107 0320 	add.w	r3, r7, #32
    a738:	f8cd b000 	str.w	r11, [sp]
    a73c:	f7f8 fce6 	bl	310c <std::__convert_from_v(int* const&, char*, int, char const*, ...)>
    a740:	61b8      	str	r0, [r7, #24]
    a742:	4620      	mov	r0, r4
    a744:	f7fe fdfe 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    a748:	69ba      	ldr	r2, [r7, #24]
    a74a:	4629      	mov	r1, r5
    a74c:	f102 030e 	add.w	r3, r2, #14
    a750:	f023 0307 	bic.w	r3, r3, #7
    a754:	ebad 0d03 	sub.w	sp, sp, r3
    a758:	f10d 0c17 	add.w	r12, sp, #23
    a75c:	ea4f 0cdc 	mov.w	r12, r12, lsr #3
    a760:	ea4f 04cc 	mov.w	r4, r12, lsl #3
    a764:	442a      	add	r2, r5
    a766:	4623      	mov	r3, r4
    a768:	f8c7 c004 	str.w	r12, [r7, #4]
    a76c:	f7fe fba7 	bl	8ebe <std::ctype<char>::widen(char const*, char const*, char*) const>
    a770:	69bb      	ldr	r3, [r7, #24]
    a772:	4628      	mov	r0, r5
    a774:	461a      	mov	r2, r3
    a776:	212e      	movs	r1, #46	; 0x2e
    a778:	60bb      	str	r3, [r7, #8]
    a77a:	f008 ff69 	bl	13650 <memchr>
    a77e:	68bb      	ldr	r3, [r7, #8]
    a780:	b138      	cbz	r0, a792 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const+0xd0>
    a782:	f898 1024 	ldrb.w	r1, [r8, #36]	; 0x24
    a786:	f8d7 c004 	ldr.w	r12, [r7, #4]
    a78a:	1b42      	subs	r2, r0, r5
    a78c:	18a0      	adds	r0, r4, r2
    a78e:	f802 103c 	strb.w	r1, [r2, r12, lsl #3]
    a792:	f898 2010 	ldrb.w	r2, [r8, #16]
    a796:	2a00      	cmp	r2, #0
    a798:	d03a      	beq.n	a810 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const+0x14e>
    a79a:	b950      	cbnz	r0, a7b2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const+0xf0>
    a79c:	2b02      	cmp	r3, #2
    a79e:	dd08      	ble.n	a7b2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const+0xf0>
    a7a0:	7869      	ldrb	r1, [r5, #1]
    a7a2:	2939      	cmp	r1, #57	; 0x39
    a7a4:	d834      	bhi.n	a810 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const+0x14e>
    a7a6:	292f      	cmp	r1, #47	; 0x2f
    a7a8:	78aa      	ldrb	r2, [r5, #2]
    a7aa:	d931      	bls.n	a810 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const+0x14e>
    a7ac:	3a30      	subs	r2, #48	; 0x30
    a7ae:	2a09      	cmp	r2, #9
    a7b0:	d82e      	bhi.n	a810 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const+0x14e>
    a7b2:	005a      	lsls	r2, r3, #1
    a7b4:	320e      	adds	r2, #14
    a7b6:	f022 0207 	bic.w	r2, r2, #7
    a7ba:	ebad 0d02 	sub.w	sp, sp, r2
    a7be:	782a      	ldrb	r2, [r5, #0]
    a7c0:	f10d 0c10 	add.w	r12, sp, #16
    a7c4:	2a2d      	cmp	r2, #45	; 0x2d
    a7c6:	d001      	beq.n	a7cc <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const+0x10a>
    a7c8:	2a2b      	cmp	r2, #43	; 0x2b
    a7ca:	d106      	bne.n	a7da <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const+0x118>
    a7cc:	7822      	ldrb	r2, [r4, #0]
    a7ce:	3b01      	subs	r3, #1
    a7d0:	f88c 2000 	strb.w	r2, [r12]
    a7d4:	61bb      	str	r3, [r7, #24]
    a7d6:	2501      	movs	r5, #1
    a7d8:	e000      	b.n	a7dc <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const+0x11a>
    a7da:	2500      	movs	r5, #0
    a7dc:	eb0c 0205 	add.w	r2, r12, r5
    a7e0:	f898 3025 	ldrb.w	r3, [r8, #37]	; 0x25
    a7e4:	442c      	add	r4, r5
    a7e6:	9201      	str	r2, [sp, #4]
    a7e8:	f107 0218 	add.w	r2, r7, #24
    a7ec:	9000      	str	r0, [sp, #0]
    a7ee:	9402      	str	r4, [sp, #8]
    a7f0:	9203      	str	r2, [sp, #12]
    a7f2:	68f8      	ldr	r0, [r7, #12]
    a7f4:	f8d8 1008 	ldr.w	r1, [r8, #8]
    a7f8:	f8d8 200c 	ldr.w	r2, [r8, #12]
    a7fc:	f8c7 c008 	str.w	r12, [r7, #8]
    a800:	f7ff f967 	bl	9ad2 <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_float(char const*, unsigned int, char, char const*, char*, char*, int&) const>
    a804:	f8d7 c008 	ldr.w	r12, [r7, #8]
    a808:	69bb      	ldr	r3, [r7, #24]
    a80a:	4664      	mov	r4, r12
    a80c:	441d      	add	r5, r3
    a80e:	61bd      	str	r5, [r7, #24]
    a810:	68b5      	ldr	r5, [r6, #8]
    a812:	69ba      	ldr	r2, [r7, #24]
    a814:	4295      	cmp	r5, r2
    a816:	dd12      	ble.n	a83e <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const+0x17c>
    a818:	f105 030e 	add.w	r3, r5, #14
    a81c:	f023 0307 	bic.w	r3, r3, #7
    a820:	ebad 0d03 	sub.w	sp, sp, r3
    a824:	f10d 0810 	add.w	r8, sp, #16
    a828:	4623      	mov	r3, r4
    a82a:	4644      	mov	r4, r8
    a82c:	9201      	str	r2, [sp, #4]
    a82e:	9500      	str	r5, [sp, #0]
    a830:	4630      	mov	r0, r6
    a832:	f897 105c 	ldrb.w	r1, [r7, #92]	; 0x5c
    a836:	4642      	mov	r2, r8
    a838:	f7ff f980 	bl	9b3c <std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, int, int)>
    a83c:	61bd      	str	r5, [r7, #24]
    a83e:	2300      	movs	r3, #0
    a840:	60b3      	str	r3, [r6, #8]
    a842:	69bb      	ldr	r3, [r7, #24]
    a844:	4650      	mov	r0, r10
    a846:	e899 0006 	ldmia.w	r9, {r1, r2}
    a84a:	9300      	str	r3, [sp, #0]
    a84c:	4623      	mov	r3, r4
    a84e:	f7ff fa63 	bl	9d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>
    a852:	4650      	mov	r0, r10
    a854:	3734      	adds	r7, #52	; 0x34
    a856:	46bd      	mov	sp, r7
    a858:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000a85c <std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long double) const>:
    a85c:	b530      	push	{r4, r5, lr}
    a85e:	4605      	mov	r5, r0
    a860:	b089      	sub	sp, #36	; 0x24
    a862:	ac06      	add	r4, sp, #24
    a864:	e884 000c 	stmia.w	r4, {r2, r3}
    a868:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a86a:	9300      	str	r3, [sp, #0]
    a86c:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
    a870:	9301      	str	r3, [sp, #4]
    a872:	234c      	movs	r3, #76	; 0x4c
    a874:	9302      	str	r3, [sp, #8]
    a876:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
    a87a:	e9cd 2304 	strd	r2, r3, [sp, #16]
    a87e:	e894 000c 	ldmia.w	r4, {r2, r3}
    a882:	f7ff ff1e 	bl	a6c2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const>
    a886:	4628      	mov	r0, r5
    a888:	b009      	add	sp, #36	; 0x24
    a88a:	bd30      	pop	{r4, r5, pc}

0000a88c <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const>:
    a88c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    a890:	b08f      	sub	sp, #60	; 0x3c
    a892:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
    a896:	a906      	add	r1, sp, #24
    a898:	f109 046c 	add.w	r4, r9, #108	; 0x6c
    a89c:	9005      	str	r0, [sp, #20]
    a89e:	4620      	mov	r0, r4
    a8a0:	e881 000c 	stmia.w	r1, {r2, r3}
    a8a4:	f89d a064 	ldrb.w	r10, [sp, #100]	; 0x64
    a8a8:	f7fe fd4c 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    a8ac:	4606      	mov	r6, r0
    a8ae:	4620      	mov	r0, r4
    a8b0:	f7fe ff3c 	bl	972c <std::__use_cache<std::__moneypunct_cache<char, true> >::operator()(std::locale const&) const [clone .isra.32]>
    a8b4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    a8b6:	4604      	mov	r4, r0
    a8b8:	681d      	ldr	r5, [r3, #0]
    a8ba:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
    a8be:	782a      	ldrb	r2, [r5, #0]
    a8c0:	429a      	cmp	r2, r3
    a8c2:	f855 3c0c 	ldr.w	r3, [r5, #-12]
    a8c6:	d006      	beq.n	a8d6 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x4a>
    a8c8:	6b02      	ldr	r2, [r0, #48]	; 0x30
    a8ca:	f8d0 8020 	ldr.w	r8, [r0, #32]
    a8ce:	9209      	str	r2, [sp, #36]	; 0x24
    a8d0:	69c2      	ldr	r2, [r0, #28]
    a8d2:	9202      	str	r2, [sp, #8]
    a8d4:	e007      	b.n	a8e6 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x5a>
    a8d6:	6b42      	ldr	r2, [r0, #52]	; 0x34
    a8d8:	f8d0 8028 	ldr.w	r8, [r0, #40]	; 0x28
    a8dc:	9209      	str	r2, [sp, #36]	; 0x24
    a8de:	6a42      	ldr	r2, [r0, #36]	; 0x24
    a8e0:	9202      	str	r2, [sp, #8]
    a8e2:	b103      	cbz	r3, a8e6 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x5a>
    a8e4:	3501      	adds	r5, #1
    a8e6:	18ea      	adds	r2, r5, r3
    a8e8:	462b      	mov	r3, r5
    a8ea:	4293      	cmp	r3, r2
    a8ec:	461f      	mov	r7, r3
    a8ee:	d205      	bcs.n	a8fc <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x70>
    a8f0:	7838      	ldrb	r0, [r7, #0]
    a8f2:	69b1      	ldr	r1, [r6, #24]
    a8f4:	3301      	adds	r3, #1
    a8f6:	5c09      	ldrb	r1, [r1, r0]
    a8f8:	0749      	lsls	r1, r1, #29
    a8fa:	d4f6      	bmi.n	a8ea <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x5e>
    a8fc:	1b7f      	subs	r7, r7, r5
    a8fe:	f000 80d7 	beq.w	aab0 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x224>
    a902:	4b72      	ldr	r3, [pc, #456]	; (aacc <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x240>)
    a904:	f10d 0b38 	add.w	r11, sp, #56	; 0x38
    a908:	f84b 3d10 	str.w	r3, [r11, #-16]!
    a90c:	4658      	mov	r0, r11
    a90e:	0079      	lsls	r1, r7, #1
    a910:	f004 f95d 	bl	ebce <std::string::reserve(unsigned int)>
    a914:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    a916:	1afe      	subs	r6, r7, r3
    a918:	2e00      	cmp	r6, #0
    a91a:	dd27      	ble.n	a96c <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0xe0>
    a91c:	ea36 0623 	bics.w	r6, r6, r3, asr #32
    a920:	bf28      	it	cs
    a922:	463e      	movcs	r6, r7
    a924:	68e3      	ldr	r3, [r4, #12]
    a926:	4658      	mov	r0, r11
    a928:	b1e3      	cbz	r3, a964 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0xd8>
    a92a:	0071      	lsls	r1, r6, #1
    a92c:	2200      	movs	r2, #0
    a92e:	f004 f8ad 	bl	ea8c <std::string::assign(unsigned int, char)>
    a932:	4658      	mov	r0, r11
    a934:	f004 f85e 	bl	e9f4 <std::string::_M_leak()>
    a938:	19ab      	adds	r3, r5, r6
    a93a:	7ca1      	ldrb	r1, [r4, #18]
    a93c:	9500      	str	r5, [sp, #0]
    a93e:	9301      	str	r3, [sp, #4]
    a940:	68a2      	ldr	r2, [r4, #8]
    a942:	68e3      	ldr	r3, [r4, #12]
    a944:	980a      	ldr	r0, [sp, #40]	; 0x28
    a946:	f7ff f879 	bl	9a3c <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)>
    a94a:	9003      	str	r0, [sp, #12]
    a94c:	4658      	mov	r0, r11
    a94e:	f004 f851 	bl	e9f4 <std::string::_M_leak()>
    a952:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a954:	9903      	ldr	r1, [sp, #12]
    a956:	4658      	mov	r0, r11
    a958:	1ac9      	subs	r1, r1, r3
    a95a:	f04f 32ff 	mov.w	r2, #4294967295
    a95e:	f004 f861 	bl	ea24 <std::string::erase(unsigned int, unsigned int)>
    a962:	e003      	b.n	a96c <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0xe0>
    a964:	4629      	mov	r1, r5
    a966:	4632      	mov	r2, r6
    a968:	f004 f8d2 	bl	eb10 <std::string::assign(char const*, unsigned int)>
    a96c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    a96e:	2b00      	cmp	r3, #0
    a970:	dd13      	ble.n	a99a <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x10e>
    a972:	a80a      	add	r0, sp, #40	; 0x28
    a974:	7c61      	ldrb	r1, [r4, #17]
    a976:	f004 fa08 	bl	ed8a <std::string::push_back(char)>
    a97a:	2e00      	cmp	r6, #0
    a97c:	a80a      	add	r0, sp, #40	; 0x28
    a97e:	db02      	blt.n	a986 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0xfa>
    a980:	19a9      	adds	r1, r5, r6
    a982:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    a984:	e007      	b.n	a996 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x10a>
    a986:	4271      	negs	r1, r6
    a988:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
    a98c:	f004 f9d0 	bl	ed30 <std::string::append(unsigned int, char)>
    a990:	4629      	mov	r1, r5
    a992:	463a      	mov	r2, r7
    a994:	a80a      	add	r0, sp, #40	; 0x28
    a996:	f004 f967 	bl	ec68 <std::string::append(char const*, unsigned int)>
    a99a:	f8d9 300c 	ldr.w	r3, [r9, #12]
    a99e:	ae0e      	add	r6, sp, #56	; 0x38
    a9a0:	f003 02b0 	and.w	r2, r3, #176	; 0xb0
    a9a4:	9204      	str	r2, [sp, #16]
    a9a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a9a8:	f413 7300 	ands.w	r3, r3, #512	; 0x200
    a9ac:	f852 5c0c 	ldr.w	r5, [r2, #-12]
    a9b0:	bf18      	it	ne
    a9b2:	69a3      	ldrne	r3, [r4, #24]
    a9b4:	4445      	add	r5, r8
    a9b6:	441d      	add	r5, r3
    a9b8:	4b44      	ldr	r3, [pc, #272]	; (aacc <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x240>)
    a9ba:	0069      	lsls	r1, r5, #1
    a9bc:	f846 3d0c 	str.w	r3, [r6, #-12]!
    a9c0:	4630      	mov	r0, r6
    a9c2:	f004 f904 	bl	ebce <std::string::reserve(unsigned int)>
    a9c6:	9b04      	ldr	r3, [sp, #16]
    a9c8:	f8d9 7008 	ldr.w	r7, [r9, #8]
    a9cc:	2b10      	cmp	r3, #16
    a9ce:	d104      	bne.n	a9da <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x14e>
    a9d0:	42bd      	cmp	r5, r7
    a9d2:	bf2c      	ite	cs
    a9d4:	2300      	movcs	r3, #0
    a9d6:	2301      	movcc	r3, #1
    a9d8:	e000      	b.n	a9dc <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x150>
    a9da:	2300      	movs	r3, #0
    a9dc:	9303      	str	r3, [sp, #12]
    a9de:	f04f 0b00 	mov.w	r11, #0
    a9e2:	ab09      	add	r3, sp, #36	; 0x24
    a9e4:	f81b 3003 	ldrb.w	r3, [r11, r3]
    a9e8:	2b04      	cmp	r3, #4
    a9ea:	d828      	bhi.n	aa3e <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    a9ec:	e8df f003 	tbb	[pc, r3]
    a9f0:	0d031920 	.word	0x0d031920
    a9f4:	14          	.byte	0x14
    a9f5:	00          	.byte	0x00
    a9f6:	f8d9 300c 	ldr.w	r3, [r9, #12]
    a9fa:	059b      	lsls	r3, r3, #22
    a9fc:	d51f      	bpl.n	aa3e <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    a9fe:	a80b      	add	r0, sp, #44	; 0x2c
    aa00:	6961      	ldr	r1, [r4, #20]
    aa02:	69a2      	ldr	r2, [r4, #24]
    aa04:	f004 f930 	bl	ec68 <std::string::append(char const*, unsigned int)>
    aa08:	e019      	b.n	aa3e <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    aa0a:	f1b8 0f00 	cmp.w	r8, #0
    aa0e:	d016      	beq.n	aa3e <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    aa10:	9b02      	ldr	r3, [sp, #8]
    aa12:	4630      	mov	r0, r6
    aa14:	7819      	ldrb	r1, [r3, #0]
    aa16:	e008      	b.n	aa2a <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x19e>
    aa18:	4630      	mov	r0, r6
    aa1a:	a90a      	add	r1, sp, #40	; 0x28
    aa1c:	f004 f91f 	bl	ec5e <std::string::operator+=(std::string const&)>
    aa20:	e00d      	b.n	aa3e <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    aa22:	9b03      	ldr	r3, [sp, #12]
    aa24:	b933      	cbnz	r3, aa34 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1a8>
    aa26:	4630      	mov	r0, r6
    aa28:	4651      	mov	r1, r10
    aa2a:	f004 f9ae 	bl	ed8a <std::string::push_back(char)>
    aa2e:	e006      	b.n	aa3e <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    aa30:	9b03      	ldr	r3, [sp, #12]
    aa32:	b123      	cbz	r3, aa3e <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    aa34:	a80b      	add	r0, sp, #44	; 0x2c
    aa36:	1b79      	subs	r1, r7, r5
    aa38:	4652      	mov	r2, r10
    aa3a:	f004 f979 	bl	ed30 <std::string::append(unsigned int, char)>
    aa3e:	f10b 0b01 	add.w	r11, r11, #1
    aa42:	f1bb 0f04 	cmp.w	r11, #4
    aa46:	d1cc      	bne.n	a9e2 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x156>
    aa48:	f1b8 0f01 	cmp.w	r8, #1
    aa4c:	d906      	bls.n	aa5c <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1d0>
    aa4e:	9902      	ldr	r1, [sp, #8]
    aa50:	4630      	mov	r0, r6
    aa52:	3101      	adds	r1, #1
    aa54:	f108 32ff 	add.w	r2, r8, #4294967295
    aa58:	f004 f906 	bl	ec68 <std::string::append(char const*, unsigned int)>
    aa5c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    aa5e:	f853 2c0c 	ldr.w	r2, [r3, #-12]
    aa62:	4297      	cmp	r7, r2
    aa64:	d90f      	bls.n	aa86 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1fa>
    aa66:	9b04      	ldr	r3, [sp, #16]
    aa68:	4630      	mov	r0, r6
    aa6a:	2b20      	cmp	r3, #32
    aa6c:	eba7 0202 	sub.w	r2, r7, r2
    aa70:	d104      	bne.n	aa7c <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1f0>
    aa72:	4611      	mov	r1, r2
    aa74:	4652      	mov	r2, r10
    aa76:	f004 f95b 	bl	ed30 <std::string::append(unsigned int, char)>
    aa7a:	e005      	b.n	aa88 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1fc>
    aa7c:	2100      	movs	r1, #0
    aa7e:	4653      	mov	r3, r10
    aa80:	f004 f810 	bl	eaa4 <std::string::insert(unsigned int, unsigned int, char)>
    aa84:	e000      	b.n	aa88 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1fc>
    aa86:	4617      	mov	r7, r2
    aa88:	ac0c      	add	r4, sp, #48	; 0x30
    aa8a:	9700      	str	r7, [sp, #0]
    aa8c:	ab06      	add	r3, sp, #24
    aa8e:	e893 0006 	ldmia.w	r3, {r1, r2}
    aa92:	4620      	mov	r0, r4
    aa94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    aa96:	f7ff f93f 	bl	9d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>
    aa9a:	e894 0003 	ldmia.w	r4, {r0, r1}
    aa9e:	9006      	str	r0, [sp, #24]
    aaa0:	4630      	mov	r0, r6
    aaa2:	f88d 101c 	strb.w	r1, [sp, #28]
    aaa6:	f003 ff37 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    aaaa:	a80a      	add	r0, sp, #40	; 0x28
    aaac:	f003 ff34 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    aab0:	2300      	movs	r3, #0
    aab2:	f8c9 3008 	str.w	r3, [r9, #8]
    aab6:	ab06      	add	r3, sp, #24
    aab8:	e893 0003 	ldmia.w	r3, {r0, r1}
    aabc:	9b05      	ldr	r3, [sp, #20]
    aabe:	e883 0003 	stmia.w	r3, {r0, r1}
    aac2:	4618      	mov	r0, r3
    aac4:	b00f      	add	sp, #60	; 0x3c
    aac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    aaca:	bf00      	nop
    aacc:	10000c70 	.word	0x10000c70

0000aad0 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const>:
    aad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    aad4:	b08f      	sub	sp, #60	; 0x3c
    aad6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
    aada:	a906      	add	r1, sp, #24
    aadc:	f109 046c 	add.w	r4, r9, #108	; 0x6c
    aae0:	9005      	str	r0, [sp, #20]
    aae2:	4620      	mov	r0, r4
    aae4:	e881 000c 	stmia.w	r1, {r2, r3}
    aae8:	f89d a064 	ldrb.w	r10, [sp, #100]	; 0x64
    aaec:	f7fe fc2a 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    aaf0:	4606      	mov	r6, r0
    aaf2:	4620      	mov	r0, r4
    aaf4:	f7fe ff06 	bl	9904 <std::__use_cache<std::__moneypunct_cache<char, false> >::operator()(std::locale const&) const [clone .isra.31]>
    aaf8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    aafa:	4604      	mov	r4, r0
    aafc:	681d      	ldr	r5, [r3, #0]
    aafe:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
    ab02:	782a      	ldrb	r2, [r5, #0]
    ab04:	429a      	cmp	r2, r3
    ab06:	f855 3c0c 	ldr.w	r3, [r5, #-12]
    ab0a:	d006      	beq.n	ab1a <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x4a>
    ab0c:	6b02      	ldr	r2, [r0, #48]	; 0x30
    ab0e:	f8d0 8020 	ldr.w	r8, [r0, #32]
    ab12:	9209      	str	r2, [sp, #36]	; 0x24
    ab14:	69c2      	ldr	r2, [r0, #28]
    ab16:	9202      	str	r2, [sp, #8]
    ab18:	e007      	b.n	ab2a <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x5a>
    ab1a:	6b42      	ldr	r2, [r0, #52]	; 0x34
    ab1c:	f8d0 8028 	ldr.w	r8, [r0, #40]	; 0x28
    ab20:	9209      	str	r2, [sp, #36]	; 0x24
    ab22:	6a42      	ldr	r2, [r0, #36]	; 0x24
    ab24:	9202      	str	r2, [sp, #8]
    ab26:	b103      	cbz	r3, ab2a <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x5a>
    ab28:	3501      	adds	r5, #1
    ab2a:	18ea      	adds	r2, r5, r3
    ab2c:	462b      	mov	r3, r5
    ab2e:	4293      	cmp	r3, r2
    ab30:	461f      	mov	r7, r3
    ab32:	d205      	bcs.n	ab40 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x70>
    ab34:	7838      	ldrb	r0, [r7, #0]
    ab36:	69b1      	ldr	r1, [r6, #24]
    ab38:	3301      	adds	r3, #1
    ab3a:	5c09      	ldrb	r1, [r1, r0]
    ab3c:	0749      	lsls	r1, r1, #29
    ab3e:	d4f6      	bmi.n	ab2e <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x5e>
    ab40:	1b7f      	subs	r7, r7, r5
    ab42:	f000 80d7 	beq.w	acf4 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x224>
    ab46:	4b72      	ldr	r3, [pc, #456]	; (ad10 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x240>)
    ab48:	f10d 0b38 	add.w	r11, sp, #56	; 0x38
    ab4c:	f84b 3d10 	str.w	r3, [r11, #-16]!
    ab50:	4658      	mov	r0, r11
    ab52:	0079      	lsls	r1, r7, #1
    ab54:	f004 f83b 	bl	ebce <std::string::reserve(unsigned int)>
    ab58:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    ab5a:	1afe      	subs	r6, r7, r3
    ab5c:	2e00      	cmp	r6, #0
    ab5e:	dd27      	ble.n	abb0 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0xe0>
    ab60:	ea36 0623 	bics.w	r6, r6, r3, asr #32
    ab64:	bf28      	it	cs
    ab66:	463e      	movcs	r6, r7
    ab68:	68e3      	ldr	r3, [r4, #12]
    ab6a:	4658      	mov	r0, r11
    ab6c:	b1e3      	cbz	r3, aba8 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0xd8>
    ab6e:	0071      	lsls	r1, r6, #1
    ab70:	2200      	movs	r2, #0
    ab72:	f003 ff8b 	bl	ea8c <std::string::assign(unsigned int, char)>
    ab76:	4658      	mov	r0, r11
    ab78:	f003 ff3c 	bl	e9f4 <std::string::_M_leak()>
    ab7c:	19ab      	adds	r3, r5, r6
    ab7e:	7ca1      	ldrb	r1, [r4, #18]
    ab80:	9500      	str	r5, [sp, #0]
    ab82:	9301      	str	r3, [sp, #4]
    ab84:	68a2      	ldr	r2, [r4, #8]
    ab86:	68e3      	ldr	r3, [r4, #12]
    ab88:	980a      	ldr	r0, [sp, #40]	; 0x28
    ab8a:	f7fe ff57 	bl	9a3c <char* std::__add_grouping<char>(char*, char, char const*, unsigned int, char const*, char const*)>
    ab8e:	9003      	str	r0, [sp, #12]
    ab90:	4658      	mov	r0, r11
    ab92:	f003 ff2f 	bl	e9f4 <std::string::_M_leak()>
    ab96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    ab98:	9903      	ldr	r1, [sp, #12]
    ab9a:	4658      	mov	r0, r11
    ab9c:	1ac9      	subs	r1, r1, r3
    ab9e:	f04f 32ff 	mov.w	r2, #4294967295
    aba2:	f003 ff3f 	bl	ea24 <std::string::erase(unsigned int, unsigned int)>
    aba6:	e003      	b.n	abb0 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0xe0>
    aba8:	4629      	mov	r1, r5
    abaa:	4632      	mov	r2, r6
    abac:	f003 ffb0 	bl	eb10 <std::string::assign(char const*, unsigned int)>
    abb0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    abb2:	2b00      	cmp	r3, #0
    abb4:	dd13      	ble.n	abde <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x10e>
    abb6:	a80a      	add	r0, sp, #40	; 0x28
    abb8:	7c61      	ldrb	r1, [r4, #17]
    abba:	f004 f8e6 	bl	ed8a <std::string::push_back(char)>
    abbe:	2e00      	cmp	r6, #0
    abc0:	a80a      	add	r0, sp, #40	; 0x28
    abc2:	db02      	blt.n	abca <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0xfa>
    abc4:	19a9      	adds	r1, r5, r6
    abc6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    abc8:	e007      	b.n	abda <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x10a>
    abca:	4271      	negs	r1, r6
    abcc:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
    abd0:	f004 f8ae 	bl	ed30 <std::string::append(unsigned int, char)>
    abd4:	4629      	mov	r1, r5
    abd6:	463a      	mov	r2, r7
    abd8:	a80a      	add	r0, sp, #40	; 0x28
    abda:	f004 f845 	bl	ec68 <std::string::append(char const*, unsigned int)>
    abde:	f8d9 300c 	ldr.w	r3, [r9, #12]
    abe2:	ae0e      	add	r6, sp, #56	; 0x38
    abe4:	f003 02b0 	and.w	r2, r3, #176	; 0xb0
    abe8:	9204      	str	r2, [sp, #16]
    abea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    abec:	f413 7300 	ands.w	r3, r3, #512	; 0x200
    abf0:	f852 5c0c 	ldr.w	r5, [r2, #-12]
    abf4:	bf18      	it	ne
    abf6:	69a3      	ldrne	r3, [r4, #24]
    abf8:	4445      	add	r5, r8
    abfa:	441d      	add	r5, r3
    abfc:	4b44      	ldr	r3, [pc, #272]	; (ad10 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x240>)
    abfe:	0069      	lsls	r1, r5, #1
    ac00:	f846 3d0c 	str.w	r3, [r6, #-12]!
    ac04:	4630      	mov	r0, r6
    ac06:	f003 ffe2 	bl	ebce <std::string::reserve(unsigned int)>
    ac0a:	9b04      	ldr	r3, [sp, #16]
    ac0c:	f8d9 7008 	ldr.w	r7, [r9, #8]
    ac10:	2b10      	cmp	r3, #16
    ac12:	d104      	bne.n	ac1e <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x14e>
    ac14:	42bd      	cmp	r5, r7
    ac16:	bf2c      	ite	cs
    ac18:	2300      	movcs	r3, #0
    ac1a:	2301      	movcc	r3, #1
    ac1c:	e000      	b.n	ac20 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x150>
    ac1e:	2300      	movs	r3, #0
    ac20:	9303      	str	r3, [sp, #12]
    ac22:	f04f 0b00 	mov.w	r11, #0
    ac26:	ab09      	add	r3, sp, #36	; 0x24
    ac28:	f81b 3003 	ldrb.w	r3, [r11, r3]
    ac2c:	2b04      	cmp	r3, #4
    ac2e:	d828      	bhi.n	ac82 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    ac30:	e8df f003 	tbb	[pc, r3]
    ac34:	0d031920 	.word	0x0d031920
    ac38:	14          	.byte	0x14
    ac39:	00          	.byte	0x00
    ac3a:	f8d9 300c 	ldr.w	r3, [r9, #12]
    ac3e:	059b      	lsls	r3, r3, #22
    ac40:	d51f      	bpl.n	ac82 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    ac42:	a80b      	add	r0, sp, #44	; 0x2c
    ac44:	6961      	ldr	r1, [r4, #20]
    ac46:	69a2      	ldr	r2, [r4, #24]
    ac48:	f004 f80e 	bl	ec68 <std::string::append(char const*, unsigned int)>
    ac4c:	e019      	b.n	ac82 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    ac4e:	f1b8 0f00 	cmp.w	r8, #0
    ac52:	d016      	beq.n	ac82 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    ac54:	9b02      	ldr	r3, [sp, #8]
    ac56:	4630      	mov	r0, r6
    ac58:	7819      	ldrb	r1, [r3, #0]
    ac5a:	e008      	b.n	ac6e <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x19e>
    ac5c:	4630      	mov	r0, r6
    ac5e:	a90a      	add	r1, sp, #40	; 0x28
    ac60:	f003 fffd 	bl	ec5e <std::string::operator+=(std::string const&)>
    ac64:	e00d      	b.n	ac82 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    ac66:	9b03      	ldr	r3, [sp, #12]
    ac68:	b933      	cbnz	r3, ac78 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1a8>
    ac6a:	4630      	mov	r0, r6
    ac6c:	4651      	mov	r1, r10
    ac6e:	f004 f88c 	bl	ed8a <std::string::push_back(char)>
    ac72:	e006      	b.n	ac82 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    ac74:	9b03      	ldr	r3, [sp, #12]
    ac76:	b123      	cbz	r3, ac82 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1b2>
    ac78:	a80b      	add	r0, sp, #44	; 0x2c
    ac7a:	1b79      	subs	r1, r7, r5
    ac7c:	4652      	mov	r2, r10
    ac7e:	f004 f857 	bl	ed30 <std::string::append(unsigned int, char)>
    ac82:	f10b 0b01 	add.w	r11, r11, #1
    ac86:	f1bb 0f04 	cmp.w	r11, #4
    ac8a:	d1cc      	bne.n	ac26 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x156>
    ac8c:	f1b8 0f01 	cmp.w	r8, #1
    ac90:	d906      	bls.n	aca0 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1d0>
    ac92:	9902      	ldr	r1, [sp, #8]
    ac94:	4630      	mov	r0, r6
    ac96:	3101      	adds	r1, #1
    ac98:	f108 32ff 	add.w	r2, r8, #4294967295
    ac9c:	f003 ffe4 	bl	ec68 <std::string::append(char const*, unsigned int)>
    aca0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    aca2:	f853 2c0c 	ldr.w	r2, [r3, #-12]
    aca6:	4297      	cmp	r7, r2
    aca8:	d90f      	bls.n	acca <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1fa>
    acaa:	9b04      	ldr	r3, [sp, #16]
    acac:	4630      	mov	r0, r6
    acae:	2b20      	cmp	r3, #32
    acb0:	eba7 0202 	sub.w	r2, r7, r2
    acb4:	d104      	bne.n	acc0 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1f0>
    acb6:	4611      	mov	r1, r2
    acb8:	4652      	mov	r2, r10
    acba:	f004 f839 	bl	ed30 <std::string::append(unsigned int, char)>
    acbe:	e005      	b.n	accc <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1fc>
    acc0:	2100      	movs	r1, #0
    acc2:	4653      	mov	r3, r10
    acc4:	f003 feee 	bl	eaa4 <std::string::insert(unsigned int, unsigned int, char)>
    acc8:	e000      	b.n	accc <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const+0x1fc>
    acca:	4617      	mov	r7, r2
    accc:	ac0c      	add	r4, sp, #48	; 0x30
    acce:	9700      	str	r7, [sp, #0]
    acd0:	ab06      	add	r3, sp, #24
    acd2:	e893 0006 	ldmia.w	r3, {r1, r2}
    acd6:	4620      	mov	r0, r4
    acd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    acda:	f7ff f81d 	bl	9d18 <std::ostreambuf_iterator<char, std::char_traits<char> > std::__write<char>(std::ostreambuf_iterator<char, std::char_traits<char> >, char const*, int)>
    acde:	e894 0003 	ldmia.w	r4, {r0, r1}
    ace2:	9006      	str	r0, [sp, #24]
    ace4:	4630      	mov	r0, r6
    ace6:	f88d 101c 	strb.w	r1, [sp, #28]
    acea:	f003 fe15 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    acee:	a80a      	add	r0, sp, #40	; 0x28
    acf0:	f003 fe12 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    acf4:	2300      	movs	r3, #0
    acf6:	f8c9 3008 	str.w	r3, [r9, #8]
    acfa:	ab06      	add	r3, sp, #24
    acfc:	e893 0003 	ldmia.w	r3, {r0, r1}
    ad00:	9b05      	ldr	r3, [sp, #20]
    ad02:	e883 0003 	stmia.w	r3, {r0, r1}
    ad06:	4618      	mov	r0, r3
    ad08:	b00f      	add	sp, #60	; 0x3c
    ad0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    ad0e:	bf00      	nop
    ad10:	10000c70 	.word	0x10000c70

0000ad14 <std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const>:
    ad14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    ad18:	b08d      	sub	sp, #52	; 0x34
    ad1a:	af04      	add	r7, sp, #16
    ad1c:	f107 0508 	add.w	r5, r7, #8
    ad20:	e885 000c 	stmia.w	r5, {r2, r3}
    ad24:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    ad26:	f897 c050 	ldrb.w	r12, [r7, #80]	; 0x50
    ad2a:	4680      	mov	r8, r0
    ad2c:	468b      	mov	r11, r1
    ad2e:	f107 0018 	add.w	r0, r7, #24
    ad32:	f103 016c 	add.w	r1, r3, #108	; 0x6c
    ad36:	f8c7 c000 	str.w	r12, [r7]
    ad3a:	f005 f98b 	bl	10054 <std::locale::locale(std::locale const&)>
    ad3e:	f107 0018 	add.w	r0, r7, #24
    ad42:	f7fe faff 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    ad46:	b0d0      	sub	sp, #320	; 0x140
    ad48:	6078      	str	r0, [r7, #4]
    ad4a:	f005 f993 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    ad4e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
    ad52:	f107 0420 	add.w	r4, r7, #32
    ad56:	f844 0d04 	str.w	r0, [r4, #-4]!
    ad5a:	f10d 0910 	add.w	r9, sp, #16
    ad5e:	f04f 0a00 	mov.w	r10, #0
    ad62:	e9cd 2302 	strd	r2, r3, [sp, #8]
    ad66:	4649      	mov	r1, r9
    ad68:	4652      	mov	r2, r10
    ad6a:	4b1f      	ldr	r3, [pc, #124]	; (ade8 <std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const+0xd4>)
    ad6c:	f8cd a000 	str.w	r10, [sp]
    ad70:	4620      	mov	r0, r4
    ad72:	f7f8 f9cb 	bl	310c <std::__convert_from_v(int* const&, char*, int, char const*, ...)>
    ad76:	4606      	mov	r6, r0
    ad78:	4652      	mov	r2, r10
    ad7a:	4631      	mov	r1, r6
    ad7c:	f107 0314 	add.w	r3, r7, #20
    ad80:	4620      	mov	r0, r4
    ad82:	f003 fdb1 	bl	e8e8 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned int, char, std::allocator<char> const&)>
    ad86:	444e      	add	r6, r9
    ad88:	4620      	mov	r0, r4
    ad8a:	f003 fe33 	bl	e9f4 <std::string::_M_leak()>
    ad8e:	69fb      	ldr	r3, [r7, #28]
    ad90:	6878      	ldr	r0, [r7, #4]
    ad92:	4649      	mov	r1, r9
    ad94:	4632      	mov	r2, r6
    ad96:	f7fe f892 	bl	8ebe <std::ctype<char>::widen(char const*, char const*, char*) const>
    ad9a:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
    ad9e:	f8d7 c000 	ldr.w	r12, [r7]
    ada2:	b153      	cbz	r3, adba <std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const+0xa6>
    ada4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    ada6:	9402      	str	r4, [sp, #8]
    ada8:	e88d 1008 	stmia.w	sp, {r3, r12}
    adac:	e895 000c 	ldmia.w	r5, {r2, r3}
    adb0:	4640      	mov	r0, r8
    adb2:	4659      	mov	r1, r11
    adb4:	f7ff fd6a 	bl	a88c <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const>
    adb8:	e009      	b.n	adce <std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const+0xba>
    adba:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    adbc:	9402      	str	r4, [sp, #8]
    adbe:	e88d 1008 	stmia.w	sp, {r3, r12}
    adc2:	e895 000c 	ldmia.w	r5, {r2, r3}
    adc6:	4640      	mov	r0, r8
    adc8:	4659      	mov	r1, r11
    adca:	f7ff fe81 	bl	aad0 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const>
    adce:	4620      	mov	r0, r4
    add0:	f003 fda2 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    add4:	f107 0018 	add.w	r0, r7, #24
    add8:	f005 f9a6 	bl	10128 <std::locale::~locale()>
    addc:	4640      	mov	r0, r8
    adde:	3724      	adds	r7, #36	; 0x24
    ade0:	46bd      	mov	sp, r7
    ade2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    ade6:	bf00      	nop
    ade8:	0001b14e 	.word	0x0001b14e

0000adec <std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::string const&) const>:
    adec:	b5f0      	push	{r4, r5, r6, r7, lr}
    adee:	b087      	sub	sp, #28
    adf0:	ac04      	add	r4, sp, #16
    adf2:	e884 000c 	stmia.w	r4, {r2, r3}
    adf6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    adf8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
    adfc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    adfe:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
    ae02:	9500      	str	r5, [sp, #0]
    ae04:	9201      	str	r2, [sp, #4]
    ae06:	9302      	str	r3, [sp, #8]
    ae08:	4606      	mov	r6, r0
    ae0a:	e894 000c 	ldmia.w	r4, {r2, r3}
    ae0e:	b117      	cbz	r7, ae16 <std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::string const&) const+0x2a>
    ae10:	f7ff fd3c 	bl	a88c <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const>
    ae14:	e001      	b.n	ae1a <std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::string const&) const+0x2e>
    ae16:	f7ff fe5b 	bl	aad0 <std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const>
    ae1a:	4630      	mov	r0, r6
    ae1c:	b007      	add	sp, #28
    ae1e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>:
    ae20:	6803      	ldr	r3, [r0, #0]
    ae22:	b510      	push	{r4, lr}
    ae24:	4604      	mov	r4, r0
    ae26:	b15b      	cbz	r3, ae40 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const+0x20>
    ae28:	6840      	ldr	r0, [r0, #4]
    ae2a:	1c42      	adds	r2, r0, #1
    ae2c:	d10a      	bne.n	ae44 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const+0x24>
    ae2e:	4618      	mov	r0, r3
    ae30:	f003 fb03 	bl	e43a <std::basic_streambuf<char, std::char_traits<char> >::sgetc()>
    ae34:	1c43      	adds	r3, r0, #1
    ae36:	bf0a      	itet	eq
    ae38:	2300      	moveq	r3, #0
    ae3a:	6060      	strne	r0, [r4, #4]
    ae3c:	6023      	streq	r3, [r4, #0]
    ae3e:	bd10      	pop	{r4, pc}
    ae40:	f04f 30ff 	mov.w	r0, #4294967295
    ae44:	bd10      	pop	{r4, pc}

0000ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>:
    ae46:	b538      	push	{r3, r4, r5, lr}
    ae48:	460d      	mov	r5, r1
    ae4a:	f7ff ffe9 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    ae4e:	4604      	mov	r4, r0
    ae50:	4628      	mov	r0, r5
    ae52:	f7ff ffe5 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    ae56:	1c63      	adds	r3, r4, #1
    ae58:	425c      	negs	r4, r3
    ae5a:	f100 0201 	add.w	r2, r0, #1
    ae5e:	415c      	adcs	r4, r3
    ae60:	4250      	negs	r0, r2
    ae62:	4150      	adcs	r0, r2
    ae64:	1a21      	subs	r1, r4, r0
    ae66:	4248      	negs	r0, r1
    ae68:	4148      	adcs	r0, r1
    ae6a:	bd38      	pop	{r3, r4, r5, pc}

0000ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>:
    ae6c:	b508      	push	{r3, lr}
    ae6e:	f7ff ffea 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    ae72:	f080 0001 	eor.w	r0, r0, #1
    ae76:	b2c0      	uxtb	r0, r0
    ae78:	bd08      	pop	{r3, pc}

0000ae7a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>:
    ae7a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    ae7e:	4680      	mov	r8, r0
    ae80:	9812      	ldr	r0, [sp, #72]	; 0x48
    ae82:	a902      	add	r1, sp, #8
    ae84:	306c      	adds	r0, #108	; 0x6c
    ae86:	9d11      	ldr	r5, [sp, #68]	; 0x44
    ae88:	e901 000c 	stmdb	r1, {r2, r3}
    ae8c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
    ae8e:	f8dd a04c 	ldr.w	r10, [sp, #76]	; 0x4c
    ae92:	f7fe fa57 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    ae96:	2d02      	cmp	r5, #2
    ae98:	4683      	mov	r11, r0
    ae9a:	d006      	beq.n	aeaa <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x30>
    ae9c:	2d04      	cmp	r5, #4
    ae9e:	bf0c      	ite	eq
    aea0:	f44f 797a 	moveq.w	r9, #1000	; 0x3e8
    aea4:	f04f 0901 	movne.w	r9, #1
    aea8:	e001      	b.n	aeae <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x34>
    aeaa:	f04f 090a 	mov.w	r9, #10
    aeae:	2400      	movs	r4, #0
    aeb0:	4626      	mov	r6, r4
    aeb2:	4668      	mov	r0, sp
    aeb4:	a90c      	add	r1, sp, #48	; 0x30
    aeb6:	f7ff ffd9 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    aeba:	b110      	cbz	r0, aec2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x48>
    aebc:	42ae      	cmp	r6, r5
    aebe:	d103      	bne.n	aec8 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x4e>
    aec0:	e01b      	b.n	aefa <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x80>
    aec2:	42ae      	cmp	r6, r5
    aec4:	d114      	bne.n	aef0 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x76>
    aec6:	e018      	b.n	aefa <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x80>
    aec8:	4668      	mov	r0, sp
    aeca:	f7ff ffa9 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    aece:	222a      	movs	r2, #42	; 0x2a
    aed0:	b2c1      	uxtb	r1, r0
    aed2:	4658      	mov	r0, r11
    aed4:	f7fe f811 	bl	8efa <std::ctype<char>::narrow(char, char) const>
    aed8:	3830      	subs	r0, #48	; 0x30
    aeda:	b2c2      	uxtb	r2, r0
    aedc:	2a09      	cmp	r2, #9
    aede:	d807      	bhi.n	aef0 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x76>
    aee0:	210a      	movs	r1, #10
    aee2:	fb01 0404 	mla	r4, r1, r4, r0
    aee6:	fb09 f204 	mul.w	r2, r9, r4
    aeea:	9b10      	ldr	r3, [sp, #64]	; 0x40
    aeec:	429a      	cmp	r2, r3
    aeee:	dd0d      	ble.n	af0c <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x92>
    aef0:	2d04      	cmp	r5, #4
    aef2:	d104      	bne.n	aefe <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x84>
    aef4:	2e02      	cmp	r6, #2
    aef6:	d102      	bne.n	aefe <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x84>
    aef8:	3c64      	subs	r4, #100	; 0x64
    aefa:	603c      	str	r4, [r7, #0]
    aefc:	e011      	b.n	af22 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xa8>
    aefe:	f8da 3000 	ldr.w	r3, [r10]
    af02:	f043 0304 	orr.w	r3, r3, #4
    af06:	f8ca 3000 	str.w	r3, [r10]
    af0a:	e00a      	b.n	af22 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xa8>
    af0c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    af0e:	444a      	add	r2, r9
    af10:	4293      	cmp	r3, r2
    af12:	daed      	bge.n	aef0 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x76>
    af14:	4668      	mov	r0, sp
    af16:	fb99 f9f1 	sdiv	r9, r9, r1
    af1a:	3601      	adds	r6, #1
    af1c:	f7fe fef1 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    af20:	e7c7      	b.n	aeb2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x38>
    af22:	ab02      	add	r3, sp, #8
    af24:	e913 0003 	ldmdb	r3, {r0, r1}
    af28:	e888 0003 	stmia.w	r8, {r0, r1}
    af2c:	4640      	mov	r0, r8
    af2e:	b003      	add	sp, #12
    af30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000af34 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>:
    af34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    af38:	b085      	sub	sp, #20
    af3a:	af00      	add	r7, sp, #0
    af3c:	6078      	str	r0, [r7, #4]
    af3e:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
    af40:	f107 0408 	add.w	r4, r7, #8
    af44:	306c      	adds	r0, #108	; 0x6c
    af46:	e884 000c 	stmia.w	r4, {r2, r3}
    af4a:	f8d7 8044 	ldr.w	r8, [r7, #68]	; 0x44
    af4e:	f7fe f9f9 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    af52:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    af54:	4683      	mov	r11, r0
    af56:	009b      	lsls	r3, r3, #2
    af58:	330e      	adds	r3, #14
    af5a:	f023 0307 	bic.w	r3, r3, #7
    af5e:	ebad 0d03 	sub.w	sp, sp, r3
    af62:	4620      	mov	r0, r4
    af64:	f107 0138 	add.w	r1, r7, #56	; 0x38
    af68:	466e      	mov	r6, sp
    af6a:	f7ff ff7f 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    af6e:	b918      	cbnz	r0, af78 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x44>
    af70:	4605      	mov	r5, r0
    af72:	f04f 0b00 	mov.w	r11, #0
    af76:	e04e      	b.n	b016 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xe2>
    af78:	4620      	mov	r0, r4
    af7a:	f7ff ff51 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    af7e:	2300      	movs	r3, #0
    af80:	461d      	mov	r5, r3
    af82:	fa5f fa80 	uxtb.w	r10, r0
    af86:	6cba      	ldr	r2, [r7, #72]	; 0x48
    af88:	4293      	cmp	r3, r2
    af8a:	d0f2      	beq.n	af72 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x3e>
    af8c:	f858 1023 	ldr.w	r1, [r8, r3, lsl #2]
    af90:	7809      	ldrb	r1, [r1, #0]
    af92:	458a      	cmp	r10, r1
    af94:	d06e      	beq.n	b074 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x140>
    af96:	f8db 0000 	ldr.w	r0, [r11]
    af9a:	603b      	str	r3, [r7, #0]
    af9c:	6882      	ldr	r2, [r0, #8]
    af9e:	4658      	mov	r0, r11
    afa0:	4790      	blx	r2
    afa2:	4582      	cmp	r10, r0
    afa4:	683b      	ldr	r3, [r7, #0]
    afa6:	d065      	beq.n	b074 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x140>
    afa8:	3301      	adds	r3, #1
    afaa:	e7ec      	b.n	af86 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x52>
    afac:	f859 0b04 	ldr.w	r0, [r9], #4
    afb0:	6039      	str	r1, [r7, #0]
    afb2:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
    afb6:	f00a f8ef 	bl	15198 <strlen>
    afba:	6839      	ldr	r1, [r7, #0]
    afbc:	4582      	cmp	r10, r0
    afbe:	bf28      	it	cs
    afc0:	4682      	movcs	r10, r0
    afc2:	4589      	cmp	r9, r1
    afc4:	d1f2      	bne.n	afac <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x78>
    afc6:	4620      	mov	r0, r4
    afc8:	f10b 0b01 	add.w	r11, r11, #1
    afcc:	f7fe fe99 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    afd0:	45d3      	cmp	r11, r10
    afd2:	d253      	bcs.n	b07c <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x148>
    afd4:	4620      	mov	r0, r4
    afd6:	f107 0138 	add.w	r1, r7, #56	; 0x38
    afda:	f7ff ff47 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    afde:	2800      	cmp	r0, #0
    afe0:	d04c      	beq.n	b07c <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x148>
    afe2:	f04f 0a00 	mov.w	r10, #0
    afe6:	f856 202a 	ldr.w	r2, [r6, r10, lsl #2]
    afea:	4620      	mov	r0, r4
    afec:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
    aff0:	f812 200b 	ldrb.w	r2, [r2, r11]
    aff4:	603a      	str	r2, [r7, #0]
    aff6:	f7ff ff13 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    affa:	683a      	ldr	r2, [r7, #0]
    affc:	b2c0      	uxtb	r0, r0
    affe:	4282      	cmp	r2, r0
    b000:	bf1b      	ittet	ne
    b002:	f105 35ff 	addne.w	r5, r5, #4294967295
    b006:	f856 2025 	ldrne.w	r2, [r6, r5, lsl #2]
    b00a:	f10a 0a01 	addeq.w	r10, r10, #1
    b00e:	f846 202a 	strne.w	r2, [r6, r10, lsl #2]
    b012:	45aa      	cmp	r10, r5
    b014:	d3e7      	bcc.n	afe6 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xb2>
    b016:	2d01      	cmp	r5, #1
    b018:	d90a      	bls.n	b030 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xfc>
    b01a:	46b1      	mov	r9, r6
    b01c:	f859 2b04 	ldr.w	r2, [r9], #4
    b020:	f858 0022 	ldr.w	r0, [r8, r2, lsl #2]
    b024:	f00a f8b8 	bl	15198 <strlen>
    b028:	eb06 0185 	add.w	r1, r6, r5, lsl #2
    b02c:	4682      	mov	r10, r0
    b02e:	e7bd      	b.n	afac <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x78>
    b030:	d124      	bne.n	b07c <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x148>
    b032:	4620      	mov	r0, r4
    b034:	f7fe fe65 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    b038:	6836      	ldr	r6, [r6, #0]
    b03a:	f10b 0501 	add.w	r5, r11, #1
    b03e:	f858 b026 	ldr.w	r11, [r8, r6, lsl #2]
    b042:	4658      	mov	r0, r11
    b044:	f00a f8a8 	bl	15198 <strlen>
    b048:	4680      	mov	r8, r0
    b04a:	4545      	cmp	r5, r8
    b04c:	d21d      	bcs.n	b08a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x156>
    b04e:	4620      	mov	r0, r4
    b050:	f107 0138 	add.w	r1, r7, #56	; 0x38
    b054:	f7ff ff0a 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    b058:	b1b8      	cbz	r0, b08a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x156>
    b05a:	4620      	mov	r0, r4
    b05c:	f81b a005 	ldrb.w	r10, [r11, r5]
    b060:	f7ff fede 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    b064:	b2c0      	uxtb	r0, r0
    b066:	4582      	cmp	r10, r0
    b068:	d10f      	bne.n	b08a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x156>
    b06a:	4620      	mov	r0, r4
    b06c:	f7fe fe49 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    b070:	3501      	adds	r5, #1
    b072:	e7ea      	b.n	b04a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x116>
    b074:	f846 3025 	str.w	r3, [r6, r5, lsl #2]
    b078:	3501      	adds	r5, #1
    b07a:	e795      	b.n	afa8 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x74>
    b07c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    b07e:	6d3a      	ldr	r2, [r7, #80]	; 0x50
    b080:	681b      	ldr	r3, [r3, #0]
    b082:	f043 0304 	orr.w	r3, r3, #4
    b086:	6013      	str	r3, [r2, #0]
    b088:	e003      	b.n	b092 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x15e>
    b08a:	45a8      	cmp	r8, r5
    b08c:	d1f6      	bne.n	b07c <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x148>
    b08e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    b090:	601e      	str	r6, [r3, #0]
    b092:	687b      	ldr	r3, [r7, #4]
    b094:	e894 0003 	ldmia.w	r4, {r0, r1}
    b098:	e883 0003 	stmia.w	r3, {r0, r1}
    b09c:	4618      	mov	r0, r3
    b09e:	3714      	adds	r7, #20
    b0a0:	46bd      	mov	sp, r7
    b0a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000b0a6 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>:
    b0a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    b0aa:	b085      	sub	sp, #20
    b0ac:	af00      	add	r7, sp, #0
    b0ae:	4682      	mov	r10, r0
    b0b0:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
    b0b2:	f107 0508 	add.w	r5, r7, #8
    b0b6:	306c      	adds	r0, #108	; 0x6c
    b0b8:	e885 000c 	stmia.w	r5, {r2, r3}
    b0bc:	f8d7 9048 	ldr.w	r9, [r7, #72]	; 0x48
    b0c0:	f7fe f940 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    b0c4:	ea4f 03c9 	mov.w	r3, r9, lsl #3
    b0c8:	3308      	adds	r3, #8
    b0ca:	4683      	mov	r11, r0
    b0cc:	ebad 0d03 	sub.w	sp, sp, r3
    b0d0:	4628      	mov	r0, r5
    b0d2:	f107 0138 	add.w	r1, r7, #56	; 0x38
    b0d6:	466e      	mov	r6, sp
    b0d8:	f7ff fec8 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    b0dc:	b918      	cbnz	r0, b0e6 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x40>
    b0de:	2400      	movs	r4, #0
    b0e0:	46a0      	mov	r8, r4
    b0e2:	46a3      	mov	r11, r4
    b0e4:	e055      	b.n	b192 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xec>
    b0e6:	4628      	mov	r0, r5
    b0e8:	f7ff fe9a 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    b0ec:	f04f 0800 	mov.w	r8, #0
    b0f0:	4644      	mov	r4, r8
    b0f2:	b2c3      	uxtb	r3, r0
    b0f4:	ea4f 0c49 	mov.w	r12, r9, lsl #1
    b0f8:	45e0      	cmp	r8, r12
    b0fa:	d015      	beq.n	b128 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x82>
    b0fc:	6c7a      	ldr	r2, [r7, #68]	; 0x44
    b0fe:	f852 1028 	ldr.w	r1, [r2, r8, lsl #2]
    b102:	7809      	ldrb	r1, [r1, #0]
    b104:	428b      	cmp	r3, r1
    b106:	f000 808a 	beq.w	b21e <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x178>
    b10a:	f8db 0000 	ldr.w	r0, [r11]
    b10e:	e887 1008 	stmia.w	r7, {r3, r12}
    b112:	6882      	ldr	r2, [r0, #8]
    b114:	4658      	mov	r0, r11
    b116:	4790      	blx	r2
    b118:	683b      	ldr	r3, [r7, #0]
    b11a:	f8d7 c004 	ldr.w	r12, [r7, #4]
    b11e:	4283      	cmp	r3, r0
    b120:	d07d      	beq.n	b21e <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x178>
    b122:	f108 0801 	add.w	r8, r8, #1
    b126:	e7e7      	b.n	b0f8 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x52>
    b128:	2c00      	cmp	r4, #0
    b12a:	d0d8      	beq.n	b0de <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x38>
    b12c:	4628      	mov	r0, r5
    b12e:	f7fe fde8 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    b132:	00a3      	lsls	r3, r4, #2
    b134:	330e      	adds	r3, #14
    b136:	f023 0307 	bic.w	r3, r3, #7
    b13a:	ebad 0d03 	sub.w	sp, sp, r3
    b13e:	46eb      	mov	r11, sp
    b140:	f04f 0800 	mov.w	r8, #0
    b144:	f856 3028 	ldr.w	r3, [r6, r8, lsl #2]
    b148:	6c7a      	ldr	r2, [r7, #68]	; 0x44
    b14a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
    b14e:	f00a f823 	bl	15198 <strlen>
    b152:	f84b 0028 	str.w	r0, [r11, r8, lsl #2]
    b156:	f108 0801 	add.w	r8, r8, #1
    b15a:	45a0      	cmp	r8, r4
    b15c:	d1f2      	bne.n	b144 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x9e>
    b15e:	f04f 0801 	mov.w	r8, #1
    b162:	e016      	b.n	b192 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xec>
    b164:	f812 2008 	ldrb.w	r2, [r2, r8]
    b168:	4562      	cmp	r2, r12
    b16a:	d02f      	beq.n	b1cc <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x126>
    b16c:	3c01      	subs	r4, #1
    b16e:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
    b172:	5032      	str	r2, [r6, r0]
    b174:	f85b 2024 	ldr.w	r2, [r11, r4, lsl #2]
    b178:	f8ce 2000 	str.w	r2, [lr]
    b17c:	42a3      	cmp	r3, r4
    b17e:	d316      	bcc.n	b1ae <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x108>
    b180:	687b      	ldr	r3, [r7, #4]
    b182:	42a3      	cmp	r3, r4
    b184:	d024      	beq.n	b1d0 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x12a>
    b186:	f107 0008 	add.w	r0, r7, #8
    b18a:	f7fe fdba 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    b18e:	f108 0801 	add.w	r8, r8, #1
    b192:	4628      	mov	r0, r5
    b194:	f107 0138 	add.w	r1, r7, #56	; 0x38
    b198:	f7ff fe68 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    b19c:	b1c0      	cbz	r0, b1d0 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x12a>
    b19e:	4628      	mov	r0, r5
    b1a0:	f7ff fe3e 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    b1a4:	2300      	movs	r3, #0
    b1a6:	fa5f fc80 	uxtb.w	r12, r0
    b1aa:	607b      	str	r3, [r7, #4]
    b1ac:	e7e6      	b.n	b17c <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xd6>
    b1ae:	6c79      	ldr	r1, [r7, #68]	; 0x44
    b1b0:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
    b1b4:	0098      	lsls	r0, r3, #2
    b1b6:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
    b1ba:	f85b 1023 	ldr.w	r1, [r11, r3, lsl #2]
    b1be:	eb0b 0e00 	add.w	lr, r11, r0
    b1c2:	4588      	cmp	r8, r1
    b1c4:	d3ce      	bcc.n	b164 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xbe>
    b1c6:	687a      	ldr	r2, [r7, #4]
    b1c8:	3201      	adds	r2, #1
    b1ca:	607a      	str	r2, [r7, #4]
    b1cc:	3301      	adds	r3, #1
    b1ce:	e7d5      	b.n	b17c <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0xd6>
    b1d0:	2c01      	cmp	r4, #1
    b1d2:	d102      	bne.n	b1da <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x134>
    b1d4:	f8db 3000 	ldr.w	r3, [r11]
    b1d8:	e007      	b.n	b1ea <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x144>
    b1da:	2c02      	cmp	r4, #2
    b1dc:	d10e      	bne.n	b1fc <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x156>
    b1de:	f8db 3000 	ldr.w	r3, [r11]
    b1e2:	4543      	cmp	r3, r8
    b1e4:	d003      	beq.n	b1ee <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x148>
    b1e6:	f8db 3004 	ldr.w	r3, [r11, #4]
    b1ea:	4543      	cmp	r3, r8
    b1ec:	d106      	bne.n	b1fc <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x156>
    b1ee:	6833      	ldr	r3, [r6, #0]
    b1f0:	6c3a      	ldr	r2, [r7, #64]	; 0x40
    b1f2:	454b      	cmp	r3, r9
    b1f4:	bf28      	it	cs
    b1f6:	ebc9 0303 	rsbcs	r3, r9, r3
    b1fa:	e004      	b.n	b206 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x160>
    b1fc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
    b1fe:	6d3a      	ldr	r2, [r7, #80]	; 0x50
    b200:	681b      	ldr	r3, [r3, #0]
    b202:	f043 0304 	orr.w	r3, r3, #4
    b206:	6013      	str	r3, [r2, #0]
    b208:	f107 0310 	add.w	r3, r7, #16
    b20c:	e913 0003 	ldmdb	r3, {r0, r1}
    b210:	e88a 0003 	stmia.w	r10, {r0, r1}
    b214:	4650      	mov	r0, r10
    b216:	3714      	adds	r7, #20
    b218:	46bd      	mov	sp, r7
    b21a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    b21e:	f846 8024 	str.w	r8, [r6, r4, lsl #2]
    b222:	3401      	adds	r4, #1
    b224:	e77d      	b.n	b122 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const+0x7c>
	...

0000b228 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const>:
    b228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    b22c:	b09f      	sub	sp, #124	; 0x7c
    b22e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
    b230:	900a      	str	r0, [sp, #40]	; 0x28
    b232:	f104 066c 	add.w	r6, r4, #108	; 0x6c
    b236:	460d      	mov	r5, r1
    b238:	4630      	mov	r0, r6
    b23a:	a90e      	add	r1, sp, #56	; 0x38
    b23c:	e881 000c 	stmia.w	r1, {r2, r3}
    b240:	f8dd 80b0 	ldr.w	r8, [sp, #176]	; 0xb0
    b244:	f7fe fb82 	bl	994c <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)>
    b248:	4683      	mov	r11, r0
    b24a:	4630      	mov	r0, r6
    b24c:	f7fe f87a 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    b250:	4681      	mov	r9, r0
    b252:	982d      	ldr	r0, [sp, #180]	; 0xb4
    b254:	f009 ffa0 	bl	15198 <strlen>
    b258:	2700      	movs	r7, #0
    b25a:	9009      	str	r0, [sp, #36]	; 0x24
    b25c:	9710      	str	r7, [sp, #64]	; 0x40
    b25e:	ae0e      	add	r6, sp, #56	; 0x38
    b260:	4630      	mov	r0, r6
    b262:	a928      	add	r1, sp, #160	; 0xa0
    b264:	f7ff fe02 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    b268:	f8dd a040 	ldr.w	r10, [sp, #64]	; 0x40
    b26c:	2800      	cmp	r0, #0
    b26e:	f000 8272 	beq.w	b756 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x52e>
    b272:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b274:	429f      	cmp	r7, r3
    b276:	f080 826e 	bcs.w	b756 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x52e>
    b27a:	f1ba 0f00 	cmp.w	r10, #0
    b27e:	f040 826a 	bne.w	b756 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x52e>
    b282:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
    b284:	4648      	mov	r0, r9
    b286:	5dd9      	ldrb	r1, [r3, r7]
    b288:	4652      	mov	r2, r10
    b28a:	f7fd fe36 	bl	8efa <std::ctype<char>::narrow(char, char) const>
    b28e:	2825      	cmp	r0, #37	; 0x25
    b290:	f040 8209 	bne.w	b6a6 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x47e>
    b294:	1c7b      	adds	r3, r7, #1
    b296:	9308      	str	r3, [sp, #32]
    b298:	9a08      	ldr	r2, [sp, #32]
    b29a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
    b29c:	4648      	mov	r0, r9
    b29e:	5c99      	ldrb	r1, [r3, r2]
    b2a0:	4652      	mov	r2, r10
    b2a2:	f7fd fe2a 	bl	8efa <std::ctype<char>::narrow(char, char) const>
    b2a6:	2845      	cmp	r0, #69	; 0x45
    b2a8:	f8cd a044 	str.w	r10, [sp, #68]	; 0x44
    b2ac:	d001      	beq.n	b2b2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x8a>
    b2ae:	284f      	cmp	r0, #79	; 0x4f
    b2b0:	d108      	bne.n	b2c4 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x9c>
    b2b2:	1cbb      	adds	r3, r7, #2
    b2b4:	9308      	str	r3, [sp, #32]
    b2b6:	9a08      	ldr	r2, [sp, #32]
    b2b8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
    b2ba:	4648      	mov	r0, r9
    b2bc:	5c99      	ldrb	r1, [r3, r2]
    b2be:	2200      	movs	r2, #0
    b2c0:	f7fd fe1b 	bl	8efa <std::ctype<char>::narrow(char, char) const>
    b2c4:	3841      	subs	r0, #65	; 0x41
    b2c6:	ae0e      	add	r6, sp, #56	; 0x38
    b2c8:	2838      	cmp	r0, #56	; 0x38
    b2ca:	f200 81e6 	bhi.w	b69a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x472>
    b2ce:	e8df f010 	tbh	[pc, r0, lsl #1]
    b2d2:	003f      	.short	0x003f
    b2d4:	01790065 	.word	0x01790065
    b2d8:	01e400bf 	.word	0x01e400bf
    b2dc:	01e401e4 	.word	0x01e401e4
    b2e0:	00d000c3 	.word	0x00d000c3
    b2e4:	01e401e4 	.word	0x01e401e4
    b2e8:	010201e4 	.word	0x010201e4
    b2ec:	01e401e4 	.word	0x01e401e4
    b2f0:	01e401e4 	.word	0x01e401e4
    b2f4:	0132011e 	.word	0x0132011e
    b2f8:	01e40155 	.word	0x01e40155
    b2fc:	01e401e4 	.word	0x01e401e4
    b300:	01790160 	.word	0x01790160
    b304:	01e401a2 	.word	0x01e401a2
    b308:	01e401e4 	.word	0x01e401e4
    b30c:	01e401e4 	.word	0x01e401e4
    b310:	003901e4 	.word	0x003901e4
    b314:	0076005f 	.word	0x0076005f
    b318:	0088007b 	.word	0x0088007b
    b31c:	01e401e4 	.word	0x01e401e4
    b320:	01e4005f 	.word	0x01e4005f
    b324:	01e401e4 	.word	0x01e401e4
    b328:	00dd01e4 	.word	0x00dd01e4
    b32c:	01e4010f 	.word	0x01e4010f
    b330:	01e401e4 	.word	0x01e401e4
    b334:	01e401e4 	.word	0x01e401e4
    b338:	01e4014b 	.word	0x01e4014b
    b33c:	01e401e4 	.word	0x01e401e4
    b340:	0179015b 	.word	0x0179015b
    b344:	ae12      	add	r6, sp, #72	; 0x48
    b346:	4658      	mov	r0, r11
    b348:	4631      	mov	r1, r6
    b34a:	f7fd ff6a 	bl	9222 <std::__timepunct<char>::_M_days_abbreviated(char const**) const>
    b34e:	e004      	b.n	b35a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x132>
    b350:	ae12      	add	r6, sp, #72	; 0x48
    b352:	4658      	mov	r0, r11
    b354:	4631      	mov	r1, r6
    b356:	f7fd ff4e 	bl	91f6 <std::__timepunct<char>::_M_days(char const**) const>
    b35a:	ab28      	add	r3, sp, #160	; 0xa0
    b35c:	e893 0003 	ldmia.w	r3, {r0, r1}
    b360:	e88d 0003 	stmia.w	sp, {r0, r1}
    b364:	f108 0318 	add.w	r3, r8, #24
    b368:	9302      	str	r3, [sp, #8]
    b36a:	af0c      	add	r7, sp, #48	; 0x30
    b36c:	9603      	str	r6, [sp, #12]
    b36e:	2307      	movs	r3, #7
    b370:	9304      	str	r3, [sp, #16]
    b372:	ab10      	add	r3, sp, #64	; 0x40
    b374:	9405      	str	r4, [sp, #20]
    b376:	9306      	str	r3, [sp, #24]
    b378:	ae0e      	add	r6, sp, #56	; 0x38
    b37a:	4638      	mov	r0, r7
    b37c:	e896 000c 	ldmia.w	r6, {r2, r3}
    b380:	4629      	mov	r1, r5
    b382:	f7ff fdd7 	bl	af34 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    b386:	e897 0003 	ldmia.w	r7, {r0, r1}
    b38a:	e886 0003 	stmia.w	r6, {r0, r1}
    b38e:	e188      	b.n	b6a2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x47a>
    b390:	ae12      	add	r6, sp, #72	; 0x48
    b392:	4658      	mov	r0, r11
    b394:	4631      	mov	r1, r6
    b396:	f7fd ff84 	bl	92a2 <std::__timepunct<char>::_M_months_abbreviated(char const**) const>
    b39a:	e004      	b.n	b3a6 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x17e>
    b39c:	ae12      	add	r6, sp, #72	; 0x48
    b39e:	4658      	mov	r0, r11
    b3a0:	4631      	mov	r1, r6
    b3a2:	f7fd ff54 	bl	924e <std::__timepunct<char>::_M_months(char const**) const>
    b3a6:	ab28      	add	r3, sp, #160	; 0xa0
    b3a8:	e893 0003 	ldmia.w	r3, {r0, r1}
    b3ac:	f108 0310 	add.w	r3, r8, #16
    b3b0:	9302      	str	r3, [sp, #8]
    b3b2:	af0c      	add	r7, sp, #48	; 0x30
    b3b4:	e88d 0003 	stmia.w	sp, {r0, r1}
    b3b8:	9603      	str	r6, [sp, #12]
    b3ba:	230c      	movs	r3, #12
    b3bc:	e7d8      	b.n	b370 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x148>
    b3be:	4658      	mov	r0, r11
    b3c0:	a912      	add	r1, sp, #72	; 0x48
    b3c2:	f7fd ff11 	bl	91e8 <std::__timepunct<char>::_M_date_time_formats(char const**) const>
    b3c6:	e0e8      	b.n	b59a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x372>
    b3c8:	ab28      	add	r3, sp, #160	; 0xa0
    b3ca:	e893 0003 	ldmia.w	r3, {r0, r1}
    b3ce:	f108 030c 	add.w	r3, r8, #12
    b3d2:	9302      	str	r3, [sp, #8]
    b3d4:	2301      	movs	r3, #1
    b3d6:	9303      	str	r3, [sp, #12]
    b3d8:	af0c      	add	r7, sp, #48	; 0x30
    b3da:	e88d 0003 	stmia.w	sp, {r0, r1}
    b3de:	231f      	movs	r3, #31
    b3e0:	e0b4      	b.n	b54c <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x324>
    b3e2:	4630      	mov	r0, r6
    b3e4:	f7ff fd1c 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    b3e8:	f8d9 3018 	ldr.w	r3, [r9, #24]
    b3ec:	b2c0      	uxtb	r0, r0
    b3ee:	5c1b      	ldrb	r3, [r3, r0]
    b3f0:	af0c      	add	r7, sp, #48	; 0x30
    b3f2:	f013 0f08 	tst.w	r3, #8
    b3f6:	d017      	beq.n	b428 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x200>
    b3f8:	4630      	mov	r0, r6
    b3fa:	f7fe fc82 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    b3fe:	4603      	mov	r3, r0
    b400:	aa28      	add	r2, sp, #160	; 0xa0
    b402:	e892 0003 	ldmia.w	r2, {r0, r1}
    b406:	f108 020c 	add.w	r2, r8, #12
    b40a:	e88d 0003 	stmia.w	sp, {r0, r1}
    b40e:	9202      	str	r2, [sp, #8]
    b410:	2201      	movs	r2, #1
    b412:	9203      	str	r2, [sp, #12]
    b414:	2109      	movs	r1, #9
    b416:	9205      	str	r2, [sp, #20]
    b418:	aa10      	add	r2, sp, #64	; 0x40
    b41a:	9104      	str	r1, [sp, #16]
    b41c:	9406      	str	r4, [sp, #24]
    b41e:	9207      	str	r2, [sp, #28]
    b420:	4638      	mov	r0, r7
    b422:	cb0c      	ldmia	r3, {r2, r3}
    b424:	4629      	mov	r1, r5
    b426:	e09c      	b.n	b562 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x33a>
    b428:	ab28      	add	r3, sp, #160	; 0xa0
    b42a:	e893 0003 	ldmia.w	r3, {r0, r1}
    b42e:	f108 030c 	add.w	r3, r8, #12
    b432:	9302      	str	r3, [sp, #8]
    b434:	230a      	movs	r3, #10
    b436:	9303      	str	r3, [sp, #12]
    b438:	231f      	movs	r3, #31
    b43a:	9304      	str	r3, [sp, #16]
    b43c:	2302      	movs	r3, #2
    b43e:	9305      	str	r3, [sp, #20]
    b440:	ab10      	add	r3, sp, #64	; 0x40
    b442:	e88d 0003 	stmia.w	sp, {r0, r1}
    b446:	9406      	str	r4, [sp, #24]
    b448:	9307      	str	r3, [sp, #28]
    b44a:	4638      	mov	r0, r7
    b44c:	4629      	mov	r1, r5
    b44e:	e086      	b.n	b55e <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x336>
    b450:	ae12      	add	r6, sp, #72	; 0x48
    b452:	4648      	mov	r0, r9
    b454:	499d      	ldr	r1, [pc, #628]	; (b6cc <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x4a4>)
    b456:	e094      	b.n	b582 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x35a>
    b458:	ab28      	add	r3, sp, #160	; 0xa0
    b45a:	e893 0003 	ldmia.w	r3, {r0, r1}
    b45e:	f108 0308 	add.w	r3, r8, #8
    b462:	9302      	str	r3, [sp, #8]
    b464:	2300      	movs	r3, #0
    b466:	9303      	str	r3, [sp, #12]
    b468:	af0c      	add	r7, sp, #48	; 0x30
    b46a:	e88d 0003 	stmia.w	sp, {r0, r1}
    b46e:	2317      	movs	r3, #23
    b470:	e06c      	b.n	b54c <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x324>
    b472:	ab28      	add	r3, sp, #160	; 0xa0
    b474:	e893 0003 	ldmia.w	r3, {r0, r1}
    b478:	f108 0308 	add.w	r3, r8, #8
    b47c:	9302      	str	r3, [sp, #8]
    b47e:	2301      	movs	r3, #1
    b480:	9303      	str	r3, [sp, #12]
    b482:	af0c      	add	r7, sp, #48	; 0x30
    b484:	e88d 0003 	stmia.w	sp, {r0, r1}
    b488:	230c      	movs	r3, #12
    b48a:	e05f      	b.n	b54c <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x324>
    b48c:	ab28      	add	r3, sp, #160	; 0xa0
    b48e:	e893 0003 	ldmia.w	r3, {r0, r1}
    b492:	ab11      	add	r3, sp, #68	; 0x44
    b494:	9302      	str	r3, [sp, #8]
    b496:	2301      	movs	r3, #1
    b498:	9303      	str	r3, [sp, #12]
    b49a:	230c      	movs	r3, #12
    b49c:	e88d 0003 	stmia.w	sp, {r0, r1}
    b4a0:	9304      	str	r3, [sp, #16]
    b4a2:	2302      	movs	r3, #2
    b4a4:	9305      	str	r3, [sp, #20]
    b4a6:	ab10      	add	r3, sp, #64	; 0x40
    b4a8:	af0c      	add	r7, sp, #48	; 0x30
    b4aa:	9406      	str	r4, [sp, #24]
    b4ac:	9307      	str	r3, [sp, #28]
    b4ae:	ae0e      	add	r6, sp, #56	; 0x38
    b4b0:	4638      	mov	r0, r7
    b4b2:	e896 000c 	ldmia.w	r6, {r2, r3}
    b4b6:	4629      	mov	r1, r5
    b4b8:	f7ff fcdf 	bl	ae7a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    b4bc:	e897 0003 	ldmia.w	r7, {r0, r1}
    b4c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    b4c2:	e886 0003 	stmia.w	r6, {r0, r1}
    b4c6:	2b00      	cmp	r3, #0
    b4c8:	f040 80eb 	bne.w	b6a2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x47a>
    b4cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
    b4ce:	3b01      	subs	r3, #1
    b4d0:	f8c8 3010 	str.w	r3, [r8, #16]
    b4d4:	e0e5      	b.n	b6a2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x47a>
    b4d6:	ab28      	add	r3, sp, #160	; 0xa0
    b4d8:	e893 0003 	ldmia.w	r3, {r0, r1}
    b4dc:	f108 0304 	add.w	r3, r8, #4
    b4e0:	9302      	str	r3, [sp, #8]
    b4e2:	2300      	movs	r3, #0
    b4e4:	9303      	str	r3, [sp, #12]
    b4e6:	af0c      	add	r7, sp, #48	; 0x30
    b4e8:	e88d 0003 	stmia.w	sp, {r0, r1}
    b4ec:	233b      	movs	r3, #59	; 0x3b
    b4ee:	e02d      	b.n	b54c <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x324>
    b4f0:	4630      	mov	r0, r6
    b4f2:	f7ff fc95 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    b4f6:	2200      	movs	r2, #0
    b4f8:	b2c1      	uxtb	r1, r0
    b4fa:	4648      	mov	r0, r9
    b4fc:	f7fd fcfd 	bl	8efa <std::ctype<char>::narrow(char, char) const>
    b500:	280a      	cmp	r0, #10
    b502:	f040 80ca 	bne.w	b69a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x472>
    b506:	4630      	mov	r0, r6
    b508:	f7fe fbfb 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    b50c:	e0c9      	b.n	b6a2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x47a>
    b50e:	4648      	mov	r0, r9
    b510:	496f      	ldr	r1, [pc, #444]	; (b6d0 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x4a8>)
    b512:	ae12      	add	r6, sp, #72	; 0x48
    b514:	1d8a      	adds	r2, r1, #6
    b516:	4633      	mov	r3, r6
    b518:	f7fd fcd1 	bl	8ebe <std::ctype<char>::widen(char const*, char const*, char*) const>
    b51c:	ab28      	add	r3, sp, #160	; 0xa0
    b51e:	e893 0003 	ldmia.w	r3, {r0, r1}
    b522:	ab10      	add	r3, sp, #64	; 0x40
    b524:	af0c      	add	r7, sp, #48	; 0x30
    b526:	e88d 0003 	stmia.w	sp, {r0, r1}
    b52a:	9402      	str	r4, [sp, #8]
    b52c:	9303      	str	r3, [sp, #12]
    b52e:	f8cd 8010 	str.w	r8, [sp, #16]
    b532:	9605      	str	r6, [sp, #20]
    b534:	e03e      	b.n	b5b4 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x38c>
    b536:	ab28      	add	r3, sp, #160	; 0xa0
    b538:	e893 0003 	ldmia.w	r3, {r0, r1}
    b53c:	e88d 0003 	stmia.w	sp, {r0, r1}
    b540:	2300      	movs	r3, #0
    b542:	9303      	str	r3, [sp, #12]
    b544:	af0c      	add	r7, sp, #48	; 0x30
    b546:	f8cd 8008 	str.w	r8, [sp, #8]
    b54a:	233d      	movs	r3, #61	; 0x3d
    b54c:	4638      	mov	r0, r7
    b54e:	4629      	mov	r1, r5
    b550:	9304      	str	r3, [sp, #16]
    b552:	2302      	movs	r3, #2
    b554:	9305      	str	r3, [sp, #20]
    b556:	ab10      	add	r3, sp, #64	; 0x40
    b558:	9406      	str	r4, [sp, #24]
    b55a:	9307      	str	r3, [sp, #28]
    b55c:	ae0e      	add	r6, sp, #56	; 0x38
    b55e:	e896 000c 	ldmia.w	r6, {r2, r3}
    b562:	f7ff fc8a 	bl	ae7a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    b566:	e70e      	b.n	b386 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x15e>
    b568:	4630      	mov	r0, r6
    b56a:	f7ff fc59 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    b56e:	2200      	movs	r2, #0
    b570:	b2c1      	uxtb	r1, r0
    b572:	4648      	mov	r0, r9
    b574:	f7fd fcc1 	bl	8efa <std::ctype<char>::narrow(char, char) const>
    b578:	2809      	cmp	r0, #9
    b57a:	e7c2      	b.n	b502 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x2da>
    b57c:	4648      	mov	r0, r9
    b57e:	4955      	ldr	r1, [pc, #340]	; (b6d4 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x4ac>)
    b580:	ae12      	add	r6, sp, #72	; 0x48
    b582:	f101 0209 	add.w	r2, r1, #9
    b586:	e7c6      	b.n	b516 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x2ee>
    b588:	4658      	mov	r0, r11
    b58a:	a912      	add	r1, sp, #72	; 0x48
    b58c:	f7fd fe1e 	bl	91cc <std::__timepunct<char>::_M_date_formats(char const**) const>
    b590:	e003      	b.n	b59a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x372>
    b592:	4658      	mov	r0, r11
    b594:	a912      	add	r1, sp, #72	; 0x48
    b596:	f7fd fe20 	bl	91da <std::__timepunct<char>::_M_time_formats(char const**) const>
    b59a:	ab28      	add	r3, sp, #160	; 0xa0
    b59c:	e893 0003 	ldmia.w	r3, {r0, r1}
    b5a0:	ab10      	add	r3, sp, #64	; 0x40
    b5a2:	9303      	str	r3, [sp, #12]
    b5a4:	e88d 0003 	stmia.w	sp, {r0, r1}
    b5a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
    b5aa:	af0c      	add	r7, sp, #48	; 0x30
    b5ac:	9402      	str	r4, [sp, #8]
    b5ae:	f8cd 8010 	str.w	r8, [sp, #16]
    b5b2:	9305      	str	r3, [sp, #20]
    b5b4:	ae0e      	add	r6, sp, #56	; 0x38
    b5b6:	4638      	mov	r0, r7
    b5b8:	e896 000c 	ldmia.w	r6, {r2, r3}
    b5bc:	4629      	mov	r1, r5
    b5be:	f7ff fe33 	bl	b228 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const>
    b5c2:	e6e0      	b.n	b386 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x15e>
    b5c4:	ab28      	add	r3, sp, #160	; 0xa0
    b5c6:	e893 0003 	ldmia.w	r3, {r0, r1}
    b5ca:	ab11      	add	r3, sp, #68	; 0x44
    b5cc:	9302      	str	r3, [sp, #8]
    b5ce:	2300      	movs	r3, #0
    b5d0:	9303      	str	r3, [sp, #12]
    b5d2:	f242 730f 	movw	r3, #9999	; 0x270f
    b5d6:	e88d 0003 	stmia.w	sp, {r0, r1}
    b5da:	9304      	str	r3, [sp, #16]
    b5dc:	2304      	movs	r3, #4
    b5de:	9305      	str	r3, [sp, #20]
    b5e0:	ab10      	add	r3, sp, #64	; 0x40
    b5e2:	af0c      	add	r7, sp, #48	; 0x30
    b5e4:	9406      	str	r4, [sp, #24]
    b5e6:	9307      	str	r3, [sp, #28]
    b5e8:	ae0e      	add	r6, sp, #56	; 0x38
    b5ea:	4638      	mov	r0, r7
    b5ec:	e896 000c 	ldmia.w	r6, {r2, r3}
    b5f0:	4629      	mov	r1, r5
    b5f2:	f7ff fc42 	bl	ae7a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    b5f6:	e897 0003 	ldmia.w	r7, {r0, r1}
    b5fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
    b5fc:	e886 0003 	stmia.w	r6, {r0, r1}
    b600:	2b00      	cmp	r3, #0
    b602:	d14e      	bne.n	b6a2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x47a>
    b604:	9b11      	ldr	r3, [sp, #68]	; 0x44
    b606:	2b00      	cmp	r3, #0
    b608:	bfb4      	ite	lt
    b60a:	3364      	addlt	r3, #100	; 0x64
    b60c:	f2a3 736c 	subwge	r3, r3, #1900	; 0x76c
    b610:	f8c8 3014 	str.w	r3, [r8, #20]
    b614:	e045      	b.n	b6a2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x47a>
    b616:	4630      	mov	r0, r6
    b618:	f7ff fc02 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    b61c:	f8d9 3018 	ldr.w	r3, [r9, #24]
    b620:	b2c0      	uxtb	r0, r0
    b622:	5c1b      	ldrb	r3, [r3, r0]
    b624:	07db      	lsls	r3, r3, #31
    b626:	d538      	bpl.n	b69a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x472>
    b628:	ab28      	add	r3, sp, #160	; 0xa0
    b62a:	e893 0003 	ldmia.w	r3, {r0, r1}
    b62e:	ab12      	add	r3, sp, #72	; 0x48
    b630:	9302      	str	r3, [sp, #8]
    b632:	4b29      	ldr	r3, [pc, #164]	; (b6d8 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x4b0>)
    b634:	e88d 0003 	stmia.w	sp, {r0, r1}
    b638:	9303      	str	r3, [sp, #12]
    b63a:	230e      	movs	r3, #14
    b63c:	9304      	str	r3, [sp, #16]
    b63e:	ab10      	add	r3, sp, #64	; 0x40
    b640:	af0c      	add	r7, sp, #48	; 0x30
    b642:	9405      	str	r4, [sp, #20]
    b644:	9306      	str	r3, [sp, #24]
    b646:	4638      	mov	r0, r7
    b648:	e896 000c 	ldmia.w	r6, {r2, r3}
    b64c:	4629      	mov	r1, r5
    b64e:	f7ff fc71 	bl	af34 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    b652:	e897 0003 	ldmia.w	r7, {r0, r1}
    b656:	e886 0003 	stmia.w	r6, {r0, r1}
    b65a:	4630      	mov	r0, r6
    b65c:	a928      	add	r1, sp, #160	; 0xa0
    b65e:	f7ff fc05 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    b662:	b1f0      	cbz	r0, b6a2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x47a>
    b664:	9b10      	ldr	r3, [sp, #64]	; 0x40
    b666:	b9e3      	cbnz	r3, b6a2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x47a>
    b668:	9b12      	ldr	r3, [sp, #72]	; 0x48
    b66a:	b9d3      	cbnz	r3, b6a2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x47a>
    b66c:	4630      	mov	r0, r6
    b66e:	f7ff fbd7 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    b672:	212d      	movs	r1, #45	; 0x2d
    b674:	4607      	mov	r7, r0
    b676:	4648      	mov	r0, r9
    b678:	f7fd fc10 	bl	8e9c <std::ctype<char>::widen(char) const>
    b67c:	b2ff      	uxtb	r7, r7
    b67e:	4287      	cmp	r7, r0
    b680:	d02c      	beq.n	b6dc <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x4b4>
    b682:	4630      	mov	r0, r6
    b684:	f7ff fbcc 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    b688:	212b      	movs	r1, #43	; 0x2b
    b68a:	4606      	mov	r6, r0
    b68c:	4648      	mov	r0, r9
    b68e:	f7fd fc05 	bl	8e9c <std::ctype<char>::widen(char) const>
    b692:	b2f6      	uxtb	r6, r6
    b694:	4286      	cmp	r6, r0
    b696:	d104      	bne.n	b6a2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x47a>
    b698:	e020      	b.n	b6dc <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x4b4>
    b69a:	9b10      	ldr	r3, [sp, #64]	; 0x40
    b69c:	f043 0304 	orr.w	r3, r3, #4
    b6a0:	9310      	str	r3, [sp, #64]	; 0x40
    b6a2:	9f08      	ldr	r7, [sp, #32]
    b6a4:	e010      	b.n	b6c8 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x4a0>
    b6a6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
    b6a8:	4630      	mov	r0, r6
    b6aa:	f813 a007 	ldrb.w	r10, [r3, r7]
    b6ae:	f7ff fbb7 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    b6b2:	b2c0      	uxtb	r0, r0
    b6b4:	4582      	cmp	r10, r0
    b6b6:	d103      	bne.n	b6c0 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x498>
    b6b8:	4630      	mov	r0, r6
    b6ba:	f7fe fb22 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    b6be:	e003      	b.n	b6c8 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x4a0>
    b6c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    b6c2:	f043 0304 	orr.w	r3, r3, #4
    b6c6:	9310      	str	r3, [sp, #64]	; 0x40
    b6c8:	3701      	adds	r7, #1
    b6ca:	e5c8      	b.n	b25e <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x36>
    b6cc:	0001b154 	.word	0x0001b154
    b6d0:	0001b15d 	.word	0x0001b15d
    b6d4:	0001b163 	.word	0x0001b163
    b6d8:	100000f4 	.word	0x100000f4
    b6dc:	ab28      	add	r3, sp, #160	; 0xa0
    b6de:	e893 0003 	ldmia.w	r3, {r0, r1}
    b6e2:	2317      	movs	r3, #23
    b6e4:	e88d 0003 	stmia.w	sp, {r0, r1}
    b6e8:	9304      	str	r3, [sp, #16]
    b6ea:	2302      	movs	r3, #2
    b6ec:	f04f 0c00 	mov.w	r12, #0
    b6f0:	9305      	str	r3, [sp, #20]
    b6f2:	af12      	add	r7, sp, #72	; 0x48
    b6f4:	ab10      	add	r3, sp, #64	; 0x40
    b6f6:	ae0c      	add	r6, sp, #48	; 0x30
    b6f8:	f10d 0a38 	add.w	r10, sp, #56	; 0x38
    b6fc:	f8cd c00c 	str.w	r12, [sp, #12]
    b700:	9702      	str	r7, [sp, #8]
    b702:	9406      	str	r4, [sp, #24]
    b704:	9307      	str	r3, [sp, #28]
    b706:	e89a 000c 	ldmia.w	r10, {r2, r3}
    b70a:	f8cd c02c 	str.w	r12, [sp, #44]	; 0x2c
    b70e:	4630      	mov	r0, r6
    b710:	4629      	mov	r1, r5
    b712:	f7ff fbb2 	bl	ae7a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    b716:	e896 0003 	ldmia.w	r6, {r0, r1}
    b71a:	ab28      	add	r3, sp, #160	; 0xa0
    b71c:	e88a 0003 	stmia.w	r10, {r0, r1}
    b720:	e893 0003 	ldmia.w	r3, {r0, r1}
    b724:	233b      	movs	r3, #59	; 0x3b
    b726:	e88d 0003 	stmia.w	sp, {r0, r1}
    b72a:	9304      	str	r3, [sp, #16]
    b72c:	f8dd c02c 	ldr.w	r12, [sp, #44]	; 0x2c
    b730:	2302      	movs	r3, #2
    b732:	9305      	str	r3, [sp, #20]
    b734:	ab10      	add	r3, sp, #64	; 0x40
    b736:	9702      	str	r7, [sp, #8]
    b738:	f8cd c00c 	str.w	r12, [sp, #12]
    b73c:	9406      	str	r4, [sp, #24]
    b73e:	9307      	str	r3, [sp, #28]
    b740:	4630      	mov	r0, r6
    b742:	e89a 000c 	ldmia.w	r10, {r2, r3}
    b746:	4629      	mov	r1, r5
    b748:	f7ff fb97 	bl	ae7a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    b74c:	e896 0003 	ldmia.w	r6, {r0, r1}
    b750:	e88a 0003 	stmia.w	r10, {r0, r1}
    b754:	e7a5      	b.n	b6a2 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x47a>
    b756:	f1ba 0f00 	cmp.w	r10, #0
    b75a:	d102      	bne.n	b762 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x53a>
    b75c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b75e:	429f      	cmp	r7, r3
    b760:	d005      	beq.n	b76e <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const+0x546>
    b762:	9b2b      	ldr	r3, [sp, #172]	; 0xac
    b764:	9a2b      	ldr	r2, [sp, #172]	; 0xac
    b766:	681b      	ldr	r3, [r3, #0]
    b768:	f043 0304 	orr.w	r3, r3, #4
    b76c:	6013      	str	r3, [r2, #0]
    b76e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b770:	e896 0003 	ldmia.w	r6, {r0, r1}
    b774:	e883 0003 	stmia.w	r3, {r0, r1}
    b778:	4618      	mov	r0, r3
    b77a:	b01f      	add	sp, #124	; 0x7c
    b77c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000b780 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const>:
    b780:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b784:	4689      	mov	r9, r1
    b786:	b08d      	sub	sp, #52	; 0x34
    b788:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    b78c:	ac08      	add	r4, sp, #32
    b78e:	4605      	mov	r5, r0
    b790:	f108 006c 	add.w	r0, r8, #108	; 0x6c
    b794:	e884 000c 	stmia.w	r4, {r2, r3}
    b798:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    b79a:	f7fe f8d7 	bl	994c <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)>
    b79e:	a90a      	add	r1, sp, #40	; 0x28
    b7a0:	f7fd fd1b 	bl	91da <std::__timepunct<char>::_M_time_formats(char const**) const>
    b7a4:	ab14      	add	r3, sp, #80	; 0x50
    b7a6:	e893 0003 	ldmia.w	r3, {r0, r1}
    b7aa:	9b18      	ldr	r3, [sp, #96]	; 0x60
    b7ac:	e88d 0003 	stmia.w	sp, {r0, r1}
    b7b0:	9304      	str	r3, [sp, #16]
    b7b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b7b4:	af06      	add	r7, sp, #24
    b7b6:	f8cd 8008 	str.w	r8, [sp, #8]
    b7ba:	9603      	str	r6, [sp, #12]
    b7bc:	9305      	str	r3, [sp, #20]
    b7be:	4638      	mov	r0, r7
    b7c0:	e894 000c 	ldmia.w	r4, {r2, r3}
    b7c4:	4649      	mov	r1, r9
    b7c6:	f7ff fd2f 	bl	b228 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const>
    b7ca:	e897 0003 	ldmia.w	r7, {r0, r1}
    b7ce:	e884 0003 	stmia.w	r4, {r0, r1}
    b7d2:	4620      	mov	r0, r4
    b7d4:	a914      	add	r1, sp, #80	; 0x50
    b7d6:	f7ff fb36 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    b7da:	b118      	cbz	r0, b7e4 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x64>
    b7dc:	6833      	ldr	r3, [r6, #0]
    b7de:	f043 0302 	orr.w	r3, r3, #2
    b7e2:	6033      	str	r3, [r6, #0]
    b7e4:	e894 0003 	ldmia.w	r4, {r0, r1}
    b7e8:	e885 0003 	stmia.w	r5, {r0, r1}
    b7ec:	4628      	mov	r0, r5
    b7ee:	b00d      	add	sp, #52	; 0x34
    b7f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0000b7f4 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const>:
    b7f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b7f8:	4689      	mov	r9, r1
    b7fa:	b08d      	sub	sp, #52	; 0x34
    b7fc:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    b800:	ac08      	add	r4, sp, #32
    b802:	4605      	mov	r5, r0
    b804:	f108 006c 	add.w	r0, r8, #108	; 0x6c
    b808:	e884 000c 	stmia.w	r4, {r2, r3}
    b80c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    b80e:	f7fe f89d 	bl	994c <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)>
    b812:	a90a      	add	r1, sp, #40	; 0x28
    b814:	f7fd fcda 	bl	91cc <std::__timepunct<char>::_M_date_formats(char const**) const>
    b818:	ab14      	add	r3, sp, #80	; 0x50
    b81a:	e893 0003 	ldmia.w	r3, {r0, r1}
    b81e:	9b18      	ldr	r3, [sp, #96]	; 0x60
    b820:	e88d 0003 	stmia.w	sp, {r0, r1}
    b824:	9304      	str	r3, [sp, #16]
    b826:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b828:	af06      	add	r7, sp, #24
    b82a:	f8cd 8008 	str.w	r8, [sp, #8]
    b82e:	9603      	str	r6, [sp, #12]
    b830:	9305      	str	r3, [sp, #20]
    b832:	4638      	mov	r0, r7
    b834:	e894 000c 	ldmia.w	r4, {r2, r3}
    b838:	4649      	mov	r1, r9
    b83a:	f7ff fcf5 	bl	b228 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*) const>
    b83e:	e897 0003 	ldmia.w	r7, {r0, r1}
    b842:	e884 0003 	stmia.w	r4, {r0, r1}
    b846:	4620      	mov	r0, r4
    b848:	a914      	add	r1, sp, #80	; 0x50
    b84a:	f7ff fafc 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    b84e:	b118      	cbz	r0, b858 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x64>
    b850:	6833      	ldr	r3, [r6, #0]
    b852:	f043 0302 	orr.w	r3, r3, #2
    b856:	6033      	str	r3, [r6, #0]
    b858:	e894 0003 	ldmia.w	r4, {r0, r1}
    b85c:	e885 0003 	stmia.w	r5, {r0, r1}
    b860:	4628      	mov	r0, r5
    b862:	b00d      	add	sp, #52	; 0x34
    b864:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0000b868 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const>:
    b868:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
    b86c:	b09c      	sub	sp, #112	; 0x70
    b86e:	f8dd 8098 	ldr.w	r8, [sp, #152]	; 0x98
    b872:	ac0a      	add	r4, sp, #40	; 0x28
    b874:	f108 096c 	add.w	r9, r8, #108	; 0x6c
    b878:	4606      	mov	r6, r0
    b87a:	4648      	mov	r0, r9
    b87c:	e884 000c 	stmia.w	r4, {r2, r3}
    b880:	468a      	mov	r10, r1
    b882:	9d27      	ldr	r5, [sp, #156]	; 0x9c
    b884:	f7fe f862 	bl	994c <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)>
    b888:	4607      	mov	r7, r0
    b88a:	4648      	mov	r0, r9
    b88c:	f10d 0938 	add.w	r9, sp, #56	; 0x38
    b890:	f7fd fd58 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    b894:	4638      	mov	r0, r7
    b896:	4649      	mov	r1, r9
    b898:	f7fd fcc3 	bl	9222 <std::__timepunct<char>::_M_days_abbreviated(char const**) const>
    b89c:	4638      	mov	r0, r7
    b89e:	a915      	add	r1, sp, #84	; 0x54
    b8a0:	f7fd fca9 	bl	91f6 <std::__timepunct<char>::_M_days(char const**) const>
    b8a4:	2300      	movs	r3, #0
    b8a6:	930d      	str	r3, [sp, #52]	; 0x34
    b8a8:	ab24      	add	r3, sp, #144	; 0x90
    b8aa:	e893 0003 	ldmia.w	r3, {r0, r1}
    b8ae:	ab0c      	add	r3, sp, #48	; 0x30
    b8b0:	e88d 0003 	stmia.w	sp, {r0, r1}
    b8b4:	9302      	str	r3, [sp, #8]
    b8b6:	2307      	movs	r3, #7
    b8b8:	9304      	str	r3, [sp, #16]
    b8ba:	ab0d      	add	r3, sp, #52	; 0x34
    b8bc:	af08      	add	r7, sp, #32
    b8be:	f8cd 900c 	str.w	r9, [sp, #12]
    b8c2:	f8cd 8014 	str.w	r8, [sp, #20]
    b8c6:	9306      	str	r3, [sp, #24]
    b8c8:	4638      	mov	r0, r7
    b8ca:	e894 000c 	ldmia.w	r4, {r2, r3}
    b8ce:	4651      	mov	r1, r10
    b8d0:	f7ff fbe9 	bl	b0a6 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    b8d4:	e897 0003 	ldmia.w	r7, {r0, r1}
    b8d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b8da:	e884 0003 	stmia.w	r4, {r0, r1}
    b8de:	b91b      	cbnz	r3, b8e8 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x80>
    b8e0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    b8e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
    b8e4:	619a      	str	r2, [r3, #24]
    b8e6:	e003      	b.n	b8f0 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x88>
    b8e8:	682b      	ldr	r3, [r5, #0]
    b8ea:	f043 0304 	orr.w	r3, r3, #4
    b8ee:	602b      	str	r3, [r5, #0]
    b8f0:	4620      	mov	r0, r4
    b8f2:	a924      	add	r1, sp, #144	; 0x90
    b8f4:	f7ff faa7 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    b8f8:	b118      	cbz	r0, b902 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x9a>
    b8fa:	682b      	ldr	r3, [r5, #0]
    b8fc:	f043 0302 	orr.w	r3, r3, #2
    b900:	602b      	str	r3, [r5, #0]
    b902:	e894 0003 	ldmia.w	r4, {r0, r1}
    b906:	e886 0003 	stmia.w	r6, {r0, r1}
    b90a:	4630      	mov	r0, r6
    b90c:	b01c      	add	sp, #112	; 0x70
    b90e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

0000b912 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const>:
    b912:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
    b916:	b0a6      	sub	sp, #152	; 0x98
    b918:	f8dd 80c0 	ldr.w	r8, [sp, #192]	; 0xc0
    b91c:	ac0a      	add	r4, sp, #40	; 0x28
    b91e:	f108 096c 	add.w	r9, r8, #108	; 0x6c
    b922:	4606      	mov	r6, r0
    b924:	4648      	mov	r0, r9
    b926:	e884 000c 	stmia.w	r4, {r2, r3}
    b92a:	468a      	mov	r10, r1
    b92c:	9d31      	ldr	r5, [sp, #196]	; 0xc4
    b92e:	f7fe f80d 	bl	994c <std::__timepunct<char> const& std::use_facet<std::__timepunct<char> >(std::locale const&)>
    b932:	4607      	mov	r7, r0
    b934:	4648      	mov	r0, r9
    b936:	f10d 0938 	add.w	r9, sp, #56	; 0x38
    b93a:	f7fd fd03 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    b93e:	4638      	mov	r0, r7
    b940:	4649      	mov	r1, r9
    b942:	f7fd fcae 	bl	92a2 <std::__timepunct<char>::_M_months_abbreviated(char const**) const>
    b946:	4638      	mov	r0, r7
    b948:	a91a      	add	r1, sp, #104	; 0x68
    b94a:	f7fd fc80 	bl	924e <std::__timepunct<char>::_M_months(char const**) const>
    b94e:	2300      	movs	r3, #0
    b950:	930d      	str	r3, [sp, #52]	; 0x34
    b952:	ab2e      	add	r3, sp, #184	; 0xb8
    b954:	e893 0003 	ldmia.w	r3, {r0, r1}
    b958:	ab0c      	add	r3, sp, #48	; 0x30
    b95a:	e88d 0003 	stmia.w	sp, {r0, r1}
    b95e:	9302      	str	r3, [sp, #8]
    b960:	230c      	movs	r3, #12
    b962:	9304      	str	r3, [sp, #16]
    b964:	ab0d      	add	r3, sp, #52	; 0x34
    b966:	af08      	add	r7, sp, #32
    b968:	f8cd 900c 	str.w	r9, [sp, #12]
    b96c:	f8cd 8014 	str.w	r8, [sp, #20]
    b970:	9306      	str	r3, [sp, #24]
    b972:	4638      	mov	r0, r7
    b974:	e894 000c 	ldmia.w	r4, {r2, r3}
    b978:	4651      	mov	r1, r10
    b97a:	f7ff fb94 	bl	b0a6 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    b97e:	e897 0003 	ldmia.w	r7, {r0, r1}
    b982:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b984:	e884 0003 	stmia.w	r4, {r0, r1}
    b988:	b91b      	cbnz	r3, b992 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x80>
    b98a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    b98c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
    b98e:	611a      	str	r2, [r3, #16]
    b990:	e003      	b.n	b99a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x88>
    b992:	682b      	ldr	r3, [r5, #0]
    b994:	f043 0304 	orr.w	r3, r3, #4
    b998:	602b      	str	r3, [r5, #0]
    b99a:	4620      	mov	r0, r4
    b99c:	a92e      	add	r1, sp, #184	; 0xb8
    b99e:	f7ff fa52 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    b9a2:	b118      	cbz	r0, b9ac <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x9a>
    b9a4:	682b      	ldr	r3, [r5, #0]
    b9a6:	f043 0302 	orr.w	r3, r3, #2
    b9aa:	602b      	str	r3, [r5, #0]
    b9ac:	e894 0003 	ldmia.w	r4, {r0, r1}
    b9b0:	e886 0003 	stmia.w	r6, {r0, r1}
    b9b4:	4630      	mov	r0, r6
    b9b6:	b026      	add	sp, #152	; 0x98
    b9b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

0000b9bc <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const>:
    b9bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b9c0:	b08f      	sub	sp, #60	; 0x3c
    b9c2:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
    b9c6:	ac0a      	add	r4, sp, #40	; 0x28
    b9c8:	4606      	mov	r6, r0
    b9ca:	f108 006c 	add.w	r0, r8, #108	; 0x6c
    b9ce:	4689      	mov	r9, r1
    b9d0:	e884 000c 	stmia.w	r4, {r2, r3}
    b9d4:	9d19      	ldr	r5, [sp, #100]	; 0x64
    b9d6:	f7fd fcb5 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    b9da:	2300      	movs	r3, #0
    b9dc:	aa16      	add	r2, sp, #88	; 0x58
    b9de:	e892 0003 	ldmia.w	r2, {r0, r1}
    b9e2:	930d      	str	r3, [sp, #52]	; 0x34
    b9e4:	9303      	str	r3, [sp, #12]
    b9e6:	f242 730f 	movw	r3, #9999	; 0x270f
    b9ea:	e88d 0003 	stmia.w	sp, {r0, r1}
    b9ee:	9304      	str	r3, [sp, #16]
    b9f0:	2304      	movs	r3, #4
    b9f2:	9305      	str	r3, [sp, #20]
    b9f4:	aa0c      	add	r2, sp, #48	; 0x30
    b9f6:	ab0d      	add	r3, sp, #52	; 0x34
    b9f8:	af08      	add	r7, sp, #32
    b9fa:	9202      	str	r2, [sp, #8]
    b9fc:	f8cd 8018 	str.w	r8, [sp, #24]
    ba00:	9307      	str	r3, [sp, #28]
    ba02:	4638      	mov	r0, r7
    ba04:	e894 000c 	ldmia.w	r4, {r2, r3}
    ba08:	4649      	mov	r1, r9
    ba0a:	f7ff fa36 	bl	ae7a <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned int, std::ios_base&, std::_Ios_Iostate&) const>
    ba0e:	e897 0003 	ldmia.w	r7, {r0, r1}
    ba12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    ba14:	e884 0003 	stmia.w	r4, {r0, r1}
    ba18:	b943      	cbnz	r3, ba2c <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x70>
    ba1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ba1c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    ba1e:	2b00      	cmp	r3, #0
    ba20:	bfb4      	ite	lt
    ba22:	3364      	addlt	r3, #100	; 0x64
    ba24:	f2a3 736c 	subwge	r3, r3, #1900	; 0x76c
    ba28:	6153      	str	r3, [r2, #20]
    ba2a:	e003      	b.n	ba34 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x78>
    ba2c:	682b      	ldr	r3, [r5, #0]
    ba2e:	f043 0304 	orr.w	r3, r3, #4
    ba32:	602b      	str	r3, [r5, #0]
    ba34:	4620      	mov	r0, r4
    ba36:	a916      	add	r1, sp, #88	; 0x58
    ba38:	f7ff fa05 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    ba3c:	b118      	cbz	r0, ba46 <std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const+0x8a>
    ba3e:	682b      	ldr	r3, [r5, #0]
    ba40:	f043 0302 	orr.w	r3, r3, #2
    ba44:	602b      	str	r3, [r5, #0]
    ba46:	e894 0003 	ldmia.w	r4, {r0, r1}
    ba4a:	e886 0003 	stmia.w	r6, {r0, r1}
    ba4e:	4630      	mov	r0, r6
    ba50:	b00f      	add	sp, #60	; 0x3c
    ba52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0000ba58 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>:
    ba58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    ba5c:	b08f      	sub	sp, #60	; 0x3c
    ba5e:	a908      	add	r1, sp, #32
    ba60:	e881 000c 	stmia.w	r1, {r2, r3}
    ba64:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    ba66:	9005      	str	r0, [sp, #20]
    ba68:	f103 046c 	add.w	r4, r3, #108	; 0x6c
    ba6c:	4620      	mov	r0, r4
    ba6e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
    ba70:	f7fd fc68 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    ba74:	9003      	str	r0, [sp, #12]
    ba76:	4620      	mov	r0, r4
    ba78:	f7fd fe58 	bl	972c <std::__use_cache<std::__moneypunct_cache<char, true> >::operator()(std::locale const&) const [clone .isra.32]>
    ba7c:	f100 0338 	add.w	r3, r0, #56	; 0x38
    ba80:	9306      	str	r3, [sp, #24]
    ba82:	6a03      	ldr	r3, [r0, #32]
    ba84:	4604      	mov	r4, r0
    ba86:	b11b      	cbz	r3, ba90 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x38>
    ba88:	6a83      	ldr	r3, [r0, #40]	; 0x28
    ba8a:	3300      	adds	r3, #0
    ba8c:	bf18      	it	ne
    ba8e:	2301      	movne	r3, #1
    ba90:	9301      	str	r3, [sp, #4]
    ba92:	7c22      	ldrb	r2, [r4, #16]
    ba94:	4baf      	ldr	r3, [pc, #700]	; (bd54 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2fc>)
    ba96:	930b      	str	r3, [sp, #44]	; 0x2c
    ba98:	461d      	mov	r5, r3
    ba9a:	b11a      	cbz	r2, baa4 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x4c>
    ba9c:	a80b      	add	r0, sp, #44	; 0x2c
    ba9e:	2120      	movs	r1, #32
    baa0:	f003 f895 	bl	ebce <std::string::reserve(unsigned int)>
    baa4:	a80e      	add	r0, sp, #56	; 0x38
    baa6:	f840 5d08 	str.w	r5, [r0, #-8]!
    baaa:	2500      	movs	r5, #0
    baac:	46a8      	mov	r8, r5
    baae:	462e      	mov	r6, r5
    bab0:	46a9      	mov	r9, r5
    bab2:	46aa      	mov	r10, r5
    bab4:	2120      	movs	r1, #32
    bab6:	f003 f88a 	bl	ebce <std::string::reserve(unsigned int)>
    baba:	f104 0339 	add.w	r3, r4, #57	; 0x39
    babe:	9307      	str	r3, [sp, #28]
    bac0:	6b63      	ldr	r3, [r4, #52]	; 0x34
    bac2:	9502      	str	r5, [sp, #8]
    bac4:	930d      	str	r3, [sp, #52]	; 0x34
    bac6:	ab0d      	add	r3, sp, #52	; 0x34
    bac8:	5ceb      	ldrb	r3, [r5, r3]
    baca:	2b04      	cmp	r3, #4
    bacc:	f200 8163 	bhi.w	bd96 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bad0:	e8df f003 	tbb	[pc, r3]
    bad4:	2e038fa3 	.word	0x2e038fa3
    bad8:	5f          	.byte	0x5f
    bad9:	00          	.byte	0x00
    bada:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    badc:	68db      	ldr	r3, [r3, #12]
    bade:	059b      	lsls	r3, r3, #22
    bae0:	f100 8151 	bmi.w	bd86 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    bae4:	f1ba 0f01 	cmp.w	r10, #1
    bae8:	f200 814d 	bhi.w	bd86 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    baec:	2d00      	cmp	r5, #0
    baee:	f000 814a 	beq.w	bd86 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    baf2:	2d01      	cmp	r5, #1
    baf4:	d10c      	bne.n	bb10 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xb8>
    baf6:	9b01      	ldr	r3, [sp, #4]
    baf8:	2b00      	cmp	r3, #0
    bafa:	f040 8144 	bne.w	bd86 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    bafe:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
    bb02:	2b03      	cmp	r3, #3
    bb04:	f000 813f 	beq.w	bd86 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    bb08:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
    bb0c:	2b01      	cmp	r3, #1
    bb0e:	e00c      	b.n	bb2a <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xd2>
    bb10:	2d02      	cmp	r5, #2
    bb12:	f040 8140 	bne.w	bd96 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bb16:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
    bb1a:	2b04      	cmp	r3, #4
    bb1c:	f000 8133 	beq.w	bd86 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    bb20:	9a01      	ldr	r2, [sp, #4]
    bb22:	2a00      	cmp	r2, #0
    bb24:	f000 8137 	beq.w	bd96 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bb28:	2b03      	cmp	r3, #3
    bb2a:	f040 8134 	bne.w	bd96 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bb2e:	e12a      	b.n	bd86 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    bb30:	6a23      	ldr	r3, [r4, #32]
    bb32:	2b00      	cmp	r3, #0
    bb34:	f000 8132 	beq.w	bd9c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x344>
    bb38:	a808      	add	r0, sp, #32
    bb3a:	a918      	add	r1, sp, #96	; 0x60
    bb3c:	f7ff f996 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    bb40:	2800      	cmp	r0, #0
    bb42:	f000 812b 	beq.w	bd9c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x344>
    bb46:	a808      	add	r0, sp, #32
    bb48:	f7ff f96a 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    bb4c:	69e3      	ldr	r3, [r4, #28]
    bb4e:	b2c0      	uxtb	r0, r0
    bb50:	781b      	ldrb	r3, [r3, #0]
    bb52:	4283      	cmp	r3, r0
    bb54:	f040 8122 	bne.w	bd9c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x344>
    bb58:	a808      	add	r0, sp, #32
    bb5a:	f8d4 a020 	ldr.w	r10, [r4, #32]
    bb5e:	f7fe f8d0 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    bb62:	e118      	b.n	bd96 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bb64:	a808      	add	r0, sp, #32
    bb66:	f7ff f95b 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    bb6a:	fa5f fb80 	uxtb.w	r11, r0
    bb6e:	4659      	mov	r1, r11
    bb70:	9807      	ldr	r0, [sp, #28]
    bb72:	220a      	movs	r2, #10
    bb74:	f007 fd6c 	bl	13650 <memchr>
    bb78:	b190      	cbz	r0, bba0 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x148>
    bb7a:	4a77      	ldr	r2, [pc, #476]	; (bd58 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x300>)
    bb7c:	9b06      	ldr	r3, [sp, #24]
    bb7e:	6812      	ldr	r2, [r2, #0]
    bb80:	1ac3      	subs	r3, r0, r3
    bb82:	5cd1      	ldrb	r1, [r2, r3]
    bb84:	a80c      	add	r0, sp, #48	; 0x30
    bb86:	f003 f900 	bl	ed8a <std::string::push_back(char)>
    bb8a:	3601      	adds	r6, #1
    bb8c:	a808      	add	r0, sp, #32
    bb8e:	f7fe f8b8 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    bb92:	a808      	add	r0, sp, #32
    bb94:	a918      	add	r1, sp, #96	; 0x60
    bb96:	f7ff f969 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    bb9a:	2800      	cmp	r0, #0
    bb9c:	d1e2      	bne.n	bb64 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x10c>
    bb9e:	e01c      	b.n	bbda <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x182>
    bba0:	7c63      	ldrb	r3, [r4, #17]
    bba2:	455b      	cmp	r3, r11
    bba4:	d10a      	bne.n	bbbc <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x164>
    bba6:	f1b8 0f00 	cmp.w	r8, #0
    bbaa:	d107      	bne.n	bbbc <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x164>
    bbac:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    bbae:	2b00      	cmp	r3, #0
    bbb0:	dd13      	ble.n	bbda <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x182>
    bbb2:	9602      	str	r6, [sp, #8]
    bbb4:	f04f 0801 	mov.w	r8, #1
    bbb8:	4606      	mov	r6, r0
    bbba:	e7e7      	b.n	bb8c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x134>
    bbbc:	7c23      	ldrb	r3, [r4, #16]
    bbbe:	b163      	cbz	r3, bbda <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x182>
    bbc0:	7ca3      	ldrb	r3, [r4, #18]
    bbc2:	455b      	cmp	r3, r11
    bbc4:	d109      	bne.n	bbda <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x182>
    bbc6:	f1b8 0f00 	cmp.w	r8, #0
    bbca:	d106      	bne.n	bbda <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x182>
    bbcc:	b146      	cbz	r6, bbe0 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x188>
    bbce:	b2f1      	uxtb	r1, r6
    bbd0:	a80b      	add	r0, sp, #44	; 0x2c
    bbd2:	f003 f8da 	bl	ed8a <std::string::push_back(char)>
    bbd6:	4646      	mov	r6, r8
    bbd8:	e7d8      	b.n	bb8c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x134>
    bbda:	f04f 0b01 	mov.w	r11, #1
    bbde:	e000      	b.n	bbe2 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x18a>
    bbe0:	46b3      	mov	r11, r6
    bbe2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bbe4:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    bbe8:	2b00      	cmp	r3, #0
    bbea:	bf08      	it	eq
    bbec:	f04f 0b00 	moveq.w	r11, #0
    bbf0:	e04e      	b.n	bc90 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    bbf2:	a808      	add	r0, sp, #32
    bbf4:	a918      	add	r1, sp, #96	; 0x60
    bbf6:	f7ff f939 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    bbfa:	2800      	cmp	r0, #0
    bbfc:	f000 80f1 	beq.w	bde2 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x38a>
    bc00:	a808      	add	r0, sp, #32
    bc02:	f7ff f90d 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    bc06:	9b03      	ldr	r3, [sp, #12]
    bc08:	b2c0      	uxtb	r0, r0
    bc0a:	699b      	ldr	r3, [r3, #24]
    bc0c:	5c1b      	ldrb	r3, [r3, r0]
    bc0e:	0719      	lsls	r1, r3, #28
    bc10:	f140 80e7 	bpl.w	bde2 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x38a>
    bc14:	a808      	add	r0, sp, #32
    bc16:	f7fe f874 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    bc1a:	f04f 0b01 	mov.w	r11, #1
    bc1e:	2d03      	cmp	r5, #3
    bc20:	d036      	beq.n	bc90 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    bc22:	a808      	add	r0, sp, #32
    bc24:	a918      	add	r1, sp, #96	; 0x60
    bc26:	f7ff f921 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    bc2a:	2800      	cmp	r0, #0
    bc2c:	d030      	beq.n	bc90 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    bc2e:	a808      	add	r0, sp, #32
    bc30:	f7ff f8f6 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    bc34:	9b03      	ldr	r3, [sp, #12]
    bc36:	b2c0      	uxtb	r0, r0
    bc38:	699b      	ldr	r3, [r3, #24]
    bc3a:	5c1b      	ldrb	r3, [r3, r0]
    bc3c:	071a      	lsls	r2, r3, #28
    bc3e:	d527      	bpl.n	bc90 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    bc40:	a808      	add	r0, sp, #32
    bc42:	f7fe f85e 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    bc46:	e7ec      	b.n	bc22 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1ca>
    bc48:	459b      	cmp	r11, r3
    bc4a:	f000 80a4 	beq.w	bd96 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bc4e:	a808      	add	r0, sp, #32
    bc50:	f7ff f8e6 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    bc54:	6962      	ldr	r2, [r4, #20]
    bc56:	b2c0      	uxtb	r0, r0
    bc58:	f812 200b 	ldrb.w	r2, [r2, r11]
    bc5c:	4282      	cmp	r2, r0
    bc5e:	d10e      	bne.n	bc7e <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x226>
    bc60:	a808      	add	r0, sp, #32
    bc62:	f7fe f84e 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    bc66:	f10b 0b01 	add.w	r11, r11, #1
    bc6a:	a808      	add	r0, sp, #32
    bc6c:	a918      	add	r1, sp, #96	; 0x60
    bc6e:	f7ff f8fd 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    bc72:	9b04      	ldr	r3, [sp, #16]
    bc74:	2800      	cmp	r0, #0
    bc76:	d1e7      	bne.n	bc48 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1f0>
    bc78:	459b      	cmp	r11, r3
    bc7a:	f000 808c 	beq.w	bd96 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bc7e:	f1bb 0f00 	cmp.w	r11, #0
    bc82:	f040 8085 	bne.w	bd90 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x338>
    bc86:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    bc88:	68da      	ldr	r2, [r3, #12]
    bc8a:	0590      	lsls	r0, r2, #22
    bc8c:	f140 8083 	bpl.w	bd96 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bc90:	3501      	adds	r5, #1
    bc92:	2d04      	cmp	r5, #4
    bc94:	d004      	beq.n	bca0 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x248>
    bc96:	f1bb 0f00 	cmp.w	r11, #0
    bc9a:	f47f af14 	bne.w	bac6 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x6e>
    bc9e:	e0af      	b.n	be00 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a8>
    bca0:	f1ba 0f01 	cmp.w	r10, #1
    bca4:	d923      	bls.n	bcee <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x296>
    bca6:	f1bb 0f00 	cmp.w	r11, #0
    bcaa:	f000 80a9 	beq.w	be00 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a8>
    bcae:	f1b9 0f00 	cmp.w	r9, #0
    bcb2:	d001      	beq.n	bcb8 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x260>
    bcb4:	6a65      	ldr	r5, [r4, #36]	; 0x24
    bcb6:	e000      	b.n	bcba <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x262>
    bcb8:	69e5      	ldr	r5, [r4, #28]
    bcba:	f04f 0b01 	mov.w	r11, #1
    bcbe:	a808      	add	r0, sp, #32
    bcc0:	a918      	add	r1, sp, #96	; 0x60
    bcc2:	f7ff f8d3 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    bcc6:	2800      	cmp	r0, #0
    bcc8:	f000 808e 	beq.w	bde8 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x390>
    bccc:	45d3      	cmp	r11, r10
    bcce:	d012      	beq.n	bcf6 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x29e>
    bcd0:	a808      	add	r0, sp, #32
    bcd2:	f7ff f8a5 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    bcd6:	f815 300b 	ldrb.w	r3, [r5, r11]
    bcda:	b2c0      	uxtb	r0, r0
    bcdc:	4283      	cmp	r3, r0
    bcde:	f040 808f 	bne.w	be00 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a8>
    bce2:	a808      	add	r0, sp, #32
    bce4:	f7fe f80d 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    bce8:	f10b 0b01 	add.w	r11, r11, #1
    bcec:	e7e7      	b.n	bcbe <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x266>
    bcee:	f1bb 0f00 	cmp.w	r11, #0
    bcf2:	f000 8085 	beq.w	be00 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a8>
    bcf6:	ad0e      	add	r5, sp, #56	; 0x38
    bcf8:	f855 3d08 	ldr.w	r3, [r5, #-8]!
    bcfc:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    bd00:	2b01      	cmp	r3, #1
    bd02:	d913      	bls.n	bd2c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d4>
    bd04:	4628      	mov	r0, r5
    bd06:	2130      	movs	r1, #48	; 0x30
    bd08:	2200      	movs	r2, #0
    bd0a:	f002 fd8b 	bl	e824 <std::string::find_first_not_of(char, unsigned int) const>
    bd0e:	b168      	cbz	r0, bd2c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d4>
    bd10:	1c43      	adds	r3, r0, #1
    bd12:	bf0a      	itet	eq
    bd14:	9b0c      	ldreq	r3, [sp, #48]	; 0x30
    bd16:	4602      	movne	r2, r0
    bd18:	f853 0c0c 	ldreq.w	r0, [r3, #-12]
    bd1c:	f04f 0100 	mov.w	r1, #0
    bd20:	bf08      	it	eq
    bd22:	f100 32ff 	addeq.w	r2, r0, #4294967295
    bd26:	4628      	mov	r0, r5
    bd28:	f002 fe7c 	bl	ea24 <std::string::erase(unsigned int, unsigned int)>
    bd2c:	f1b9 0f00 	cmp.w	r9, #0
    bd30:	d006      	beq.n	bd40 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2e8>
    bd32:	4628      	mov	r0, r5
    bd34:	f002 fe5e 	bl	e9f4 <std::string::_M_leak()>
    bd38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bd3a:	781b      	ldrb	r3, [r3, #0]
    bd3c:	2b30      	cmp	r3, #48	; 0x30
    bd3e:	d156      	bne.n	bdee <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x396>
    bd40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    bd42:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    bd46:	b1bb      	cbz	r3, bd78 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x320>
    bd48:	f1b8 0f00 	cmp.w	r8, #0
    bd4c:	d006      	beq.n	bd5c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x304>
    bd4e:	f89d 1008 	ldrb.w	r1, [sp, #8]
    bd52:	e004      	b.n	bd5e <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x306>
    bd54:	10000c70 	.word	0x10000c70
    bd58:	10000168 	.word	0x10000168
    bd5c:	b2f1      	uxtb	r1, r6
    bd5e:	a80b      	add	r0, sp, #44	; 0x2c
    bd60:	f003 f813 	bl	ed8a <std::string::push_back(char)>
    bd64:	68a0      	ldr	r0, [r4, #8]
    bd66:	68e1      	ldr	r1, [r4, #12]
    bd68:	aa0b      	add	r2, sp, #44	; 0x2c
    bd6a:	f004 f93c 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    bd6e:	b918      	cbnz	r0, bd78 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x320>
    bd70:	683b      	ldr	r3, [r7, #0]
    bd72:	f043 0304 	orr.w	r3, r3, #4
    bd76:	603b      	str	r3, [r7, #0]
    bd78:	f1b8 0f00 	cmp.w	r8, #0
    bd7c:	d04f      	beq.n	be1e <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3c6>
    bd7e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    bd80:	429e      	cmp	r6, r3
    bd82:	d13d      	bne.n	be00 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a8>
    bd84:	e04b      	b.n	be1e <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3c6>
    bd86:	69a3      	ldr	r3, [r4, #24]
    bd88:	f04f 0b00 	mov.w	r11, #0
    bd8c:	9304      	str	r3, [sp, #16]
    bd8e:	e76c      	b.n	bc6a <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x212>
    bd90:	f04f 0b00 	mov.w	r11, #0
    bd94:	e77c      	b.n	bc90 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    bd96:	f04f 0b01 	mov.w	r11, #1
    bd9a:	e779      	b.n	bc90 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    bd9c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    bd9e:	b1ab      	cbz	r3, bdcc <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x374>
    bda0:	a808      	add	r0, sp, #32
    bda2:	a918      	add	r1, sp, #96	; 0x60
    bda4:	f7ff f862 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    bda8:	b180      	cbz	r0, bdcc <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x374>
    bdaa:	a808      	add	r0, sp, #32
    bdac:	f7ff f838 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    bdb0:	6a63      	ldr	r3, [r4, #36]	; 0x24
    bdb2:	b2c0      	uxtb	r0, r0
    bdb4:	781b      	ldrb	r3, [r3, #0]
    bdb6:	4283      	cmp	r3, r0
    bdb8:	d108      	bne.n	bdcc <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x374>
    bdba:	a808      	add	r0, sp, #32
    bdbc:	f8d4 a028 	ldr.w	r10, [r4, #40]	; 0x28
    bdc0:	f7fd ff9f 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    bdc4:	f04f 0901 	mov.w	r9, #1
    bdc8:	46cb      	mov	r11, r9
    bdca:	e761      	b.n	bc90 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    bdcc:	6a23      	ldr	r3, [r4, #32]
    bdce:	b113      	cbz	r3, bdd6 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x37e>
    bdd0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    bdd2:	2b00      	cmp	r3, #0
    bdd4:	d0f6      	beq.n	bdc4 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x36c>
    bdd6:	9b01      	ldr	r3, [sp, #4]
    bdd8:	f083 0b01 	eor.w	r11, r3, #1
    bddc:	fa5f fb8b 	uxtb.w	r11, r11
    bde0:	e756      	b.n	bc90 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    bde2:	f04f 0b00 	mov.w	r11, #0
    bde6:	e71a      	b.n	bc1e <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1c6>
    bde8:	45d3      	cmp	r11, r10
    bdea:	d109      	bne.n	be00 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a8>
    bdec:	e783      	b.n	bcf6 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x29e>
    bdee:	4628      	mov	r0, r5
    bdf0:	f002 fe09 	bl	ea06 <std::string::begin()>
    bdf4:	222d      	movs	r2, #45	; 0x2d
    bdf6:	4601      	mov	r1, r0
    bdf8:	4628      	mov	r0, r5
    bdfa:	f002 fe65 	bl	eac8 <std::string::insert(__gnu_cxx::__normal_iterator<char*, std::string>, char)>
    bdfe:	e79f      	b.n	bd40 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2e8>
    be00:	683b      	ldr	r3, [r7, #0]
    be02:	f043 0304 	orr.w	r3, r3, #4
    be06:	603b      	str	r3, [r7, #0]
    be08:	ac08      	add	r4, sp, #32
    be0a:	4620      	mov	r0, r4
    be0c:	a918      	add	r1, sp, #96	; 0x60
    be0e:	f7ff f81a 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    be12:	b148      	cbz	r0, be28 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3d0>
    be14:	683b      	ldr	r3, [r7, #0]
    be16:	f043 0302 	orr.w	r3, r3, #2
    be1a:	603b      	str	r3, [r7, #0]
    be1c:	e004      	b.n	be28 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3d0>
    be1e:	981c      	ldr	r0, [sp, #112]	; 0x70
    be20:	4629      	mov	r1, r5
    be22:	f002 fceb 	bl	e7fc <std::string::swap(std::string&)>
    be26:	e7ef      	b.n	be08 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3b0>
    be28:	9b05      	ldr	r3, [sp, #20]
    be2a:	e894 0003 	ldmia.w	r4, {r0, r1}
    be2e:	e883 0003 	stmia.w	r3, {r0, r1}
    be32:	a80c      	add	r0, sp, #48	; 0x30
    be34:	f002 fd70 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    be38:	a80b      	add	r0, sp, #44	; 0x2c
    be3a:	f002 fd6d 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    be3e:	9805      	ldr	r0, [sp, #20]
    be40:	b00f      	add	sp, #60	; 0x3c
    be42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    be46:	bf00      	nop

0000be48 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>:
    be48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    be4c:	b08f      	sub	sp, #60	; 0x3c
    be4e:	a908      	add	r1, sp, #32
    be50:	e881 000c 	stmia.w	r1, {r2, r3}
    be54:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    be56:	9005      	str	r0, [sp, #20]
    be58:	f103 046c 	add.w	r4, r3, #108	; 0x6c
    be5c:	4620      	mov	r0, r4
    be5e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
    be60:	f7fd fa70 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    be64:	9003      	str	r0, [sp, #12]
    be66:	4620      	mov	r0, r4
    be68:	f7fd fd4c 	bl	9904 <std::__use_cache<std::__moneypunct_cache<char, false> >::operator()(std::locale const&) const [clone .isra.31]>
    be6c:	f100 0338 	add.w	r3, r0, #56	; 0x38
    be70:	9306      	str	r3, [sp, #24]
    be72:	6a03      	ldr	r3, [r0, #32]
    be74:	4604      	mov	r4, r0
    be76:	b11b      	cbz	r3, be80 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x38>
    be78:	6a83      	ldr	r3, [r0, #40]	; 0x28
    be7a:	3300      	adds	r3, #0
    be7c:	bf18      	it	ne
    be7e:	2301      	movne	r3, #1
    be80:	9301      	str	r3, [sp, #4]
    be82:	7c22      	ldrb	r2, [r4, #16]
    be84:	4baf      	ldr	r3, [pc, #700]	; (c144 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2fc>)
    be86:	930b      	str	r3, [sp, #44]	; 0x2c
    be88:	461d      	mov	r5, r3
    be8a:	b11a      	cbz	r2, be94 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x4c>
    be8c:	a80b      	add	r0, sp, #44	; 0x2c
    be8e:	2120      	movs	r1, #32
    be90:	f002 fe9d 	bl	ebce <std::string::reserve(unsigned int)>
    be94:	a80e      	add	r0, sp, #56	; 0x38
    be96:	f840 5d08 	str.w	r5, [r0, #-8]!
    be9a:	2500      	movs	r5, #0
    be9c:	46a8      	mov	r8, r5
    be9e:	462e      	mov	r6, r5
    bea0:	46a9      	mov	r9, r5
    bea2:	46aa      	mov	r10, r5
    bea4:	2120      	movs	r1, #32
    bea6:	f002 fe92 	bl	ebce <std::string::reserve(unsigned int)>
    beaa:	f104 0339 	add.w	r3, r4, #57	; 0x39
    beae:	9307      	str	r3, [sp, #28]
    beb0:	6b63      	ldr	r3, [r4, #52]	; 0x34
    beb2:	9502      	str	r5, [sp, #8]
    beb4:	930d      	str	r3, [sp, #52]	; 0x34
    beb6:	ab0d      	add	r3, sp, #52	; 0x34
    beb8:	5ceb      	ldrb	r3, [r5, r3]
    beba:	2b04      	cmp	r3, #4
    bebc:	f200 8163 	bhi.w	c186 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bec0:	e8df f003 	tbb	[pc, r3]
    bec4:	2e038fa3 	.word	0x2e038fa3
    bec8:	5f          	.byte	0x5f
    bec9:	00          	.byte	0x00
    beca:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    becc:	68db      	ldr	r3, [r3, #12]
    bece:	059b      	lsls	r3, r3, #22
    bed0:	f100 8151 	bmi.w	c176 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    bed4:	f1ba 0f01 	cmp.w	r10, #1
    bed8:	f200 814d 	bhi.w	c176 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    bedc:	2d00      	cmp	r5, #0
    bede:	f000 814a 	beq.w	c176 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    bee2:	2d01      	cmp	r5, #1
    bee4:	d10c      	bne.n	bf00 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xb8>
    bee6:	9b01      	ldr	r3, [sp, #4]
    bee8:	2b00      	cmp	r3, #0
    beea:	f040 8144 	bne.w	c176 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    beee:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
    bef2:	2b03      	cmp	r3, #3
    bef4:	f000 813f 	beq.w	c176 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    bef8:	f89d 3036 	ldrb.w	r3, [sp, #54]	; 0x36
    befc:	2b01      	cmp	r3, #1
    befe:	e00c      	b.n	bf1a <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xd2>
    bf00:	2d02      	cmp	r5, #2
    bf02:	f040 8140 	bne.w	c186 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bf06:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
    bf0a:	2b04      	cmp	r3, #4
    bf0c:	f000 8133 	beq.w	c176 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    bf10:	9a01      	ldr	r2, [sp, #4]
    bf12:	2a00      	cmp	r2, #0
    bf14:	f000 8137 	beq.w	c186 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bf18:	2b03      	cmp	r3, #3
    bf1a:	f040 8134 	bne.w	c186 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bf1e:	e12a      	b.n	c176 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x32e>
    bf20:	6a23      	ldr	r3, [r4, #32]
    bf22:	2b00      	cmp	r3, #0
    bf24:	f000 8132 	beq.w	c18c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x344>
    bf28:	a808      	add	r0, sp, #32
    bf2a:	a918      	add	r1, sp, #96	; 0x60
    bf2c:	f7fe ff9e 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    bf30:	2800      	cmp	r0, #0
    bf32:	f000 812b 	beq.w	c18c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x344>
    bf36:	a808      	add	r0, sp, #32
    bf38:	f7fe ff72 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    bf3c:	69e3      	ldr	r3, [r4, #28]
    bf3e:	b2c0      	uxtb	r0, r0
    bf40:	781b      	ldrb	r3, [r3, #0]
    bf42:	4283      	cmp	r3, r0
    bf44:	f040 8122 	bne.w	c18c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x344>
    bf48:	a808      	add	r0, sp, #32
    bf4a:	f8d4 a020 	ldr.w	r10, [r4, #32]
    bf4e:	f7fd fed8 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    bf52:	e118      	b.n	c186 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    bf54:	a808      	add	r0, sp, #32
    bf56:	f7fe ff63 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    bf5a:	fa5f fb80 	uxtb.w	r11, r0
    bf5e:	4659      	mov	r1, r11
    bf60:	9807      	ldr	r0, [sp, #28]
    bf62:	220a      	movs	r2, #10
    bf64:	f007 fb74 	bl	13650 <memchr>
    bf68:	b190      	cbz	r0, bf90 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x148>
    bf6a:	4a77      	ldr	r2, [pc, #476]	; (c148 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x300>)
    bf6c:	9b06      	ldr	r3, [sp, #24]
    bf6e:	6812      	ldr	r2, [r2, #0]
    bf70:	1ac3      	subs	r3, r0, r3
    bf72:	5cd1      	ldrb	r1, [r2, r3]
    bf74:	a80c      	add	r0, sp, #48	; 0x30
    bf76:	f002 ff08 	bl	ed8a <std::string::push_back(char)>
    bf7a:	3601      	adds	r6, #1
    bf7c:	a808      	add	r0, sp, #32
    bf7e:	f7fd fec0 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    bf82:	a808      	add	r0, sp, #32
    bf84:	a918      	add	r1, sp, #96	; 0x60
    bf86:	f7fe ff71 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    bf8a:	2800      	cmp	r0, #0
    bf8c:	d1e2      	bne.n	bf54 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x10c>
    bf8e:	e01c      	b.n	bfca <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x182>
    bf90:	7c63      	ldrb	r3, [r4, #17]
    bf92:	455b      	cmp	r3, r11
    bf94:	d10a      	bne.n	bfac <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x164>
    bf96:	f1b8 0f00 	cmp.w	r8, #0
    bf9a:	d107      	bne.n	bfac <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x164>
    bf9c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    bf9e:	2b00      	cmp	r3, #0
    bfa0:	dd13      	ble.n	bfca <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x182>
    bfa2:	9602      	str	r6, [sp, #8]
    bfa4:	f04f 0801 	mov.w	r8, #1
    bfa8:	4606      	mov	r6, r0
    bfaa:	e7e7      	b.n	bf7c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x134>
    bfac:	7c23      	ldrb	r3, [r4, #16]
    bfae:	b163      	cbz	r3, bfca <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x182>
    bfb0:	7ca3      	ldrb	r3, [r4, #18]
    bfb2:	455b      	cmp	r3, r11
    bfb4:	d109      	bne.n	bfca <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x182>
    bfb6:	f1b8 0f00 	cmp.w	r8, #0
    bfba:	d106      	bne.n	bfca <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x182>
    bfbc:	b146      	cbz	r6, bfd0 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x188>
    bfbe:	b2f1      	uxtb	r1, r6
    bfc0:	a80b      	add	r0, sp, #44	; 0x2c
    bfc2:	f002 fee2 	bl	ed8a <std::string::push_back(char)>
    bfc6:	4646      	mov	r6, r8
    bfc8:	e7d8      	b.n	bf7c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x134>
    bfca:	f04f 0b01 	mov.w	r11, #1
    bfce:	e000      	b.n	bfd2 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x18a>
    bfd0:	46b3      	mov	r11, r6
    bfd2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bfd4:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    bfd8:	2b00      	cmp	r3, #0
    bfda:	bf08      	it	eq
    bfdc:	f04f 0b00 	moveq.w	r11, #0
    bfe0:	e04e      	b.n	c080 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    bfe2:	a808      	add	r0, sp, #32
    bfe4:	a918      	add	r1, sp, #96	; 0x60
    bfe6:	f7fe ff41 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    bfea:	2800      	cmp	r0, #0
    bfec:	f000 80f1 	beq.w	c1d2 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x38a>
    bff0:	a808      	add	r0, sp, #32
    bff2:	f7fe ff15 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    bff6:	9b03      	ldr	r3, [sp, #12]
    bff8:	b2c0      	uxtb	r0, r0
    bffa:	699b      	ldr	r3, [r3, #24]
    bffc:	5c1b      	ldrb	r3, [r3, r0]
    bffe:	0719      	lsls	r1, r3, #28
    c000:	f140 80e7 	bpl.w	c1d2 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x38a>
    c004:	a808      	add	r0, sp, #32
    c006:	f7fd fe7c 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c00a:	f04f 0b01 	mov.w	r11, #1
    c00e:	2d03      	cmp	r5, #3
    c010:	d036      	beq.n	c080 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    c012:	a808      	add	r0, sp, #32
    c014:	a918      	add	r1, sp, #96	; 0x60
    c016:	f7fe ff29 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    c01a:	2800      	cmp	r0, #0
    c01c:	d030      	beq.n	c080 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    c01e:	a808      	add	r0, sp, #32
    c020:	f7fe fefe 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c024:	9b03      	ldr	r3, [sp, #12]
    c026:	b2c0      	uxtb	r0, r0
    c028:	699b      	ldr	r3, [r3, #24]
    c02a:	5c1b      	ldrb	r3, [r3, r0]
    c02c:	071a      	lsls	r2, r3, #28
    c02e:	d527      	bpl.n	c080 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    c030:	a808      	add	r0, sp, #32
    c032:	f7fd fe66 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c036:	e7ec      	b.n	c012 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1ca>
    c038:	459b      	cmp	r11, r3
    c03a:	f000 80a4 	beq.w	c186 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    c03e:	a808      	add	r0, sp, #32
    c040:	f7fe feee 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c044:	6962      	ldr	r2, [r4, #20]
    c046:	b2c0      	uxtb	r0, r0
    c048:	f812 200b 	ldrb.w	r2, [r2, r11]
    c04c:	4282      	cmp	r2, r0
    c04e:	d10e      	bne.n	c06e <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x226>
    c050:	a808      	add	r0, sp, #32
    c052:	f7fd fe56 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c056:	f10b 0b01 	add.w	r11, r11, #1
    c05a:	a808      	add	r0, sp, #32
    c05c:	a918      	add	r1, sp, #96	; 0x60
    c05e:	f7fe ff05 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    c062:	9b04      	ldr	r3, [sp, #16]
    c064:	2800      	cmp	r0, #0
    c066:	d1e7      	bne.n	c038 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1f0>
    c068:	459b      	cmp	r11, r3
    c06a:	f000 808c 	beq.w	c186 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    c06e:	f1bb 0f00 	cmp.w	r11, #0
    c072:	f040 8085 	bne.w	c180 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x338>
    c076:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    c078:	68da      	ldr	r2, [r3, #12]
    c07a:	0590      	lsls	r0, r2, #22
    c07c:	f140 8083 	bpl.w	c186 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x33e>
    c080:	3501      	adds	r5, #1
    c082:	2d04      	cmp	r5, #4
    c084:	d004      	beq.n	c090 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x248>
    c086:	f1bb 0f00 	cmp.w	r11, #0
    c08a:	f47f af14 	bne.w	beb6 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x6e>
    c08e:	e0af      	b.n	c1f0 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a8>
    c090:	f1ba 0f01 	cmp.w	r10, #1
    c094:	d923      	bls.n	c0de <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x296>
    c096:	f1bb 0f00 	cmp.w	r11, #0
    c09a:	f000 80a9 	beq.w	c1f0 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a8>
    c09e:	f1b9 0f00 	cmp.w	r9, #0
    c0a2:	d001      	beq.n	c0a8 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x260>
    c0a4:	6a65      	ldr	r5, [r4, #36]	; 0x24
    c0a6:	e000      	b.n	c0aa <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x262>
    c0a8:	69e5      	ldr	r5, [r4, #28]
    c0aa:	f04f 0b01 	mov.w	r11, #1
    c0ae:	a808      	add	r0, sp, #32
    c0b0:	a918      	add	r1, sp, #96	; 0x60
    c0b2:	f7fe fedb 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    c0b6:	2800      	cmp	r0, #0
    c0b8:	f000 808e 	beq.w	c1d8 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x390>
    c0bc:	45d3      	cmp	r11, r10
    c0be:	d012      	beq.n	c0e6 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x29e>
    c0c0:	a808      	add	r0, sp, #32
    c0c2:	f7fe fead 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c0c6:	f815 300b 	ldrb.w	r3, [r5, r11]
    c0ca:	b2c0      	uxtb	r0, r0
    c0cc:	4283      	cmp	r3, r0
    c0ce:	f040 808f 	bne.w	c1f0 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a8>
    c0d2:	a808      	add	r0, sp, #32
    c0d4:	f7fd fe15 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c0d8:	f10b 0b01 	add.w	r11, r11, #1
    c0dc:	e7e7      	b.n	c0ae <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x266>
    c0de:	f1bb 0f00 	cmp.w	r11, #0
    c0e2:	f000 8085 	beq.w	c1f0 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a8>
    c0e6:	ad0e      	add	r5, sp, #56	; 0x38
    c0e8:	f855 3d08 	ldr.w	r3, [r5, #-8]!
    c0ec:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    c0f0:	2b01      	cmp	r3, #1
    c0f2:	d913      	bls.n	c11c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d4>
    c0f4:	4628      	mov	r0, r5
    c0f6:	2130      	movs	r1, #48	; 0x30
    c0f8:	2200      	movs	r2, #0
    c0fa:	f002 fb93 	bl	e824 <std::string::find_first_not_of(char, unsigned int) const>
    c0fe:	b168      	cbz	r0, c11c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d4>
    c100:	1c43      	adds	r3, r0, #1
    c102:	bf0a      	itet	eq
    c104:	9b0c      	ldreq	r3, [sp, #48]	; 0x30
    c106:	4602      	movne	r2, r0
    c108:	f853 0c0c 	ldreq.w	r0, [r3, #-12]
    c10c:	f04f 0100 	mov.w	r1, #0
    c110:	bf08      	it	eq
    c112:	f100 32ff 	addeq.w	r2, r0, #4294967295
    c116:	4628      	mov	r0, r5
    c118:	f002 fc84 	bl	ea24 <std::string::erase(unsigned int, unsigned int)>
    c11c:	f1b9 0f00 	cmp.w	r9, #0
    c120:	d006      	beq.n	c130 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2e8>
    c122:	4628      	mov	r0, r5
    c124:	f002 fc66 	bl	e9f4 <std::string::_M_leak()>
    c128:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c12a:	781b      	ldrb	r3, [r3, #0]
    c12c:	2b30      	cmp	r3, #48	; 0x30
    c12e:	d156      	bne.n	c1de <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x396>
    c130:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    c132:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    c136:	b1bb      	cbz	r3, c168 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x320>
    c138:	f1b8 0f00 	cmp.w	r8, #0
    c13c:	d006      	beq.n	c14c <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x304>
    c13e:	f89d 1008 	ldrb.w	r1, [sp, #8]
    c142:	e004      	b.n	c14e <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x306>
    c144:	10000c70 	.word	0x10000c70
    c148:	10000168 	.word	0x10000168
    c14c:	b2f1      	uxtb	r1, r6
    c14e:	a80b      	add	r0, sp, #44	; 0x2c
    c150:	f002 fe1b 	bl	ed8a <std::string::push_back(char)>
    c154:	68a0      	ldr	r0, [r4, #8]
    c156:	68e1      	ldr	r1, [r4, #12]
    c158:	aa0b      	add	r2, sp, #44	; 0x2c
    c15a:	f003 ff44 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    c15e:	b918      	cbnz	r0, c168 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x320>
    c160:	683b      	ldr	r3, [r7, #0]
    c162:	f043 0304 	orr.w	r3, r3, #4
    c166:	603b      	str	r3, [r7, #0]
    c168:	f1b8 0f00 	cmp.w	r8, #0
    c16c:	d04f      	beq.n	c20e <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3c6>
    c16e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    c170:	429e      	cmp	r6, r3
    c172:	d13d      	bne.n	c1f0 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a8>
    c174:	e04b      	b.n	c20e <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3c6>
    c176:	69a3      	ldr	r3, [r4, #24]
    c178:	f04f 0b00 	mov.w	r11, #0
    c17c:	9304      	str	r3, [sp, #16]
    c17e:	e76c      	b.n	c05a <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x212>
    c180:	f04f 0b00 	mov.w	r11, #0
    c184:	e77c      	b.n	c080 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    c186:	f04f 0b01 	mov.w	r11, #1
    c18a:	e779      	b.n	c080 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    c18c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    c18e:	b1ab      	cbz	r3, c1bc <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x374>
    c190:	a808      	add	r0, sp, #32
    c192:	a918      	add	r1, sp, #96	; 0x60
    c194:	f7fe fe6a 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    c198:	b180      	cbz	r0, c1bc <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x374>
    c19a:	a808      	add	r0, sp, #32
    c19c:	f7fe fe40 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c1a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
    c1a2:	b2c0      	uxtb	r0, r0
    c1a4:	781b      	ldrb	r3, [r3, #0]
    c1a6:	4283      	cmp	r3, r0
    c1a8:	d108      	bne.n	c1bc <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x374>
    c1aa:	a808      	add	r0, sp, #32
    c1ac:	f8d4 a028 	ldr.w	r10, [r4, #40]	; 0x28
    c1b0:	f7fd fda7 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c1b4:	f04f 0901 	mov.w	r9, #1
    c1b8:	46cb      	mov	r11, r9
    c1ba:	e761      	b.n	c080 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    c1bc:	6a23      	ldr	r3, [r4, #32]
    c1be:	b113      	cbz	r3, c1c6 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x37e>
    c1c0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    c1c2:	2b00      	cmp	r3, #0
    c1c4:	d0f6      	beq.n	c1b4 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x36c>
    c1c6:	9b01      	ldr	r3, [sp, #4]
    c1c8:	f083 0b01 	eor.w	r11, r3, #1
    c1cc:	fa5f fb8b 	uxtb.w	r11, r11
    c1d0:	e756      	b.n	c080 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x238>
    c1d2:	f04f 0b00 	mov.w	r11, #0
    c1d6:	e71a      	b.n	c00e <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1c6>
    c1d8:	45d3      	cmp	r11, r10
    c1da:	d109      	bne.n	c1f0 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3a8>
    c1dc:	e783      	b.n	c0e6 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x29e>
    c1de:	4628      	mov	r0, r5
    c1e0:	f002 fc11 	bl	ea06 <std::string::begin()>
    c1e4:	222d      	movs	r2, #45	; 0x2d
    c1e6:	4601      	mov	r1, r0
    c1e8:	4628      	mov	r0, r5
    c1ea:	f002 fc6d 	bl	eac8 <std::string::insert(__gnu_cxx::__normal_iterator<char*, std::string>, char)>
    c1ee:	e79f      	b.n	c130 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2e8>
    c1f0:	683b      	ldr	r3, [r7, #0]
    c1f2:	f043 0304 	orr.w	r3, r3, #4
    c1f6:	603b      	str	r3, [r7, #0]
    c1f8:	ac08      	add	r4, sp, #32
    c1fa:	4620      	mov	r0, r4
    c1fc:	a918      	add	r1, sp, #96	; 0x60
    c1fe:	f7fe fe22 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    c202:	b148      	cbz	r0, c218 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3d0>
    c204:	683b      	ldr	r3, [r7, #0]
    c206:	f043 0302 	orr.w	r3, r3, #2
    c20a:	603b      	str	r3, [r7, #0]
    c20c:	e004      	b.n	c218 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3d0>
    c20e:	981c      	ldr	r0, [sp, #112]	; 0x70
    c210:	4629      	mov	r1, r5
    c212:	f002 faf3 	bl	e7fc <std::string::swap(std::string&)>
    c216:	e7ef      	b.n	c1f8 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x3b0>
    c218:	9b05      	ldr	r3, [sp, #20]
    c21a:	e894 0003 	ldmia.w	r4, {r0, r1}
    c21e:	e883 0003 	stmia.w	r3, {r0, r1}
    c222:	a80c      	add	r0, sp, #48	; 0x30
    c224:	f002 fb78 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    c228:	a80b      	add	r0, sp, #44	; 0x2c
    c22a:	f002 fb75 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    c22e:	9805      	ldr	r0, [sp, #20]
    c230:	b00f      	add	sp, #60	; 0x3c
    c232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    c236:	bf00      	nop

0000c238 <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const>:
    c238:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    c23c:	b08c      	sub	sp, #48	; 0x30
    c23e:	ac08      	add	r4, sp, #32
    c240:	e884 000c 	stmia.w	r4, {r2, r3}
    c244:	4a22      	ldr	r2, [pc, #136]	; (c2d0 <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const+0x98>)
    c246:	4606      	mov	r6, r0
    c248:	920a      	str	r2, [sp, #40]	; 0x28
    c24a:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
    c24e:	468e      	mov	lr, r1
    c250:	9b15      	ldr	r3, [sp, #84]	; 0x54
    c252:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    c256:	ad06      	add	r5, sp, #24
    c258:	af0a      	add	r7, sp, #40	; 0x28
    c25a:	b17a      	cbz	r2, c27c <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const+0x44>
    c25c:	aa12      	add	r2, sp, #72	; 0x48
    c25e:	e892 0003 	ldmia.w	r2, {r0, r1}
    c262:	e88d 0003 	stmia.w	sp, {r0, r1}
    c266:	9302      	str	r3, [sp, #8]
    c268:	f8cd 800c 	str.w	r8, [sp, #12]
    c26c:	9704      	str	r7, [sp, #16]
    c26e:	4628      	mov	r0, r5
    c270:	e894 000c 	ldmia.w	r4, {r2, r3}
    c274:	4671      	mov	r1, lr
    c276:	f7ff fbef 	bl	ba58 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    c27a:	e00e      	b.n	c29a <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const+0x62>
    c27c:	aa12      	add	r2, sp, #72	; 0x48
    c27e:	e892 0003 	ldmia.w	r2, {r0, r1}
    c282:	e88d 0003 	stmia.w	sp, {r0, r1}
    c286:	9302      	str	r3, [sp, #8]
    c288:	f8cd 800c 	str.w	r8, [sp, #12]
    c28c:	9704      	str	r7, [sp, #16]
    c28e:	4628      	mov	r0, r5
    c290:	e894 000c 	ldmia.w	r4, {r2, r3}
    c294:	4671      	mov	r1, lr
    c296:	f7ff fdd7 	bl	be48 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    c29a:	e895 0003 	ldmia.w	r5, {r0, r1}
    c29e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    c2a0:	e884 0003 	stmia.w	r4, {r0, r1}
    c2a4:	f003 fee6 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    c2a8:	ab0c      	add	r3, sp, #48	; 0x30
    c2aa:	f843 0d04 	str.w	r0, [r3, #-4]!
    c2ae:	9917      	ldr	r1, [sp, #92]	; 0x5c
    c2b0:	4628      	mov	r0, r5
    c2b2:	4642      	mov	r2, r8
    c2b4:	f004 f89e 	bl	103f4 <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)>
    c2b8:	e894 0003 	ldmia.w	r4, {r0, r1}
    c2bc:	e886 0003 	stmia.w	r6, {r0, r1}
    c2c0:	4638      	mov	r0, r7
    c2c2:	f002 fb29 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    c2c6:	4630      	mov	r0, r6
    c2c8:	b00c      	add	sp, #48	; 0x30
    c2ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    c2ce:	bf00      	nop
    c2d0:	10000c70 	.word	0x10000c70

0000c2d4 <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const>:
    c2d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    c2d8:	b08d      	sub	sp, #52	; 0x34
    c2da:	f8dd a064 	ldr.w	r10, [sp, #100]	; 0x64
    c2de:	4607      	mov	r7, r0
    c2e0:	ac08      	add	r4, sp, #32
    c2e2:	f10a 006c 	add.w	r0, r10, #108	; 0x6c
    c2e6:	e884 000c 	stmia.w	r4, {r2, r3}
    c2ea:	468b      	mov	r11, r1
    c2ec:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
    c2f0:	f7fd f828 	bl	9344 <std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)>
    c2f4:	4b26      	ldr	r3, [pc, #152]	; (c390 <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xbc>)
    c2f6:	4681      	mov	r9, r0
    c2f8:	930b      	str	r3, [sp, #44]	; 0x2c
    c2fa:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
    c2fe:	ad06      	add	r5, sp, #24
    c300:	ae0b      	add	r6, sp, #44	; 0x2c
    c302:	b183      	cbz	r3, c326 <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x52>
    c304:	ab16      	add	r3, sp, #88	; 0x58
    c306:	e893 0003 	ldmia.w	r3, {r0, r1}
    c30a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    c30c:	e88d 0003 	stmia.w	sp, {r0, r1}
    c310:	f8cd a008 	str.w	r10, [sp, #8]
    c314:	9303      	str	r3, [sp, #12]
    c316:	9604      	str	r6, [sp, #16]
    c318:	4628      	mov	r0, r5
    c31a:	e894 000c 	ldmia.w	r4, {r2, r3}
    c31e:	4659      	mov	r1, r11
    c320:	f7ff fb9a 	bl	ba58 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    c324:	e00f      	b.n	c346 <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x72>
    c326:	ab16      	add	r3, sp, #88	; 0x58
    c328:	e893 0003 	ldmia.w	r3, {r0, r1}
    c32c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    c32e:	e88d 0003 	stmia.w	sp, {r0, r1}
    c332:	f8cd a008 	str.w	r10, [sp, #8]
    c336:	9303      	str	r3, [sp, #12]
    c338:	9604      	str	r6, [sp, #16]
    c33a:	4628      	mov	r0, r5
    c33c:	e894 000c 	ldmia.w	r4, {r2, r3}
    c340:	4659      	mov	r1, r11
    c342:	f7ff fd81 	bl	be48 <std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    c346:	e895 0003 	ldmia.w	r5, {r0, r1}
    c34a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    c34c:	e884 0003 	stmia.w	r4, {r0, r1}
    c350:	f853 5c0c 	ldr.w	r5, [r3, #-12]
    c354:	b185      	cbz	r5, c378 <std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xa4>
    c356:	4629      	mov	r1, r5
    c358:	4640      	mov	r0, r8
    c35a:	f002 fd11 	bl	ed80 <std::string::resize(unsigned int)>
    c35e:	f8dd a02c 	ldr.w	r10, [sp, #44]	; 0x2c
    c362:	4640      	mov	r0, r8
    c364:	4455      	add	r5, r10
    c366:	f002 fb45 	bl	e9f4 <std::string::_M_leak()>
    c36a:	4648      	mov	r0, r9
    c36c:	4651      	mov	r1, r10
    c36e:	462a      	mov	r2, r5
    c370:	f8d8 3000 	ldr.w	r3, [r8]
    c374:	f7fc fda3 	bl	8ebe <std::ctype<char>::widen(char const*, char const*, char*) const>
    c378:	e894 0003 	ldmia.w	r4, {r0, r1}
    c37c:	e887 0003 	stmia.w	r7, {r0, r1}
    c380:	4630      	mov	r0, r6
    c382:	f002 fac9 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    c386:	4638      	mov	r0, r7
    c388:	b00d      	add	sp, #52	; 0x34
    c38a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    c38e:	bf00      	nop
    c390:	10000c70 	.word	0x10000c70

0000c394 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>:
    c394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    c398:	b087      	sub	sp, #28
    c39a:	9001      	str	r0, [sp, #4]
    c39c:	9812      	ldr	r0, [sp, #72]	; 0x48
    c39e:	ae02      	add	r6, sp, #8
    c3a0:	306c      	adds	r0, #108	; 0x6c
    c3a2:	e886 000c 	stmia.w	r6, {r2, r3}
    c3a6:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
    c3aa:	f7fd f897 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    c3ae:	a910      	add	r1, sp, #64	; 0x40
    c3b0:	4604      	mov	r4, r0
    c3b2:	4630      	mov	r0, r6
    c3b4:	f7fe fd47 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    c3b8:	9000      	str	r0, [sp, #0]
    c3ba:	bb68      	cbnz	r0, c418 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x84>
    c3bc:	4630      	mov	r0, r6
    c3be:	f7fe fd2f 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c3c2:	f894 204b 	ldrb.w	r2, [r4, #75]	; 0x4b
    c3c6:	fa5f fb80 	uxtb.w	r11, r0
    c3ca:	ebcb 0102 	rsb	r1, r11, r2
    c3ce:	424a      	negs	r2, r1
    c3d0:	414a      	adcs	r2, r1
    c3d2:	b91a      	cbnz	r2, c3dc <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x48>
    c3d4:	f894 104a 	ldrb.w	r1, [r4, #74]	; 0x4a
    c3d8:	4559      	cmp	r1, r11
    c3da:	d122      	bne.n	c422 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x8e>
    c3dc:	7c21      	ldrb	r1, [r4, #16]
    c3de:	b119      	cbz	r1, c3e8 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x54>
    c3e0:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
    c3e4:	458b      	cmp	r11, r1
    c3e6:	d01c      	beq.n	c422 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x8e>
    c3e8:	f894 1024 	ldrb.w	r1, [r4, #36]	; 0x24
    c3ec:	458b      	cmp	r11, r1
    c3ee:	d018      	beq.n	c422 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x8e>
    c3f0:	2a00      	cmp	r2, #0
    c3f2:	bf14      	ite	ne
    c3f4:	212b      	movne	r1, #43	; 0x2b
    c3f6:	212d      	moveq	r1, #45	; 0x2d
    c3f8:	4640      	mov	r0, r8
    c3fa:	f002 fcc6 	bl	ed8a <std::string::push_back(char)>
    c3fe:	4630      	mov	r0, r6
    c400:	f7fd fc7f 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c404:	a910      	add	r1, sp, #64	; 0x40
    c406:	f7fe fd31 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    c40a:	b140      	cbz	r0, c41e <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x8a>
    c40c:	4630      	mov	r0, r6
    c40e:	f7fe fd07 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c412:	fa5f fb80 	uxtb.w	r11, r0
    c416:	e004      	b.n	c422 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x8e>
    c418:	f04f 0b00 	mov.w	r11, #0
    c41c:	e001      	b.n	c422 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x8e>
    c41e:	2301      	movs	r3, #1
    c420:	9300      	str	r3, [sp, #0]
    c422:	2700      	movs	r7, #0
    c424:	46ba      	mov	r10, r7
    c426:	9b00      	ldr	r3, [sp, #0]
    c428:	7c22      	ldrb	r2, [r4, #16]
    c42a:	bb33      	cbnz	r3, c47a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xe6>
    c42c:	b11a      	cbz	r2, c436 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xa2>
    c42e:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
    c432:	458b      	cmp	r11, r1
    c434:	d021      	beq.n	c47a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xe6>
    c436:	f894 1024 	ldrb.w	r1, [r4, #36]	; 0x24
    c43a:	458b      	cmp	r11, r1
    c43c:	d01d      	beq.n	c47a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xe6>
    c43e:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
    c442:	4559      	cmp	r1, r11
    c444:	d119      	bne.n	c47a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xe6>
    c446:	f1ba 0f00 	cmp.w	r10, #0
    c44a:	d103      	bne.n	c454 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xc0>
    c44c:	4640      	mov	r0, r8
    c44e:	2130      	movs	r1, #48	; 0x30
    c450:	f002 fc9b 	bl	ed8a <std::string::push_back(char)>
    c454:	4630      	mov	r0, r6
    c456:	f7fd fc54 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c45a:	a910      	add	r1, sp, #64	; 0x40
    c45c:	3701      	adds	r7, #1
    c45e:	f7fe fd05 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    c462:	b128      	cbz	r0, c470 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xdc>
    c464:	4630      	mov	r0, r6
    c466:	f7fe fcdb 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c46a:	fa5f fb80 	uxtb.w	r11, r0
    c46e:	e001      	b.n	c474 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xe0>
    c470:	2301      	movs	r3, #1
    c472:	9300      	str	r3, [sp, #0]
    c474:	f04f 0a01 	mov.w	r10, #1
    c478:	e7d5      	b.n	c426 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x92>
    c47a:	4999      	ldr	r1, [pc, #612]	; (c6e0 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x34c>)
    c47c:	9105      	str	r1, [sp, #20]
    c47e:	b11a      	cbz	r2, c488 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0xf4>
    c480:	a805      	add	r0, sp, #20
    c482:	2120      	movs	r1, #32
    c484:	f002 fba3 	bl	ebce <std::string::reserve(unsigned int)>
    c488:	f894 5064 	ldrb.w	r5, [r4, #100]	; 0x64
    c48c:	b91d      	cbnz	r5, c496 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x102>
    c48e:	9b00      	ldr	r3, [sp, #0]
    c490:	46a9      	mov	r9, r5
    c492:	b323      	cbz	r3, c4de <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x14a>
    c494:	e0f9      	b.n	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c496:	9b00      	ldr	r3, [sp, #0]
    c498:	2500      	movs	r5, #0
    c49a:	f104 064e 	add.w	r6, r4, #78	; 0x4e
    c49e:	46a9      	mov	r9, r5
    c4a0:	2b00      	cmp	r3, #0
    c4a2:	d07d      	beq.n	c5a0 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x20c>
    c4a4:	e0f1      	b.n	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c4a6:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
    c4aa:	455a      	cmp	r2, r11
    c4ac:	d126      	bne.n	c4fc <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x168>
    c4ae:	f1b9 0f00 	cmp.w	r9, #0
    c4b2:	d123      	bne.n	c4fc <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x168>
    c4b4:	bb15      	cbnz	r5, c4fc <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x168>
    c4b6:	4640      	mov	r0, r8
    c4b8:	212e      	movs	r1, #46	; 0x2e
    c4ba:	f002 fc66 	bl	ed8a <std::string::push_back(char)>
    c4be:	f04f 0901 	mov.w	r9, #1
    c4c2:	4630      	mov	r0, r6
    c4c4:	f7fd fc1d 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c4c8:	a910      	add	r1, sp, #64	; 0x40
    c4ca:	f7fe fccf 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    c4ce:	2800      	cmp	r0, #0
    c4d0:	f000 80db 	beq.w	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c4d4:	4630      	mov	r0, r6
    c4d6:	f7fe fca3 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c4da:	fa5f fb80 	uxtb.w	r11, r0
    c4de:	200a      	movs	r0, #10
    c4e0:	4659      	mov	r1, r11
    c4e2:	f7fc fcbb 	bl	8e5c <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]>
    c4e6:	1c42      	adds	r2, r0, #1
    c4e8:	d0dd      	beq.n	c4a6 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x112>
    c4ea:	f100 0130 	add.w	r1, r0, #48	; 0x30
    c4ee:	b2c9      	uxtb	r1, r1
    c4f0:	4640      	mov	r0, r8
    c4f2:	f002 fc4a 	bl	ed8a <std::string::push_back(char)>
    c4f6:	f04f 0a01 	mov.w	r10, #1
    c4fa:	e7e2      	b.n	c4c2 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x12e>
    c4fc:	f894 205c 	ldrb.w	r2, [r4, #92]	; 0x5c
    c500:	455a      	cmp	r2, r11
    c502:	d004      	beq.n	c50e <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x17a>
    c504:	f894 2062 	ldrb.w	r2, [r4, #98]	; 0x62
    c508:	455a      	cmp	r2, r11
    c50a:	f040 80be 	bne.w	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c50e:	2d00      	cmp	r5, #0
    c510:	f040 80bb 	bne.w	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c514:	f1ba 0f00 	cmp.w	r10, #0
    c518:	f000 80b7 	beq.w	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c51c:	2165      	movs	r1, #101	; 0x65
    c51e:	4640      	mov	r0, r8
    c520:	f002 fc33 	bl	ed8a <std::string::push_back(char)>
    c524:	4630      	mov	r0, r6
    c526:	f7fd fbec 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c52a:	a910      	add	r1, sp, #64	; 0x40
    c52c:	f7fe fc9e 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    c530:	2800      	cmp	r0, #0
    c532:	f000 80a9 	beq.w	c688 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f4>
    c536:	4630      	mov	r0, r6
    c538:	f7fe fc72 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c53c:	f894 204b 	ldrb.w	r2, [r4, #75]	; 0x4b
    c540:	fa5f fb80 	uxtb.w	r11, r0
    c544:	455a      	cmp	r2, r11
    c546:	d005      	beq.n	c554 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1c0>
    c548:	f894 204a 	ldrb.w	r2, [r4, #74]	; 0x4a
    c54c:	455a      	cmp	r2, r11
    c54e:	d107      	bne.n	c560 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1cc>
    c550:	212d      	movs	r1, #45	; 0x2d
    c552:	e000      	b.n	c556 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1c2>
    c554:	212b      	movs	r1, #43	; 0x2b
    c556:	4640      	mov	r0, r8
    c558:	f002 fc17 	bl	ed8a <std::string::push_back(char)>
    c55c:	2501      	movs	r5, #1
    c55e:	e7b0      	b.n	c4c2 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x12e>
    c560:	2501      	movs	r5, #1
    c562:	e7bc      	b.n	c4de <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x14a>
    c564:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
    c568:	455a      	cmp	r2, r11
    c56a:	d120      	bne.n	c5ae <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x21a>
    c56c:	f1b9 0f00 	cmp.w	r9, #0
    c570:	f040 808b 	bne.w	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c574:	2d00      	cmp	r5, #0
    c576:	f040 8088 	bne.w	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c57a:	b1a7      	cbz	r7, c5a6 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x212>
    c57c:	b2f9      	uxtb	r1, r7
    c57e:	a805      	add	r0, sp, #20
    c580:	f002 fc03 	bl	ed8a <std::string::push_back(char)>
    c584:	462f      	mov	r7, r5
    c586:	a802      	add	r0, sp, #8
    c588:	f7fd fbbb 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c58c:	a910      	add	r1, sp, #64	; 0x40
    c58e:	f7fe fc6d 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    c592:	2800      	cmp	r0, #0
    c594:	d079      	beq.n	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c596:	a802      	add	r0, sp, #8
    c598:	f7fe fc42 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c59c:	fa5f fb80 	uxtb.w	r11, r0
    c5a0:	7c22      	ldrb	r2, [r4, #16]
    c5a2:	b122      	cbz	r2, c5ae <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x21a>
    c5a4:	e7de      	b.n	c564 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1d0>
    c5a6:	4640      	mov	r0, r8
    c5a8:	f002 fa33 	bl	ea12 <std::string::clear()>
    c5ac:	e06d      	b.n	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c5ae:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
    c5b2:	455a      	cmp	r2, r11
    c5b4:	d113      	bne.n	c5de <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x24a>
    c5b6:	f1b9 0f00 	cmp.w	r9, #0
    c5ba:	d166      	bne.n	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c5bc:	2d00      	cmp	r5, #0
    c5be:	d164      	bne.n	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c5c0:	9b05      	ldr	r3, [sp, #20]
    c5c2:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    c5c6:	b11b      	cbz	r3, c5d0 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x23c>
    c5c8:	a805      	add	r0, sp, #20
    c5ca:	b2f9      	uxtb	r1, r7
    c5cc:	f002 fbdd 	bl	ed8a <std::string::push_back(char)>
    c5d0:	4640      	mov	r0, r8
    c5d2:	212e      	movs	r1, #46	; 0x2e
    c5d4:	f002 fbd9 	bl	ed8a <std::string::push_back(char)>
    c5d8:	f04f 0901 	mov.w	r9, #1
    c5dc:	e7d3      	b.n	c586 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1f2>
    c5de:	4630      	mov	r0, r6
    c5e0:	4659      	mov	r1, r11
    c5e2:	220a      	movs	r2, #10
    c5e4:	f007 f834 	bl	13650 <memchr>
    c5e8:	b150      	cbz	r0, c600 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x26c>
    c5ea:	1b80      	subs	r0, r0, r6
    c5ec:	f100 0130 	add.w	r1, r0, #48	; 0x30
    c5f0:	b2c9      	uxtb	r1, r1
    c5f2:	4640      	mov	r0, r8
    c5f4:	f002 fbc9 	bl	ed8a <std::string::push_back(char)>
    c5f8:	3701      	adds	r7, #1
    c5fa:	f04f 0a01 	mov.w	r10, #1
    c5fe:	e7c2      	b.n	c586 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1f2>
    c600:	f894 205c 	ldrb.w	r2, [r4, #92]	; 0x5c
    c604:	455a      	cmp	r2, r11
    c606:	d003      	beq.n	c610 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x27c>
    c608:	f894 2062 	ldrb.w	r2, [r4, #98]	; 0x62
    c60c:	455a      	cmp	r2, r11
    c60e:	d13c      	bne.n	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c610:	2d00      	cmp	r5, #0
    c612:	d13a      	bne.n	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c614:	f1ba 0f00 	cmp.w	r10, #0
    c618:	d037      	beq.n	c68a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f6>
    c61a:	9b05      	ldr	r3, [sp, #20]
    c61c:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    c620:	b113      	cbz	r3, c628 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x294>
    c622:	f1b9 0f00 	cmp.w	r9, #0
    c626:	d048      	beq.n	c6ba <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x326>
    c628:	2165      	movs	r1, #101	; 0x65
    c62a:	4640      	mov	r0, r8
    c62c:	f002 fbad 	bl	ed8a <std::string::push_back(char)>
    c630:	a802      	add	r0, sp, #8
    c632:	f7fd fb66 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c636:	a910      	add	r1, sp, #64	; 0x40
    c638:	f7fe fc18 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    c63c:	b320      	cbz	r0, c688 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f4>
    c63e:	a802      	add	r0, sp, #8
    c640:	f7fe fbee 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c644:	f894 204b 	ldrb.w	r2, [r4, #75]	; 0x4b
    c648:	fa5f fb80 	uxtb.w	r11, r0
    c64c:	ebcb 0302 	rsb	r3, r11, r2
    c650:	425a      	negs	r2, r3
    c652:	415a      	adcs	r2, r3
    c654:	b91a      	cbnz	r2, c65e <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2ca>
    c656:	f894 104a 	ldrb.w	r1, [r4, #74]	; 0x4a
    c65a:	4559      	cmp	r1, r11
    c65c:	d112      	bne.n	c684 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f0>
    c65e:	7c21      	ldrb	r1, [r4, #16]
    c660:	b119      	cbz	r1, c66a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2d6>
    c662:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
    c666:	458b      	cmp	r11, r1
    c668:	d00c      	beq.n	c684 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f0>
    c66a:	f894 1024 	ldrb.w	r1, [r4, #36]	; 0x24
    c66e:	458b      	cmp	r11, r1
    c670:	d008      	beq.n	c684 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x2f0>
    c672:	2a00      	cmp	r2, #0
    c674:	4640      	mov	r0, r8
    c676:	bf14      	ite	ne
    c678:	212b      	movne	r1, #43	; 0x2b
    c67a:	212d      	moveq	r1, #45	; 0x2d
    c67c:	f002 fb85 	bl	ed8a <std::string::push_back(char)>
    c680:	2501      	movs	r5, #1
    c682:	e780      	b.n	c586 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x1f2>
    c684:	2501      	movs	r5, #1
    c686:	e78b      	b.n	c5a0 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x20c>
    c688:	2501      	movs	r5, #1
    c68a:	ae06      	add	r6, sp, #24
    c68c:	f856 3d04 	ldr.w	r3, [r6, #-4]!
    c690:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    c694:	b1b3      	cbz	r3, c6c4 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x330>
    c696:	f1b9 0f00 	cmp.w	r9, #0
    c69a:	d104      	bne.n	c6a6 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x312>
    c69c:	b91d      	cbnz	r5, c6a6 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x312>
    c69e:	4630      	mov	r0, r6
    c6a0:	b2f9      	uxtb	r1, r7
    c6a2:	f002 fb72 	bl	ed8a <std::string::push_back(char)>
    c6a6:	68a0      	ldr	r0, [r4, #8]
    c6a8:	68e1      	ldr	r1, [r4, #12]
    c6aa:	4632      	mov	r2, r6
    c6ac:	f003 fc9b 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    c6b0:	b940      	cbnz	r0, c6c4 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x330>
    c6b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    c6b4:	2204      	movs	r2, #4
    c6b6:	601a      	str	r2, [r3, #0]
    c6b8:	e004      	b.n	c6c4 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x330>
    c6ba:	a805      	add	r0, sp, #20
    c6bc:	b2f9      	uxtb	r1, r7
    c6be:	f002 fb64 	bl	ed8a <std::string::push_back(char)>
    c6c2:	e7b1      	b.n	c628 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const+0x294>
    c6c4:	ab02      	add	r3, sp, #8
    c6c6:	e893 0003 	ldmia.w	r3, {r0, r1}
    c6ca:	9b01      	ldr	r3, [sp, #4]
    c6cc:	e883 0003 	stmia.w	r3, {r0, r1}
    c6d0:	4630      	mov	r0, r6
    c6d2:	f002 f921 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    c6d6:	9801      	ldr	r0, [sp, #4]
    c6d8:	b007      	add	sp, #28
    c6da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    c6de:	bf00      	nop
    c6e0:	10000c70 	.word	0x10000c70

0000c6e4 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, float&) const>:
    c6e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    c6e8:	4689      	mov	r9, r1
    c6ea:	b08d      	sub	sp, #52	; 0x34
    c6ec:	ac08      	add	r4, sp, #32
    c6ee:	e884 000c 	stmia.w	r4, {r2, r3}
    c6f2:	4b1f      	ldr	r3, [pc, #124]	; (c770 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, float&) const+0x8c>)
    c6f4:	ad0c      	add	r5, sp, #48	; 0x30
    c6f6:	f845 3d08 	str.w	r3, [r5, #-8]!
    c6fa:	2120      	movs	r1, #32
    c6fc:	4607      	mov	r7, r0
    c6fe:	4628      	mov	r0, r5
    c700:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    c702:	f002 fa64 	bl	ebce <std::string::reserve(unsigned int)>
    c706:	ab14      	add	r3, sp, #80	; 0x50
    c708:	e893 0003 	ldmia.w	r3, {r0, r1}
    c70c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    c70e:	e88d 0003 	stmia.w	sp, {r0, r1}
    c712:	f10d 0818 	add.w	r8, sp, #24
    c716:	9302      	str	r3, [sp, #8]
    c718:	9603      	str	r6, [sp, #12]
    c71a:	9504      	str	r5, [sp, #16]
    c71c:	e894 000c 	ldmia.w	r4, {r2, r3}
    c720:	4640      	mov	r0, r8
    c722:	4649      	mov	r1, r9
    c724:	f7ff fe36 	bl	c394 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    c728:	e898 0003 	ldmia.w	r8, {r0, r1}
    c72c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    c730:	e884 0003 	stmia.w	r4, {r0, r1}
    c734:	f003 fc9e 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    c738:	ab0c      	add	r3, sp, #48	; 0x30
    c73a:	f843 0d04 	str.w	r0, [r3, #-4]!
    c73e:	9918      	ldr	r1, [sp, #96]	; 0x60
    c740:	4640      	mov	r0, r8
    c742:	4632      	mov	r2, r6
    c744:	f003 fdb2 	bl	102ac <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)>
    c748:	4620      	mov	r0, r4
    c74a:	a914      	add	r1, sp, #80	; 0x50
    c74c:	f7fe fb7b 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    c750:	b118      	cbz	r0, c75a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, float&) const+0x76>
    c752:	6833      	ldr	r3, [r6, #0]
    c754:	f043 0302 	orr.w	r3, r3, #2
    c758:	6033      	str	r3, [r6, #0]
    c75a:	e894 0003 	ldmia.w	r4, {r0, r1}
    c75e:	e887 0003 	stmia.w	r7, {r0, r1}
    c762:	4628      	mov	r0, r5
    c764:	f002 f8d8 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    c768:	4638      	mov	r0, r7
    c76a:	b00d      	add	sp, #52	; 0x34
    c76c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    c770:	10000c70 	.word	0x10000c70

0000c774 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, double&) const>:
    c774:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    c778:	4689      	mov	r9, r1
    c77a:	b08d      	sub	sp, #52	; 0x34
    c77c:	ac08      	add	r4, sp, #32
    c77e:	e884 000c 	stmia.w	r4, {r2, r3}
    c782:	4b1f      	ldr	r3, [pc, #124]	; (c800 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, double&) const+0x8c>)
    c784:	ad0c      	add	r5, sp, #48	; 0x30
    c786:	f845 3d08 	str.w	r3, [r5, #-8]!
    c78a:	2120      	movs	r1, #32
    c78c:	4607      	mov	r7, r0
    c78e:	4628      	mov	r0, r5
    c790:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    c792:	f002 fa1c 	bl	ebce <std::string::reserve(unsigned int)>
    c796:	ab14      	add	r3, sp, #80	; 0x50
    c798:	e893 0003 	ldmia.w	r3, {r0, r1}
    c79c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    c79e:	e88d 0003 	stmia.w	sp, {r0, r1}
    c7a2:	f10d 0818 	add.w	r8, sp, #24
    c7a6:	9302      	str	r3, [sp, #8]
    c7a8:	9603      	str	r6, [sp, #12]
    c7aa:	9504      	str	r5, [sp, #16]
    c7ac:	e894 000c 	ldmia.w	r4, {r2, r3}
    c7b0:	4640      	mov	r0, r8
    c7b2:	4649      	mov	r1, r9
    c7b4:	f7ff fdee 	bl	c394 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    c7b8:	e898 0003 	ldmia.w	r8, {r0, r1}
    c7bc:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    c7c0:	e884 0003 	stmia.w	r4, {r0, r1}
    c7c4:	f003 fc56 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    c7c8:	ab0c      	add	r3, sp, #48	; 0x30
    c7ca:	f843 0d04 	str.w	r0, [r3, #-4]!
    c7ce:	9918      	ldr	r1, [sp, #96]	; 0x60
    c7d0:	4640      	mov	r0, r8
    c7d2:	4632      	mov	r2, r6
    c7d4:	f003 fdb4 	bl	10340 <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)>
    c7d8:	4620      	mov	r0, r4
    c7da:	a914      	add	r1, sp, #80	; 0x50
    c7dc:	f7fe fb33 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    c7e0:	b118      	cbz	r0, c7ea <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, double&) const+0x76>
    c7e2:	6833      	ldr	r3, [r6, #0]
    c7e4:	f043 0302 	orr.w	r3, r3, #2
    c7e8:	6033      	str	r3, [r6, #0]
    c7ea:	e894 0003 	ldmia.w	r4, {r0, r1}
    c7ee:	e887 0003 	stmia.w	r7, {r0, r1}
    c7f2:	4628      	mov	r0, r5
    c7f4:	f002 f890 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    c7f8:	4638      	mov	r0, r7
    c7fa:	b00d      	add	sp, #52	; 0x34
    c7fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    c800:	10000c70 	.word	0x10000c70

0000c804 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long double&) const>:
    c804:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    c808:	4689      	mov	r9, r1
    c80a:	b08d      	sub	sp, #52	; 0x34
    c80c:	ac08      	add	r4, sp, #32
    c80e:	e884 000c 	stmia.w	r4, {r2, r3}
    c812:	4b1f      	ldr	r3, [pc, #124]	; (c890 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long double&) const+0x8c>)
    c814:	ad0c      	add	r5, sp, #48	; 0x30
    c816:	f845 3d08 	str.w	r3, [r5, #-8]!
    c81a:	2120      	movs	r1, #32
    c81c:	4607      	mov	r7, r0
    c81e:	4628      	mov	r0, r5
    c820:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    c822:	f002 f9d4 	bl	ebce <std::string::reserve(unsigned int)>
    c826:	ab14      	add	r3, sp, #80	; 0x50
    c828:	e893 0003 	ldmia.w	r3, {r0, r1}
    c82c:	9b16      	ldr	r3, [sp, #88]	; 0x58
    c82e:	e88d 0003 	stmia.w	sp, {r0, r1}
    c832:	f10d 0818 	add.w	r8, sp, #24
    c836:	9302      	str	r3, [sp, #8]
    c838:	9603      	str	r6, [sp, #12]
    c83a:	9504      	str	r5, [sp, #16]
    c83c:	e894 000c 	ldmia.w	r4, {r2, r3}
    c840:	4640      	mov	r0, r8
    c842:	4649      	mov	r1, r9
    c844:	f7ff fda6 	bl	c394 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const>
    c848:	e898 0003 	ldmia.w	r8, {r0, r1}
    c84c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    c850:	e884 0003 	stmia.w	r4, {r0, r1}
    c854:	f003 fc0e 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    c858:	ab0c      	add	r3, sp, #48	; 0x30
    c85a:	f843 0d04 	str.w	r0, [r3, #-4]!
    c85e:	9918      	ldr	r1, [sp, #96]	; 0x60
    c860:	4640      	mov	r0, r8
    c862:	4632      	mov	r2, r6
    c864:	f003 fdc6 	bl	103f4 <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)>
    c868:	4620      	mov	r0, r4
    c86a:	a914      	add	r1, sp, #80	; 0x50
    c86c:	f7fe faeb 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    c870:	b118      	cbz	r0, c87a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long double&) const+0x76>
    c872:	6833      	ldr	r3, [r6, #0]
    c874:	f043 0302 	orr.w	r3, r3, #2
    c878:	6033      	str	r3, [r6, #0]
    c87a:	e894 0003 	ldmia.w	r4, {r0, r1}
    c87e:	e887 0003 	stmia.w	r7, {r0, r1}
    c882:	4628      	mov	r0, r5
    c884:	f002 f848 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    c888:	4638      	mov	r0, r7
    c88a:	b00d      	add	sp, #52	; 0x34
    c88c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    c890:	10000c70 	.word	0x10000c70

0000c894 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const>:
    c894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    c898:	b08b      	sub	sp, #44	; 0x2c
    c89a:	9c16      	ldr	r4, [sp, #88]	; 0x58
    c89c:	9005      	str	r0, [sp, #20]
    c89e:	ae06      	add	r6, sp, #24
    c8a0:	f104 006c 	add.w	r0, r4, #108	; 0x6c
    c8a4:	e886 000c 	stmia.w	r6, {r2, r3}
    c8a8:	f7fc fe18 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    c8ac:	68e4      	ldr	r4, [r4, #12]
    c8ae:	4605      	mov	r5, r0
    c8b0:	f004 044a 	and.w	r4, r4, #74	; 0x4a
    c8b4:	2c40      	cmp	r4, #64	; 0x40
    c8b6:	d004      	beq.n	c8c2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2e>
    c8b8:	2c08      	cmp	r4, #8
    c8ba:	bf14      	ite	ne
    c8bc:	270a      	movne	r7, #10
    c8be:	2710      	moveq	r7, #16
    c8c0:	e000      	b.n	c8c4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x30>
    c8c2:	2708      	movs	r7, #8
    c8c4:	4630      	mov	r0, r6
    c8c6:	a914      	add	r1, sp, #80	; 0x50
    c8c8:	f7fe fabd 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    c8cc:	4681      	mov	r9, r0
    c8ce:	bb50      	cbnz	r0, c926 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x92>
    c8d0:	4630      	mov	r0, r6
    c8d2:	f7fe faa5 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c8d6:	f895 b04a 	ldrb.w	r11, [r5, #74]	; 0x4a
    c8da:	b2c3      	uxtb	r3, r0
    c8dc:	ebc3 020b 	rsb	r2, r3, r11
    c8e0:	f1d2 0b00 	rsbs	r11, r2, #0
    c8e4:	eb4b 0b02 	adc.w	r11, r11, r2
    c8e8:	f1bb 0f00 	cmp.w	r11, #0
    c8ec:	d103      	bne.n	c8f6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x62>
    c8ee:	f895 204b 	ldrb.w	r2, [r5, #75]	; 0x4b
    c8f2:	429a      	cmp	r2, r3
    c8f4:	d11c      	bne.n	c930 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x9c>
    c8f6:	7c2a      	ldrb	r2, [r5, #16]
    c8f8:	b11a      	cbz	r2, c902 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x6e>
    c8fa:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
    c8fe:	4293      	cmp	r3, r2
    c900:	d016      	beq.n	c930 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x9c>
    c902:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
    c906:	4293      	cmp	r3, r2
    c908:	d012      	beq.n	c930 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x9c>
    c90a:	4630      	mov	r0, r6
    c90c:	9301      	str	r3, [sp, #4]
    c90e:	f7fd f9f8 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c912:	a914      	add	r1, sp, #80	; 0x50
    c914:	f7fe faaa 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    c918:	9b01      	ldr	r3, [sp, #4]
    c91a:	b138      	cbz	r0, c92c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x98>
    c91c:	4630      	mov	r0, r6
    c91e:	f7fe fa7f 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c922:	b2c3      	uxtb	r3, r0
    c924:	e004      	b.n	c930 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x9c>
    c926:	2300      	movs	r3, #0
    c928:	469b      	mov	r11, r3
    c92a:	e001      	b.n	c930 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x9c>
    c92c:	f04f 0901 	mov.w	r9, #1
    c930:	2600      	movs	r6, #0
    c932:	46b0      	mov	r8, r6
    c934:	f1b9 0f00 	cmp.w	r9, #0
    c938:	d14f      	bne.n	c9da <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x146>
    c93a:	7c2a      	ldrb	r2, [r5, #16]
    c93c:	b11a      	cbz	r2, c946 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xb2>
    c93e:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
    c942:	4293      	cmp	r3, r2
    c944:	d049      	beq.n	c9da <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x146>
    c946:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
    c94a:	4293      	cmp	r3, r2
    c94c:	d045      	beq.n	c9da <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x146>
    c94e:	f895 204e 	ldrb.w	r2, [r5, #78]	; 0x4e
    c952:	429a      	cmp	r2, r3
    c954:	d10a      	bne.n	c96c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xd8>
    c956:	f1b8 0f00 	cmp.w	r8, #0
    c95a:	d002      	beq.n	c962 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xce>
    c95c:	2f0a      	cmp	r7, #10
    c95e:	d108      	bne.n	c972 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xde>
    c960:	e021      	b.n	c9a6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x112>
    c962:	b1a4      	cbz	r4, c98e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xfa>
    c964:	2f08      	cmp	r7, #8
    c966:	d016      	beq.n	c996 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x102>
    c968:	3601      	adds	r6, #1
    c96a:	e015      	b.n	c998 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x104>
    c96c:	f1b8 0f00 	cmp.w	r8, #0
    c970:	d033      	beq.n	c9da <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x146>
    c972:	f895 204c 	ldrb.w	r2, [r5, #76]	; 0x4c
    c976:	429a      	cmp	r2, r3
    c978:	d003      	beq.n	c982 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xee>
    c97a:	f895 204d 	ldrb.w	r2, [r5, #77]	; 0x4d
    c97e:	429a      	cmp	r2, r3
    c980:	d129      	bne.n	c9d6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x142>
    c982:	b164      	cbz	r4, c99e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x10a>
    c984:	2f10      	cmp	r7, #16
    c986:	d12b      	bne.n	c9e0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x14c>
    c988:	2600      	movs	r6, #0
    c98a:	46b0      	mov	r8, r6
    c98c:	e00f      	b.n	c9ae <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x11a>
    c98e:	4626      	mov	r6, r4
    c990:	f04f 0801 	mov.w	r8, #1
    c994:	e00a      	b.n	c9ac <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x118>
    c996:	4646      	mov	r6, r8
    c998:	f04f 0801 	mov.w	r8, #1
    c99c:	e007      	b.n	c9ae <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x11a>
    c99e:	4626      	mov	r6, r4
    c9a0:	46a0      	mov	r8, r4
    c9a2:	2710      	movs	r7, #16
    c9a4:	e003      	b.n	c9ae <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x11a>
    c9a6:	2c00      	cmp	r4, #0
    c9a8:	d1de      	bne.n	c968 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xd4>
    c9aa:	4626      	mov	r6, r4
    c9ac:	2708      	movs	r7, #8
    c9ae:	a806      	add	r0, sp, #24
    c9b0:	9301      	str	r3, [sp, #4]
    c9b2:	f7fd f9a6 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    c9b6:	a914      	add	r1, sp, #80	; 0x50
    c9b8:	f7fe fa58 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    c9bc:	9b01      	ldr	r3, [sp, #4]
    c9be:	b138      	cbz	r0, c9d0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x13c>
    c9c0:	a806      	add	r0, sp, #24
    c9c2:	f7fe fa2d 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    c9c6:	b2c3      	uxtb	r3, r0
    c9c8:	f1b8 0f00 	cmp.w	r8, #0
    c9cc:	d1b5      	bne.n	c93a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0xa6>
    c9ce:	e004      	b.n	c9da <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x146>
    c9d0:	f04f 0901 	mov.w	r9, #1
    c9d4:	e001      	b.n	c9da <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x146>
    c9d6:	f04f 0801 	mov.w	r8, #1
    c9da:	2f10      	cmp	r7, #16
    c9dc:	d102      	bne.n	c9e4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x150>
    c9de:	e003      	b.n	c9e8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x154>
    c9e0:	f04f 0801 	mov.w	r8, #1
    c9e4:	9701      	str	r7, [sp, #4]
    c9e6:	e001      	b.n	c9ec <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x158>
    c9e8:	2216      	movs	r2, #22
    c9ea:	9201      	str	r2, [sp, #4]
    c9ec:	4a68      	ldr	r2, [pc, #416]	; (cb90 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2fc>)
    c9ee:	9209      	str	r2, [sp, #36]	; 0x24
    c9f0:	7c2a      	ldrb	r2, [r5, #16]
    c9f2:	b12a      	cbz	r2, ca00 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x16c>
    c9f4:	a809      	add	r0, sp, #36	; 0x24
    c9f6:	2120      	movs	r1, #32
    c9f8:	9302      	str	r3, [sp, #8]
    c9fa:	f002 f8e8 	bl	ebce <std::string::reserve(unsigned int)>
    c9fe:	9b02      	ldr	r3, [sp, #8]
    ca00:	f1bb 0f00 	cmp.w	r11, #0
    ca04:	bf14      	ite	ne
    ca06:	f04f 4200 	movne.w	r2, #2147483648	; 0x80000000
    ca0a:	f06f 4200 	mvneq.w	r2, #2147483648	; 0x80000000
    ca0e:	9202      	str	r2, [sp, #8]
    ca10:	fbb2 f2f7 	udiv	r2, r2, r7
    ca14:	f895 4064 	ldrb.w	r4, [r5, #100]	; 0x64
    ca18:	9203      	str	r2, [sp, #12]
    ca1a:	b924      	cbnz	r4, ca26 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x192>
    ca1c:	46a2      	mov	r10, r4
    ca1e:	f1b9 0f00 	cmp.w	r9, #0
    ca22:	d021      	beq.n	ca68 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1d4>
    ca24:	e067      	b.n	caf6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x262>
    ca26:	f105 024e 	add.w	r2, r5, #78	; 0x4e
    ca2a:	2400      	movs	r4, #0
    ca2c:	9204      	str	r2, [sp, #16]
    ca2e:	46a2      	mov	r10, r4
    ca30:	f1b9 0f00 	cmp.w	r9, #0
    ca34:	d038      	beq.n	caa8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x214>
    ca36:	e05e      	b.n	caf6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x262>
    ca38:	9b03      	ldr	r3, [sp, #12]
    ca3a:	429c      	cmp	r4, r3
    ca3c:	d81b      	bhi.n	ca76 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1e2>
    ca3e:	437c      	muls	r4, r7
    ca40:	9b02      	ldr	r3, [sp, #8]
    ca42:	3601      	adds	r6, #1
    ca44:	1a1b      	subs	r3, r3, r0
    ca46:	429c      	cmp	r4, r3
    ca48:	bf88      	it	hi
    ca4a:	f04a 0a01 	orrhi.w	r10, r10, #1
    ca4e:	4404      	add	r4, r0
    ca50:	a806      	add	r0, sp, #24
    ca52:	f7fd f956 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    ca56:	a914      	add	r1, sp, #80	; 0x50
    ca58:	f7fe fa08 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    ca5c:	2800      	cmp	r0, #0
    ca5e:	d045      	beq.n	caec <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x258>
    ca60:	a806      	add	r0, sp, #24
    ca62:	f7fe f9dd 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    ca66:	b2c3      	uxtb	r3, r0
    ca68:	4619      	mov	r1, r3
    ca6a:	9801      	ldr	r0, [sp, #4]
    ca6c:	f7fc f9f6 	bl	8e5c <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]>
    ca70:	1c43      	adds	r3, r0, #1
    ca72:	d1e1      	bne.n	ca38 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1a4>
    ca74:	e03f      	b.n	caf6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x262>
    ca76:	f04f 0a01 	mov.w	r10, #1
    ca7a:	e7e9      	b.n	ca50 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1bc>
    ca7c:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
    ca80:	429a      	cmp	r2, r3
    ca82:	d114      	bne.n	caae <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x21a>
    ca84:	2e00      	cmp	r6, #0
    ca86:	d034      	beq.n	caf2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x25e>
    ca88:	b2f1      	uxtb	r1, r6
    ca8a:	a809      	add	r0, sp, #36	; 0x24
    ca8c:	f002 f97d 	bl	ed8a <std::string::push_back(char)>
    ca90:	2600      	movs	r6, #0
    ca92:	a806      	add	r0, sp, #24
    ca94:	f7fd f935 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    ca98:	a914      	add	r1, sp, #80	; 0x50
    ca9a:	f7fe f9e7 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    ca9e:	b328      	cbz	r0, caec <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x258>
    caa0:	a806      	add	r0, sp, #24
    caa2:	f7fe f9bd 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    caa6:	b2c3      	uxtb	r3, r0
    caa8:	7c2a      	ldrb	r2, [r5, #16]
    caaa:	2a00      	cmp	r2, #0
    caac:	d1e6      	bne.n	ca7c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1e8>
    caae:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
    cab2:	429a      	cmp	r2, r3
    cab4:	d01f      	beq.n	caf6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x262>
    cab6:	9804      	ldr	r0, [sp, #16]
    cab8:	4619      	mov	r1, r3
    caba:	9a01      	ldr	r2, [sp, #4]
    cabc:	f006 fdc8 	bl	13650 <memchr>
    cac0:	b1d8      	cbz	r0, cafa <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x266>
    cac2:	9b04      	ldr	r3, [sp, #16]
    cac4:	1ac0      	subs	r0, r0, r3
    cac6:	9b03      	ldr	r3, [sp, #12]
    cac8:	280f      	cmp	r0, #15
    caca:	bfc8      	it	gt
    cacc:	3806      	subgt	r0, #6
    cace:	429c      	cmp	r4, r3
    cad0:	d809      	bhi.n	cae6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x252>
    cad2:	437c      	muls	r4, r7
    cad4:	9b02      	ldr	r3, [sp, #8]
    cad6:	3601      	adds	r6, #1
    cad8:	1a1b      	subs	r3, r3, r0
    cada:	429c      	cmp	r4, r3
    cadc:	bf88      	it	hi
    cade:	f04a 0a01 	orrhi.w	r10, r10, #1
    cae2:	4404      	add	r4, r0
    cae4:	e7d5      	b.n	ca92 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1fe>
    cae6:	f04f 0a01 	mov.w	r10, #1
    caea:	e7d2      	b.n	ca92 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x1fe>
    caec:	f04f 0901 	mov.w	r9, #1
    caf0:	e001      	b.n	caf6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x262>
    caf2:	2701      	movs	r7, #1
    caf4:	e002      	b.n	cafc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x268>
    caf6:	2700      	movs	r7, #0
    caf8:	e000      	b.n	cafc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x268>
    cafa:	4607      	mov	r7, r0
    cafc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    cafe:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    cb02:	b163      	cbz	r3, cb1e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x28a>
    cb04:	a809      	add	r0, sp, #36	; 0x24
    cb06:	b2f1      	uxtb	r1, r6
    cb08:	f002 f93f 	bl	ed8a <std::string::push_back(char)>
    cb0c:	68a8      	ldr	r0, [r5, #8]
    cb0e:	68e9      	ldr	r1, [r5, #12]
    cb10:	aa09      	add	r2, sp, #36	; 0x24
    cb12:	f003 fa68 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    cb16:	b910      	cbnz	r0, cb1e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x28a>
    cb18:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    cb1a:	2304      	movs	r3, #4
    cb1c:	6013      	str	r3, [r2, #0]
    cb1e:	b936      	cbnz	r6, cb2e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x29a>
    cb20:	f1b8 0f00 	cmp.w	r8, #0
    cb24:	d103      	bne.n	cb2e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x29a>
    cb26:	9b09      	ldr	r3, [sp, #36]	; 0x24
    cb28:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    cb2c:	b103      	cbz	r3, cb30 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x29c>
    cb2e:	b137      	cbz	r7, cb3e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2aa>
    cb30:	2300      	movs	r3, #0
    cb32:	9a18      	ldr	r2, [sp, #96]	; 0x60
    cb34:	6013      	str	r3, [r2, #0]
    cb36:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    cb38:	2304      	movs	r3, #4
    cb3a:	6013      	str	r3, [r2, #0]
    cb3c:	e008      	b.n	cb50 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2bc>
    cb3e:	f1ba 0f00 	cmp.w	r10, #0
    cb42:	d10f      	bne.n	cb64 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2d0>
    cb44:	f1bb 0f00 	cmp.w	r11, #0
    cb48:	d000      	beq.n	cb4c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2b8>
    cb4a:	4264      	negs	r4, r4
    cb4c:	9b18      	ldr	r3, [sp, #96]	; 0x60
    cb4e:	601c      	str	r4, [r3, #0]
    cb50:	f1b9 0f00 	cmp.w	r9, #0
    cb54:	d00f      	beq.n	cb76 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2e2>
    cb56:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    cb58:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    cb5a:	681b      	ldr	r3, [r3, #0]
    cb5c:	f043 0302 	orr.w	r3, r3, #2
    cb60:	6013      	str	r3, [r2, #0]
    cb62:	e008      	b.n	cb76 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2e2>
    cb64:	f1bb 0f00 	cmp.w	r11, #0
    cb68:	d002      	beq.n	cb70 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x2dc>
    cb6a:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    cb6e:	e7e0      	b.n	cb32 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x29e>
    cb70:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    cb74:	e7dd      	b.n	cb32 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const+0x29e>
    cb76:	ab06      	add	r3, sp, #24
    cb78:	e893 0003 	ldmia.w	r3, {r0, r1}
    cb7c:	9b05      	ldr	r3, [sp, #20]
    cb7e:	e883 0003 	stmia.w	r3, {r0, r1}
    cb82:	a809      	add	r0, sp, #36	; 0x24
    cb84:	f001 fec8 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    cb88:	9805      	ldr	r0, [sp, #20]
    cb8a:	b00b      	add	sp, #44	; 0x2c
    cb8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    cb90:	10000c70 	.word	0x10000c70

0000cb94 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const>:
    cb94:	b570      	push	{r4, r5, r6, lr}
    cb96:	4605      	mov	r5, r0
    cb98:	460e      	mov	r6, r1
    cb9a:	b088      	sub	sp, #32
    cb9c:	ac06      	add	r4, sp, #24
    cb9e:	e884 000c 	stmia.w	r4, {r2, r3}
    cba2:	ab0c      	add	r3, sp, #48	; 0x30
    cba4:	e893 0003 	ldmia.w	r3, {r0, r1}
    cba8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    cbaa:	e88d 0003 	stmia.w	sp, {r0, r1}
    cbae:	9302      	str	r3, [sp, #8]
    cbb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    cbb2:	4628      	mov	r0, r5
    cbb4:	9303      	str	r3, [sp, #12]
    cbb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
    cbb8:	4631      	mov	r1, r6
    cbba:	9304      	str	r3, [sp, #16]
    cbbc:	e894 000c 	ldmia.w	r4, {r2, r3}
    cbc0:	f7ff fe68 	bl	c894 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const>
    cbc4:	4628      	mov	r0, r5
    cbc6:	b008      	add	sp, #32
    cbc8:	bd70      	pop	{r4, r5, r6, pc}

0000cbca <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const>:
    cbca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    cbce:	b08f      	sub	sp, #60	; 0x3c
    cbd0:	ac0a      	add	r4, sp, #40	; 0x28
    cbd2:	e884 000c 	stmia.w	r4, {r2, r3}
    cbd6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    cbd8:	9006      	str	r0, [sp, #24]
    cbda:	68da      	ldr	r2, [r3, #12]
    cbdc:	460e      	mov	r6, r1
    cbde:	07d2      	lsls	r2, r2, #31
    cbe0:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
    cbe4:	d431      	bmi.n	cc4a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x80>
    cbe6:	f04f 32ff 	mov.w	r2, #4294967295
    cbea:	920d      	str	r2, [sp, #52]	; 0x34
    cbec:	aa18      	add	r2, sp, #96	; 0x60
    cbee:	e892 0003 	ldmia.w	r2, {r0, r1}
    cbf2:	e88d 0003 	stmia.w	sp, {r0, r1}
    cbf6:	9302      	str	r3, [sp, #8]
    cbf8:	ab0d      	add	r3, sp, #52	; 0x34
    cbfa:	ad08      	add	r5, sp, #32
    cbfc:	f8cd 800c 	str.w	r8, [sp, #12]
    cc00:	9304      	str	r3, [sp, #16]
    cc02:	4628      	mov	r0, r5
    cc04:	e894 000c 	ldmia.w	r4, {r2, r3}
    cc08:	4631      	mov	r1, r6
    cc0a:	f7ff fe43 	bl	c894 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const>
    cc0e:	e895 0003 	ldmia.w	r5, {r0, r1}
    cc12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    cc14:	e884 0003 	stmia.w	r4, {r0, r1}
    cc18:	2b01      	cmp	r3, #1
    cc1a:	d804      	bhi.n	cc26 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x5c>
    cc1c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    cc1e:	f003 0301 	and.w	r3, r3, #1
    cc22:	7013      	strb	r3, [r2, #0]
    cc24:	e0b1      	b.n	cd8a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1c0>
    cc26:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    cc28:	2301      	movs	r3, #1
    cc2a:	7013      	strb	r3, [r2, #0]
    cc2c:	2304      	movs	r3, #4
    cc2e:	f8c8 3000 	str.w	r3, [r8]
    cc32:	4620      	mov	r0, r4
    cc34:	a918      	add	r1, sp, #96	; 0x60
    cc36:	f7fe f906 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    cc3a:	2800      	cmp	r0, #0
    cc3c:	f000 80a5 	beq.w	cd8a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1c0>
    cc40:	f8d8 3000 	ldr.w	r3, [r8]
    cc44:	f043 0302 	orr.w	r3, r3, #2
    cc48:	e09d      	b.n	cd86 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1bc>
    cc4a:	f103 006c 	add.w	r0, r3, #108	; 0x6c
    cc4e:	f7fc fc45 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    cc52:	6a05      	ldr	r5, [r0, #32]
    cc54:	6987      	ldr	r7, [r0, #24]
    cc56:	f04f 0a01 	mov.w	r10, #1
    cc5a:	fab5 f585 	clz	r5, r5
    cc5e:	fab7 f787 	clz	r7, r7
    cc62:	4683      	mov	r11, r0
    cc64:	46d1      	mov	r9, r10
    cc66:	4656      	mov	r6, r10
    cc68:	096d      	lsrs	r5, r5, #5
    cc6a:	097f      	lsrs	r7, r7, #5
    cc6c:	f10a 3cff 	add.w	r12, r10, #4294967295
    cc70:	2d00      	cmp	r5, #0
    cc72:	d143      	bne.n	ccfc <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x132>
    cc74:	4620      	mov	r0, r4
    cc76:	a918      	add	r1, sp, #96	; 0x60
    cc78:	f8cd c01c 	str.w	r12, [sp, #28]
    cc7c:	f7fe f8e3 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    cc80:	f8dd c01c 	ldr.w	r12, [sp, #28]
    cc84:	2800      	cmp	r0, #0
    cc86:	d13d      	bne.n	cd04 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x13a>
    cc88:	4620      	mov	r0, r4
    cc8a:	f7fe f8c9 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    cc8e:	f8dd c01c 	ldr.w	r12, [sp, #28]
    cc92:	b2c0      	uxtb	r0, r0
    cc94:	b935      	cbnz	r5, cca4 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xda>
    cc96:	f8db 101c 	ldr.w	r1, [r11, #28]
    cc9a:	f811 600c 	ldrb.w	r6, [r1, r12]
    cc9e:	1a33      	subs	r3, r6, r0
    cca0:	425e      	negs	r6, r3
    cca2:	415e      	adcs	r6, r3
    cca4:	b90e      	cbnz	r6, ccaa <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xe0>
    cca6:	b117      	cbz	r7, ccae <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xe4>
    cca8:	e048      	b.n	cd3c <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x172>
    ccaa:	2f00      	cmp	r7, #0
    ccac:	d160      	bne.n	cd70 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1a6>
    ccae:	f8db 1014 	ldr.w	r1, [r11, #20]
    ccb2:	f811 100c 	ldrb.w	r1, [r1, r12]
    ccb6:	4281      	cmp	r1, r0
    ccb8:	d004      	beq.n	ccc4 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xfa>
    ccba:	bb35      	cbnz	r5, cd0a <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x140>
    ccbc:	2e00      	cmp	r6, #0
    ccbe:	d050      	beq.n	cd62 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x198>
    ccc0:	46a9      	mov	r9, r5
    ccc2:	e001      	b.n	ccc8 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xfe>
    ccc4:	f04f 0901 	mov.w	r9, #1
    ccc8:	4620      	mov	r0, r4
    ccca:	f7fd f81a 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    ccce:	b136      	cbz	r6, ccde <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x114>
    ccd0:	f8db 5020 	ldr.w	r5, [r11, #32]
    ccd4:	45aa      	cmp	r10, r5
    ccd6:	bf34      	ite	cc
    ccd8:	2500      	movcc	r5, #0
    ccda:	2501      	movcs	r5, #1
    ccdc:	e000      	b.n	cce0 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x116>
    ccde:	2501      	movs	r5, #1
    cce0:	f1b9 0f00 	cmp.w	r9, #0
    cce4:	d006      	beq.n	ccf4 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x12a>
    cce6:	f8db 7018 	ldr.w	r7, [r11, #24]
    ccea:	45ba      	cmp	r10, r7
    ccec:	bf34      	ite	cc
    ccee:	2700      	movcc	r7, #0
    ccf0:	2701      	movcs	r7, #1
    ccf2:	e000      	b.n	ccf6 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x12c>
    ccf4:	2701      	movs	r7, #1
    ccf6:	f10a 0a01 	add.w	r10, r10, #1
    ccfa:	e7b7      	b.n	cc6c <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xa2>
    ccfc:	2f00      	cmp	r7, #0
    ccfe:	d0b9      	beq.n	cc74 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xaa>
    cd00:	2200      	movs	r2, #0
    cd02:	e000      	b.n	cd06 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x13c>
    cd04:	2201      	movs	r2, #1
    cd06:	b91e      	cbnz	r6, cd10 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x146>
    cd08:	e014      	b.n	cd34 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x16a>
    cd0a:	b356      	cbz	r6, cd62 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x198>
    cd0c:	2200      	movs	r2, #0
    cd0e:	4691      	mov	r9, r2
    cd10:	f8db 1020 	ldr.w	r1, [r11, #32]
    cd14:	458c      	cmp	r12, r1
    cd16:	d10d      	bne.n	cd34 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x16a>
    cd18:	f1bc 0f00 	cmp.w	r12, #0
    cd1c:	d00a      	beq.n	cd34 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x16a>
    cd1e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    cd20:	2100      	movs	r1, #0
    cd22:	7019      	strb	r1, [r3, #0]
    cd24:	f1b9 0f00 	cmp.w	r9, #0
    cd28:	d016      	beq.n	cd58 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x18e>
    cd2a:	f8db 3018 	ldr.w	r3, [r11, #24]
    cd2e:	459c      	cmp	r12, r3
    cd30:	d112      	bne.n	cd58 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x18e>
    cd32:	e027      	b.n	cd84 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1ba>
    cd34:	f1b9 0f00 	cmp.w	r9, #0
    cd38:	d014      	beq.n	cd64 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x19a>
    cd3a:	e003      	b.n	cd44 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x17a>
    cd3c:	f1b9 0f00 	cmp.w	r9, #0
    cd40:	d01d      	beq.n	cd7e <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1b4>
    cd42:	4632      	mov	r2, r6
    cd44:	f8db 3018 	ldr.w	r3, [r11, #24]
    cd48:	459c      	cmp	r12, r3
    cd4a:	d10b      	bne.n	cd64 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x19a>
    cd4c:	f1bc 0f00 	cmp.w	r12, #0
    cd50:	d008      	beq.n	cd64 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x19a>
    cd52:	991c      	ldr	r1, [sp, #112]	; 0x70
    cd54:	2301      	movs	r3, #1
    cd56:	700b      	strb	r3, [r1, #0]
    cd58:	2a00      	cmp	r2, #0
    cd5a:	bf14      	ite	ne
    cd5c:	2302      	movne	r3, #2
    cd5e:	2300      	moveq	r3, #0
    cd60:	e011      	b.n	cd86 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1bc>
    cd62:	4632      	mov	r2, r6
    cd64:	991c      	ldr	r1, [sp, #112]	; 0x70
    cd66:	2300      	movs	r3, #0
    cd68:	700b      	strb	r3, [r1, #0]
    cd6a:	b15a      	cbz	r2, cd84 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1ba>
    cd6c:	2306      	movs	r3, #6
    cd6e:	e00a      	b.n	cd86 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x1bc>
    cd70:	f1b9 0f00 	cmp.w	r9, #0
    cd74:	d0a1      	beq.n	ccba <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0xf0>
    cd76:	4620      	mov	r0, r4
    cd78:	f7fc ffc3 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    cd7c:	e7a8      	b.n	ccd0 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const+0x106>
    cd7e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    cd80:	f883 9000 	strb.w	r9, [r3]
    cd84:	2304      	movs	r3, #4
    cd86:	f8c8 3000 	str.w	r3, [r8]
    cd8a:	9b06      	ldr	r3, [sp, #24]
    cd8c:	e894 0003 	ldmia.w	r4, {r0, r1}
    cd90:	e883 0003 	stmia.w	r3, {r0, r1}
    cd94:	4618      	mov	r0, r3
    cd96:	b00f      	add	sp, #60	; 0x3c
    cd98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000cd9c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const>:
    cd9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    cda0:	b08b      	sub	sp, #44	; 0x2c
    cda2:	9c16      	ldr	r4, [sp, #88]	; 0x58
    cda4:	9005      	str	r0, [sp, #20]
    cda6:	ae06      	add	r6, sp, #24
    cda8:	f104 006c 	add.w	r0, r4, #108	; 0x6c
    cdac:	e886 000c 	stmia.w	r6, {r2, r3}
    cdb0:	f7fc fb94 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    cdb4:	68e4      	ldr	r4, [r4, #12]
    cdb6:	4605      	mov	r5, r0
    cdb8:	f004 044a 	and.w	r4, r4, #74	; 0x4a
    cdbc:	2c40      	cmp	r4, #64	; 0x40
    cdbe:	d004      	beq.n	cdca <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2e>
    cdc0:	2c08      	cmp	r4, #8
    cdc2:	bf14      	ite	ne
    cdc4:	270a      	movne	r7, #10
    cdc6:	2710      	moveq	r7, #16
    cdc8:	e000      	b.n	cdcc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x30>
    cdca:	2708      	movs	r7, #8
    cdcc:	4630      	mov	r0, r6
    cdce:	a914      	add	r1, sp, #80	; 0x50
    cdd0:	f7fe f839 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    cdd4:	4681      	mov	r9, r0
    cdd6:	bb38      	cbnz	r0, ce28 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x8c>
    cdd8:	4630      	mov	r0, r6
    cdda:	f7fe f821 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    cdde:	f895 204a 	ldrb.w	r2, [r5, #74]	; 0x4a
    cde2:	fa5f fb80 	uxtb.w	r11, r0
    cde6:	ebcb 0202 	rsb	r2, r11, r2
    cdea:	4253      	negs	r3, r2
    cdec:	4153      	adcs	r3, r2
    cdee:	9301      	str	r3, [sp, #4]
    cdf0:	b91b      	cbnz	r3, cdfa <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x5e>
    cdf2:	f895 204b 	ldrb.w	r2, [r5, #75]	; 0x4b
    cdf6:	455a      	cmp	r2, r11
    cdf8:	d11d      	bne.n	ce36 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x9a>
    cdfa:	7c2a      	ldrb	r2, [r5, #16]
    cdfc:	b11a      	cbz	r2, ce06 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x6a>
    cdfe:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
    ce02:	4593      	cmp	r11, r2
    ce04:	d017      	beq.n	ce36 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x9a>
    ce06:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
    ce0a:	4593      	cmp	r11, r2
    ce0c:	d013      	beq.n	ce36 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x9a>
    ce0e:	4630      	mov	r0, r6
    ce10:	f7fc ff77 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    ce14:	a914      	add	r1, sp, #80	; 0x50
    ce16:	f7fe f829 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    ce1a:	b150      	cbz	r0, ce32 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x96>
    ce1c:	4630      	mov	r0, r6
    ce1e:	f7fd ffff 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    ce22:	fa5f fb80 	uxtb.w	r11, r0
    ce26:	e006      	b.n	ce36 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x9a>
    ce28:	f04f 0b00 	mov.w	r11, #0
    ce2c:	f8cd b004 	str.w	r11, [sp, #4]
    ce30:	e001      	b.n	ce36 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x9a>
    ce32:	f04f 0901 	mov.w	r9, #1
    ce36:	2600      	movs	r6, #0
    ce38:	46b0      	mov	r8, r6
    ce3a:	f1b9 0f00 	cmp.w	r9, #0
    ce3e:	d14e      	bne.n	cede <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x142>
    ce40:	7c2a      	ldrb	r2, [r5, #16]
    ce42:	b11a      	cbz	r2, ce4c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xb0>
    ce44:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
    ce48:	4593      	cmp	r11, r2
    ce4a:	d048      	beq.n	cede <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x142>
    ce4c:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
    ce50:	4593      	cmp	r11, r2
    ce52:	d044      	beq.n	cede <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x142>
    ce54:	f895 204e 	ldrb.w	r2, [r5, #78]	; 0x4e
    ce58:	455a      	cmp	r2, r11
    ce5a:	d10a      	bne.n	ce72 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xd6>
    ce5c:	f1b8 0f00 	cmp.w	r8, #0
    ce60:	d002      	beq.n	ce68 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xcc>
    ce62:	2f0a      	cmp	r7, #10
    ce64:	d108      	bne.n	ce78 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xdc>
    ce66:	e021      	b.n	ceac <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x110>
    ce68:	b1a4      	cbz	r4, ce94 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xf8>
    ce6a:	2f08      	cmp	r7, #8
    ce6c:	d016      	beq.n	ce9c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x100>
    ce6e:	3601      	adds	r6, #1
    ce70:	e015      	b.n	ce9e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x102>
    ce72:	f1b8 0f00 	cmp.w	r8, #0
    ce76:	d032      	beq.n	cede <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x142>
    ce78:	f895 204c 	ldrb.w	r2, [r5, #76]	; 0x4c
    ce7c:	455a      	cmp	r2, r11
    ce7e:	d003      	beq.n	ce88 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xec>
    ce80:	f895 204d 	ldrb.w	r2, [r5, #77]	; 0x4d
    ce84:	455a      	cmp	r2, r11
    ce86:	d128      	bne.n	ceda <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x13e>
    ce88:	b164      	cbz	r4, cea4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x108>
    ce8a:	2f10      	cmp	r7, #16
    ce8c:	d12a      	bne.n	cee4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x148>
    ce8e:	2600      	movs	r6, #0
    ce90:	46b0      	mov	r8, r6
    ce92:	e00f      	b.n	ceb4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x118>
    ce94:	4626      	mov	r6, r4
    ce96:	f04f 0801 	mov.w	r8, #1
    ce9a:	e00a      	b.n	ceb2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x116>
    ce9c:	4646      	mov	r6, r8
    ce9e:	f04f 0801 	mov.w	r8, #1
    cea2:	e007      	b.n	ceb4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x118>
    cea4:	4626      	mov	r6, r4
    cea6:	46a0      	mov	r8, r4
    cea8:	2710      	movs	r7, #16
    ceaa:	e003      	b.n	ceb4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x118>
    ceac:	2c00      	cmp	r4, #0
    ceae:	d1de      	bne.n	ce6e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xd2>
    ceb0:	4626      	mov	r6, r4
    ceb2:	2708      	movs	r7, #8
    ceb4:	a806      	add	r0, sp, #24
    ceb6:	f7fc ff24 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    ceba:	a914      	add	r1, sp, #80	; 0x50
    cebc:	f7fd ffd6 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    cec0:	b140      	cbz	r0, ced4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x138>
    cec2:	a806      	add	r0, sp, #24
    cec4:	f7fd ffac 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    cec8:	fa5f fb80 	uxtb.w	r11, r0
    cecc:	f1b8 0f00 	cmp.w	r8, #0
    ced0:	d1b6      	bne.n	ce40 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0xa4>
    ced2:	e004      	b.n	cede <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x142>
    ced4:	f04f 0901 	mov.w	r9, #1
    ced8:	e001      	b.n	cede <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x142>
    ceda:	f04f 0801 	mov.w	r8, #1
    cede:	2f10      	cmp	r7, #16
    cee0:	d102      	bne.n	cee8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x14c>
    cee2:	e003      	b.n	ceec <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x150>
    cee4:	f04f 0801 	mov.w	r8, #1
    cee8:	9702      	str	r7, [sp, #8]
    ceea:	e001      	b.n	cef0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x154>
    ceec:	2316      	movs	r3, #22
    ceee:	9302      	str	r3, [sp, #8]
    cef0:	4a65      	ldr	r2, [pc, #404]	; (d088 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2ec>)
    cef2:	9209      	str	r2, [sp, #36]	; 0x24
    cef4:	7c2a      	ldrb	r2, [r5, #16]
    cef6:	b11a      	cbz	r2, cf00 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x164>
    cef8:	a809      	add	r0, sp, #36	; 0x24
    cefa:	2120      	movs	r1, #32
    cefc:	f001 fe67 	bl	ebce <std::string::reserve(unsigned int)>
    cf00:	f64f 72ff 	movw	r2, #65535	; 0xffff
    cf04:	fb92 f3f7 	sdiv	r3, r2, r7
    cf08:	f895 4064 	ldrb.w	r4, [r5, #100]	; 0x64
    cf0c:	9303      	str	r3, [sp, #12]
    cf0e:	b924      	cbnz	r4, cf1a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x17e>
    cf10:	46a2      	mov	r10, r4
    cf12:	f1b9 0f00 	cmp.w	r9, #0
    cf16:	d025      	beq.n	cf64 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1c8>
    cf18:	e06f      	b.n	cffa <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x25e>
    cf1a:	f105 034e 	add.w	r3, r5, #78	; 0x4e
    cf1e:	2400      	movs	r4, #0
    cf20:	9304      	str	r3, [sp, #16]
    cf22:	46a2      	mov	r10, r4
    cf24:	f1b9 0f00 	cmp.w	r9, #0
    cf28:	d03d      	beq.n	cfa6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x20a>
    cf2a:	e066      	b.n	cffa <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x25e>
    cf2c:	9b03      	ldr	r3, [sp, #12]
    cf2e:	429c      	cmp	r4, r3
    cf30:	d81f      	bhi.n	cf72 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1d6>
    cf32:	437c      	muls	r4, r7
    cf34:	f5c0 437f 	rsb	r3, r0, #65280	; 0xff00
    cf38:	b2a4      	uxth	r4, r4
    cf3a:	33ff      	adds	r3, #255	; 0xff
    cf3c:	4420      	add	r0, r4
    cf3e:	429c      	cmp	r4, r3
    cf40:	bfc8      	it	gt
    cf42:	f04a 0a01 	orrgt.w	r10, r10, #1
    cf46:	3601      	adds	r6, #1
    cf48:	b284      	uxth	r4, r0
    cf4a:	a806      	add	r0, sp, #24
    cf4c:	f7fc fed9 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    cf50:	a914      	add	r1, sp, #80	; 0x50
    cf52:	f7fd ff8b 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    cf56:	2800      	cmp	r0, #0
    cf58:	d04a      	beq.n	cff0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x254>
    cf5a:	a806      	add	r0, sp, #24
    cf5c:	f7fd ff60 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    cf60:	fa5f fb80 	uxtb.w	r11, r0
    cf64:	9802      	ldr	r0, [sp, #8]
    cf66:	4659      	mov	r1, r11
    cf68:	f7fb ff78 	bl	8e5c <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]>
    cf6c:	1c43      	adds	r3, r0, #1
    cf6e:	d1dd      	bne.n	cf2c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x190>
    cf70:	e043      	b.n	cffa <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x25e>
    cf72:	f04f 0a01 	mov.w	r10, #1
    cf76:	e7e8      	b.n	cf4a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1ae>
    cf78:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
    cf7c:	455a      	cmp	r2, r11
    cf7e:	d115      	bne.n	cfac <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x210>
    cf80:	2e00      	cmp	r6, #0
    cf82:	d038      	beq.n	cff6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x25a>
    cf84:	b2f1      	uxtb	r1, r6
    cf86:	a809      	add	r0, sp, #36	; 0x24
    cf88:	f001 feff 	bl	ed8a <std::string::push_back(char)>
    cf8c:	2600      	movs	r6, #0
    cf8e:	a806      	add	r0, sp, #24
    cf90:	f7fc feb7 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    cf94:	a914      	add	r1, sp, #80	; 0x50
    cf96:	f7fd ff69 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    cf9a:	b348      	cbz	r0, cff0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x254>
    cf9c:	a806      	add	r0, sp, #24
    cf9e:	f7fd ff3f 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    cfa2:	fa5f fb80 	uxtb.w	r11, r0
    cfa6:	7c2a      	ldrb	r2, [r5, #16]
    cfa8:	2a00      	cmp	r2, #0
    cfaa:	d1e5      	bne.n	cf78 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1dc>
    cfac:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
    cfb0:	455a      	cmp	r2, r11
    cfb2:	d022      	beq.n	cffa <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x25e>
    cfb4:	9804      	ldr	r0, [sp, #16]
    cfb6:	4659      	mov	r1, r11
    cfb8:	9a02      	ldr	r2, [sp, #8]
    cfba:	f006 fb49 	bl	13650 <memchr>
    cfbe:	b1f0      	cbz	r0, cffe <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x262>
    cfc0:	9b04      	ldr	r3, [sp, #16]
    cfc2:	1ac0      	subs	r0, r0, r3
    cfc4:	9b03      	ldr	r3, [sp, #12]
    cfc6:	280f      	cmp	r0, #15
    cfc8:	bfc8      	it	gt
    cfca:	3806      	subgt	r0, #6
    cfcc:	429c      	cmp	r4, r3
    cfce:	d80c      	bhi.n	cfea <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x24e>
    cfd0:	437c      	muls	r4, r7
    cfd2:	f5c0 437f 	rsb	r3, r0, #65280	; 0xff00
    cfd6:	b2a4      	uxth	r4, r4
    cfd8:	33ff      	adds	r3, #255	; 0xff
    cfda:	4420      	add	r0, r4
    cfdc:	429c      	cmp	r4, r3
    cfde:	bfc8      	it	gt
    cfe0:	f04a 0a01 	orrgt.w	r10, r10, #1
    cfe4:	3601      	adds	r6, #1
    cfe6:	b284      	uxth	r4, r0
    cfe8:	e7d1      	b.n	cf8e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1f2>
    cfea:	f04f 0a01 	mov.w	r10, #1
    cfee:	e7ce      	b.n	cf8e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x1f2>
    cff0:	f04f 0901 	mov.w	r9, #1
    cff4:	e001      	b.n	cffa <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x25e>
    cff6:	2701      	movs	r7, #1
    cff8:	e002      	b.n	d000 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x264>
    cffa:	2700      	movs	r7, #0
    cffc:	e000      	b.n	d000 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x264>
    cffe:	4607      	mov	r7, r0
    d000:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d002:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    d006:	b163      	cbz	r3, d022 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x286>
    d008:	a809      	add	r0, sp, #36	; 0x24
    d00a:	b2f1      	uxtb	r1, r6
    d00c:	f001 febd 	bl	ed8a <std::string::push_back(char)>
    d010:	68a8      	ldr	r0, [r5, #8]
    d012:	68e9      	ldr	r1, [r5, #12]
    d014:	aa09      	add	r2, sp, #36	; 0x24
    d016:	f002 ffe6 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    d01a:	b910      	cbnz	r0, d022 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x286>
    d01c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    d01e:	2304      	movs	r3, #4
    d020:	6013      	str	r3, [r2, #0]
    d022:	b936      	cbnz	r6, d032 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x296>
    d024:	f1b8 0f00 	cmp.w	r8, #0
    d028:	d103      	bne.n	d032 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x296>
    d02a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d02c:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    d030:	b103      	cbz	r3, d034 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x298>
    d032:	b17f      	cbz	r7, d054 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2b8>
    d034:	2300      	movs	r3, #0
    d036:	9a18      	ldr	r2, [sp, #96]	; 0x60
    d038:	8013      	strh	r3, [r2, #0]
    d03a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    d03c:	2304      	movs	r3, #4
    d03e:	6013      	str	r3, [r2, #0]
    d040:	f1b9 0f00 	cmp.w	r9, #0
    d044:	d013      	beq.n	d06e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2d2>
    d046:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    d048:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    d04a:	681b      	ldr	r3, [r3, #0]
    d04c:	f043 0302 	orr.w	r3, r3, #2
    d050:	6013      	str	r3, [r2, #0]
    d052:	e00c      	b.n	d06e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2d2>
    d054:	f1ba 0f00 	cmp.w	r10, #0
    d058:	d002      	beq.n	d060 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2c4>
    d05a:	f64f 73ff 	movw	r3, #65535	; 0xffff
    d05e:	e7ea      	b.n	d036 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x29a>
    d060:	9b01      	ldr	r3, [sp, #4]
    d062:	b10b      	cbz	r3, d068 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2cc>
    d064:	4264      	negs	r4, r4
    d066:	b2a4      	uxth	r4, r4
    d068:	9b18      	ldr	r3, [sp, #96]	; 0x60
    d06a:	801c      	strh	r4, [r3, #0]
    d06c:	e7e8      	b.n	d040 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const+0x2a4>
    d06e:	ab06      	add	r3, sp, #24
    d070:	e893 0003 	ldmia.w	r3, {r0, r1}
    d074:	9b05      	ldr	r3, [sp, #20]
    d076:	e883 0003 	stmia.w	r3, {r0, r1}
    d07a:	a809      	add	r0, sp, #36	; 0x24
    d07c:	f001 fc4c 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    d080:	9805      	ldr	r0, [sp, #20]
    d082:	b00b      	add	sp, #44	; 0x2c
    d084:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    d088:	10000c70 	.word	0x10000c70

0000d08c <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const>:
    d08c:	b570      	push	{r4, r5, r6, lr}
    d08e:	4605      	mov	r5, r0
    d090:	460e      	mov	r6, r1
    d092:	b088      	sub	sp, #32
    d094:	ac06      	add	r4, sp, #24
    d096:	e884 000c 	stmia.w	r4, {r2, r3}
    d09a:	ab0c      	add	r3, sp, #48	; 0x30
    d09c:	e893 0003 	ldmia.w	r3, {r0, r1}
    d0a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    d0a2:	e88d 0003 	stmia.w	sp, {r0, r1}
    d0a6:	9302      	str	r3, [sp, #8]
    d0a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    d0aa:	4628      	mov	r0, r5
    d0ac:	9303      	str	r3, [sp, #12]
    d0ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
    d0b0:	4631      	mov	r1, r6
    d0b2:	9304      	str	r3, [sp, #16]
    d0b4:	e894 000c 	ldmia.w	r4, {r2, r3}
    d0b8:	f7ff fe70 	bl	cd9c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const>
    d0bc:	4628      	mov	r0, r5
    d0be:	b008      	add	sp, #32
    d0c0:	bd70      	pop	{r4, r5, r6, pc}
	...

0000d0c4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const>:
    d0c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    d0c8:	b08b      	sub	sp, #44	; 0x2c
    d0ca:	9c16      	ldr	r4, [sp, #88]	; 0x58
    d0cc:	9005      	str	r0, [sp, #20]
    d0ce:	ae06      	add	r6, sp, #24
    d0d0:	f104 006c 	add.w	r0, r4, #108	; 0x6c
    d0d4:	e886 000c 	stmia.w	r6, {r2, r3}
    d0d8:	f7fc fa00 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    d0dc:	68e4      	ldr	r4, [r4, #12]
    d0de:	4605      	mov	r5, r0
    d0e0:	f004 044a 	and.w	r4, r4, #74	; 0x4a
    d0e4:	2c40      	cmp	r4, #64	; 0x40
    d0e6:	d004      	beq.n	d0f2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2e>
    d0e8:	2c08      	cmp	r4, #8
    d0ea:	bf14      	ite	ne
    d0ec:	270a      	movne	r7, #10
    d0ee:	2710      	moveq	r7, #16
    d0f0:	e000      	b.n	d0f4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x30>
    d0f2:	2708      	movs	r7, #8
    d0f4:	4630      	mov	r0, r6
    d0f6:	a914      	add	r1, sp, #80	; 0x50
    d0f8:	f7fd fea5 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    d0fc:	4681      	mov	r9, r0
    d0fe:	bb38      	cbnz	r0, d150 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x8c>
    d100:	4630      	mov	r0, r6
    d102:	f7fd fe8d 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d106:	f895 204a 	ldrb.w	r2, [r5, #74]	; 0x4a
    d10a:	fa5f fb80 	uxtb.w	r11, r0
    d10e:	ebcb 0202 	rsb	r2, r11, r2
    d112:	4253      	negs	r3, r2
    d114:	4153      	adcs	r3, r2
    d116:	9301      	str	r3, [sp, #4]
    d118:	b91b      	cbnz	r3, d122 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x5e>
    d11a:	f895 204b 	ldrb.w	r2, [r5, #75]	; 0x4b
    d11e:	455a      	cmp	r2, r11
    d120:	d11d      	bne.n	d15e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x9a>
    d122:	7c2a      	ldrb	r2, [r5, #16]
    d124:	b11a      	cbz	r2, d12e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x6a>
    d126:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
    d12a:	4593      	cmp	r11, r2
    d12c:	d017      	beq.n	d15e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x9a>
    d12e:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
    d132:	4593      	cmp	r11, r2
    d134:	d013      	beq.n	d15e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x9a>
    d136:	4630      	mov	r0, r6
    d138:	f7fc fde3 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    d13c:	a914      	add	r1, sp, #80	; 0x50
    d13e:	f7fd fe95 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    d142:	b150      	cbz	r0, d15a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x96>
    d144:	4630      	mov	r0, r6
    d146:	f7fd fe6b 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d14a:	fa5f fb80 	uxtb.w	r11, r0
    d14e:	e006      	b.n	d15e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x9a>
    d150:	f04f 0b00 	mov.w	r11, #0
    d154:	f8cd b004 	str.w	r11, [sp, #4]
    d158:	e001      	b.n	d15e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x9a>
    d15a:	f04f 0901 	mov.w	r9, #1
    d15e:	2600      	movs	r6, #0
    d160:	46b0      	mov	r8, r6
    d162:	f1b9 0f00 	cmp.w	r9, #0
    d166:	d14e      	bne.n	d206 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x142>
    d168:	7c2a      	ldrb	r2, [r5, #16]
    d16a:	b11a      	cbz	r2, d174 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xb0>
    d16c:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
    d170:	4593      	cmp	r11, r2
    d172:	d048      	beq.n	d206 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x142>
    d174:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
    d178:	4593      	cmp	r11, r2
    d17a:	d044      	beq.n	d206 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x142>
    d17c:	f895 204e 	ldrb.w	r2, [r5, #78]	; 0x4e
    d180:	455a      	cmp	r2, r11
    d182:	d10a      	bne.n	d19a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xd6>
    d184:	f1b8 0f00 	cmp.w	r8, #0
    d188:	d002      	beq.n	d190 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xcc>
    d18a:	2f0a      	cmp	r7, #10
    d18c:	d108      	bne.n	d1a0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xdc>
    d18e:	e021      	b.n	d1d4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x110>
    d190:	b1a4      	cbz	r4, d1bc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xf8>
    d192:	2f08      	cmp	r7, #8
    d194:	d016      	beq.n	d1c4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x100>
    d196:	3601      	adds	r6, #1
    d198:	e015      	b.n	d1c6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x102>
    d19a:	f1b8 0f00 	cmp.w	r8, #0
    d19e:	d032      	beq.n	d206 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x142>
    d1a0:	f895 204c 	ldrb.w	r2, [r5, #76]	; 0x4c
    d1a4:	455a      	cmp	r2, r11
    d1a6:	d003      	beq.n	d1b0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xec>
    d1a8:	f895 204d 	ldrb.w	r2, [r5, #77]	; 0x4d
    d1ac:	455a      	cmp	r2, r11
    d1ae:	d128      	bne.n	d202 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x13e>
    d1b0:	b164      	cbz	r4, d1cc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x108>
    d1b2:	2f10      	cmp	r7, #16
    d1b4:	d12a      	bne.n	d20c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x148>
    d1b6:	2600      	movs	r6, #0
    d1b8:	46b0      	mov	r8, r6
    d1ba:	e00f      	b.n	d1dc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x118>
    d1bc:	4626      	mov	r6, r4
    d1be:	f04f 0801 	mov.w	r8, #1
    d1c2:	e00a      	b.n	d1da <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x116>
    d1c4:	4646      	mov	r6, r8
    d1c6:	f04f 0801 	mov.w	r8, #1
    d1ca:	e007      	b.n	d1dc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x118>
    d1cc:	4626      	mov	r6, r4
    d1ce:	46a0      	mov	r8, r4
    d1d0:	2710      	movs	r7, #16
    d1d2:	e003      	b.n	d1dc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x118>
    d1d4:	2c00      	cmp	r4, #0
    d1d6:	d1de      	bne.n	d196 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xd2>
    d1d8:	4626      	mov	r6, r4
    d1da:	2708      	movs	r7, #8
    d1dc:	a806      	add	r0, sp, #24
    d1de:	f7fc fd90 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    d1e2:	a914      	add	r1, sp, #80	; 0x50
    d1e4:	f7fd fe42 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    d1e8:	b140      	cbz	r0, d1fc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x138>
    d1ea:	a806      	add	r0, sp, #24
    d1ec:	f7fd fe18 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d1f0:	fa5f fb80 	uxtb.w	r11, r0
    d1f4:	f1b8 0f00 	cmp.w	r8, #0
    d1f8:	d1b6      	bne.n	d168 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0xa4>
    d1fa:	e004      	b.n	d206 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x142>
    d1fc:	f04f 0901 	mov.w	r9, #1
    d200:	e001      	b.n	d206 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x142>
    d202:	f04f 0801 	mov.w	r8, #1
    d206:	2f10      	cmp	r7, #16
    d208:	d102      	bne.n	d210 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x14c>
    d20a:	e003      	b.n	d214 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x150>
    d20c:	f04f 0801 	mov.w	r8, #1
    d210:	9702      	str	r7, [sp, #8]
    d212:	e001      	b.n	d218 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x154>
    d214:	2316      	movs	r3, #22
    d216:	9302      	str	r3, [sp, #8]
    d218:	4a61      	ldr	r2, [pc, #388]	; (d3a0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2dc>)
    d21a:	9209      	str	r2, [sp, #36]	; 0x24
    d21c:	7c2a      	ldrb	r2, [r5, #16]
    d21e:	b11a      	cbz	r2, d228 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x164>
    d220:	a809      	add	r0, sp, #36	; 0x24
    d222:	2120      	movs	r1, #32
    d224:	f001 fcd3 	bl	ebce <std::string::reserve(unsigned int)>
    d228:	f04f 32ff 	mov.w	r2, #4294967295
    d22c:	fbb2 f3f7 	udiv	r3, r2, r7
    d230:	f895 4064 	ldrb.w	r4, [r5, #100]	; 0x64
    d234:	9303      	str	r3, [sp, #12]
    d236:	b924      	cbnz	r4, d242 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x17e>
    d238:	46a2      	mov	r10, r4
    d23a:	f1b9 0f00 	cmp.w	r9, #0
    d23e:	d021      	beq.n	d284 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1c0>
    d240:	e067      	b.n	d312 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x24e>
    d242:	f105 034e 	add.w	r3, r5, #78	; 0x4e
    d246:	2400      	movs	r4, #0
    d248:	9304      	str	r3, [sp, #16]
    d24a:	46a2      	mov	r10, r4
    d24c:	f1b9 0f00 	cmp.w	r9, #0
    d250:	d039      	beq.n	d2c6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x202>
    d252:	e05e      	b.n	d312 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x24e>
    d254:	9b03      	ldr	r3, [sp, #12]
    d256:	429c      	cmp	r4, r3
    d258:	d81b      	bhi.n	d292 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1ce>
    d25a:	43c3      	mvns	r3, r0
    d25c:	437c      	muls	r4, r7
    d25e:	3601      	adds	r6, #1
    d260:	429c      	cmp	r4, r3
    d262:	bf88      	it	hi
    d264:	f04a 0a01 	orrhi.w	r10, r10, #1
    d268:	4404      	add	r4, r0
    d26a:	a806      	add	r0, sp, #24
    d26c:	f7fc fd49 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    d270:	a914      	add	r1, sp, #80	; 0x50
    d272:	f7fd fdfb 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    d276:	2800      	cmp	r0, #0
    d278:	d046      	beq.n	d308 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x244>
    d27a:	a806      	add	r0, sp, #24
    d27c:	f7fd fdd0 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d280:	fa5f fb80 	uxtb.w	r11, r0
    d284:	9802      	ldr	r0, [sp, #8]
    d286:	4659      	mov	r1, r11
    d288:	f7fb fde8 	bl	8e5c <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]>
    d28c:	1c43      	adds	r3, r0, #1
    d28e:	d1e1      	bne.n	d254 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x190>
    d290:	e03f      	b.n	d312 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x24e>
    d292:	f04f 0a01 	mov.w	r10, #1
    d296:	e7e8      	b.n	d26a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1a6>
    d298:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
    d29c:	455a      	cmp	r2, r11
    d29e:	d115      	bne.n	d2cc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x208>
    d2a0:	2e00      	cmp	r6, #0
    d2a2:	d034      	beq.n	d30e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x24a>
    d2a4:	b2f1      	uxtb	r1, r6
    d2a6:	a809      	add	r0, sp, #36	; 0x24
    d2a8:	f001 fd6f 	bl	ed8a <std::string::push_back(char)>
    d2ac:	2600      	movs	r6, #0
    d2ae:	a806      	add	r0, sp, #24
    d2b0:	f7fc fd27 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    d2b4:	a914      	add	r1, sp, #80	; 0x50
    d2b6:	f7fd fdd9 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    d2ba:	b328      	cbz	r0, d308 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x244>
    d2bc:	a806      	add	r0, sp, #24
    d2be:	f7fd fdaf 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d2c2:	fa5f fb80 	uxtb.w	r11, r0
    d2c6:	7c2a      	ldrb	r2, [r5, #16]
    d2c8:	2a00      	cmp	r2, #0
    d2ca:	d1e5      	bne.n	d298 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1d4>
    d2cc:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
    d2d0:	455a      	cmp	r2, r11
    d2d2:	d01e      	beq.n	d312 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x24e>
    d2d4:	9804      	ldr	r0, [sp, #16]
    d2d6:	4659      	mov	r1, r11
    d2d8:	9a02      	ldr	r2, [sp, #8]
    d2da:	f006 f9b9 	bl	13650 <memchr>
    d2de:	b1d0      	cbz	r0, d316 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x252>
    d2e0:	9b04      	ldr	r3, [sp, #16]
    d2e2:	1ac0      	subs	r0, r0, r3
    d2e4:	9b03      	ldr	r3, [sp, #12]
    d2e6:	280f      	cmp	r0, #15
    d2e8:	bfc8      	it	gt
    d2ea:	3806      	subgt	r0, #6
    d2ec:	429c      	cmp	r4, r3
    d2ee:	d808      	bhi.n	d302 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x23e>
    d2f0:	43c3      	mvns	r3, r0
    d2f2:	437c      	muls	r4, r7
    d2f4:	3601      	adds	r6, #1
    d2f6:	429c      	cmp	r4, r3
    d2f8:	bf88      	it	hi
    d2fa:	f04a 0a01 	orrhi.w	r10, r10, #1
    d2fe:	4404      	add	r4, r0
    d300:	e7d5      	b.n	d2ae <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1ea>
    d302:	f04f 0a01 	mov.w	r10, #1
    d306:	e7d2      	b.n	d2ae <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x1ea>
    d308:	f04f 0901 	mov.w	r9, #1
    d30c:	e001      	b.n	d312 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x24e>
    d30e:	2701      	movs	r7, #1
    d310:	e002      	b.n	d318 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x254>
    d312:	2700      	movs	r7, #0
    d314:	e000      	b.n	d318 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x254>
    d316:	4607      	mov	r7, r0
    d318:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d31a:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    d31e:	b163      	cbz	r3, d33a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x276>
    d320:	a809      	add	r0, sp, #36	; 0x24
    d322:	b2f1      	uxtb	r1, r6
    d324:	f001 fd31 	bl	ed8a <std::string::push_back(char)>
    d328:	68a8      	ldr	r0, [r5, #8]
    d32a:	68e9      	ldr	r1, [r5, #12]
    d32c:	aa09      	add	r2, sp, #36	; 0x24
    d32e:	f002 fe5a 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    d332:	b910      	cbnz	r0, d33a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x276>
    d334:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    d336:	2304      	movs	r3, #4
    d338:	6013      	str	r3, [r2, #0]
    d33a:	b936      	cbnz	r6, d34a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x286>
    d33c:	f1b8 0f00 	cmp.w	r8, #0
    d340:	d103      	bne.n	d34a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x286>
    d342:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d344:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    d348:	b103      	cbz	r3, d34c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x288>
    d34a:	b17f      	cbz	r7, d36c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2a8>
    d34c:	2300      	movs	r3, #0
    d34e:	9a18      	ldr	r2, [sp, #96]	; 0x60
    d350:	6013      	str	r3, [r2, #0]
    d352:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    d354:	2304      	movs	r3, #4
    d356:	6013      	str	r3, [r2, #0]
    d358:	f1b9 0f00 	cmp.w	r9, #0
    d35c:	d012      	beq.n	d384 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2c0>
    d35e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    d360:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    d362:	681b      	ldr	r3, [r3, #0]
    d364:	f043 0302 	orr.w	r3, r3, #2
    d368:	6013      	str	r3, [r2, #0]
    d36a:	e00b      	b.n	d384 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2c0>
    d36c:	f1ba 0f00 	cmp.w	r10, #0
    d370:	d002      	beq.n	d378 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2b4>
    d372:	f04f 33ff 	mov.w	r3, #4294967295
    d376:	e7ea      	b.n	d34e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x28a>
    d378:	9b01      	ldr	r3, [sp, #4]
    d37a:	b103      	cbz	r3, d37e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x2ba>
    d37c:	4264      	negs	r4, r4
    d37e:	9b18      	ldr	r3, [sp, #96]	; 0x60
    d380:	601c      	str	r4, [r3, #0]
    d382:	e7e9      	b.n	d358 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const+0x294>
    d384:	ab06      	add	r3, sp, #24
    d386:	e893 0003 	ldmia.w	r3, {r0, r1}
    d38a:	9b05      	ldr	r3, [sp, #20]
    d38c:	e883 0003 	stmia.w	r3, {r0, r1}
    d390:	a809      	add	r0, sp, #36	; 0x24
    d392:	f001 fac1 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    d396:	9805      	ldr	r0, [sp, #20]
    d398:	b00b      	add	sp, #44	; 0x2c
    d39a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    d39e:	bf00      	nop
    d3a0:	10000c70 	.word	0x10000c70

0000d3a4 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const>:
    d3a4:	b570      	push	{r4, r5, r6, lr}
    d3a6:	4605      	mov	r5, r0
    d3a8:	460e      	mov	r6, r1
    d3aa:	b088      	sub	sp, #32
    d3ac:	ac06      	add	r4, sp, #24
    d3ae:	e884 000c 	stmia.w	r4, {r2, r3}
    d3b2:	ab0c      	add	r3, sp, #48	; 0x30
    d3b4:	e893 0003 	ldmia.w	r3, {r0, r1}
    d3b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    d3ba:	e88d 0003 	stmia.w	sp, {r0, r1}
    d3be:	9302      	str	r3, [sp, #8]
    d3c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    d3c2:	4628      	mov	r0, r5
    d3c4:	9303      	str	r3, [sp, #12]
    d3c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
    d3c8:	4631      	mov	r1, r6
    d3ca:	9304      	str	r3, [sp, #16]
    d3cc:	e894 000c 	ldmia.w	r4, {r2, r3}
    d3d0:	f7ff fe78 	bl	d0c4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const>
    d3d4:	4628      	mov	r0, r5
    d3d6:	b008      	add	sp, #32
    d3d8:	bd70      	pop	{r4, r5, r6, pc}
	...

0000d3dc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const>:
    d3dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    d3e0:	b08b      	sub	sp, #44	; 0x2c
    d3e2:	9c16      	ldr	r4, [sp, #88]	; 0x58
    d3e4:	9005      	str	r0, [sp, #20]
    d3e6:	ae06      	add	r6, sp, #24
    d3e8:	f104 006c 	add.w	r0, r4, #108	; 0x6c
    d3ec:	e886 000c 	stmia.w	r6, {r2, r3}
    d3f0:	f7fc f874 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    d3f4:	68e4      	ldr	r4, [r4, #12]
    d3f6:	4605      	mov	r5, r0
    d3f8:	f004 044a 	and.w	r4, r4, #74	; 0x4a
    d3fc:	2c40      	cmp	r4, #64	; 0x40
    d3fe:	d004      	beq.n	d40a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2e>
    d400:	2c08      	cmp	r4, #8
    d402:	bf14      	ite	ne
    d404:	270a      	movne	r7, #10
    d406:	2710      	moveq	r7, #16
    d408:	e000      	b.n	d40c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x30>
    d40a:	2708      	movs	r7, #8
    d40c:	4630      	mov	r0, r6
    d40e:	a914      	add	r1, sp, #80	; 0x50
    d410:	f7fd fd19 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    d414:	4681      	mov	r9, r0
    d416:	bb38      	cbnz	r0, d468 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x8c>
    d418:	4630      	mov	r0, r6
    d41a:	f7fd fd01 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d41e:	f895 204a 	ldrb.w	r2, [r5, #74]	; 0x4a
    d422:	fa5f fb80 	uxtb.w	r11, r0
    d426:	ebcb 0202 	rsb	r2, r11, r2
    d42a:	4253      	negs	r3, r2
    d42c:	4153      	adcs	r3, r2
    d42e:	9301      	str	r3, [sp, #4]
    d430:	b91b      	cbnz	r3, d43a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x5e>
    d432:	f895 204b 	ldrb.w	r2, [r5, #75]	; 0x4b
    d436:	455a      	cmp	r2, r11
    d438:	d11d      	bne.n	d476 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x9a>
    d43a:	7c2a      	ldrb	r2, [r5, #16]
    d43c:	b11a      	cbz	r2, d446 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x6a>
    d43e:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
    d442:	4593      	cmp	r11, r2
    d444:	d017      	beq.n	d476 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x9a>
    d446:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
    d44a:	4593      	cmp	r11, r2
    d44c:	d013      	beq.n	d476 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x9a>
    d44e:	4630      	mov	r0, r6
    d450:	f7fc fc57 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    d454:	a914      	add	r1, sp, #80	; 0x50
    d456:	f7fd fd09 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    d45a:	b150      	cbz	r0, d472 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x96>
    d45c:	4630      	mov	r0, r6
    d45e:	f7fd fcdf 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d462:	fa5f fb80 	uxtb.w	r11, r0
    d466:	e006      	b.n	d476 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x9a>
    d468:	f04f 0b00 	mov.w	r11, #0
    d46c:	f8cd b004 	str.w	r11, [sp, #4]
    d470:	e001      	b.n	d476 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x9a>
    d472:	f04f 0901 	mov.w	r9, #1
    d476:	2600      	movs	r6, #0
    d478:	46b0      	mov	r8, r6
    d47a:	f1b9 0f00 	cmp.w	r9, #0
    d47e:	d14e      	bne.n	d51e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x142>
    d480:	7c2a      	ldrb	r2, [r5, #16]
    d482:	b11a      	cbz	r2, d48c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xb0>
    d484:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
    d488:	4593      	cmp	r11, r2
    d48a:	d048      	beq.n	d51e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x142>
    d48c:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
    d490:	4593      	cmp	r11, r2
    d492:	d044      	beq.n	d51e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x142>
    d494:	f895 204e 	ldrb.w	r2, [r5, #78]	; 0x4e
    d498:	455a      	cmp	r2, r11
    d49a:	d10a      	bne.n	d4b2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xd6>
    d49c:	f1b8 0f00 	cmp.w	r8, #0
    d4a0:	d002      	beq.n	d4a8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xcc>
    d4a2:	2f0a      	cmp	r7, #10
    d4a4:	d108      	bne.n	d4b8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xdc>
    d4a6:	e021      	b.n	d4ec <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x110>
    d4a8:	b1a4      	cbz	r4, d4d4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xf8>
    d4aa:	2f08      	cmp	r7, #8
    d4ac:	d016      	beq.n	d4dc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x100>
    d4ae:	3601      	adds	r6, #1
    d4b0:	e015      	b.n	d4de <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x102>
    d4b2:	f1b8 0f00 	cmp.w	r8, #0
    d4b6:	d032      	beq.n	d51e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x142>
    d4b8:	f895 204c 	ldrb.w	r2, [r5, #76]	; 0x4c
    d4bc:	455a      	cmp	r2, r11
    d4be:	d003      	beq.n	d4c8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xec>
    d4c0:	f895 204d 	ldrb.w	r2, [r5, #77]	; 0x4d
    d4c4:	455a      	cmp	r2, r11
    d4c6:	d128      	bne.n	d51a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x13e>
    d4c8:	b164      	cbz	r4, d4e4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x108>
    d4ca:	2f10      	cmp	r7, #16
    d4cc:	d12a      	bne.n	d524 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x148>
    d4ce:	2600      	movs	r6, #0
    d4d0:	46b0      	mov	r8, r6
    d4d2:	e00f      	b.n	d4f4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x118>
    d4d4:	4626      	mov	r6, r4
    d4d6:	f04f 0801 	mov.w	r8, #1
    d4da:	e00a      	b.n	d4f2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x116>
    d4dc:	4646      	mov	r6, r8
    d4de:	f04f 0801 	mov.w	r8, #1
    d4e2:	e007      	b.n	d4f4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x118>
    d4e4:	4626      	mov	r6, r4
    d4e6:	46a0      	mov	r8, r4
    d4e8:	2710      	movs	r7, #16
    d4ea:	e003      	b.n	d4f4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x118>
    d4ec:	2c00      	cmp	r4, #0
    d4ee:	d1de      	bne.n	d4ae <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xd2>
    d4f0:	4626      	mov	r6, r4
    d4f2:	2708      	movs	r7, #8
    d4f4:	a806      	add	r0, sp, #24
    d4f6:	f7fc fc04 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    d4fa:	a914      	add	r1, sp, #80	; 0x50
    d4fc:	f7fd fcb6 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    d500:	b140      	cbz	r0, d514 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x138>
    d502:	a806      	add	r0, sp, #24
    d504:	f7fd fc8c 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d508:	fa5f fb80 	uxtb.w	r11, r0
    d50c:	f1b8 0f00 	cmp.w	r8, #0
    d510:	d1b6      	bne.n	d480 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0xa4>
    d512:	e004      	b.n	d51e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x142>
    d514:	f04f 0901 	mov.w	r9, #1
    d518:	e001      	b.n	d51e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x142>
    d51a:	f04f 0801 	mov.w	r8, #1
    d51e:	2f10      	cmp	r7, #16
    d520:	d102      	bne.n	d528 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x14c>
    d522:	e003      	b.n	d52c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x150>
    d524:	f04f 0801 	mov.w	r8, #1
    d528:	9702      	str	r7, [sp, #8]
    d52a:	e001      	b.n	d530 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x154>
    d52c:	2316      	movs	r3, #22
    d52e:	9302      	str	r3, [sp, #8]
    d530:	4a61      	ldr	r2, [pc, #388]	; (d6b8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2dc>)
    d532:	9209      	str	r2, [sp, #36]	; 0x24
    d534:	7c2a      	ldrb	r2, [r5, #16]
    d536:	b11a      	cbz	r2, d540 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x164>
    d538:	a809      	add	r0, sp, #36	; 0x24
    d53a:	2120      	movs	r1, #32
    d53c:	f001 fb47 	bl	ebce <std::string::reserve(unsigned int)>
    d540:	f04f 32ff 	mov.w	r2, #4294967295
    d544:	fbb2 f3f7 	udiv	r3, r2, r7
    d548:	f895 4064 	ldrb.w	r4, [r5, #100]	; 0x64
    d54c:	9303      	str	r3, [sp, #12]
    d54e:	b924      	cbnz	r4, d55a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x17e>
    d550:	46a2      	mov	r10, r4
    d552:	f1b9 0f00 	cmp.w	r9, #0
    d556:	d021      	beq.n	d59c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1c0>
    d558:	e067      	b.n	d62a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x24e>
    d55a:	f105 034e 	add.w	r3, r5, #78	; 0x4e
    d55e:	2400      	movs	r4, #0
    d560:	9304      	str	r3, [sp, #16]
    d562:	46a2      	mov	r10, r4
    d564:	f1b9 0f00 	cmp.w	r9, #0
    d568:	d039      	beq.n	d5de <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x202>
    d56a:	e05e      	b.n	d62a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x24e>
    d56c:	9b03      	ldr	r3, [sp, #12]
    d56e:	429c      	cmp	r4, r3
    d570:	d81b      	bhi.n	d5aa <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1ce>
    d572:	43c3      	mvns	r3, r0
    d574:	437c      	muls	r4, r7
    d576:	3601      	adds	r6, #1
    d578:	429c      	cmp	r4, r3
    d57a:	bf88      	it	hi
    d57c:	f04a 0a01 	orrhi.w	r10, r10, #1
    d580:	4404      	add	r4, r0
    d582:	a806      	add	r0, sp, #24
    d584:	f7fc fbbd 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    d588:	a914      	add	r1, sp, #80	; 0x50
    d58a:	f7fd fc6f 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    d58e:	2800      	cmp	r0, #0
    d590:	d046      	beq.n	d620 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x244>
    d592:	a806      	add	r0, sp, #24
    d594:	f7fd fc44 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d598:	fa5f fb80 	uxtb.w	r11, r0
    d59c:	9802      	ldr	r0, [sp, #8]
    d59e:	4659      	mov	r1, r11
    d5a0:	f7fb fc5c 	bl	8e5c <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]>
    d5a4:	1c43      	adds	r3, r0, #1
    d5a6:	d1e1      	bne.n	d56c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x190>
    d5a8:	e03f      	b.n	d62a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x24e>
    d5aa:	f04f 0a01 	mov.w	r10, #1
    d5ae:	e7e8      	b.n	d582 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1a6>
    d5b0:	f895 2025 	ldrb.w	r2, [r5, #37]	; 0x25
    d5b4:	455a      	cmp	r2, r11
    d5b6:	d115      	bne.n	d5e4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x208>
    d5b8:	2e00      	cmp	r6, #0
    d5ba:	d034      	beq.n	d626 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x24a>
    d5bc:	b2f1      	uxtb	r1, r6
    d5be:	a809      	add	r0, sp, #36	; 0x24
    d5c0:	f001 fbe3 	bl	ed8a <std::string::push_back(char)>
    d5c4:	2600      	movs	r6, #0
    d5c6:	a806      	add	r0, sp, #24
    d5c8:	f7fc fb9b 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    d5cc:	a914      	add	r1, sp, #80	; 0x50
    d5ce:	f7fd fc4d 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    d5d2:	b328      	cbz	r0, d620 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x244>
    d5d4:	a806      	add	r0, sp, #24
    d5d6:	f7fd fc23 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d5da:	fa5f fb80 	uxtb.w	r11, r0
    d5de:	7c2a      	ldrb	r2, [r5, #16]
    d5e0:	2a00      	cmp	r2, #0
    d5e2:	d1e5      	bne.n	d5b0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1d4>
    d5e4:	f895 2024 	ldrb.w	r2, [r5, #36]	; 0x24
    d5e8:	455a      	cmp	r2, r11
    d5ea:	d01e      	beq.n	d62a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x24e>
    d5ec:	9804      	ldr	r0, [sp, #16]
    d5ee:	4659      	mov	r1, r11
    d5f0:	9a02      	ldr	r2, [sp, #8]
    d5f2:	f006 f82d 	bl	13650 <memchr>
    d5f6:	b1d0      	cbz	r0, d62e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x252>
    d5f8:	9b04      	ldr	r3, [sp, #16]
    d5fa:	1ac0      	subs	r0, r0, r3
    d5fc:	9b03      	ldr	r3, [sp, #12]
    d5fe:	280f      	cmp	r0, #15
    d600:	bfc8      	it	gt
    d602:	3806      	subgt	r0, #6
    d604:	429c      	cmp	r4, r3
    d606:	d808      	bhi.n	d61a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x23e>
    d608:	43c3      	mvns	r3, r0
    d60a:	437c      	muls	r4, r7
    d60c:	3601      	adds	r6, #1
    d60e:	429c      	cmp	r4, r3
    d610:	bf88      	it	hi
    d612:	f04a 0a01 	orrhi.w	r10, r10, #1
    d616:	4404      	add	r4, r0
    d618:	e7d5      	b.n	d5c6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1ea>
    d61a:	f04f 0a01 	mov.w	r10, #1
    d61e:	e7d2      	b.n	d5c6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x1ea>
    d620:	f04f 0901 	mov.w	r9, #1
    d624:	e001      	b.n	d62a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x24e>
    d626:	2701      	movs	r7, #1
    d628:	e002      	b.n	d630 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x254>
    d62a:	2700      	movs	r7, #0
    d62c:	e000      	b.n	d630 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x254>
    d62e:	4607      	mov	r7, r0
    d630:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d632:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    d636:	b163      	cbz	r3, d652 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x276>
    d638:	a809      	add	r0, sp, #36	; 0x24
    d63a:	b2f1      	uxtb	r1, r6
    d63c:	f001 fba5 	bl	ed8a <std::string::push_back(char)>
    d640:	68a8      	ldr	r0, [r5, #8]
    d642:	68e9      	ldr	r1, [r5, #12]
    d644:	aa09      	add	r2, sp, #36	; 0x24
    d646:	f002 fcce 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    d64a:	b910      	cbnz	r0, d652 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x276>
    d64c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    d64e:	2304      	movs	r3, #4
    d650:	6013      	str	r3, [r2, #0]
    d652:	b936      	cbnz	r6, d662 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x286>
    d654:	f1b8 0f00 	cmp.w	r8, #0
    d658:	d103      	bne.n	d662 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x286>
    d65a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d65c:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    d660:	b103      	cbz	r3, d664 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x288>
    d662:	b17f      	cbz	r7, d684 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2a8>
    d664:	2300      	movs	r3, #0
    d666:	9a18      	ldr	r2, [sp, #96]	; 0x60
    d668:	6013      	str	r3, [r2, #0]
    d66a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    d66c:	2304      	movs	r3, #4
    d66e:	6013      	str	r3, [r2, #0]
    d670:	f1b9 0f00 	cmp.w	r9, #0
    d674:	d012      	beq.n	d69c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2c0>
    d676:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    d678:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    d67a:	681b      	ldr	r3, [r3, #0]
    d67c:	f043 0302 	orr.w	r3, r3, #2
    d680:	6013      	str	r3, [r2, #0]
    d682:	e00b      	b.n	d69c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2c0>
    d684:	f1ba 0f00 	cmp.w	r10, #0
    d688:	d002      	beq.n	d690 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2b4>
    d68a:	f04f 33ff 	mov.w	r3, #4294967295
    d68e:	e7ea      	b.n	d666 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x28a>
    d690:	9b01      	ldr	r3, [sp, #4]
    d692:	b103      	cbz	r3, d696 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x2ba>
    d694:	4264      	negs	r4, r4
    d696:	9b18      	ldr	r3, [sp, #96]	; 0x60
    d698:	601c      	str	r4, [r3, #0]
    d69a:	e7e9      	b.n	d670 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const+0x294>
    d69c:	ab06      	add	r3, sp, #24
    d69e:	e893 0003 	ldmia.w	r3, {r0, r1}
    d6a2:	9b05      	ldr	r3, [sp, #20]
    d6a4:	e883 0003 	stmia.w	r3, {r0, r1}
    d6a8:	a809      	add	r0, sp, #36	; 0x24
    d6aa:	f001 f935 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    d6ae:	9805      	ldr	r0, [sp, #20]
    d6b0:	b00b      	add	sp, #44	; 0x2c
    d6b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    d6b6:	bf00      	nop
    d6b8:	10000c70 	.word	0x10000c70

0000d6bc <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const>:
    d6bc:	b570      	push	{r4, r5, r6, lr}
    d6be:	4605      	mov	r5, r0
    d6c0:	460e      	mov	r6, r1
    d6c2:	b088      	sub	sp, #32
    d6c4:	ac06      	add	r4, sp, #24
    d6c6:	e884 000c 	stmia.w	r4, {r2, r3}
    d6ca:	ab0c      	add	r3, sp, #48	; 0x30
    d6cc:	e893 0003 	ldmia.w	r3, {r0, r1}
    d6d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    d6d2:	e88d 0003 	stmia.w	sp, {r0, r1}
    d6d6:	9302      	str	r3, [sp, #8]
    d6d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    d6da:	4628      	mov	r0, r5
    d6dc:	9303      	str	r3, [sp, #12]
    d6de:	9b10      	ldr	r3, [sp, #64]	; 0x40
    d6e0:	4631      	mov	r1, r6
    d6e2:	9304      	str	r3, [sp, #16]
    d6e4:	e894 000c 	ldmia.w	r4, {r2, r3}
    d6e8:	f7ff fe78 	bl	d3dc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const>
    d6ec:	4628      	mov	r0, r5
    d6ee:	b008      	add	sp, #32
    d6f0:	bd70      	pop	{r4, r5, r6, pc}

0000d6f2 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, void*&) const>:
    d6f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d6f6:	468e      	mov	lr, r1
    d6f8:	4606      	mov	r6, r0
    d6fa:	b08c      	sub	sp, #48	; 0x30
    d6fc:	9d14      	ldr	r5, [sp, #80]	; 0x50
    d6fe:	ac08      	add	r4, sp, #32
    d700:	f8d5 800c 	ldr.w	r8, [r5, #12]
    d704:	e884 000c 	stmia.w	r4, {r2, r3}
    d708:	f028 034a 	bic.w	r3, r8, #74	; 0x4a
    d70c:	f043 0308 	orr.w	r3, r3, #8
    d710:	60eb      	str	r3, [r5, #12]
    d712:	ab12      	add	r3, sp, #72	; 0x48
    d714:	e893 0003 	ldmia.w	r3, {r0, r1}
    d718:	9b15      	ldr	r3, [sp, #84]	; 0x54
    d71a:	e88d 0003 	stmia.w	sp, {r0, r1}
    d71e:	9303      	str	r3, [sp, #12]
    d720:	ab0b      	add	r3, sp, #44	; 0x2c
    d722:	af06      	add	r7, sp, #24
    d724:	9502      	str	r5, [sp, #8]
    d726:	9304      	str	r3, [sp, #16]
    d728:	e894 000c 	ldmia.w	r4, {r2, r3}
    d72c:	4638      	mov	r0, r7
    d72e:	4671      	mov	r1, lr
    d730:	f7ff fe54 	bl	d3dc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const>
    d734:	e897 0003 	ldmia.w	r7, {r0, r1}
    d738:	e884 0003 	stmia.w	r4, {r0, r1}
    d73c:	e886 0003 	stmia.w	r6, {r0, r1}
    d740:	4630      	mov	r0, r6
    d742:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    d744:	9b16      	ldr	r3, [sp, #88]	; 0x58
    d746:	f8c5 800c 	str.w	r8, [r5, #12]
    d74a:	601a      	str	r2, [r3, #0]
    d74c:	b00c      	add	sp, #48	; 0x30
    d74e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0000d754 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const>:
    d754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    d758:	b091      	sub	sp, #68	; 0x44
    d75a:	9e1c      	ldr	r6, [sp, #112]	; 0x70
    d75c:	900b      	str	r0, [sp, #44]	; 0x2c
    d75e:	ad0c      	add	r5, sp, #48	; 0x30
    d760:	f106 006c 	add.w	r0, r6, #108	; 0x6c
    d764:	e885 000c 	stmia.w	r5, {r2, r3}
    d768:	f7fb feb8 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    d76c:	68f7      	ldr	r7, [r6, #12]
    d76e:	4604      	mov	r4, r0
    d770:	f007 074a 	and.w	r7, r7, #74	; 0x4a
    d774:	2f40      	cmp	r7, #64	; 0x40
    d776:	d006      	beq.n	d786 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x32>
    d778:	2f08      	cmp	r7, #8
    d77a:	bf14      	ite	ne
    d77c:	f04f 0a0a 	movne.w	r10, #10
    d780:	f04f 0a10 	moveq.w	r10, #16
    d784:	e001      	b.n	d78a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x36>
    d786:	f04f 0a08 	mov.w	r10, #8
    d78a:	4628      	mov	r0, r5
    d78c:	a91a      	add	r1, sp, #104	; 0x68
    d78e:	f7fd fb5a 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    d792:	4680      	mov	r8, r0
    d794:	bb50      	cbnz	r0, d7ec <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x98>
    d796:	4628      	mov	r0, r5
    d798:	f7fd fb42 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d79c:	f894 904a 	ldrb.w	r9, [r4, #74]	; 0x4a
    d7a0:	fa5f fb80 	uxtb.w	r11, r0
    d7a4:	ebcb 0209 	rsb	r2, r11, r9
    d7a8:	f1d2 0900 	rsbs	r9, r2, #0
    d7ac:	eb49 0902 	adc.w	r9, r9, r2
    d7b0:	f1b9 0f00 	cmp.w	r9, #0
    d7b4:	d103      	bne.n	d7be <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x6a>
    d7b6:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
    d7ba:	455b      	cmp	r3, r11
    d7bc:	d11c      	bne.n	d7f8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xa4>
    d7be:	7c23      	ldrb	r3, [r4, #16]
    d7c0:	b11b      	cbz	r3, d7ca <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x76>
    d7c2:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
    d7c6:	459b      	cmp	r11, r3
    d7c8:	d016      	beq.n	d7f8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xa4>
    d7ca:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
    d7ce:	459b      	cmp	r11, r3
    d7d0:	d012      	beq.n	d7f8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xa4>
    d7d2:	4628      	mov	r0, r5
    d7d4:	f7fc fa95 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    d7d8:	a91a      	add	r1, sp, #104	; 0x68
    d7da:	f7fd fb47 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    d7de:	b148      	cbz	r0, d7f4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xa0>
    d7e0:	4628      	mov	r0, r5
    d7e2:	f7fd fb1d 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d7e6:	fa5f fb80 	uxtb.w	r11, r0
    d7ea:	e005      	b.n	d7f8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xa4>
    d7ec:	f04f 0b00 	mov.w	r11, #0
    d7f0:	46d9      	mov	r9, r11
    d7f2:	e001      	b.n	d7f8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xa4>
    d7f4:	f04f 0801 	mov.w	r8, #1
    d7f8:	2500      	movs	r5, #0
    d7fa:	462e      	mov	r6, r5
    d7fc:	f1b8 0f00 	cmp.w	r8, #0
    d800:	d14b      	bne.n	d89a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x146>
    d802:	7c23      	ldrb	r3, [r4, #16]
    d804:	b11b      	cbz	r3, d80e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xba>
    d806:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
    d80a:	459b      	cmp	r11, r3
    d80c:	d045      	beq.n	d89a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x146>
    d80e:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
    d812:	459b      	cmp	r11, r3
    d814:	d041      	beq.n	d89a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x146>
    d816:	f894 304e 	ldrb.w	r3, [r4, #78]	; 0x4e
    d81a:	455b      	cmp	r3, r11
    d81c:	d10a      	bne.n	d834 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xe0>
    d81e:	b11e      	cbz	r6, d828 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xd4>
    d820:	f1ba 0f0a 	cmp.w	r10, #10
    d824:	d107      	bne.n	d836 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xe2>
    d826:	e020      	b.n	d86a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x116>
    d828:	b1a7      	cbz	r7, d854 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x100>
    d82a:	f1ba 0f08 	cmp.w	r10, #8
    d82e:	d014      	beq.n	d85a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x106>
    d830:	3501      	adds	r5, #1
    d832:	e013      	b.n	d85c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x108>
    d834:	b38e      	cbz	r6, d89a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x146>
    d836:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
    d83a:	455b      	cmp	r3, r11
    d83c:	d003      	beq.n	d846 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xf2>
    d83e:	f894 304d 	ldrb.w	r3, [r4, #77]	; 0x4d
    d842:	455b      	cmp	r3, r11
    d844:	d128      	bne.n	d898 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x144>
    d846:	b15f      	cbz	r7, d860 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x10c>
    d848:	f1ba 0f10 	cmp.w	r10, #16
    d84c:	d129      	bne.n	d8a2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x14e>
    d84e:	2500      	movs	r5, #0
    d850:	462e      	mov	r6, r5
    d852:	e00f      	b.n	d874 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x120>
    d854:	463d      	mov	r5, r7
    d856:	2601      	movs	r6, #1
    d858:	e00a      	b.n	d870 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x11c>
    d85a:	4635      	mov	r5, r6
    d85c:	2601      	movs	r6, #1
    d85e:	e009      	b.n	d874 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x120>
    d860:	463d      	mov	r5, r7
    d862:	463e      	mov	r6, r7
    d864:	f04f 0a10 	mov.w	r10, #16
    d868:	e004      	b.n	d874 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x120>
    d86a:	2f00      	cmp	r7, #0
    d86c:	d1e0      	bne.n	d830 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xdc>
    d86e:	463d      	mov	r5, r7
    d870:	f04f 0a08 	mov.w	r10, #8
    d874:	a80c      	add	r0, sp, #48	; 0x30
    d876:	f7fc fa44 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    d87a:	a91a      	add	r1, sp, #104	; 0x68
    d87c:	f7fd faf6 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    d880:	b138      	cbz	r0, d892 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x13e>
    d882:	a80c      	add	r0, sp, #48	; 0x30
    d884:	f7fd facc 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d888:	fa5f fb80 	uxtb.w	r11, r0
    d88c:	2e00      	cmp	r6, #0
    d88e:	d1b8      	bne.n	d802 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0xae>
    d890:	e003      	b.n	d89a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x146>
    d892:	f04f 0801 	mov.w	r8, #1
    d896:	e000      	b.n	d89a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x146>
    d898:	2601      	movs	r6, #1
    d89a:	f1ba 0f10 	cmp.w	r10, #16
    d89e:	d101      	bne.n	d8a4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x150>
    d8a0:	e003      	b.n	d8aa <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x156>
    d8a2:	2601      	movs	r6, #1
    d8a4:	f8cd a01c 	str.w	r10, [sp, #28]
    d8a8:	e001      	b.n	d8ae <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x15a>
    d8aa:	2316      	movs	r3, #22
    d8ac:	9307      	str	r3, [sp, #28]
    d8ae:	4b91      	ldr	r3, [pc, #580]	; (daf4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x3a0>)
    d8b0:	930f      	str	r3, [sp, #60]	; 0x3c
    d8b2:	7c23      	ldrb	r3, [r4, #16]
    d8b4:	b11b      	cbz	r3, d8be <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x16a>
    d8b6:	a80f      	add	r0, sp, #60	; 0x3c
    d8b8:	2120      	movs	r1, #32
    d8ba:	f001 f988 	bl	ebce <std::string::reserve(unsigned int)>
    d8be:	f1b9 0f00 	cmp.w	r9, #0
    d8c2:	d104      	bne.n	d8ce <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x17a>
    d8c4:	f04f 32ff 	mov.w	r2, #4294967295
    d8c8:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    d8cc:	e002      	b.n	d8d4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x180>
    d8ce:	2200      	movs	r2, #0
    d8d0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    d8d4:	e9cd 2304 	strd	r2, r3, [sp, #16]
    d8d8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    d8dc:	4652      	mov	r2, r10
    d8de:	17d3      	asrs	r3, r2, #31
    d8e0:	e9cd 2302 	strd	r2, r3, [sp, #8]
    d8e4:	f004 fd76 	bl	123d4 <__aeabi_uldivmod>
    d8e8:	f894 7064 	ldrb.w	r7, [r4, #100]	; 0x64
    d8ec:	e9cd 0108 	strd	r0, r1, [sp, #32]
    d8f0:	b93f      	cbnz	r7, d902 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x1ae>
    d8f2:	2200      	movs	r2, #0
    d8f4:	2300      	movs	r3, #0
    d8f6:	e9cd 2300 	strd	r2, r3, [sp]
    d8fa:	f1b8 0f00 	cmp.w	r8, #0
    d8fe:	d03f      	beq.n	d980 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x22c>
    d900:	e0a1      	b.n	da46 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2f2>
    d902:	f104 034e 	add.w	r3, r4, #78	; 0x4e
    d906:	930a      	str	r3, [sp, #40]	; 0x28
    d908:	2200      	movs	r2, #0
    d90a:	2300      	movs	r3, #0
    d90c:	e9cd 2300 	strd	r2, r3, [sp]
    d910:	2700      	movs	r7, #0
    d912:	f1b8 0f00 	cmp.w	r8, #0
    d916:	d054      	beq.n	d9c2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x26e>
    d918:	e095      	b.n	da46 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2f2>
    d91a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    d91e:	e9dd ab00 	ldrd	r10, r11, [sp]
    d922:	455b      	cmp	r3, r11
    d924:	bf08      	it	eq
    d926:	4552      	cmpeq	r2, r10
    d928:	d331      	bcc.n	d98e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x23a>
    d92a:	9b00      	ldr	r3, [sp, #0]
    d92c:	9a03      	ldr	r2, [sp, #12]
    d92e:	9902      	ldr	r1, [sp, #8]
    d930:	4353      	muls	r3, r2
    d932:	9a01      	ldr	r2, [sp, #4]
    d934:	3501      	adds	r5, #1
    d936:	fb01 3302 	mla	r3, r1, r2, r3
    d93a:	9a00      	ldr	r2, [sp, #0]
    d93c:	fba2 ab01 	umull	r10, r11, r2, r1
    d940:	17c1      	asrs	r1, r0, #31
    d942:	449b      	add	r11, r3
    d944:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    d948:	1a12      	subs	r2, r2, r0
    d94a:	eb63 0301 	sbc.w	r3, r3, r1
    d94e:	455b      	cmp	r3, r11
    d950:	bf08      	it	eq
    d952:	4552      	cmpeq	r2, r10
    d954:	bf38      	it	cc
    d956:	f047 0701 	orrcc.w	r7, r7, #1
    d95a:	eb10 020a 	adds.w	r2, r0, r10
    d95e:	eb41 030b 	adc.w	r3, r1, r11
    d962:	e9cd 2300 	strd	r2, r3, [sp]
    d966:	a80c      	add	r0, sp, #48	; 0x30
    d968:	f7fc f9cb 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    d96c:	a91a      	add	r1, sp, #104	; 0x68
    d96e:	f7fd fa7d 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    d972:	2800      	cmp	r0, #0
    d974:	d061      	beq.n	da3a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2e6>
    d976:	a80c      	add	r0, sp, #48	; 0x30
    d978:	f7fd fa52 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d97c:	fa5f fb80 	uxtb.w	r11, r0
    d980:	9807      	ldr	r0, [sp, #28]
    d982:	4659      	mov	r1, r11
    d984:	f7fb fa6a 	bl	8e5c <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]>
    d988:	1c43      	adds	r3, r0, #1
    d98a:	d1c6      	bne.n	d91a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x1c6>
    d98c:	e05b      	b.n	da46 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2f2>
    d98e:	2701      	movs	r7, #1
    d990:	e7e9      	b.n	d966 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x212>
    d992:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
    d996:	455b      	cmp	r3, r11
    d998:	d116      	bne.n	d9c8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x274>
    d99a:	2d00      	cmp	r5, #0
    d99c:	d050      	beq.n	da40 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2ec>
    d99e:	b2e9      	uxtb	r1, r5
    d9a0:	a80f      	add	r0, sp, #60	; 0x3c
    d9a2:	f001 f9f2 	bl	ed8a <std::string::push_back(char)>
    d9a6:	2500      	movs	r5, #0
    d9a8:	a80c      	add	r0, sp, #48	; 0x30
    d9aa:	f7fc f9aa 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    d9ae:	a91a      	add	r1, sp, #104	; 0x68
    d9b0:	f7fd fa5c 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    d9b4:	2800      	cmp	r0, #0
    d9b6:	d040      	beq.n	da3a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2e6>
    d9b8:	a80c      	add	r0, sp, #48	; 0x30
    d9ba:	f7fd fa31 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    d9be:	fa5f fb80 	uxtb.w	r11, r0
    d9c2:	7c23      	ldrb	r3, [r4, #16]
    d9c4:	2b00      	cmp	r3, #0
    d9c6:	d1e4      	bne.n	d992 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x23e>
    d9c8:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
    d9cc:	455b      	cmp	r3, r11
    d9ce:	d03a      	beq.n	da46 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2f2>
    d9d0:	980a      	ldr	r0, [sp, #40]	; 0x28
    d9d2:	4659      	mov	r1, r11
    d9d4:	9a07      	ldr	r2, [sp, #28]
    d9d6:	f005 fe3b 	bl	13650 <memchr>
    d9da:	2800      	cmp	r0, #0
    d9dc:	d036      	beq.n	da4c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2f8>
    d9de:	e9dd ab00 	ldrd	r10, r11, [sp]
    d9e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    d9e4:	1ac0      	subs	r0, r0, r3
    d9e6:	280f      	cmp	r0, #15
    d9e8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
    d9ec:	bfc8      	it	gt
    d9ee:	3806      	subgt	r0, #6
    d9f0:	455b      	cmp	r3, r11
    d9f2:	bf08      	it	eq
    d9f4:	4552      	cmpeq	r2, r10
    d9f6:	d31e      	bcc.n	da36 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2e2>
    d9f8:	9b00      	ldr	r3, [sp, #0]
    d9fa:	9a03      	ldr	r2, [sp, #12]
    d9fc:	9902      	ldr	r1, [sp, #8]
    d9fe:	4353      	muls	r3, r2
    da00:	9a01      	ldr	r2, [sp, #4]
    da02:	3501      	adds	r5, #1
    da04:	fb01 3302 	mla	r3, r1, r2, r3
    da08:	9a00      	ldr	r2, [sp, #0]
    da0a:	fba2 ab01 	umull	r10, r11, r2, r1
    da0e:	17c1      	asrs	r1, r0, #31
    da10:	449b      	add	r11, r3
    da12:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    da16:	1a12      	subs	r2, r2, r0
    da18:	eb63 0301 	sbc.w	r3, r3, r1
    da1c:	455b      	cmp	r3, r11
    da1e:	bf08      	it	eq
    da20:	4552      	cmpeq	r2, r10
    da22:	bf38      	it	cc
    da24:	f047 0701 	orrcc.w	r7, r7, #1
    da28:	eb10 020a 	adds.w	r2, r0, r10
    da2c:	eb41 030b 	adc.w	r3, r1, r11
    da30:	e9cd 2300 	strd	r2, r3, [sp]
    da34:	e7b8      	b.n	d9a8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x254>
    da36:	2701      	movs	r7, #1
    da38:	e7b6      	b.n	d9a8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x254>
    da3a:	f04f 0801 	mov.w	r8, #1
    da3e:	e002      	b.n	da46 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2f2>
    da40:	f04f 0a01 	mov.w	r10, #1
    da44:	e003      	b.n	da4e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2fa>
    da46:	f04f 0a00 	mov.w	r10, #0
    da4a:	e000      	b.n	da4e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x2fa>
    da4c:	4682      	mov	r10, r0
    da4e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    da50:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    da54:	b163      	cbz	r3, da70 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x31c>
    da56:	a80f      	add	r0, sp, #60	; 0x3c
    da58:	b2e9      	uxtb	r1, r5
    da5a:	f001 f996 	bl	ed8a <std::string::push_back(char)>
    da5e:	68a0      	ldr	r0, [r4, #8]
    da60:	68e1      	ldr	r1, [r4, #12]
    da62:	aa0f      	add	r2, sp, #60	; 0x3c
    da64:	f002 fabf 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    da68:	b910      	cbnz	r0, da70 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x31c>
    da6a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    da6c:	2304      	movs	r3, #4
    da6e:	6013      	str	r3, [r2, #0]
    da70:	b925      	cbnz	r5, da7c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x328>
    da72:	b91e      	cbnz	r6, da7c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x328>
    da74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    da76:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    da7a:	b113      	cbz	r3, da82 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x32e>
    da7c:	f1ba 0f00 	cmp.w	r10, #0
    da80:	d008      	beq.n	da94 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x340>
    da82:	2200      	movs	r2, #0
    da84:	2300      	movs	r3, #0
    da86:	991e      	ldr	r1, [sp, #120]	; 0x78
    da88:	e9c1 2300 	strd	r2, r3, [r1]
    da8c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    da8e:	2304      	movs	r3, #4
    da90:	6013      	str	r3, [r2, #0]
    da92:	e00b      	b.n	daac <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x358>
    da94:	b9a7      	cbnz	r7, dac0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x36c>
    da96:	e9dd 0100 	ldrd	r0, r1, [sp]
    da9a:	f1b9 0f00 	cmp.w	r9, #0
    da9e:	d002      	beq.n	daa6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x352>
    daa0:	4240      	negs	r0, r0
    daa2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    daa6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    daa8:	e9c3 0100 	strd	r0, r1, [r3]
    daac:	f1b8 0f00 	cmp.w	r8, #0
    dab0:	d012      	beq.n	dad8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x384>
    dab2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    dab4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    dab6:	681b      	ldr	r3, [r3, #0]
    dab8:	f043 0302 	orr.w	r3, r3, #2
    dabc:	6013      	str	r3, [r2, #0]
    dabe:	e00b      	b.n	dad8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x384>
    dac0:	f1b9 0f00 	cmp.w	r9, #0
    dac4:	d003      	beq.n	dace <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x37a>
    dac6:	2200      	movs	r2, #0
    dac8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
    dacc:	e7db      	b.n	da86 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x332>
    dace:	f04f 32ff 	mov.w	r2, #4294967295
    dad2:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    dad6:	e7d6      	b.n	da86 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const+0x332>
    dad8:	ab0c      	add	r3, sp, #48	; 0x30
    dada:	e893 0003 	ldmia.w	r3, {r0, r1}
    dade:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    dae0:	e883 0003 	stmia.w	r3, {r0, r1}
    dae4:	a80f      	add	r0, sp, #60	; 0x3c
    dae6:	f000 ff17 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    daea:	980b      	ldr	r0, [sp, #44]	; 0x2c
    daec:	b011      	add	sp, #68	; 0x44
    daee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    daf2:	bf00      	nop
    daf4:	10000c70 	.word	0x10000c70

0000daf8 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const>:
    daf8:	b570      	push	{r4, r5, r6, lr}
    dafa:	4605      	mov	r5, r0
    dafc:	460e      	mov	r6, r1
    dafe:	b088      	sub	sp, #32
    db00:	ac06      	add	r4, sp, #24
    db02:	e884 000c 	stmia.w	r4, {r2, r3}
    db06:	ab0c      	add	r3, sp, #48	; 0x30
    db08:	e893 0003 	ldmia.w	r3, {r0, r1}
    db0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    db0e:	e88d 0003 	stmia.w	sp, {r0, r1}
    db12:	9302      	str	r3, [sp, #8]
    db14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    db16:	4628      	mov	r0, r5
    db18:	9303      	str	r3, [sp, #12]
    db1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
    db1c:	4631      	mov	r1, r6
    db1e:	9304      	str	r3, [sp, #16]
    db20:	e894 000c 	ldmia.w	r4, {r2, r3}
    db24:	f7ff fe16 	bl	d754 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const>
    db28:	4628      	mov	r0, r5
    db2a:	b008      	add	sp, #32
    db2c:	bd70      	pop	{r4, r5, r6, pc}
	...

0000db30 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const>:
    db30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    db34:	b08d      	sub	sp, #52	; 0x34
    db36:	9e18      	ldr	r6, [sp, #96]	; 0x60
    db38:	9007      	str	r0, [sp, #28]
    db3a:	ad08      	add	r5, sp, #32
    db3c:	f106 006c 	add.w	r0, r6, #108	; 0x6c
    db40:	e885 000c 	stmia.w	r5, {r2, r3}
    db44:	f7fb fcca 	bl	94dc <std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.33]>
    db48:	68f3      	ldr	r3, [r6, #12]
    db4a:	4604      	mov	r4, r0
    db4c:	f003 0a4a 	and.w	r10, r3, #74	; 0x4a
    db50:	f1ba 0f40 	cmp.w	r10, #64	; 0x40
    db54:	d007      	beq.n	db66 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x36>
    db56:	f1ba 0f08 	cmp.w	r10, #8
    db5a:	bf14      	ite	ne
    db5c:	f04f 090a 	movne.w	r9, #10
    db60:	f04f 0910 	moveq.w	r9, #16
    db64:	e001      	b.n	db6a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x3a>
    db66:	f04f 0908 	mov.w	r9, #8
    db6a:	4628      	mov	r0, r5
    db6c:	a916      	add	r1, sp, #88	; 0x58
    db6e:	f7fd f96a 	bl	ae46 <std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const>
    db72:	4607      	mov	r7, r0
    db74:	bb38      	cbnz	r0, dbc6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x96>
    db76:	4628      	mov	r0, r5
    db78:	f7fd f952 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    db7c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
    db80:	fa5f f880 	uxtb.w	r8, r0
    db84:	ebc8 0203 	rsb	r2, r8, r3
    db88:	4253      	negs	r3, r2
    db8a:	4153      	adcs	r3, r2
    db8c:	9302      	str	r3, [sp, #8]
    db8e:	b91b      	cbnz	r3, db98 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x68>
    db90:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
    db94:	4543      	cmp	r3, r8
    db96:	d11c      	bne.n	dbd2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xa2>
    db98:	7c23      	ldrb	r3, [r4, #16]
    db9a:	b11b      	cbz	r3, dba4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x74>
    db9c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
    dba0:	4598      	cmp	r8, r3
    dba2:	d016      	beq.n	dbd2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xa2>
    dba4:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
    dba8:	4598      	cmp	r8, r3
    dbaa:	d012      	beq.n	dbd2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xa2>
    dbac:	4628      	mov	r0, r5
    dbae:	f7fc f8a8 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    dbb2:	a916      	add	r1, sp, #88	; 0x58
    dbb4:	f7fd f95a 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    dbb8:	b150      	cbz	r0, dbd0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xa0>
    dbba:	4628      	mov	r0, r5
    dbbc:	f7fd f930 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    dbc0:	fa5f f880 	uxtb.w	r8, r0
    dbc4:	e005      	b.n	dbd2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xa2>
    dbc6:	f04f 0800 	mov.w	r8, #0
    dbca:	f8cd 8008 	str.w	r8, [sp, #8]
    dbce:	e000      	b.n	dbd2 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xa2>
    dbd0:	2701      	movs	r7, #1
    dbd2:	2500      	movs	r5, #0
    dbd4:	462e      	mov	r6, r5
    dbd6:	2f00      	cmp	r7, #0
    dbd8:	d14f      	bne.n	dc7a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x14a>
    dbda:	7c23      	ldrb	r3, [r4, #16]
    dbdc:	b11b      	cbz	r3, dbe6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xb6>
    dbde:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
    dbe2:	4598      	cmp	r8, r3
    dbe4:	d049      	beq.n	dc7a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x14a>
    dbe6:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
    dbea:	4598      	cmp	r8, r3
    dbec:	d045      	beq.n	dc7a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x14a>
    dbee:	f894 304e 	ldrb.w	r3, [r4, #78]	; 0x4e
    dbf2:	4543      	cmp	r3, r8
    dbf4:	d10c      	bne.n	dc10 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xe0>
    dbf6:	b11e      	cbz	r6, dc00 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xd0>
    dbf8:	f1b9 0f0a 	cmp.w	r9, #10
    dbfc:	d109      	bne.n	dc12 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xe2>
    dbfe:	e024      	b.n	dc4a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x11a>
    dc00:	f1ba 0f00 	cmp.w	r10, #0
    dc04:	d016      	beq.n	dc34 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x104>
    dc06:	f1b9 0f08 	cmp.w	r9, #8
    dc0a:	d016      	beq.n	dc3a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x10a>
    dc0c:	3501      	adds	r5, #1
    dc0e:	e015      	b.n	dc3c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x10c>
    dc10:	b39e      	cbz	r6, dc7a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x14a>
    dc12:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
    dc16:	4543      	cmp	r3, r8
    dc18:	d003      	beq.n	dc22 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xf2>
    dc1a:	f894 304d 	ldrb.w	r3, [r4, #77]	; 0x4d
    dc1e:	4543      	cmp	r3, r8
    dc20:	d12a      	bne.n	dc78 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x148>
    dc22:	f1ba 0f00 	cmp.w	r10, #0
    dc26:	d00b      	beq.n	dc40 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x110>
    dc28:	f1b9 0f10 	cmp.w	r9, #16
    dc2c:	d129      	bne.n	dc82 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x152>
    dc2e:	2500      	movs	r5, #0
    dc30:	462e      	mov	r6, r5
    dc32:	e010      	b.n	dc56 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x126>
    dc34:	4655      	mov	r5, r10
    dc36:	2601      	movs	r6, #1
    dc38:	e00b      	b.n	dc52 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x122>
    dc3a:	4635      	mov	r5, r6
    dc3c:	2601      	movs	r6, #1
    dc3e:	e00a      	b.n	dc56 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x126>
    dc40:	4655      	mov	r5, r10
    dc42:	4656      	mov	r6, r10
    dc44:	f04f 0910 	mov.w	r9, #16
    dc48:	e005      	b.n	dc56 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x126>
    dc4a:	f1ba 0f00 	cmp.w	r10, #0
    dc4e:	d1dd      	bne.n	dc0c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xdc>
    dc50:	4655      	mov	r5, r10
    dc52:	f04f 0908 	mov.w	r9, #8
    dc56:	a808      	add	r0, sp, #32
    dc58:	f7fc f853 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    dc5c:	a916      	add	r1, sp, #88	; 0x58
    dc5e:	f7fd f905 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    dc62:	b138      	cbz	r0, dc74 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x144>
    dc64:	a808      	add	r0, sp, #32
    dc66:	f7fd f8db 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    dc6a:	fa5f f880 	uxtb.w	r8, r0
    dc6e:	2e00      	cmp	r6, #0
    dc70:	d1b3      	bne.n	dbda <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0xaa>
    dc72:	e002      	b.n	dc7a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x14a>
    dc74:	2701      	movs	r7, #1
    dc76:	e000      	b.n	dc7a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x14a>
    dc78:	2601      	movs	r6, #1
    dc7a:	f1b9 0f10 	cmp.w	r9, #16
    dc7e:	d101      	bne.n	dc84 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x154>
    dc80:	e003      	b.n	dc8a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x15a>
    dc82:	2601      	movs	r6, #1
    dc84:	f8cd 900c 	str.w	r9, [sp, #12]
    dc88:	e001      	b.n	dc8e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x15e>
    dc8a:	2316      	movs	r3, #22
    dc8c:	9303      	str	r3, [sp, #12]
    dc8e:	4b80      	ldr	r3, [pc, #512]	; (de90 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x360>)
    dc90:	930b      	str	r3, [sp, #44]	; 0x2c
    dc92:	7c23      	ldrb	r3, [r4, #16]
    dc94:	b11b      	cbz	r3, dc9e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x16e>
    dc96:	a80b      	add	r0, sp, #44	; 0x2c
    dc98:	2120      	movs	r1, #32
    dc9a:	f000 ff98 	bl	ebce <std::string::reserve(unsigned int)>
    dc9e:	464a      	mov	r2, r9
    dca0:	f04f 30ff 	mov.w	r0, #4294967295
    dca4:	17d3      	asrs	r3, r2, #31
    dca6:	f04f 31ff 	mov.w	r1, #4294967295
    dcaa:	e9cd 2300 	strd	r2, r3, [sp]
    dcae:	f004 fb91 	bl	123d4 <__aeabi_uldivmod>
    dcb2:	f894 3064 	ldrb.w	r3, [r4, #100]	; 0x64
    dcb6:	e9cd 0104 	strd	r0, r1, [sp, #16]
    dcba:	b93b      	cbnz	r3, dccc <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x19c>
    dcbc:	f04f 0a00 	mov.w	r10, #0
    dcc0:	f04f 0b00 	mov.w	r11, #0
    dcc4:	4699      	mov	r9, r3
    dcc6:	2f00      	cmp	r7, #0
    dcc8:	d038      	beq.n	dd3c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x20c>
    dcca:	e091      	b.n	ddf0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2c0>
    dccc:	f104 034e 	add.w	r3, r4, #78	; 0x4e
    dcd0:	9306      	str	r3, [sp, #24]
    dcd2:	f04f 0a00 	mov.w	r10, #0
    dcd6:	f04f 0b00 	mov.w	r11, #0
    dcda:	f04f 0900 	mov.w	r9, #0
    dcde:	2f00      	cmp	r7, #0
    dce0:	d04e      	beq.n	dd80 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x250>
    dce2:	e085      	b.n	ddf0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2c0>
    dce4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    dce8:	455b      	cmp	r3, r11
    dcea:	bf08      	it	eq
    dcec:	4552      	cmpeq	r2, r10
    dcee:	d32c      	bcc.n	dd4a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x21a>
    dcf0:	9b01      	ldr	r3, [sp, #4]
    dcf2:	3501      	adds	r5, #1
    dcf4:	fb0a f103 	mul.w	r1, r10, r3
    dcf8:	9b00      	ldr	r3, [sp, #0]
    dcfa:	fb03 110b 	mla	r1, r3, r11, r1
    dcfe:	fbaa 2303 	umull	r2, r3, r10, r3
    dd02:	440b      	add	r3, r1
    dd04:	17c1      	asrs	r1, r0, #31
    dd06:	ea6f 0b01 	mvn.w	r11, r1
    dd0a:	ea6f 0a00 	mvn.w	r10, r0
    dd0e:	459b      	cmp	r11, r3
    dd10:	bf08      	it	eq
    dd12:	4592      	cmpeq	r10, r2
    dd14:	bf38      	it	cc
    dd16:	f049 0901 	orrcc.w	r9, r9, #1
    dd1a:	eb10 0a02 	adds.w	r10, r0, r2
    dd1e:	eb41 0b03 	adc.w	r11, r1, r3
    dd22:	a808      	add	r0, sp, #32
    dd24:	f7fb ffed 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    dd28:	a916      	add	r1, sp, #88	; 0x58
    dd2a:	f7fd f89f 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    dd2e:	2800      	cmp	r0, #0
    dd30:	d059      	beq.n	dde6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2b6>
    dd32:	a808      	add	r0, sp, #32
    dd34:	f7fd f874 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    dd38:	fa5f f880 	uxtb.w	r8, r0
    dd3c:	9803      	ldr	r0, [sp, #12]
    dd3e:	4641      	mov	r1, r8
    dd40:	f7fb f88c 	bl	8e5c <__gnu_cxx::__enable_if<std::__is_char<char>::__value, int>::__type std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_find<char>(char const*, unsigned int, char) const [clone .isra.27]>
    dd44:	1c43      	adds	r3, r0, #1
    dd46:	d1cd      	bne.n	dce4 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x1b4>
    dd48:	e052      	b.n	ddf0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2c0>
    dd4a:	f04f 0901 	mov.w	r9, #1
    dd4e:	e7e8      	b.n	dd22 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x1f2>
    dd50:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
    dd54:	4543      	cmp	r3, r8
    dd56:	d116      	bne.n	dd86 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x256>
    dd58:	2d00      	cmp	r5, #0
    dd5a:	d046      	beq.n	ddea <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2ba>
    dd5c:	b2e9      	uxtb	r1, r5
    dd5e:	a80b      	add	r0, sp, #44	; 0x2c
    dd60:	f001 f813 	bl	ed8a <std::string::push_back(char)>
    dd64:	2500      	movs	r5, #0
    dd66:	a808      	add	r0, sp, #32
    dd68:	f7fb ffcb 	bl	9d02 <std::istreambuf_iterator<char, std::char_traits<char> >::operator++()>
    dd6c:	a916      	add	r1, sp, #88	; 0x58
    dd6e:	f7fd f87d 	bl	ae6c <bool std::operator!=<char, std::char_traits<char> >(std::istreambuf_iterator<char, std::char_traits<char> > const&, std::istreambuf_iterator<char, std::char_traits<char> > const&)>
    dd72:	2800      	cmp	r0, #0
    dd74:	d037      	beq.n	dde6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2b6>
    dd76:	a808      	add	r0, sp, #32
    dd78:	f7fd f852 	bl	ae20 <std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const>
    dd7c:	fa5f f880 	uxtb.w	r8, r0
    dd80:	7c23      	ldrb	r3, [r4, #16]
    dd82:	2b00      	cmp	r3, #0
    dd84:	d1e4      	bne.n	dd50 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x220>
    dd86:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
    dd8a:	4543      	cmp	r3, r8
    dd8c:	d030      	beq.n	ddf0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2c0>
    dd8e:	9806      	ldr	r0, [sp, #24]
    dd90:	4641      	mov	r1, r8
    dd92:	9a03      	ldr	r2, [sp, #12]
    dd94:	f005 fc5c 	bl	13650 <memchr>
    dd98:	b368      	cbz	r0, ddf6 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2c6>
    dd9a:	9b06      	ldr	r3, [sp, #24]
    dd9c:	1ac0      	subs	r0, r0, r3
    dd9e:	280f      	cmp	r0, #15
    dda0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    dda4:	bfc8      	it	gt
    dda6:	3806      	subgt	r0, #6
    dda8:	455b      	cmp	r3, r11
    ddaa:	bf08      	it	eq
    ddac:	4552      	cmpeq	r2, r10
    ddae:	d317      	bcc.n	dde0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2b0>
    ddb0:	9b01      	ldr	r3, [sp, #4]
    ddb2:	9a00      	ldr	r2, [sp, #0]
    ddb4:	fb0a f303 	mul.w	r3, r10, r3
    ddb8:	fb02 330b 	mla	r3, r2, r11, r3
    ddbc:	fbaa ab02 	umull	r10, r11, r10, r2
    ddc0:	17c1      	asrs	r1, r0, #31
    ddc2:	449b      	add	r11, r3
    ddc4:	43cb      	mvns	r3, r1
    ddc6:	43c2      	mvns	r2, r0
    ddc8:	455b      	cmp	r3, r11
    ddca:	bf08      	it	eq
    ddcc:	4552      	cmpeq	r2, r10
    ddce:	bf38      	it	cc
    ddd0:	f049 0901 	orrcc.w	r9, r9, #1
    ddd4:	eb1a 0a00 	adds.w	r10, r10, r0
    ddd8:	eb4b 0b01 	adc.w	r11, r11, r1
    dddc:	3501      	adds	r5, #1
    ddde:	e7c2      	b.n	dd66 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x236>
    dde0:	f04f 0901 	mov.w	r9, #1
    dde4:	e7bf      	b.n	dd66 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x236>
    dde6:	2701      	movs	r7, #1
    dde8:	e002      	b.n	ddf0 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2c0>
    ddea:	f04f 0801 	mov.w	r8, #1
    ddee:	e003      	b.n	ddf8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2c8>
    ddf0:	f04f 0800 	mov.w	r8, #0
    ddf4:	e000      	b.n	ddf8 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2c8>
    ddf6:	4680      	mov	r8, r0
    ddf8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ddfa:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    ddfe:	b163      	cbz	r3, de1a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2ea>
    de00:	a80b      	add	r0, sp, #44	; 0x2c
    de02:	b2e9      	uxtb	r1, r5
    de04:	f000 ffc1 	bl	ed8a <std::string::push_back(char)>
    de08:	68a0      	ldr	r0, [r4, #8]
    de0a:	68e1      	ldr	r1, [r4, #12]
    de0c:	aa0b      	add	r2, sp, #44	; 0x2c
    de0e:	f002 f8ea 	bl	ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>
    de12:	b910      	cbnz	r0, de1a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2ea>
    de14:	9a19      	ldr	r2, [sp, #100]	; 0x64
    de16:	2304      	movs	r3, #4
    de18:	6013      	str	r3, [r2, #0]
    de1a:	b925      	cbnz	r5, de26 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2f6>
    de1c:	b91e      	cbnz	r6, de26 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2f6>
    de1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    de20:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    de24:	b113      	cbz	r3, de2c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x2fc>
    de26:	f1b8 0f00 	cmp.w	r8, #0
    de2a:	d00f      	beq.n	de4c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x31c>
    de2c:	2200      	movs	r2, #0
    de2e:	2300      	movs	r3, #0
    de30:	991a      	ldr	r1, [sp, #104]	; 0x68
    de32:	e9c1 2300 	strd	r2, r3, [r1]
    de36:	9a19      	ldr	r2, [sp, #100]	; 0x64
    de38:	2304      	movs	r3, #4
    de3a:	6013      	str	r3, [r2, #0]
    de3c:	b1df      	cbz	r7, de76 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x346>
    de3e:	9b19      	ldr	r3, [sp, #100]	; 0x64
    de40:	9a19      	ldr	r2, [sp, #100]	; 0x64
    de42:	681b      	ldr	r3, [r3, #0]
    de44:	f043 0302 	orr.w	r3, r3, #2
    de48:	6013      	str	r3, [r2, #0]
    de4a:	e014      	b.n	de76 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x346>
    de4c:	f1b9 0f00 	cmp.w	r9, #0
    de50:	d004      	beq.n	de5c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x32c>
    de52:	f04f 32ff 	mov.w	r2, #4294967295
    de56:	f04f 33ff 	mov.w	r3, #4294967295
    de5a:	e7e9      	b.n	de30 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x300>
    de5c:	9b02      	ldr	r3, [sp, #8]
    de5e:	b123      	cbz	r3, de6a <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x33a>
    de60:	f1da 0000 	rsbs	r0, r10, #0
    de64:	eb6b 014b 	sbc.w	r1, r11, r11, lsl #1
    de68:	e001      	b.n	de6e <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x33e>
    de6a:	4650      	mov	r0, r10
    de6c:	4659      	mov	r1, r11
    de6e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    de70:	e9c3 0100 	strd	r0, r1, [r3]
    de74:	e7e2      	b.n	de3c <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const+0x30c>
    de76:	ab08      	add	r3, sp, #32
    de78:	e893 0003 	ldmia.w	r3, {r0, r1}
    de7c:	9b07      	ldr	r3, [sp, #28]
    de7e:	e883 0003 	stmia.w	r3, {r0, r1}
    de82:	a80b      	add	r0, sp, #44	; 0x2c
    de84:	f000 fd48 	bl	e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>
    de88:	9807      	ldr	r0, [sp, #28]
    de8a:	b00d      	add	sp, #52	; 0x34
    de8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    de90:	10000c70 	.word	0x10000c70

0000de94 <std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const>:
    de94:	b570      	push	{r4, r5, r6, lr}
    de96:	4605      	mov	r5, r0
    de98:	460e      	mov	r6, r1
    de9a:	b088      	sub	sp, #32
    de9c:	ac06      	add	r4, sp, #24
    de9e:	e884 000c 	stmia.w	r4, {r2, r3}
    dea2:	ab0c      	add	r3, sp, #48	; 0x30
    dea4:	e893 0003 	ldmia.w	r3, {r0, r1}
    dea8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    deaa:	e88d 0003 	stmia.w	sp, {r0, r1}
    deae:	9302      	str	r3, [sp, #8]
    deb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    deb2:	4628      	mov	r0, r5
    deb4:	9303      	str	r3, [sp, #12]
    deb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
    deb8:	4631      	mov	r1, r6
    deba:	9304      	str	r3, [sp, #16]
    debc:	e894 000c 	ldmia.w	r4, {r2, r3}
    dec0:	f7ff fe36 	bl	db30 <std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const>
    dec4:	4628      	mov	r0, r5
    dec6:	b008      	add	sp, #32
    dec8:	bd70      	pop	{r4, r5, r6, pc}
	...

0000decc <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE>:
    decc:	4b24      	ldr	r3, [pc, #144]	; (df60 <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE+0x94>)
    dece:	681a      	ldr	r2, [r3, #0]
    ded0:	07d0      	lsls	r0, r2, #31
    ded2:	bf5c      	itt	pl
    ded4:	2201      	movpl	r2, #1
    ded6:	601a      	strpl	r2, [r3, #0]
    ded8:	4b22      	ldr	r3, [pc, #136]	; (df64 <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE+0x98>)
    deda:	681a      	ldr	r2, [r3, #0]
    dedc:	07d1      	lsls	r1, r2, #31
    dede:	bf5c      	itt	pl
    dee0:	2201      	movpl	r2, #1
    dee2:	601a      	strpl	r2, [r3, #0]
    dee4:	4b20      	ldr	r3, [pc, #128]	; (df68 <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE+0x9c>)
    dee6:	681a      	ldr	r2, [r3, #0]
    dee8:	07d2      	lsls	r2, r2, #31
    deea:	bf5c      	itt	pl
    deec:	2201      	movpl	r2, #1
    deee:	601a      	strpl	r2, [r3, #0]
    def0:	4b1e      	ldr	r3, [pc, #120]	; (df6c <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE+0xa0>)
    def2:	681a      	ldr	r2, [r3, #0]
    def4:	07d0      	lsls	r0, r2, #31
    def6:	bf5c      	itt	pl
    def8:	2201      	movpl	r2, #1
    defa:	601a      	strpl	r2, [r3, #0]
    defc:	4b1c      	ldr	r3, [pc, #112]	; (df70 <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE+0xa4>)
    defe:	681a      	ldr	r2, [r3, #0]
    df00:	07d1      	lsls	r1, r2, #31
    df02:	bf5c      	itt	pl
    df04:	2201      	movpl	r2, #1
    df06:	601a      	strpl	r2, [r3, #0]
    df08:	4b1a      	ldr	r3, [pc, #104]	; (df74 <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE+0xa8>)
    df0a:	681a      	ldr	r2, [r3, #0]
    df0c:	07d2      	lsls	r2, r2, #31
    df0e:	bf5c      	itt	pl
    df10:	2201      	movpl	r2, #1
    df12:	601a      	strpl	r2, [r3, #0]
    df14:	4b18      	ldr	r3, [pc, #96]	; (df78 <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE+0xac>)
    df16:	681a      	ldr	r2, [r3, #0]
    df18:	07d0      	lsls	r0, r2, #31
    df1a:	bf5c      	itt	pl
    df1c:	2201      	movpl	r2, #1
    df1e:	601a      	strpl	r2, [r3, #0]
    df20:	4b16      	ldr	r3, [pc, #88]	; (df7c <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE+0xb0>)
    df22:	681a      	ldr	r2, [r3, #0]
    df24:	07d1      	lsls	r1, r2, #31
    df26:	bf5c      	itt	pl
    df28:	2201      	movpl	r2, #1
    df2a:	601a      	strpl	r2, [r3, #0]
    df2c:	4b14      	ldr	r3, [pc, #80]	; (df80 <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE+0xb4>)
    df2e:	681a      	ldr	r2, [r3, #0]
    df30:	07d2      	lsls	r2, r2, #31
    df32:	bf5c      	itt	pl
    df34:	2201      	movpl	r2, #1
    df36:	601a      	strpl	r2, [r3, #0]
    df38:	4b12      	ldr	r3, [pc, #72]	; (df84 <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE+0xb8>)
    df3a:	681a      	ldr	r2, [r3, #0]
    df3c:	07d0      	lsls	r0, r2, #31
    df3e:	bf5c      	itt	pl
    df40:	2201      	movpl	r2, #1
    df42:	601a      	strpl	r2, [r3, #0]
    df44:	4b10      	ldr	r3, [pc, #64]	; (df88 <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE+0xbc>)
    df46:	681a      	ldr	r2, [r3, #0]
    df48:	07d1      	lsls	r1, r2, #31
    df4a:	bf5c      	itt	pl
    df4c:	2201      	movpl	r2, #1
    df4e:	601a      	strpl	r2, [r3, #0]
    df50:	4b0e      	ldr	r3, [pc, #56]	; (df8c <_GLOBAL__sub_I__ZTSSt21__ctype_abstract_baseIcE+0xc0>)
    df52:	681a      	ldr	r2, [r3, #0]
    df54:	07d2      	lsls	r2, r2, #31
    df56:	bf5c      	itt	pl
    df58:	2201      	movpl	r2, #1
    df5a:	601a      	strpl	r2, [r3, #0]
    df5c:	4770      	bx	lr
    df5e:	bf00      	nop
    df60:	100006c8 	.word	0x100006c8
    df64:	100006c4 	.word	0x100006c4
    df68:	100006c0 	.word	0x100006c0
    df6c:	100006bc 	.word	0x100006bc
    df70:	100006b8 	.word	0x100006b8
    df74:	100006b4 	.word	0x100006b4
    df78:	100006b0 	.word	0x100006b0
    df7c:	100006ac 	.word	0x100006ac
    df80:	100006a8 	.word	0x100006a8
    df84:	100006a4 	.word	0x100006a4
    df88:	100006a0 	.word	0x100006a0
    df8c:	1000069c 	.word	0x1000069c

0000df90 <std::collate<char>::_M_compare(char const*, char const*) const>:
    df90:	b508      	push	{r3, lr}
    df92:	4608      	mov	r0, r1
    df94:	4611      	mov	r1, r2
    df96:	f006 fc5e 	bl	14856 <strcoll>
    df9a:	1783      	asrs	r3, r0, #30
    df9c:	2800      	cmp	r0, #0
    df9e:	bf0c      	ite	eq
    dfa0:	4618      	moveq	r0, r3
    dfa2:	f043 0001 	orrne.w	r0, r3, #1
    dfa6:	bd08      	pop	{r3, pc}

0000dfa8 <std::collate<char>::_M_transform(char*, char const*, unsigned int) const>:
    dfa8:	4608      	mov	r0, r1
    dfaa:	4611      	mov	r1, r2
    dfac:	461a      	mov	r2, r3
    dfae:	f008 b89d 	b.w	160ec <strxfrm>

0000dfb2 <std::collate<wchar_t>::_M_compare(wchar_t const*, wchar_t const*) const>:
    dfb2:	b508      	push	{r3, lr}
    dfb4:	4608      	mov	r0, r1
    dfb6:	4611      	mov	r1, r2
    dfb8:	f008 fa8c 	bl	164d4 <wcscoll>
    dfbc:	1783      	asrs	r3, r0, #30
    dfbe:	2800      	cmp	r0, #0
    dfc0:	bf0c      	ite	eq
    dfc2:	4618      	moveq	r0, r3
    dfc4:	f043 0001 	orrne.w	r0, r3, #1
    dfc8:	bd08      	pop	{r3, pc}

0000dfca <std::collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned int) const>:
    dfca:	4608      	mov	r0, r1
    dfcc:	4611      	mov	r1, r2
    dfce:	461a      	mov	r2, r3
    dfd0:	f008 bfe6 	b.w	16fa0 <wcsxfrm>

0000dfd4 <std::ios_base::_M_init()>:
    dfd4:	2306      	movs	r3, #6
    dfd6:	b513      	push	{r0, r1, r4, lr}
    dfd8:	6043      	str	r3, [r0, #4]
    dfda:	2300      	movs	r3, #0
    dfdc:	6083      	str	r3, [r0, #8]
    dfde:	f241 0302 	movw	r3, #4098	; 0x1002
    dfe2:	4604      	mov	r4, r0
    dfe4:	60c3      	str	r3, [r0, #12]
    dfe6:	a801      	add	r0, sp, #4
    dfe8:	f003 f8c0 	bl	1116c <std::locale::locale()>
    dfec:	a901      	add	r1, sp, #4
    dfee:	f104 006c 	add.w	r0, r4, #108	; 0x6c
    dff2:	f002 f8a0 	bl	10136 <std::locale::operator=(std::locale const&)>
    dff6:	a801      	add	r0, sp, #4
    dff8:	f002 f896 	bl	10128 <std::locale::~locale()>
    dffc:	b002      	add	sp, #8
    dffe:	bd10      	pop	{r4, pc}

0000e000 <std::basic_istream<char, std::char_traits<char> >::basic_istream(std::basic_streambuf<char, std::char_traits<char> >*)>:
    e000:	b510      	push	{r4, lr}
    e002:	4604      	mov	r4, r0
    e004:	680b      	ldr	r3, [r1, #0]
    e006:	6003      	str	r3, [r0, #0]
    e008:	6848      	ldr	r0, [r1, #4]
    e00a:	f853 1c0c 	ldr.w	r1, [r3, #-12]
    e00e:	5060      	str	r0, [r4, r1]
    e010:	2100      	movs	r1, #0
    e012:	6061      	str	r1, [r4, #4]
    e014:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    e018:	4611      	mov	r1, r2
    e01a:	4420      	add	r0, r4
    e01c:	f7f4 fbae 	bl	277c <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)>
    e020:	4620      	mov	r0, r4
    e022:	bd10      	pop	{r4, pc}

0000e024 <std::basic_istream<char, std::char_traits<char> >::basic_istream(std::basic_streambuf<char, std::char_traits<char> >*)>:
    e024:	b570      	push	{r4, r5, r6, lr}
    e026:	4604      	mov	r4, r0
    e028:	460e      	mov	r6, r1
    e02a:	f100 0508 	add.w	r5, r0, #8
    e02e:	4628      	mov	r0, r5
    e030:	f7f4 fb70 	bl	2714 <std::basic_ios<char, std::char_traits<char> >::basic_ios()>
    e034:	4b05      	ldr	r3, [pc, #20]	; (e04c <std::basic_istream<char, std::char_traits<char> >::basic_istream(std::basic_streambuf<char, std::char_traits<char> >*)+0x28>)
    e036:	4628      	mov	r0, r5
    e038:	6023      	str	r3, [r4, #0]
    e03a:	3314      	adds	r3, #20
    e03c:	60a3      	str	r3, [r4, #8]
    e03e:	2300      	movs	r3, #0
    e040:	6063      	str	r3, [r4, #4]
    e042:	4631      	mov	r1, r6
    e044:	f7f4 fb9a 	bl	277c <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)>
    e048:	4620      	mov	r0, r4
    e04a:	bd70      	pop	{r4, r5, r6, pc}
    e04c:	0001bcec 	.word	0x0001bcec

0000e050 <_ZNSiD4Ev>:
    e050:	b538      	push	{r3, r4, r5, lr}
    e052:	4604      	mov	r4, r0
    e054:	460d      	mov	r5, r1
    e056:	b909      	cbnz	r1, e05c <_ZNSiD4Ev+0xc>
    e058:	6813      	ldr	r3, [r2, #0]
    e05a:	e000      	b.n	e05e <_ZNSiD4Ev+0xe>
    e05c:	4b0d      	ldr	r3, [pc, #52]	; (e094 <_ZNSiD4Ev+0x44>)
    e05e:	6023      	str	r3, [r4, #0]
    e060:	b915      	cbnz	r5, e068 <_ZNSiD4Ev+0x18>
    e062:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e066:	e000      	b.n	e06a <_ZNSiD4Ev+0x1a>
    e068:	2308      	movs	r3, #8
    e06a:	4423      	add	r3, r4
    e06c:	b90d      	cbnz	r5, e072 <_ZNSiD4Ev+0x22>
    e06e:	6852      	ldr	r2, [r2, #4]
    e070:	e000      	b.n	e074 <_ZNSiD4Ev+0x24>
    e072:	4a09      	ldr	r2, [pc, #36]	; (e098 <_ZNSiD4Ev+0x48>)
    e074:	601a      	str	r2, [r3, #0]
    e076:	2300      	movs	r3, #0
    e078:	07aa      	lsls	r2, r5, #30
    e07a:	6063      	str	r3, [r4, #4]
    e07c:	d503      	bpl.n	e086 <_ZNSiD4Ev+0x36>
    e07e:	f104 0008 	add.w	r0, r4, #8
    e082:	f7f4 fb0b 	bl	269c <std::basic_ios<char, std::char_traits<char> >::~basic_ios()>
    e086:	07eb      	lsls	r3, r5, #31
    e088:	d502      	bpl.n	e090 <_ZNSiD4Ev+0x40>
    e08a:	4620      	mov	r0, r4
    e08c:	f7f4 fa3f 	bl	250e <operator delete(void*)>
    e090:	4620      	mov	r0, r4
    e092:	bd38      	pop	{r3, r4, r5, pc}
    e094:	0001bcec 	.word	0x0001bcec
    e098:	0001bd00 	.word	0x0001bd00

0000e09c <std::basic_istream<char, std::char_traits<char> >::~basic_istream()>:
    e09c:	2102      	movs	r1, #2
    e09e:	2200      	movs	r2, #0
    e0a0:	f7ff bfd6 	b.w	e050 <_ZNSiD4Ev>

0000e0a4 <virtual thunk to std::basic_istream<char, std::char_traits<char> >::~basic_istream()>:
    e0a4:	6803      	ldr	r3, [r0, #0]
    e0a6:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e0aa:	4418      	add	r0, r3
    e0ac:	e7f6      	b.n	e09c <std::basic_istream<char, std::char_traits<char> >::~basic_istream()>

0000e0ae <std::basic_istream<char, std::char_traits<char> >::~basic_istream()>:
    e0ae:	b510      	push	{r4, lr}
    e0b0:	4604      	mov	r4, r0
    e0b2:	f7ff fff3 	bl	e09c <std::basic_istream<char, std::char_traits<char> >::~basic_istream()>
    e0b6:	4620      	mov	r0, r4
    e0b8:	f7f4 fa29 	bl	250e <operator delete(void*)>
    e0bc:	4620      	mov	r0, r4
    e0be:	bd10      	pop	{r4, pc}

0000e0c0 <virtual thunk to std::basic_istream<char, std::char_traits<char> >::~basic_istream()>:
    e0c0:	6803      	ldr	r3, [r0, #0]
    e0c2:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e0c6:	4418      	add	r0, r3
    e0c8:	e7f1      	b.n	e0ae <std::basic_istream<char, std::char_traits<char> >::~basic_istream()>

0000e0ca <std::basic_istream<char, std::char_traits<char> >::~basic_istream()>:
    e0ca:	460a      	mov	r2, r1
    e0cc:	2100      	movs	r1, #0
    e0ce:	f7ff bfbf 	b.w	e050 <_ZNSiD4Ev>

0000e0d2 <std::basic_istream<wchar_t, std::char_traits<wchar_t> >::basic_istream(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>:
    e0d2:	b510      	push	{r4, lr}
    e0d4:	4604      	mov	r4, r0
    e0d6:	680b      	ldr	r3, [r1, #0]
    e0d8:	6003      	str	r3, [r0, #0]
    e0da:	6848      	ldr	r0, [r1, #4]
    e0dc:	f853 1c0c 	ldr.w	r1, [r3, #-12]
    e0e0:	5060      	str	r0, [r4, r1]
    e0e2:	2100      	movs	r1, #0
    e0e4:	6061      	str	r1, [r4, #4]
    e0e6:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    e0ea:	4611      	mov	r1, r2
    e0ec:	4420      	add	r0, r4
    e0ee:	f7f4 fba8 	bl	2842 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::init(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>
    e0f2:	4620      	mov	r0, r4
    e0f4:	bd10      	pop	{r4, pc}
	...

0000e0f8 <std::basic_istream<wchar_t, std::char_traits<wchar_t> >::basic_istream(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>:
    e0f8:	b570      	push	{r4, r5, r6, lr}
    e0fa:	4604      	mov	r4, r0
    e0fc:	460e      	mov	r6, r1
    e0fe:	f100 0508 	add.w	r5, r0, #8
    e102:	4628      	mov	r0, r5
    e104:	f7f4 fb68 	bl	27d8 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::basic_ios()>
    e108:	4b05      	ldr	r3, [pc, #20]	; (e120 <std::basic_istream<wchar_t, std::char_traits<wchar_t> >::basic_istream(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)+0x28>)
    e10a:	4628      	mov	r0, r5
    e10c:	6023      	str	r3, [r4, #0]
    e10e:	3314      	adds	r3, #20
    e110:	60a3      	str	r3, [r4, #8]
    e112:	2300      	movs	r3, #0
    e114:	6063      	str	r3, [r4, #4]
    e116:	4631      	mov	r1, r6
    e118:	f7f4 fb93 	bl	2842 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::init(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>
    e11c:	4620      	mov	r0, r4
    e11e:	bd70      	pop	{r4, r5, r6, pc}
    e120:	0001bd1c 	.word	0x0001bd1c

0000e124 <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev>:
    e124:	b538      	push	{r3, r4, r5, lr}
    e126:	4604      	mov	r4, r0
    e128:	460d      	mov	r5, r1
    e12a:	b909      	cbnz	r1, e130 <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev+0xc>
    e12c:	6813      	ldr	r3, [r2, #0]
    e12e:	e000      	b.n	e132 <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev+0xe>
    e130:	4b0d      	ldr	r3, [pc, #52]	; (e168 <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev+0x44>)
    e132:	6023      	str	r3, [r4, #0]
    e134:	b915      	cbnz	r5, e13c <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev+0x18>
    e136:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e13a:	e000      	b.n	e13e <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev+0x1a>
    e13c:	2308      	movs	r3, #8
    e13e:	4423      	add	r3, r4
    e140:	b90d      	cbnz	r5, e146 <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev+0x22>
    e142:	6852      	ldr	r2, [r2, #4]
    e144:	e000      	b.n	e148 <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev+0x24>
    e146:	4a09      	ldr	r2, [pc, #36]	; (e16c <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev+0x48>)
    e148:	601a      	str	r2, [r3, #0]
    e14a:	2300      	movs	r3, #0
    e14c:	07aa      	lsls	r2, r5, #30
    e14e:	6063      	str	r3, [r4, #4]
    e150:	d503      	bpl.n	e15a <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev+0x36>
    e152:	f104 0008 	add.w	r0, r4, #8
    e156:	f7f4 faab 	bl	26b0 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()>
    e15a:	07eb      	lsls	r3, r5, #31
    e15c:	d502      	bpl.n	e164 <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev+0x40>
    e15e:	4620      	mov	r0, r4
    e160:	f7f4 f9d5 	bl	250e <operator delete(void*)>
    e164:	4620      	mov	r0, r4
    e166:	bd38      	pop	{r3, r4, r5, pc}
    e168:	0001bd1c 	.word	0x0001bd1c
    e16c:	0001bd30 	.word	0x0001bd30

0000e170 <std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()>:
    e170:	2102      	movs	r1, #2
    e172:	2200      	movs	r2, #0
    e174:	f7ff bfd6 	b.w	e124 <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev>

0000e178 <virtual thunk to std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()>:
    e178:	6803      	ldr	r3, [r0, #0]
    e17a:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e17e:	4418      	add	r0, r3
    e180:	e7f6      	b.n	e170 <std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()>

0000e182 <std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()>:
    e182:	b510      	push	{r4, lr}
    e184:	4604      	mov	r4, r0
    e186:	f7ff fff3 	bl	e170 <std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()>
    e18a:	4620      	mov	r0, r4
    e18c:	f7f4 f9bf 	bl	250e <operator delete(void*)>
    e190:	4620      	mov	r0, r4
    e192:	bd10      	pop	{r4, pc}

0000e194 <virtual thunk to std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()>:
    e194:	6803      	ldr	r3, [r0, #0]
    e196:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e19a:	4418      	add	r0, r3
    e19c:	e7f1      	b.n	e182 <std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()>

0000e19e <std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()>:
    e19e:	460a      	mov	r2, r1
    e1a0:	2100      	movs	r1, #0
    e1a2:	f7ff bfbf 	b.w	e124 <_ZNSt13basic_istreamIwSt11char_traitsIwEED4Ev>

0000e1a6 <std::basic_streambuf<char, std::char_traits<char> >::imbue(std::locale const&)>:
    e1a6:	4770      	bx	lr

0000e1a8 <std::basic_streambuf<char, std::char_traits<char> >::setbuf(char*, int)>:
    e1a8:	4770      	bx	lr

0000e1aa <std::basic_streambuf<char, std::char_traits<char> >::seekoff(long long, std::_Ios_Seekdir, std::_Ios_Openmode)>:
    e1aa:	b530      	push	{r4, r5, lr}
    e1ac:	2200      	movs	r2, #0
    e1ae:	f04f 34ff 	mov.w	r4, #4294967295
    e1b2:	f04f 35ff 	mov.w	r5, #4294967295
    e1b6:	e9c0 4500 	strd	r4, r5, [r0]
    e1ba:	6082      	str	r2, [r0, #8]
    e1bc:	60c2      	str	r2, [r0, #12]
    e1be:	bd30      	pop	{r4, r5, pc}

0000e1c0 <std::basic_streambuf<char, std::char_traits<char> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)>:
    e1c0:	b082      	sub	sp, #8
    e1c2:	e88d 000c 	stmia.w	sp, {r2, r3}
    e1c6:	f04f 33ff 	mov.w	r3, #4294967295
    e1ca:	f04f 32ff 	mov.w	r2, #4294967295
    e1ce:	e9c0 2300 	strd	r2, r3, [r0]
    e1d2:	2300      	movs	r3, #0
    e1d4:	6083      	str	r3, [r0, #8]
    e1d6:	60c3      	str	r3, [r0, #12]
    e1d8:	b002      	add	sp, #8
    e1da:	4770      	bx	lr

0000e1dc <std::basic_streambuf<char, std::char_traits<char> >::sync()>:
    e1dc:	2000      	movs	r0, #0
    e1de:	4770      	bx	lr

0000e1e0 <std::basic_streambuf<char, std::char_traits<char> >::showmanyc()>:
    e1e0:	2000      	movs	r0, #0
    e1e2:	4770      	bx	lr

0000e1e4 <std::basic_streambuf<char, std::char_traits<char> >::underflow()>:
    e1e4:	f04f 30ff 	mov.w	r0, #4294967295
    e1e8:	4770      	bx	lr

0000e1ea <std::basic_streambuf<char, std::char_traits<char> >::uflow()>:
    e1ea:	6803      	ldr	r3, [r0, #0]
    e1ec:	b510      	push	{r4, lr}
    e1ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    e1f0:	4604      	mov	r4, r0
    e1f2:	4798      	blx	r3
    e1f4:	1c43      	adds	r3, r0, #1
    e1f6:	bf1e      	ittt	ne
    e1f8:	68a3      	ldrne	r3, [r4, #8]
    e1fa:	f813 0b01 	ldrbne.w	r0, [r3], #1
    e1fe:	60a3      	strne	r3, [r4, #8]
    e200:	bd10      	pop	{r4, pc}

0000e202 <std::basic_streambuf<char, std::char_traits<char> >::pbackfail(int)>:
    e202:	f04f 30ff 	mov.w	r0, #4294967295
    e206:	4770      	bx	lr

0000e208 <std::basic_streambuf<char, std::char_traits<char> >::overflow(int)>:
    e208:	f04f 30ff 	mov.w	r0, #4294967295
    e20c:	4770      	bx	lr

0000e20e <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::imbue(std::locale const&)>:
    e20e:	4770      	bx	lr

0000e210 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::setbuf(wchar_t*, int)>:
    e210:	4770      	bx	lr

0000e212 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long long, std::_Ios_Seekdir, std::_Ios_Openmode)>:
    e212:	b530      	push	{r4, r5, lr}
    e214:	2200      	movs	r2, #0
    e216:	f04f 34ff 	mov.w	r4, #4294967295
    e21a:	f04f 35ff 	mov.w	r5, #4294967295
    e21e:	e9c0 4500 	strd	r4, r5, [r0]
    e222:	6082      	str	r2, [r0, #8]
    e224:	60c2      	str	r2, [r0, #12]
    e226:	bd30      	pop	{r4, r5, pc}

0000e228 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)>:
    e228:	b082      	sub	sp, #8
    e22a:	e88d 000c 	stmia.w	sp, {r2, r3}
    e22e:	f04f 33ff 	mov.w	r3, #4294967295
    e232:	f04f 32ff 	mov.w	r2, #4294967295
    e236:	e9c0 2300 	strd	r2, r3, [r0]
    e23a:	2300      	movs	r3, #0
    e23c:	6083      	str	r3, [r0, #8]
    e23e:	60c3      	str	r3, [r0, #12]
    e240:	b002      	add	sp, #8
    e242:	4770      	bx	lr

0000e244 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sync()>:
    e244:	2000      	movs	r0, #0
    e246:	4770      	bx	lr

0000e248 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::showmanyc()>:
    e248:	2000      	movs	r0, #0
    e24a:	4770      	bx	lr

0000e24c <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::underflow()>:
    e24c:	f04f 30ff 	mov.w	r0, #4294967295
    e250:	4770      	bx	lr

0000e252 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)>:
    e252:	f04f 30ff 	mov.w	r0, #4294967295
    e256:	4770      	bx	lr

0000e258 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::overflow(unsigned int)>:
    e258:	f04f 30ff 	mov.w	r0, #4294967295
    e25c:	4770      	bx	lr
	...

0000e260 <std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()>:
    e260:	b510      	push	{r4, lr}
    e262:	4604      	mov	r4, r0
    e264:	4b03      	ldr	r3, [pc, #12]	; (e274 <std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()+0x14>)
    e266:	f840 3b1c 	str.w	r3, [r0], #28
    e26a:	f001 ff5d 	bl	10128 <std::locale::~locale()>
    e26e:	4620      	mov	r0, r4
    e270:	bd10      	pop	{r4, pc}
    e272:	bf00      	nop
    e274:	0001bda0 	.word	0x0001bda0

0000e278 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()>:
    e278:	b510      	push	{r4, lr}
    e27a:	4604      	mov	r4, r0
    e27c:	4b03      	ldr	r3, [pc, #12]	; (e28c <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()+0x14>)
    e27e:	f840 3b1c 	str.w	r3, [r0], #28
    e282:	f001 ff51 	bl	10128 <std::locale::~locale()>
    e286:	4620      	mov	r0, r4
    e288:	bd10      	pop	{r4, pc}
    e28a:	bf00      	nop
    e28c:	0001bde0 	.word	0x0001bde0

0000e290 <std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()>:
    e290:	b510      	push	{r4, lr}
    e292:	4604      	mov	r4, r0
    e294:	f7ff ffe4 	bl	e260 <std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()>
    e298:	4620      	mov	r0, r4
    e29a:	f7f4 f938 	bl	250e <operator delete(void*)>
    e29e:	4620      	mov	r0, r4
    e2a0:	bd10      	pop	{r4, pc}

0000e2a2 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()>:
    e2a2:	b510      	push	{r4, lr}
    e2a4:	4604      	mov	r4, r0
    e2a6:	f7ff ffe7 	bl	e278 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()>
    e2aa:	4620      	mov	r0, r4
    e2ac:	f7f4 f92f 	bl	250e <operator delete(void*)>
    e2b0:	4620      	mov	r0, r4
    e2b2:	bd10      	pop	{r4, pc}

0000e2b4 <std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, int)>:
    e2b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    e2b8:	4606      	mov	r6, r0
    e2ba:	460f      	mov	r7, r1
    e2bc:	4690      	mov	r8, r2
    e2be:	2500      	movs	r5, #0
    e2c0:	4545      	cmp	r5, r8
    e2c2:	da1d      	bge.n	e300 <std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, int)+0x4c>
    e2c4:	6970      	ldr	r0, [r6, #20]
    e2c6:	69b4      	ldr	r4, [r6, #24]
    e2c8:	1a24      	subs	r4, r4, r0
    e2ca:	d00f      	beq.n	e2ec <std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, int)+0x38>
    e2cc:	ebc5 0308 	rsb	r3, r5, r8
    e2d0:	429c      	cmp	r4, r3
    e2d2:	bfa8      	it	ge
    e2d4:	461c      	movge	r4, r3
    e2d6:	4639      	mov	r1, r7
    e2d8:	4622      	mov	r2, r4
    e2da:	f005 f9d7 	bl	1368c <memcpy>
    e2de:	6973      	ldr	r3, [r6, #20]
    e2e0:	4425      	add	r5, r4
    e2e2:	4427      	add	r7, r4
    e2e4:	4545      	cmp	r5, r8
    e2e6:	441c      	add	r4, r3
    e2e8:	6174      	str	r4, [r6, #20]
    e2ea:	dae9      	bge.n	e2c0 <std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, int)+0xc>
    e2ec:	6833      	ldr	r3, [r6, #0]
    e2ee:	4630      	mov	r0, r6
    e2f0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    e2f2:	7839      	ldrb	r1, [r7, #0]
    e2f4:	4798      	blx	r3
    e2f6:	3001      	adds	r0, #1
    e2f8:	d002      	beq.n	e300 <std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, int)+0x4c>
    e2fa:	3501      	adds	r5, #1
    e2fc:	3701      	adds	r7, #1
    e2fe:	e7df      	b.n	e2c0 <std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, int)+0xc>
    e300:	4628      	mov	r0, r5
    e302:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000e306 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, int)>:
    e306:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    e30a:	4606      	mov	r6, r0
    e30c:	460f      	mov	r7, r1
    e30e:	4690      	mov	r8, r2
    e310:	2500      	movs	r5, #0
    e312:	4545      	cmp	r5, r8
    e314:	da1f      	bge.n	e356 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, int)+0x50>
    e316:	6970      	ldr	r0, [r6, #20]
    e318:	69b4      	ldr	r4, [r6, #24]
    e31a:	1a24      	subs	r4, r4, r0
    e31c:	10a4      	asrs	r4, r4, #2
    e31e:	d010      	beq.n	e342 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, int)+0x3c>
    e320:	ebc5 0308 	rsb	r3, r5, r8
    e324:	429c      	cmp	r4, r3
    e326:	bfa8      	it	ge
    e328:	461c      	movge	r4, r3
    e32a:	4639      	mov	r1, r7
    e32c:	4622      	mov	r2, r4
    e32e:	f008 ff38 	bl	171a2 <wmemcpy>
    e332:	6973      	ldr	r3, [r6, #20]
    e334:	4425      	add	r5, r4
    e336:	00a4      	lsls	r4, r4, #2
    e338:	4427      	add	r7, r4
    e33a:	4545      	cmp	r5, r8
    e33c:	441c      	add	r4, r3
    e33e:	6174      	str	r4, [r6, #20]
    e340:	dae7      	bge.n	e312 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, int)+0xc>
    e342:	6833      	ldr	r3, [r6, #0]
    e344:	4630      	mov	r0, r6
    e346:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    e348:	6839      	ldr	r1, [r7, #0]
    e34a:	4798      	blx	r3
    e34c:	3001      	adds	r0, #1
    e34e:	d002      	beq.n	e356 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, int)+0x50>
    e350:	3501      	adds	r5, #1
    e352:	3704      	adds	r7, #4
    e354:	e7dd      	b.n	e312 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, int)+0xc>
    e356:	4628      	mov	r0, r5
    e358:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000e35c <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::uflow()>:
    e35c:	6803      	ldr	r3, [r0, #0]
    e35e:	b510      	push	{r4, lr}
    e360:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    e362:	4604      	mov	r4, r0
    e364:	4798      	blx	r3
    e366:	1c43      	adds	r3, r0, #1
    e368:	bf1e      	ittt	ne
    e36a:	68a3      	ldrne	r3, [r4, #8]
    e36c:	f853 0b04 	ldrne.w	r0, [r3], #4
    e370:	60a3      	strne	r3, [r4, #8]
    e372:	bd10      	pop	{r4, pc}

0000e374 <std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, int)>:
    e374:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    e378:	4606      	mov	r6, r0
    e37a:	460f      	mov	r7, r1
    e37c:	4690      	mov	r8, r2
    e37e:	2500      	movs	r5, #0
    e380:	4545      	cmp	r5, r8
    e382:	da1d      	bge.n	e3c0 <std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, int)+0x4c>
    e384:	68b1      	ldr	r1, [r6, #8]
    e386:	68f4      	ldr	r4, [r6, #12]
    e388:	1a64      	subs	r4, r4, r1
    e38a:	d00f      	beq.n	e3ac <std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, int)+0x38>
    e38c:	ebc5 0308 	rsb	r3, r5, r8
    e390:	429c      	cmp	r4, r3
    e392:	bfa8      	it	ge
    e394:	461c      	movge	r4, r3
    e396:	4638      	mov	r0, r7
    e398:	4622      	mov	r2, r4
    e39a:	f005 f977 	bl	1368c <memcpy>
    e39e:	68b3      	ldr	r3, [r6, #8]
    e3a0:	4425      	add	r5, r4
    e3a2:	4427      	add	r7, r4
    e3a4:	4545      	cmp	r5, r8
    e3a6:	441c      	add	r4, r3
    e3a8:	60b4      	str	r4, [r6, #8]
    e3aa:	dae9      	bge.n	e380 <std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, int)+0xc>
    e3ac:	6833      	ldr	r3, [r6, #0]
    e3ae:	4630      	mov	r0, r6
    e3b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    e3b2:	4798      	blx	r3
    e3b4:	1c43      	adds	r3, r0, #1
    e3b6:	d003      	beq.n	e3c0 <std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, int)+0x4c>
    e3b8:	7038      	strb	r0, [r7, #0]
    e3ba:	3501      	adds	r5, #1
    e3bc:	3701      	adds	r7, #1
    e3be:	e7df      	b.n	e380 <std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, int)+0xc>
    e3c0:	4628      	mov	r0, r5
    e3c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000e3c6 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)>:
    e3c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    e3ca:	4606      	mov	r6, r0
    e3cc:	460f      	mov	r7, r1
    e3ce:	4690      	mov	r8, r2
    e3d0:	2500      	movs	r5, #0
    e3d2:	4545      	cmp	r5, r8
    e3d4:	da1f      	bge.n	e416 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)+0x50>
    e3d6:	68b1      	ldr	r1, [r6, #8]
    e3d8:	68f4      	ldr	r4, [r6, #12]
    e3da:	1a64      	subs	r4, r4, r1
    e3dc:	10a4      	asrs	r4, r4, #2
    e3de:	d010      	beq.n	e402 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)+0x3c>
    e3e0:	ebc5 0308 	rsb	r3, r5, r8
    e3e4:	429c      	cmp	r4, r3
    e3e6:	bfa8      	it	ge
    e3e8:	461c      	movge	r4, r3
    e3ea:	4638      	mov	r0, r7
    e3ec:	4622      	mov	r2, r4
    e3ee:	f008 fed8 	bl	171a2 <wmemcpy>
    e3f2:	68b3      	ldr	r3, [r6, #8]
    e3f4:	4425      	add	r5, r4
    e3f6:	00a4      	lsls	r4, r4, #2
    e3f8:	4427      	add	r7, r4
    e3fa:	4545      	cmp	r5, r8
    e3fc:	441c      	add	r4, r3
    e3fe:	60b4      	str	r4, [r6, #8]
    e400:	dae7      	bge.n	e3d2 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)+0xc>
    e402:	6833      	ldr	r3, [r6, #0]
    e404:	4630      	mov	r0, r6
    e406:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    e408:	4798      	blx	r3
    e40a:	1c43      	adds	r3, r0, #1
    e40c:	d003      	beq.n	e416 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)+0x50>
    e40e:	6038      	str	r0, [r7, #0]
    e410:	3501      	adds	r5, #1
    e412:	3704      	adds	r7, #4
    e414:	e7dd      	b.n	e3d2 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, int)+0xc>
    e416:	4628      	mov	r0, r5
    e418:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000e41c <std::basic_streambuf<char, std::char_traits<char> >::pubsync()>:
    e41c:	6803      	ldr	r3, [r0, #0]
    e41e:	699b      	ldr	r3, [r3, #24]
    e420:	4718      	bx	r3

0000e422 <std::basic_streambuf<char, std::char_traits<char> >::sbumpc()>:
    e422:	6883      	ldr	r3, [r0, #8]
    e424:	68c1      	ldr	r1, [r0, #12]
    e426:	4602      	mov	r2, r0
    e428:	428b      	cmp	r3, r1
    e42a:	d302      	bcc.n	e432 <std::basic_streambuf<char, std::char_traits<char> >::sbumpc()+0x10>
    e42c:	6803      	ldr	r3, [r0, #0]
    e42e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    e430:	4718      	bx	r3
    e432:	f813 0b01 	ldrb.w	r0, [r3], #1
    e436:	6093      	str	r3, [r2, #8]
    e438:	4770      	bx	lr

0000e43a <std::basic_streambuf<char, std::char_traits<char> >::sgetc()>:
    e43a:	6882      	ldr	r2, [r0, #8]
    e43c:	68c1      	ldr	r1, [r0, #12]
    e43e:	428a      	cmp	r2, r1
    e440:	d302      	bcc.n	e448 <std::basic_streambuf<char, std::char_traits<char> >::sgetc()+0xe>
    e442:	6803      	ldr	r3, [r0, #0]
    e444:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    e446:	4718      	bx	r3
    e448:	7810      	ldrb	r0, [r2, #0]
    e44a:	4770      	bx	lr

0000e44c <std::basic_streambuf<char, std::char_traits<char> >::sputn(char const*, int)>:
    e44c:	6803      	ldr	r3, [r0, #0]
    e44e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    e450:	4718      	bx	r3
	...

0000e454 <std::basic_streambuf<char, std::char_traits<char> >::basic_streambuf()>:
    e454:	b510      	push	{r4, lr}
    e456:	4604      	mov	r4, r0
    e458:	4b0a      	ldr	r3, [pc, #40]	; (e484 <std::basic_streambuf<char, std::char_traits<char> >::basic_streambuf()+0x30>)
    e45a:	301c      	adds	r0, #28
    e45c:	f840 3c1c 	str.w	r3, [r0, #-28]
    e460:	2300      	movs	r3, #0
    e462:	f840 3c18 	str.w	r3, [r0, #-24]
    e466:	f840 3c14 	str.w	r3, [r0, #-20]
    e46a:	f840 3c10 	str.w	r3, [r0, #-16]
    e46e:	f840 3c0c 	str.w	r3, [r0, #-12]
    e472:	f840 3c08 	str.w	r3, [r0, #-8]
    e476:	f840 3c04 	str.w	r3, [r0, #-4]
    e47a:	f002 fe77 	bl	1116c <std::locale::locale()>
    e47e:	4620      	mov	r0, r4
    e480:	bd10      	pop	{r4, pc}
    e482:	bf00      	nop
    e484:	0001bda0 	.word	0x0001bda0

0000e488 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::pubsync()>:
    e488:	6803      	ldr	r3, [r0, #0]
    e48a:	699b      	ldr	r3, [r3, #24]
    e48c:	4718      	bx	r3

0000e48e <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sbumpc()>:
    e48e:	6883      	ldr	r3, [r0, #8]
    e490:	68c1      	ldr	r1, [r0, #12]
    e492:	4602      	mov	r2, r0
    e494:	428b      	cmp	r3, r1
    e496:	d302      	bcc.n	e49e <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sbumpc()+0x10>
    e498:	6803      	ldr	r3, [r0, #0]
    e49a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    e49c:	4718      	bx	r3
    e49e:	f853 0b04 	ldr.w	r0, [r3], #4
    e4a2:	6093      	str	r3, [r2, #8]
    e4a4:	4770      	bx	lr

0000e4a6 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sgetc()>:
    e4a6:	6882      	ldr	r2, [r0, #8]
    e4a8:	68c1      	ldr	r1, [r0, #12]
    e4aa:	428a      	cmp	r2, r1
    e4ac:	d302      	bcc.n	e4b4 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sgetc()+0xe>
    e4ae:	6803      	ldr	r3, [r0, #0]
    e4b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    e4b2:	4718      	bx	r3
    e4b4:	6810      	ldr	r0, [r2, #0]
    e4b6:	4770      	bx	lr

0000e4b8 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sputn(wchar_t const*, int)>:
    e4b8:	6803      	ldr	r3, [r0, #0]
    e4ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    e4bc:	4718      	bx	r3
	...

0000e4c0 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::basic_streambuf()>:
    e4c0:	b510      	push	{r4, lr}
    e4c2:	4604      	mov	r4, r0
    e4c4:	4b0a      	ldr	r3, [pc, #40]	; (e4f0 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::basic_streambuf()+0x30>)
    e4c6:	301c      	adds	r0, #28
    e4c8:	f840 3c1c 	str.w	r3, [r0, #-28]
    e4cc:	2300      	movs	r3, #0
    e4ce:	f840 3c18 	str.w	r3, [r0, #-24]
    e4d2:	f840 3c14 	str.w	r3, [r0, #-20]
    e4d6:	f840 3c10 	str.w	r3, [r0, #-16]
    e4da:	f840 3c0c 	str.w	r3, [r0, #-12]
    e4de:	f840 3c08 	str.w	r3, [r0, #-8]
    e4e2:	f840 3c04 	str.w	r3, [r0, #-4]
    e4e6:	f002 fe41 	bl	1116c <std::locale::locale()>
    e4ea:	4620      	mov	r0, r4
    e4ec:	bd10      	pop	{r4, pc}
    e4ee:	bf00      	nop
    e4f0:	0001bde0 	.word	0x0001bde0

0000e4f4 <std::basic_ostream<char, std::char_traits<char> >::basic_ostream(std::basic_streambuf<char, std::char_traits<char> >*)>:
    e4f4:	b510      	push	{r4, lr}
    e4f6:	4604      	mov	r4, r0
    e4f8:	680b      	ldr	r3, [r1, #0]
    e4fa:	6003      	str	r3, [r0, #0]
    e4fc:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    e500:	684b      	ldr	r3, [r1, #4]
    e502:	4611      	mov	r1, r2
    e504:	5023      	str	r3, [r4, r0]
    e506:	4420      	add	r0, r4
    e508:	f7f4 f938 	bl	277c <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)>
    e50c:	4620      	mov	r0, r4
    e50e:	bd10      	pop	{r4, pc}

0000e510 <std::basic_ostream<char, std::char_traits<char> >::basic_ostream(std::basic_streambuf<char, std::char_traits<char> >*)>:
    e510:	b570      	push	{r4, r5, r6, lr}
    e512:	4604      	mov	r4, r0
    e514:	460e      	mov	r6, r1
    e516:	1d05      	adds	r5, r0, #4
    e518:	4628      	mov	r0, r5
    e51a:	f7f4 f8fb 	bl	2714 <std::basic_ios<char, std::char_traits<char> >::basic_ios()>
    e51e:	4b05      	ldr	r3, [pc, #20]	; (e534 <std::basic_ostream<char, std::char_traits<char> >::basic_ostream(std::basic_streambuf<char, std::char_traits<char> >*)+0x24>)
    e520:	4628      	mov	r0, r5
    e522:	6023      	str	r3, [r4, #0]
    e524:	3314      	adds	r3, #20
    e526:	6063      	str	r3, [r4, #4]
    e528:	4631      	mov	r1, r6
    e52a:	f7f4 f927 	bl	277c <std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)>
    e52e:	4620      	mov	r0, r4
    e530:	bd70      	pop	{r4, r5, r6, pc}
    e532:	bf00      	nop
    e534:	0001be94 	.word	0x0001be94

0000e538 <_ZNSoD4Ev>:
    e538:	b538      	push	{r3, r4, r5, lr}
    e53a:	4604      	mov	r4, r0
    e53c:	460d      	mov	r5, r1
    e53e:	b909      	cbnz	r1, e544 <_ZNSoD4Ev+0xc>
    e540:	6813      	ldr	r3, [r2, #0]
    e542:	e000      	b.n	e546 <_ZNSoD4Ev+0xe>
    e544:	4b0c      	ldr	r3, [pc, #48]	; (e578 <_ZNSoD4Ev+0x40>)
    e546:	6023      	str	r3, [r4, #0]
    e548:	b915      	cbnz	r5, e550 <_ZNSoD4Ev+0x18>
    e54a:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e54e:	e000      	b.n	e552 <_ZNSoD4Ev+0x1a>
    e550:	2304      	movs	r3, #4
    e552:	4423      	add	r3, r4
    e554:	b90d      	cbnz	r5, e55a <_ZNSoD4Ev+0x22>
    e556:	6852      	ldr	r2, [r2, #4]
    e558:	e000      	b.n	e55c <_ZNSoD4Ev+0x24>
    e55a:	4a08      	ldr	r2, [pc, #32]	; (e57c <_ZNSoD4Ev+0x44>)
    e55c:	601a      	str	r2, [r3, #0]
    e55e:	07aa      	lsls	r2, r5, #30
    e560:	d502      	bpl.n	e568 <_ZNSoD4Ev+0x30>
    e562:	1d20      	adds	r0, r4, #4
    e564:	f7f4 f89a 	bl	269c <std::basic_ios<char, std::char_traits<char> >::~basic_ios()>
    e568:	07eb      	lsls	r3, r5, #31
    e56a:	d502      	bpl.n	e572 <_ZNSoD4Ev+0x3a>
    e56c:	4620      	mov	r0, r4
    e56e:	f7f3 ffce 	bl	250e <operator delete(void*)>
    e572:	4620      	mov	r0, r4
    e574:	bd38      	pop	{r3, r4, r5, pc}
    e576:	bf00      	nop
    e578:	0001be94 	.word	0x0001be94
    e57c:	0001bea8 	.word	0x0001bea8

0000e580 <std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()>:
    e580:	2102      	movs	r1, #2
    e582:	2200      	movs	r2, #0
    e584:	f7ff bfd8 	b.w	e538 <_ZNSoD4Ev>

0000e588 <virtual thunk to std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()>:
    e588:	6803      	ldr	r3, [r0, #0]
    e58a:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e58e:	4418      	add	r0, r3
    e590:	e7f6      	b.n	e580 <std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()>

0000e592 <std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()>:
    e592:	b510      	push	{r4, lr}
    e594:	4604      	mov	r4, r0
    e596:	f7ff fff3 	bl	e580 <std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()>
    e59a:	4620      	mov	r0, r4
    e59c:	f7f3 ffb7 	bl	250e <operator delete(void*)>
    e5a0:	4620      	mov	r0, r4
    e5a2:	bd10      	pop	{r4, pc}

0000e5a4 <virtual thunk to std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()>:
    e5a4:	6803      	ldr	r3, [r0, #0]
    e5a6:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e5aa:	4418      	add	r0, r3
    e5ac:	e7f1      	b.n	e592 <std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()>

0000e5ae <std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()>:
    e5ae:	460a      	mov	r2, r1
    e5b0:	2100      	movs	r1, #0
    e5b2:	f7ff bfc1 	b.w	e538 <_ZNSoD4Ev>

0000e5b6 <std::ostream::flush()>:
    e5b6:	6803      	ldr	r3, [r0, #0]
    e5b8:	b510      	push	{r4, lr}
    e5ba:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e5be:	4604      	mov	r4, r0
    e5c0:	4403      	add	r3, r0
    e5c2:	6f98      	ldr	r0, [r3, #120]	; 0x78
    e5c4:	b150      	cbz	r0, e5dc <std::ostream::flush()+0x26>
    e5c6:	f7ff ff29 	bl	e41c <std::basic_streambuf<char, std::char_traits<char> >::pubsync()>
    e5ca:	3001      	adds	r0, #1
    e5cc:	d106      	bne.n	e5dc <std::ostream::flush()+0x26>
    e5ce:	6823      	ldr	r3, [r4, #0]
    e5d0:	2101      	movs	r1, #1
    e5d2:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    e5d6:	4420      	add	r0, r4
    e5d8:	f7f4 f896 	bl	2708 <std::basic_ios<char, std::char_traits<char> >::setstate(std::_Ios_Iostate)>
    e5dc:	4620      	mov	r0, r4
    e5de:	bd10      	pop	{r4, pc}

0000e5e0 <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::basic_ostream(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>:
    e5e0:	b510      	push	{r4, lr}
    e5e2:	4604      	mov	r4, r0
    e5e4:	680b      	ldr	r3, [r1, #0]
    e5e6:	6003      	str	r3, [r0, #0]
    e5e8:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    e5ec:	684b      	ldr	r3, [r1, #4]
    e5ee:	4611      	mov	r1, r2
    e5f0:	5023      	str	r3, [r4, r0]
    e5f2:	4420      	add	r0, r4
    e5f4:	f7f4 f925 	bl	2842 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::init(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>
    e5f8:	4620      	mov	r0, r4
    e5fa:	bd10      	pop	{r4, pc}

0000e5fc <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::basic_ostream(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>:
    e5fc:	b570      	push	{r4, r5, r6, lr}
    e5fe:	4604      	mov	r4, r0
    e600:	460e      	mov	r6, r1
    e602:	1d05      	adds	r5, r0, #4
    e604:	4628      	mov	r0, r5
    e606:	f7f4 f8e7 	bl	27d8 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::basic_ios()>
    e60a:	4b05      	ldr	r3, [pc, #20]	; (e620 <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::basic_ostream(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)+0x24>)
    e60c:	4628      	mov	r0, r5
    e60e:	6023      	str	r3, [r4, #0]
    e610:	3314      	adds	r3, #20
    e612:	6063      	str	r3, [r4, #4]
    e614:	4631      	mov	r1, r6
    e616:	f7f4 f914 	bl	2842 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::init(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)>
    e61a:	4620      	mov	r0, r4
    e61c:	bd70      	pop	{r4, r5, r6, pc}
    e61e:	bf00      	nop
    e620:	0001bec4 	.word	0x0001bec4

0000e624 <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev>:
    e624:	b538      	push	{r3, r4, r5, lr}
    e626:	4604      	mov	r4, r0
    e628:	460d      	mov	r5, r1
    e62a:	b909      	cbnz	r1, e630 <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev+0xc>
    e62c:	6813      	ldr	r3, [r2, #0]
    e62e:	e000      	b.n	e632 <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev+0xe>
    e630:	4b0c      	ldr	r3, [pc, #48]	; (e664 <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev+0x40>)
    e632:	6023      	str	r3, [r4, #0]
    e634:	b915      	cbnz	r5, e63c <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev+0x18>
    e636:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e63a:	e000      	b.n	e63e <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev+0x1a>
    e63c:	2304      	movs	r3, #4
    e63e:	4423      	add	r3, r4
    e640:	b90d      	cbnz	r5, e646 <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev+0x22>
    e642:	6852      	ldr	r2, [r2, #4]
    e644:	e000      	b.n	e648 <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev+0x24>
    e646:	4a08      	ldr	r2, [pc, #32]	; (e668 <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev+0x44>)
    e648:	601a      	str	r2, [r3, #0]
    e64a:	07aa      	lsls	r2, r5, #30
    e64c:	d502      	bpl.n	e654 <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev+0x30>
    e64e:	1d20      	adds	r0, r4, #4
    e650:	f7f4 f82e 	bl	26b0 <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()>
    e654:	07eb      	lsls	r3, r5, #31
    e656:	d502      	bpl.n	e65e <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev+0x3a>
    e658:	4620      	mov	r0, r4
    e65a:	f7f3 ff58 	bl	250e <operator delete(void*)>
    e65e:	4620      	mov	r0, r4
    e660:	bd38      	pop	{r3, r4, r5, pc}
    e662:	bf00      	nop
    e664:	0001bec4 	.word	0x0001bec4
    e668:	0001bed8 	.word	0x0001bed8

0000e66c <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()>:
    e66c:	2102      	movs	r1, #2
    e66e:	2200      	movs	r2, #0
    e670:	f7ff bfd8 	b.w	e624 <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev>

0000e674 <virtual thunk to std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()>:
    e674:	6803      	ldr	r3, [r0, #0]
    e676:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e67a:	4418      	add	r0, r3
    e67c:	e7f6      	b.n	e66c <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()>

0000e67e <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()>:
    e67e:	b510      	push	{r4, lr}
    e680:	4604      	mov	r4, r0
    e682:	f7ff fff3 	bl	e66c <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()>
    e686:	4620      	mov	r0, r4
    e688:	f7f3 ff41 	bl	250e <operator delete(void*)>
    e68c:	4620      	mov	r0, r4
    e68e:	bd10      	pop	{r4, pc}

0000e690 <virtual thunk to std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()>:
    e690:	6803      	ldr	r3, [r0, #0]
    e692:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e696:	4418      	add	r0, r3
    e698:	e7f1      	b.n	e67e <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()>

0000e69a <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()>:
    e69a:	460a      	mov	r2, r1
    e69c:	2100      	movs	r1, #0
    e69e:	f7ff bfc1 	b.w	e624 <_ZNSt13basic_ostreamIwSt11char_traitsIwEED4Ev>

0000e6a2 <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::flush()>:
    e6a2:	6803      	ldr	r3, [r0, #0]
    e6a4:	b510      	push	{r4, lr}
    e6a6:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e6aa:	4604      	mov	r4, r0
    e6ac:	4403      	add	r3, r0
    e6ae:	6fd8      	ldr	r0, [r3, #124]	; 0x7c
    e6b0:	b150      	cbz	r0, e6c8 <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::flush()+0x26>
    e6b2:	f7ff fee9 	bl	e488 <std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::pubsync()>
    e6b6:	3001      	adds	r0, #1
    e6b8:	d106      	bne.n	e6c8 <std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::flush()+0x26>
    e6ba:	6823      	ldr	r3, [r4, #0]
    e6bc:	2101      	movs	r1, #1
    e6be:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    e6c2:	4420      	add	r0, r4
    e6c4:	f7f4 f882 	bl	27cc <std::basic_ios<wchar_t, std::char_traits<wchar_t> >::setstate(std::_Ios_Iostate)>
    e6c8:	4620      	mov	r0, r4
    e6ca:	bd10      	pop	{r4, pc}

0000e6cc <std::__throw_bad_cast()>:
    e6cc:	b508      	push	{r3, lr}
    e6ce:	f7f2 fa13 	bl	af8 <abort>

0000e6d2 <std::__throw_logic_error(char const*)>:
    e6d2:	b508      	push	{r3, lr}
    e6d4:	f7f2 fa10 	bl	af8 <abort>

0000e6d8 <std::__throw_length_error(char const*)>:
    e6d8:	b508      	push	{r3, lr}
    e6da:	f7f2 fa0d 	bl	af8 <abort>

0000e6de <std::__throw_out_of_range_fmt(char const*, ...)>:
    e6de:	b40f      	push	{r0, r1, r2, r3}
    e6e0:	b580      	push	{r7, lr}
    e6e2:	b082      	sub	sp, #8
    e6e4:	af00      	add	r7, sp, #0
    e6e6:	f107 0410 	add.w	r4, r7, #16
    e6ea:	f854 5b04 	ldr.w	r5, [r4], #4
    e6ee:	4628      	mov	r0, r5
    e6f0:	f006 fd52 	bl	15198 <strlen>
    e6f4:	4601      	mov	r1, r0
    e6f6:	f200 230e 	addw	r3, r0, #526	; 0x20e
    e6fa:	f023 0307 	bic.w	r3, r3, #7
    e6fe:	ebad 0d03 	sub.w	sp, sp, r3
    e702:	f501 7100 	add.w	r1, r1, #512	; 0x200
    e706:	462a      	mov	r2, r5
    e708:	4623      	mov	r3, r4
    e70a:	4668      	mov	r0, sp
    e70c:	607c      	str	r4, [r7, #4]
    e70e:	f000 ff81 	bl	f614 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)>
    e712:	f7f2 f9f1 	bl	af8 <abort>

0000e716 <std::__throw_runtime_error(char const*)>:
    e716:	b508      	push	{r3, lr}
    e718:	f7f2 f9ee 	bl	af8 <abort>

0000e71c <std::__throw_ios_failure(char const*)>:
    e71c:	b508      	push	{r3, lr}
    e71e:	f7f2 f9eb 	bl	af8 <abort>
	...

0000e724 <std::string::_M_check(unsigned int, char const*) const>:
    e724:	6803      	ldr	r3, [r0, #0]
    e726:	b510      	push	{r4, lr}
    e728:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    e72c:	460c      	mov	r4, r1
    e72e:	4299      	cmp	r1, r3
    e730:	d904      	bls.n	e73c <std::string::_M_check(unsigned int, char const*) const+0x18>
    e732:	4611      	mov	r1, r2
    e734:	4802      	ldr	r0, [pc, #8]	; (e740 <std::string::_M_check(unsigned int, char const*) const+0x1c>)
    e736:	4622      	mov	r2, r4
    e738:	f7ff ffd1 	bl	e6de <std::__throw_out_of_range_fmt(char const*, ...)>
    e73c:	4608      	mov	r0, r1
    e73e:	bd10      	pop	{r4, pc}
    e740:	0001bf3a 	.word	0x0001bf3a

0000e744 <std::string::_M_check_length(unsigned int, unsigned int, char const*) const>:
    e744:	6800      	ldr	r0, [r0, #0]
    e746:	b510      	push	{r4, lr}
    e748:	f850 4c0c 	ldr.w	r4, [r0, #-12]
    e74c:	4804      	ldr	r0, [pc, #16]	; (e760 <std::string::_M_check_length(unsigned int, unsigned int, char const*) const+0x1c>)
    e74e:	1b00      	subs	r0, r0, r4
    e750:	4401      	add	r1, r0
    e752:	4291      	cmp	r1, r2
    e754:	d202      	bcs.n	e75c <std::string::_M_check_length(unsigned int, unsigned int, char const*) const+0x18>
    e756:	4618      	mov	r0, r3
    e758:	f7ff ffbe 	bl	e6d8 <std::__throw_length_error(char const*)>
    e75c:	bd10      	pop	{r4, pc}
    e75e:	bf00      	nop
    e760:	3ffffffc 	.word	0x3ffffffc

0000e764 <std::string::_M_disjunct(char const*) const>:
    e764:	6800      	ldr	r0, [r0, #0]
    e766:	4281      	cmp	r1, r0
    e768:	d307      	bcc.n	e77a <std::string::_M_disjunct(char const*) const+0x16>
    e76a:	f850 3c0c 	ldr.w	r3, [r0, #-12]
    e76e:	4418      	add	r0, r3
    e770:	4281      	cmp	r1, r0
    e772:	bf94      	ite	ls
    e774:	2000      	movls	r0, #0
    e776:	2001      	movhi	r0, #1
    e778:	4770      	bx	lr
    e77a:	2001      	movs	r0, #1
    e77c:	4770      	bx	lr

0000e77e <std::string::_M_copy(char*, char const*, unsigned int)>:
    e77e:	2a01      	cmp	r2, #1
    e780:	b510      	push	{r4, lr}
    e782:	d102      	bne.n	e78a <std::string::_M_copy(char*, char const*, unsigned int)+0xc>
    e784:	780a      	ldrb	r2, [r1, #0]
    e786:	7002      	strb	r2, [r0, #0]
    e788:	bd10      	pop	{r4, pc}
    e78a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    e78e:	f004 bf7d 	b.w	1368c <memcpy>

0000e792 <std::string::_M_move(char*, char const*, unsigned int)>:
    e792:	2a01      	cmp	r2, #1
    e794:	b510      	push	{r4, lr}
    e796:	d102      	bne.n	e79e <std::string::_M_move(char*, char const*, unsigned int)+0xc>
    e798:	780a      	ldrb	r2, [r1, #0]
    e79a:	7002      	strb	r2, [r0, #0]
    e79c:	bd10      	pop	{r4, pc}
    e79e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    e7a2:	f004 bf7e 	b.w	136a2 <memmove>

0000e7a6 <std::string::_M_assign(char*, unsigned int, char)>:
    e7a6:	2901      	cmp	r1, #1
    e7a8:	b510      	push	{r4, lr}
    e7aa:	460b      	mov	r3, r1
    e7ac:	d101      	bne.n	e7b2 <std::string::_M_assign(char*, unsigned int, char)+0xc>
    e7ae:	7002      	strb	r2, [r0, #0]
    e7b0:	bd10      	pop	{r4, pc}
    e7b2:	4611      	mov	r1, r2
    e7b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    e7b8:	461a      	mov	r2, r3
    e7ba:	f004 bf8d 	b.w	136d8 <memset>

0000e7be <std::string::_S_copy_chars(char*, char const*, char const*)>:
    e7be:	b508      	push	{r3, lr}
    e7c0:	1a52      	subs	r2, r2, r1
    e7c2:	f7ff ffdc 	bl	e77e <std::string::_M_copy(char*, char const*, unsigned int)>
    e7c6:	bd08      	pop	{r3, pc}

0000e7c8 <std::string::copy(char*, unsigned int, unsigned int) const>:
    e7c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    e7ca:	4604      	mov	r4, r0
    e7cc:	461e      	mov	r6, r3
    e7ce:	4615      	mov	r5, r2
    e7d0:	460f      	mov	r7, r1
    e7d2:	4a09      	ldr	r2, [pc, #36]	; (e7f8 <std::string::copy(char*, unsigned int, unsigned int) const+0x30>)
    e7d4:	4619      	mov	r1, r3
    e7d6:	f7ff ffa5 	bl	e724 <std::string::_M_check(unsigned int, char const*) const>
    e7da:	6821      	ldr	r1, [r4, #0]
    e7dc:	f851 4c0c 	ldr.w	r4, [r1, #-12]
    e7e0:	1ba4      	subs	r4, r4, r6
    e7e2:	42ac      	cmp	r4, r5
    e7e4:	bf28      	it	cs
    e7e6:	462c      	movcs	r4, r5
    e7e8:	b124      	cbz	r4, e7f4 <std::string::copy(char*, unsigned int, unsigned int) const+0x2c>
    e7ea:	4638      	mov	r0, r7
    e7ec:	4431      	add	r1, r6
    e7ee:	4622      	mov	r2, r4
    e7f0:	f7ff ffc5 	bl	e77e <std::string::_M_copy(char*, char const*, unsigned int)>
    e7f4:	4620      	mov	r0, r4
    e7f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    e7f8:	0001bfb5 	.word	0x0001bfb5

0000e7fc <std::string::swap(std::string&)>:
    e7fc:	6803      	ldr	r3, [r0, #0]
    e7fe:	b510      	push	{r4, lr}
    e800:	f853 2c04 	ldr.w	r2, [r3, #-4]
    e804:	2a00      	cmp	r2, #0
    e806:	bfbc      	itt	lt
    e808:	2200      	movlt	r2, #0
    e80a:	f843 2c04 	strlt.w	r2, [r3, #-4]
    e80e:	680a      	ldr	r2, [r1, #0]
    e810:	f852 4c04 	ldr.w	r4, [r2, #-4]
    e814:	2c00      	cmp	r4, #0
    e816:	bfbc      	itt	lt
    e818:	2400      	movlt	r4, #0
    e81a:	f842 4c04 	strlt.w	r4, [r2, #-4]
    e81e:	6002      	str	r2, [r0, #0]
    e820:	600b      	str	r3, [r1, #0]
    e822:	bd10      	pop	{r4, pc}

0000e824 <std::string::find_first_not_of(char, unsigned int) const>:
    e824:	b510      	push	{r4, lr}
    e826:	6803      	ldr	r3, [r0, #0]
    e828:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    e82c:	4282      	cmp	r2, r0
    e82e:	d204      	bcs.n	e83a <std::string::find_first_not_of(char, unsigned int) const+0x16>
    e830:	5c9c      	ldrb	r4, [r3, r2]
    e832:	428c      	cmp	r4, r1
    e834:	d104      	bne.n	e840 <std::string::find_first_not_of(char, unsigned int) const+0x1c>
    e836:	3201      	adds	r2, #1
    e838:	e7f8      	b.n	e82c <std::string::find_first_not_of(char, unsigned int) const+0x8>
    e83a:	f04f 30ff 	mov.w	r0, #4294967295
    e83e:	bd10      	pop	{r4, pc}
    e840:	4610      	mov	r0, r2
    e842:	bd10      	pop	{r4, pc}

0000e844 <std::string::_Rep::_M_set_length_and_sharable(unsigned int)>:
    e844:	4b04      	ldr	r3, [pc, #16]	; (e858 <std::string::_Rep::_M_set_length_and_sharable(unsigned int)+0x14>)
    e846:	4298      	cmp	r0, r3
    e848:	bf1f      	itttt	ne
    e84a:	2300      	movne	r3, #0
    e84c:	6001      	strne	r1, [r0, #0]
    e84e:	1809      	addne	r1, r1, r0
    e850:	6083      	strne	r3, [r0, #8]
    e852:	bf18      	it	ne
    e854:	730b      	strbne	r3, [r1, #12]
    e856:	4770      	bx	lr
    e858:	10000c64 	.word	0x10000c64

0000e85c <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)>:
    e85c:	4b13      	ldr	r3, [pc, #76]	; (e8ac <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x50>)
    e85e:	b510      	push	{r4, lr}
    e860:	4298      	cmp	r0, r3
    e862:	4604      	mov	r4, r0
    e864:	d902      	bls.n	e86c <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x10>
    e866:	4812      	ldr	r0, [pc, #72]	; (e8b0 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x54>)
    e868:	f7ff ff36 	bl	e6d8 <std::__throw_length_error(char const*)>
    e86c:	4288      	cmp	r0, r1
    e86e:	d903      	bls.n	e878 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x1c>
    e870:	004b      	lsls	r3, r1, #1
    e872:	4298      	cmp	r0, r3
    e874:	bf38      	it	cc
    e876:	461c      	movcc	r4, r3
    e878:	f104 031d 	add.w	r3, r4, #29
    e87c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    e880:	f104 000d 	add.w	r0, r4, #13
    e884:	d90c      	bls.n	e8a0 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x44>
    e886:	428c      	cmp	r4, r1
    e888:	d90a      	bls.n	e8a0 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x44>
    e88a:	f3c3 030b 	ubfx	r3, r3, #0, #12
    e88e:	f504 5480 	add.w	r4, r4, #4096	; 0x1000
    e892:	1ae4      	subs	r4, r4, r3
    e894:	4b05      	ldr	r3, [pc, #20]	; (e8ac <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x50>)
    e896:	429c      	cmp	r4, r3
    e898:	bf28      	it	cs
    e89a:	461c      	movcs	r4, r3
    e89c:	f104 000d 	add.w	r0, r4, #13
    e8a0:	f7f3 fe24 	bl	24ec <operator new(unsigned int)>
    e8a4:	2200      	movs	r2, #0
    e8a6:	6044      	str	r4, [r0, #4]
    e8a8:	6082      	str	r2, [r0, #8]
    e8aa:	bd10      	pop	{r4, pc}
    e8ac:	3ffffffc 	.word	0x3ffffffc
    e8b0:	0001bfde 	.word	0x0001bfde

0000e8b4 <std::string::_S_construct(unsigned int, char, std::allocator<char> const&)>:
    e8b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    e8b6:	460f      	mov	r7, r1
    e8b8:	4605      	mov	r5, r0
    e8ba:	b908      	cbnz	r0, e8c0 <std::string::_S_construct(unsigned int, char, std::allocator<char> const&)+0xc>
    e8bc:	4c09      	ldr	r4, [pc, #36]	; (e8e4 <std::string::_S_construct(unsigned int, char, std::allocator<char> const&)+0x30>)
    e8be:	e00e      	b.n	e8de <std::string::_S_construct(unsigned int, char, std::allocator<char> const&)+0x2a>
    e8c0:	2100      	movs	r1, #0
    e8c2:	f7ff ffcb 	bl	e85c <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)>
    e8c6:	4606      	mov	r6, r0
    e8c8:	f100 040c 	add.w	r4, r0, #12
    e8cc:	4620      	mov	r0, r4
    e8ce:	4629      	mov	r1, r5
    e8d0:	463a      	mov	r2, r7
    e8d2:	f7ff ff68 	bl	e7a6 <std::string::_M_assign(char*, unsigned int, char)>
    e8d6:	4630      	mov	r0, r6
    e8d8:	4629      	mov	r1, r5
    e8da:	f7ff ffb3 	bl	e844 <std::string::_Rep::_M_set_length_and_sharable(unsigned int)>
    e8de:	4620      	mov	r0, r4
    e8e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    e8e2:	bf00      	nop
    e8e4:	10000c70 	.word	0x10000c70

0000e8e8 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned int, char, std::allocator<char> const&)>:
    e8e8:	b510      	push	{r4, lr}
    e8ea:	4604      	mov	r4, r0
    e8ec:	4608      	mov	r0, r1
    e8ee:	4611      	mov	r1, r2
    e8f0:	461a      	mov	r2, r3
    e8f2:	f7ff ffdf 	bl	e8b4 <std::string::_S_construct(unsigned int, char, std::allocator<char> const&)>
    e8f6:	6020      	str	r0, [r4, #0]
    e8f8:	4620      	mov	r0, r4
    e8fa:	bd10      	pop	{r4, pc}

0000e8fc <std::string::_Rep::_M_dispose(std::allocator<char> const&)>:
    e8fc:	4a05      	ldr	r2, [pc, #20]	; (e914 <std::string::_Rep::_M_dispose(std::allocator<char> const&)+0x18>)
    e8fe:	4290      	cmp	r0, r2
    e900:	d006      	beq.n	e910 <std::string::_Rep::_M_dispose(std::allocator<char> const&)+0x14>
    e902:	6882      	ldr	r2, [r0, #8]
    e904:	1e51      	subs	r1, r2, #1
    e906:	2a00      	cmp	r2, #0
    e908:	6081      	str	r1, [r0, #8]
    e90a:	dc01      	bgt.n	e910 <std::string::_Rep::_M_dispose(std::allocator<char> const&)+0x14>
    e90c:	f7f3 bdff 	b.w	250e <operator delete(void*)>
    e910:	4770      	bx	lr
    e912:	bf00      	nop
    e914:	10000c64 	.word	0x10000c64

0000e918 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>:
    e918:	b513      	push	{r0, r1, r4, lr}
    e91a:	4604      	mov	r4, r0
    e91c:	6800      	ldr	r0, [r0, #0]
    e91e:	a901      	add	r1, sp, #4
    e920:	380c      	subs	r0, #12
    e922:	f7ff ffeb 	bl	e8fc <std::string::_Rep::_M_dispose(std::allocator<char> const&)>
    e926:	4620      	mov	r0, r4
    e928:	b002      	add	sp, #8
    e92a:	bd10      	pop	{r4, pc}

0000e92c <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)>:
    e92c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    e930:	6806      	ldr	r6, [r0, #0]
    e932:	ebc2 0903 	rsb	r9, r2, r3
    e936:	f856 5c0c 	ldr.w	r5, [r6, #-12]
    e93a:	460c      	mov	r4, r1
    e93c:	44a9      	add	r9, r5
    e93e:	1a6d      	subs	r5, r5, r1
    e940:	f856 1c08 	ldr.w	r1, [r6, #-8]
    e944:	4607      	mov	r7, r0
    e946:	4589      	cmp	r9, r1
    e948:	4692      	mov	r10, r2
    e94a:	4698      	mov	r8, r3
    e94c:	eba5 0502 	sub.w	r5, r5, r2
    e950:	d817      	bhi.n	e982 <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)+0x56>
    e952:	f856 3c04 	ldr.w	r3, [r6, #-4]
    e956:	2b00      	cmp	r3, #0
    e958:	dc13      	bgt.n	e982 <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)+0x56>
    e95a:	b155      	cbz	r5, e972 <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)+0x46>
    e95c:	45c2      	cmp	r10, r8
    e95e:	d008      	beq.n	e972 <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)+0x46>
    e960:	eb08 0004 	add.w	r0, r8, r4
    e964:	eb0a 0104 	add.w	r1, r10, r4
    e968:	4430      	add	r0, r6
    e96a:	4431      	add	r1, r6
    e96c:	462a      	mov	r2, r5
    e96e:	f7ff ff10 	bl	e792 <std::string::_M_move(char*, char const*, unsigned int)>
    e972:	6838      	ldr	r0, [r7, #0]
    e974:	4649      	mov	r1, r9
    e976:	380c      	subs	r0, #12
    e978:	f7ff ff64 	bl	e844 <std::string::_Rep::_M_set_length_and_sharable(unsigned int)>
    e97c:	b003      	add	sp, #12
    e97e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    e982:	4648      	mov	r0, r9
    e984:	aa01      	add	r2, sp, #4
    e986:	f7ff ff69 	bl	e85c <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)>
    e98a:	4683      	mov	r11, r0
    e98c:	f100 060c 	add.w	r6, r0, #12
    e990:	b124      	cbz	r4, e99c <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)+0x70>
    e992:	4630      	mov	r0, r6
    e994:	6839      	ldr	r1, [r7, #0]
    e996:	4622      	mov	r2, r4
    e998:	f7ff fef1 	bl	e77e <std::string::_M_copy(char*, char const*, unsigned int)>
    e99c:	b155      	cbz	r5, e9b4 <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)+0x88>
    e99e:	f104 000c 	add.w	r0, r4, #12
    e9a2:	683b      	ldr	r3, [r7, #0]
    e9a4:	4440      	add	r0, r8
    e9a6:	eb0a 0104 	add.w	r1, r10, r4
    e9aa:	4458      	add	r0, r11
    e9ac:	4419      	add	r1, r3
    e9ae:	462a      	mov	r2, r5
    e9b0:	f7ff fee5 	bl	e77e <std::string::_M_copy(char*, char const*, unsigned int)>
    e9b4:	6838      	ldr	r0, [r7, #0]
    e9b6:	a901      	add	r1, sp, #4
    e9b8:	380c      	subs	r0, #12
    e9ba:	f7ff ff9f 	bl	e8fc <std::string::_Rep::_M_dispose(std::allocator<char> const&)>
    e9be:	603e      	str	r6, [r7, #0]
    e9c0:	e7d7      	b.n	e972 <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)+0x46>
	...

0000e9c4 <std::string::_M_leak_hard()>:
    e9c4:	6803      	ldr	r3, [r0, #0]
    e9c6:	4a0a      	ldr	r2, [pc, #40]	; (e9f0 <std::string::_M_leak_hard()+0x2c>)
    e9c8:	b510      	push	{r4, lr}
    e9ca:	4293      	cmp	r3, r2
    e9cc:	4604      	mov	r4, r0
    e9ce:	d00d      	beq.n	e9ec <std::string::_M_leak_hard()+0x28>
    e9d0:	f853 3c04 	ldr.w	r3, [r3, #-4]
    e9d4:	2b00      	cmp	r3, #0
    e9d6:	dd04      	ble.n	e9e2 <std::string::_M_leak_hard()+0x1e>
    e9d8:	2100      	movs	r1, #0
    e9da:	460a      	mov	r2, r1
    e9dc:	460b      	mov	r3, r1
    e9de:	f7ff ffa5 	bl	e92c <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)>
    e9e2:	6823      	ldr	r3, [r4, #0]
    e9e4:	f04f 32ff 	mov.w	r2, #4294967295
    e9e8:	f843 2c04 	str.w	r2, [r3, #-4]
    e9ec:	bd10      	pop	{r4, pc}
    e9ee:	bf00      	nop
    e9f0:	10000c70 	.word	0x10000c70

0000e9f4 <std::string::_M_leak()>:
    e9f4:	b508      	push	{r3, lr}
    e9f6:	6803      	ldr	r3, [r0, #0]
    e9f8:	f853 3c04 	ldr.w	r3, [r3, #-4]
    e9fc:	2b00      	cmp	r3, #0
    e9fe:	db01      	blt.n	ea04 <std::string::_M_leak()+0x10>
    ea00:	f7ff ffe0 	bl	e9c4 <std::string::_M_leak_hard()>
    ea04:	bd08      	pop	{r3, pc}

0000ea06 <std::string::begin()>:
    ea06:	b510      	push	{r4, lr}
    ea08:	4604      	mov	r4, r0
    ea0a:	f7ff fff3 	bl	e9f4 <std::string::_M_leak()>
    ea0e:	6820      	ldr	r0, [r4, #0]
    ea10:	bd10      	pop	{r4, pc}

0000ea12 <std::string::clear()>:
    ea12:	b508      	push	{r3, lr}
    ea14:	6803      	ldr	r3, [r0, #0]
    ea16:	2100      	movs	r1, #0
    ea18:	f853 2c0c 	ldr.w	r2, [r3, #-12]
    ea1c:	460b      	mov	r3, r1
    ea1e:	f7ff ff85 	bl	e92c <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)>
    ea22:	bd08      	pop	{r3, pc}

0000ea24 <std::string::erase(unsigned int, unsigned int)>:
    ea24:	b570      	push	{r4, r5, r6, lr}
    ea26:	4604      	mov	r4, r0
    ea28:	460e      	mov	r6, r1
    ea2a:	4615      	mov	r5, r2
    ea2c:	4a08      	ldr	r2, [pc, #32]	; (ea50 <std::string::erase(unsigned int, unsigned int)+0x2c>)
    ea2e:	f7ff fe79 	bl	e724 <std::string::_M_check(unsigned int, char const*) const>
    ea32:	6823      	ldr	r3, [r4, #0]
    ea34:	4601      	mov	r1, r0
    ea36:	f853 2c0c 	ldr.w	r2, [r3, #-12]
    ea3a:	4620      	mov	r0, r4
    ea3c:	1b92      	subs	r2, r2, r6
    ea3e:	42aa      	cmp	r2, r5
    ea40:	bf28      	it	cs
    ea42:	462a      	movcs	r2, r5
    ea44:	2300      	movs	r3, #0
    ea46:	f7ff ff71 	bl	e92c <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)>
    ea4a:	4620      	mov	r0, r4
    ea4c:	bd70      	pop	{r4, r5, r6, pc}
    ea4e:	bf00      	nop
    ea50:	0001bff6 	.word	0x0001bff6

0000ea54 <std::string::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)>:
    ea54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ea56:	461c      	mov	r4, r3
    ea58:	4605      	mov	r5, r0
    ea5a:	460e      	mov	r6, r1
    ea5c:	4617      	mov	r7, r2
    ea5e:	4611      	mov	r1, r2
    ea60:	461a      	mov	r2, r3
    ea62:	4b09      	ldr	r3, [pc, #36]	; (ea88 <std::string::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)+0x34>)
    ea64:	f7ff fe6e 	bl	e744 <std::string::_M_check_length(unsigned int, unsigned int, char const*) const>
    ea68:	4628      	mov	r0, r5
    ea6a:	4631      	mov	r1, r6
    ea6c:	463a      	mov	r2, r7
    ea6e:	4623      	mov	r3, r4
    ea70:	f7ff ff5c 	bl	e92c <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)>
    ea74:	b134      	cbz	r4, ea84 <std::string::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)+0x30>
    ea76:	6828      	ldr	r0, [r5, #0]
    ea78:	4621      	mov	r1, r4
    ea7a:	4430      	add	r0, r6
    ea7c:	f89d 2018 	ldrb.w	r2, [sp, #24]
    ea80:	f7ff fe91 	bl	e7a6 <std::string::_M_assign(char*, unsigned int, char)>
    ea84:	4628      	mov	r0, r5
    ea86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ea88:	0001c00a 	.word	0x0001c00a

0000ea8c <std::string::assign(unsigned int, char)>:
    ea8c:	b513      	push	{r0, r1, r4, lr}
    ea8e:	6804      	ldr	r4, [r0, #0]
    ea90:	9200      	str	r2, [sp, #0]
    ea92:	460b      	mov	r3, r1
    ea94:	f854 2c0c 	ldr.w	r2, [r4, #-12]
    ea98:	2100      	movs	r1, #0
    ea9a:	f7ff ffdb 	bl	ea54 <std::string::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)>
    ea9e:	b002      	add	sp, #8
    eaa0:	bd10      	pop	{r4, pc}
	...

0000eaa4 <std::string::insert(unsigned int, unsigned int, char)>:
    eaa4:	b573      	push	{r0, r1, r4, r5, r6, lr}
    eaa6:	4614      	mov	r4, r2
    eaa8:	4a06      	ldr	r2, [pc, #24]	; (eac4 <std::string::insert(unsigned int, unsigned int, char)+0x20>)
    eaaa:	461e      	mov	r6, r3
    eaac:	4605      	mov	r5, r0
    eaae:	f7ff fe39 	bl	e724 <std::string::_M_check(unsigned int, char const*) const>
    eab2:	9600      	str	r6, [sp, #0]
    eab4:	4601      	mov	r1, r0
    eab6:	2200      	movs	r2, #0
    eab8:	4628      	mov	r0, r5
    eaba:	4623      	mov	r3, r4
    eabc:	f7ff ffca 	bl	ea54 <std::string::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)>
    eac0:	b002      	add	sp, #8
    eac2:	bd70      	pop	{r4, r5, r6, pc}
    eac4:	0001c027 	.word	0x0001c027

0000eac8 <std::string::insert(__gnu_cxx::__normal_iterator<char*, std::string>, char)>:
    eac8:	b537      	push	{r0, r1, r2, r4, r5, lr}
    eaca:	6804      	ldr	r4, [r0, #0]
    eacc:	4605      	mov	r5, r0
    eace:	1b0c      	subs	r4, r1, r4
    ead0:	9200      	str	r2, [sp, #0]
    ead2:	4621      	mov	r1, r4
    ead4:	2200      	movs	r2, #0
    ead6:	2301      	movs	r3, #1
    ead8:	f7ff ffbc 	bl	ea54 <std::string::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)>
    eadc:	6828      	ldr	r0, [r5, #0]
    eade:	f04f 33ff 	mov.w	r3, #4294967295
    eae2:	f840 3c04 	str.w	r3, [r0, #-4]
    eae6:	4420      	add	r0, r4
    eae8:	b003      	add	sp, #12
    eaea:	bd30      	pop	{r4, r5, pc}

0000eaec <std::string::_M_replace_safe(unsigned int, unsigned int, char const*, unsigned int)>:
    eaec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    eaee:	9c06      	ldr	r4, [sp, #24]
    eaf0:	461e      	mov	r6, r3
    eaf2:	4623      	mov	r3, r4
    eaf4:	4605      	mov	r5, r0
    eaf6:	460f      	mov	r7, r1
    eaf8:	f7ff ff18 	bl	e92c <std::string::_M_mutate(unsigned int, unsigned int, unsigned int)>
    eafc:	b12c      	cbz	r4, eb0a <std::string::_M_replace_safe(unsigned int, unsigned int, char const*, unsigned int)+0x1e>
    eafe:	6828      	ldr	r0, [r5, #0]
    eb00:	4631      	mov	r1, r6
    eb02:	4438      	add	r0, r7
    eb04:	4622      	mov	r2, r4
    eb06:	f7ff fe3a 	bl	e77e <std::string::_M_copy(char*, char const*, unsigned int)>
    eb0a:	4628      	mov	r0, r5
    eb0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0000eb10 <std::string::assign(char const*, unsigned int)>:
    eb10:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    eb14:	4604      	mov	r4, r0
    eb16:	460d      	mov	r5, r1
    eb18:	6807      	ldr	r7, [r0, #0]
    eb1a:	4b18      	ldr	r3, [pc, #96]	; (eb7c <std::string::assign(char const*, unsigned int)+0x6c>)
    eb1c:	f857 8c0c 	ldr.w	r8, [r7, #-12]
    eb20:	4616      	mov	r6, r2
    eb22:	4641      	mov	r1, r8
    eb24:	f7ff fe0e 	bl	e744 <std::string::_M_check_length(unsigned int, unsigned int, char const*) const>
    eb28:	4620      	mov	r0, r4
    eb2a:	4629      	mov	r1, r5
    eb2c:	f7ff fe1a 	bl	e764 <std::string::_M_disjunct(char const*) const>
    eb30:	b9c8      	cbnz	r0, eb66 <std::string::assign(char const*, unsigned int)+0x56>
    eb32:	f857 3c04 	ldr.w	r3, [r7, #-4]
    eb36:	2b00      	cmp	r3, #0
    eb38:	dc15      	bgt.n	eb66 <std::string::assign(char const*, unsigned int)+0x56>
    eb3a:	1beb      	subs	r3, r5, r7
    eb3c:	42b3      	cmp	r3, r6
    eb3e:	d305      	bcc.n	eb4c <std::string::assign(char const*, unsigned int)+0x3c>
    eb40:	4638      	mov	r0, r7
    eb42:	4629      	mov	r1, r5
    eb44:	4632      	mov	r2, r6
    eb46:	f7ff fe1a 	bl	e77e <std::string::_M_copy(char*, char const*, unsigned int)>
    eb4a:	e005      	b.n	eb58 <std::string::assign(char const*, unsigned int)+0x48>
    eb4c:	b123      	cbz	r3, eb58 <std::string::assign(char const*, unsigned int)+0x48>
    eb4e:	4638      	mov	r0, r7
    eb50:	4629      	mov	r1, r5
    eb52:	4632      	mov	r2, r6
    eb54:	f7ff fe1d 	bl	e792 <std::string::_M_move(char*, char const*, unsigned int)>
    eb58:	6820      	ldr	r0, [r4, #0]
    eb5a:	4631      	mov	r1, r6
    eb5c:	380c      	subs	r0, #12
    eb5e:	f7ff fe71 	bl	e844 <std::string::_Rep::_M_set_length_and_sharable(unsigned int)>
    eb62:	4620      	mov	r0, r4
    eb64:	e006      	b.n	eb74 <std::string::assign(char const*, unsigned int)+0x64>
    eb66:	9600      	str	r6, [sp, #0]
    eb68:	4620      	mov	r0, r4
    eb6a:	2100      	movs	r1, #0
    eb6c:	4642      	mov	r2, r8
    eb6e:	462b      	mov	r3, r5
    eb70:	f7ff ffbc 	bl	eaec <std::string::_M_replace_safe(unsigned int, unsigned int, char const*, unsigned int)>
    eb74:	b002      	add	sp, #8
    eb76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    eb7a:	bf00      	nop
    eb7c:	0001c052 	.word	0x0001c052

0000eb80 <std::string::_Rep::_M_refcopy()>:
    eb80:	4b05      	ldr	r3, [pc, #20]	; (eb98 <std::string::_Rep::_M_refcopy()+0x18>)
    eb82:	4298      	cmp	r0, r3
    eb84:	bf18      	it	ne
    eb86:	6883      	ldrne	r3, [r0, #8]
    eb88:	f100 000c 	add.w	r0, r0, #12
    eb8c:	bf1c      	itt	ne
    eb8e:	3301      	addne	r3, #1
    eb90:	f840 3c04 	strne.w	r3, [r0, #-4]
    eb94:	4770      	bx	lr
    eb96:	bf00      	nop
    eb98:	10000c64 	.word	0x10000c64

0000eb9c <std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned int)>:
    eb9c:	b570      	push	{r4, r5, r6, lr}
    eb9e:	460b      	mov	r3, r1
    eba0:	4604      	mov	r4, r0
    eba2:	6800      	ldr	r0, [r0, #0]
    eba4:	6861      	ldr	r1, [r4, #4]
    eba6:	4410      	add	r0, r2
    eba8:	461a      	mov	r2, r3
    ebaa:	f7ff fe57 	bl	e85c <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)>
    ebae:	6822      	ldr	r2, [r4, #0]
    ebb0:	4606      	mov	r6, r0
    ebb2:	f100 050c 	add.w	r5, r0, #12
    ebb6:	b122      	cbz	r2, ebc2 <std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned int)+0x26>
    ebb8:	4628      	mov	r0, r5
    ebba:	f104 010c 	add.w	r1, r4, #12
    ebbe:	f7ff fdde 	bl	e77e <std::string::_M_copy(char*, char const*, unsigned int)>
    ebc2:	4630      	mov	r0, r6
    ebc4:	6821      	ldr	r1, [r4, #0]
    ebc6:	f7ff fe3d 	bl	e844 <std::string::_Rep::_M_set_length_and_sharable(unsigned int)>
    ebca:	4628      	mov	r0, r5
    ebcc:	bd70      	pop	{r4, r5, r6, pc}

0000ebce <std::string::reserve(unsigned int)>:
    ebce:	b537      	push	{r0, r1, r2, r4, r5, lr}
    ebd0:	4604      	mov	r4, r0
    ebd2:	6800      	ldr	r0, [r0, #0]
    ebd4:	460b      	mov	r3, r1
    ebd6:	f850 2c08 	ldr.w	r2, [r0, #-8]
    ebda:	4291      	cmp	r1, r2
    ebdc:	d103      	bne.n	ebe6 <std::string::reserve(unsigned int)+0x18>
    ebde:	f850 2c04 	ldr.w	r2, [r0, #-4]
    ebe2:	2a00      	cmp	r2, #0
    ebe4:	dd11      	ble.n	ec0a <std::string::reserve(unsigned int)+0x3c>
    ebe6:	f850 2d0c 	ldr.w	r2, [r0, #-12]!
    ebea:	a901      	add	r1, sp, #4
    ebec:	4293      	cmp	r3, r2
    ebee:	bf2c      	ite	cs
    ebf0:	ebc2 0203 	rsbcs	r2, r2, r3
    ebf4:	ebc2 0202 	rsbcc	r2, r2, r2
    ebf8:	f7ff ffd0 	bl	eb9c <std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned int)>
    ebfc:	4605      	mov	r5, r0
    ebfe:	6820      	ldr	r0, [r4, #0]
    ec00:	a901      	add	r1, sp, #4
    ec02:	380c      	subs	r0, #12
    ec04:	f7ff fe7a 	bl	e8fc <std::string::_Rep::_M_dispose(std::allocator<char> const&)>
    ec08:	6025      	str	r5, [r4, #0]
    ec0a:	b003      	add	sp, #12
    ec0c:	bd30      	pop	{r4, r5, pc}

0000ec0e <std::string::append(std::string const&)>:
    ec0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ec10:	680b      	ldr	r3, [r1, #0]
    ec12:	4604      	mov	r4, r0
    ec14:	f853 6c0c 	ldr.w	r6, [r3, #-12]
    ec18:	460f      	mov	r7, r1
    ec1a:	b1f6      	cbz	r6, ec5a <std::string::append(std::string const&)+0x4c>
    ec1c:	6803      	ldr	r3, [r0, #0]
    ec1e:	f853 5c0c 	ldr.w	r5, [r3, #-12]
    ec22:	f853 2c08 	ldr.w	r2, [r3, #-8]
    ec26:	4435      	add	r5, r6
    ec28:	4295      	cmp	r5, r2
    ec2a:	d811      	bhi.n	ec50 <std::string::append(std::string const&)+0x42>
    ec2c:	f853 3c04 	ldr.w	r3, [r3, #-4]
    ec30:	2b00      	cmp	r3, #0
    ec32:	dc0d      	bgt.n	ec50 <std::string::append(std::string const&)+0x42>
    ec34:	6823      	ldr	r3, [r4, #0]
    ec36:	6839      	ldr	r1, [r7, #0]
    ec38:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    ec3c:	4632      	mov	r2, r6
    ec3e:	4418      	add	r0, r3
    ec40:	f7ff fd9d 	bl	e77e <std::string::_M_copy(char*, char const*, unsigned int)>
    ec44:	6820      	ldr	r0, [r4, #0]
    ec46:	4629      	mov	r1, r5
    ec48:	380c      	subs	r0, #12
    ec4a:	f7ff fdfb 	bl	e844 <std::string::_Rep::_M_set_length_and_sharable(unsigned int)>
    ec4e:	e004      	b.n	ec5a <std::string::append(std::string const&)+0x4c>
    ec50:	4620      	mov	r0, r4
    ec52:	4629      	mov	r1, r5
    ec54:	f7ff ffbb 	bl	ebce <std::string::reserve(unsigned int)>
    ec58:	e7ec      	b.n	ec34 <std::string::append(std::string const&)+0x26>
    ec5a:	4620      	mov	r0, r4
    ec5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000ec5e <std::string::operator+=(std::string const&)>:
    ec5e:	b508      	push	{r3, lr}
    ec60:	f7ff ffd5 	bl	ec0e <std::string::append(std::string const&)>
    ec64:	bd08      	pop	{r3, pc}
	...

0000ec68 <std::string::append(char const*, unsigned int)>:
    ec68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    ec6c:	4604      	mov	r4, r0
    ec6e:	460f      	mov	r7, r1
    ec70:	4690      	mov	r8, r2
    ec72:	b372      	cbz	r2, ecd2 <std::string::append(char const*, unsigned int)+0x6a>
    ec74:	4b18      	ldr	r3, [pc, #96]	; (ecd8 <std::string::append(char const*, unsigned int)+0x70>)
    ec76:	2100      	movs	r1, #0
    ec78:	f7ff fd64 	bl	e744 <std::string::_M_check_length(unsigned int, unsigned int, char const*) const>
    ec7c:	6825      	ldr	r5, [r4, #0]
    ec7e:	f855 6c0c 	ldr.w	r6, [r5, #-12]
    ec82:	f855 3c08 	ldr.w	r3, [r5, #-8]
    ec86:	4446      	add	r6, r8
    ec88:	429e      	cmp	r6, r3
    ec8a:	d803      	bhi.n	ec94 <std::string::append(char const*, unsigned int)+0x2c>
    ec8c:	f855 3c04 	ldr.w	r3, [r5, #-4]
    ec90:	2b00      	cmp	r3, #0
    ec92:	dd08      	ble.n	eca6 <std::string::append(char const*, unsigned int)+0x3e>
    ec94:	4620      	mov	r0, r4
    ec96:	4639      	mov	r1, r7
    ec98:	f7ff fd64 	bl	e764 <std::string::_M_disjunct(char const*) const>
    ec9c:	b188      	cbz	r0, ecc2 <std::string::append(char const*, unsigned int)+0x5a>
    ec9e:	4620      	mov	r0, r4
    eca0:	4631      	mov	r1, r6
    eca2:	f7ff ff94 	bl	ebce <std::string::reserve(unsigned int)>
    eca6:	6823      	ldr	r3, [r4, #0]
    eca8:	4639      	mov	r1, r7
    ecaa:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    ecae:	4642      	mov	r2, r8
    ecb0:	4418      	add	r0, r3
    ecb2:	f7ff fd64 	bl	e77e <std::string::_M_copy(char*, char const*, unsigned int)>
    ecb6:	6820      	ldr	r0, [r4, #0]
    ecb8:	4631      	mov	r1, r6
    ecba:	380c      	subs	r0, #12
    ecbc:	f7ff fdc2 	bl	e844 <std::string::_Rep::_M_set_length_and_sharable(unsigned int)>
    ecc0:	e007      	b.n	ecd2 <std::string::append(char const*, unsigned int)+0x6a>
    ecc2:	4620      	mov	r0, r4
    ecc4:	4631      	mov	r1, r6
    ecc6:	1b7d      	subs	r5, r7, r5
    ecc8:	f7ff ff81 	bl	ebce <std::string::reserve(unsigned int)>
    eccc:	6827      	ldr	r7, [r4, #0]
    ecce:	442f      	add	r7, r5
    ecd0:	e7e9      	b.n	eca6 <std::string::append(char const*, unsigned int)+0x3e>
    ecd2:	4620      	mov	r0, r4
    ecd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ecd8:	0001c067 	.word	0x0001c067

0000ecdc <std::string::append(unsigned int, char) [clone .part.18]>:
    ecdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ecde:	460e      	mov	r6, r1
    ece0:	4605      	mov	r5, r0
    ece2:	4b12      	ldr	r3, [pc, #72]	; (ed2c <std::string::append(unsigned int, char) [clone .part.18]+0x50>)
    ece4:	4617      	mov	r7, r2
    ece6:	2100      	movs	r1, #0
    ece8:	4632      	mov	r2, r6
    ecea:	f7ff fd2b 	bl	e744 <std::string::_M_check_length(unsigned int, unsigned int, char const*) const>
    ecee:	682b      	ldr	r3, [r5, #0]
    ecf0:	f853 4c0c 	ldr.w	r4, [r3, #-12]
    ecf4:	f853 2c08 	ldr.w	r2, [r3, #-8]
    ecf8:	4434      	add	r4, r6
    ecfa:	4294      	cmp	r4, r2
    ecfc:	d803      	bhi.n	ed06 <std::string::append(unsigned int, char) [clone .part.18]+0x2a>
    ecfe:	f853 3c04 	ldr.w	r3, [r3, #-4]
    ed02:	2b00      	cmp	r3, #0
    ed04:	dd03      	ble.n	ed0e <std::string::append(unsigned int, char) [clone .part.18]+0x32>
    ed06:	4628      	mov	r0, r5
    ed08:	4621      	mov	r1, r4
    ed0a:	f7ff ff60 	bl	ebce <std::string::reserve(unsigned int)>
    ed0e:	682b      	ldr	r3, [r5, #0]
    ed10:	4631      	mov	r1, r6
    ed12:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    ed16:	463a      	mov	r2, r7
    ed18:	4418      	add	r0, r3
    ed1a:	f7ff fd44 	bl	e7a6 <std::string::_M_assign(char*, unsigned int, char)>
    ed1e:	6828      	ldr	r0, [r5, #0]
    ed20:	4621      	mov	r1, r4
    ed22:	380c      	subs	r0, #12
    ed24:	f7ff fd8e 	bl	e844 <std::string::_Rep::_M_set_length_and_sharable(unsigned int)>
    ed28:	2000      	movs	r0, #0
    ed2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ed2c:	0001c067 	.word	0x0001c067

0000ed30 <std::string::append(unsigned int, char)>:
    ed30:	b510      	push	{r4, lr}
    ed32:	4604      	mov	r4, r0
    ed34:	b109      	cbz	r1, ed3a <std::string::append(unsigned int, char)+0xa>
    ed36:	f7ff ffd1 	bl	ecdc <std::string::append(unsigned int, char) [clone .part.18]>
    ed3a:	4620      	mov	r0, r4
    ed3c:	bd10      	pop	{r4, pc}
	...

0000ed40 <std::string::resize(unsigned int, char)>:
    ed40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ed42:	460c      	mov	r4, r1
    ed44:	6803      	ldr	r3, [r0, #0]
    ed46:	4617      	mov	r7, r2
    ed48:	f853 5c0c 	ldr.w	r5, [r3, #-12]
    ed4c:	4622      	mov	r2, r4
    ed4e:	4629      	mov	r1, r5
    ed50:	4b0a      	ldr	r3, [pc, #40]	; (ed7c <std::string::resize(unsigned int, char)+0x3c>)
    ed52:	4606      	mov	r6, r0
    ed54:	f7ff fcf6 	bl	e744 <std::string::_M_check_length(unsigned int, unsigned int, char const*) const>
    ed58:	42a5      	cmp	r5, r4
    ed5a:	d205      	bcs.n	ed68 <std::string::resize(unsigned int, char)+0x28>
    ed5c:	4630      	mov	r0, r6
    ed5e:	1b61      	subs	r1, r4, r5
    ed60:	463a      	mov	r2, r7
    ed62:	f7ff ffe5 	bl	ed30 <std::string::append(unsigned int, char)>
    ed66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ed68:	42ac      	cmp	r4, r5
    ed6a:	d205      	bcs.n	ed78 <std::string::resize(unsigned int, char)+0x38>
    ed6c:	4630      	mov	r0, r6
    ed6e:	4621      	mov	r1, r4
    ed70:	f04f 32ff 	mov.w	r2, #4294967295
    ed74:	f7ff fe56 	bl	ea24 <std::string::erase(unsigned int, unsigned int)>
    ed78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ed7a:	bf00      	nop
    ed7c:	0001c07c 	.word	0x0001c07c

0000ed80 <std::string::resize(unsigned int)>:
    ed80:	b508      	push	{r3, lr}
    ed82:	2200      	movs	r2, #0
    ed84:	f7ff ffdc 	bl	ed40 <std::string::resize(unsigned int, char)>
    ed88:	bd08      	pop	{r3, pc}

0000ed8a <std::string::push_back(char)>:
    ed8a:	6803      	ldr	r3, [r0, #0]
    ed8c:	b570      	push	{r4, r5, r6, lr}
    ed8e:	f853 4c0c 	ldr.w	r4, [r3, #-12]
    ed92:	f853 2c08 	ldr.w	r2, [r3, #-8]
    ed96:	3401      	adds	r4, #1
    ed98:	4294      	cmp	r4, r2
    ed9a:	4605      	mov	r5, r0
    ed9c:	460e      	mov	r6, r1
    ed9e:	d80d      	bhi.n	edbc <std::string::push_back(char)+0x32>
    eda0:	f853 3c04 	ldr.w	r3, [r3, #-4]
    eda4:	2b00      	cmp	r3, #0
    eda6:	dc09      	bgt.n	edbc <std::string::push_back(char)+0x32>
    eda8:	682b      	ldr	r3, [r5, #0]
    edaa:	4621      	mov	r1, r4
    edac:	f853 2c0c 	ldr.w	r2, [r3, #-12]
    edb0:	549e      	strb	r6, [r3, r2]
    edb2:	6828      	ldr	r0, [r5, #0]
    edb4:	380c      	subs	r0, #12
    edb6:	f7ff fd45 	bl	e844 <std::string::_Rep::_M_set_length_and_sharable(unsigned int)>
    edba:	bd70      	pop	{r4, r5, r6, pc}
    edbc:	4628      	mov	r0, r5
    edbe:	4621      	mov	r1, r4
    edc0:	f7ff ff05 	bl	ebce <std::string::reserve(unsigned int)>
    edc4:	e7f0      	b.n	eda8 <std::string::push_back(char)+0x1e>

0000edc6 <std::string::_Rep::_M_grab(std::allocator<char> const&, std::allocator<char> const&)>:
    edc6:	b508      	push	{r3, lr}
    edc8:	6883      	ldr	r3, [r0, #8]
    edca:	2b00      	cmp	r3, #0
    edcc:	db02      	blt.n	edd4 <std::string::_Rep::_M_grab(std::allocator<char> const&, std::allocator<char> const&)+0xe>
    edce:	f7ff fed7 	bl	eb80 <std::string::_Rep::_M_refcopy()>
    edd2:	bd08      	pop	{r3, pc}
    edd4:	2200      	movs	r2, #0
    edd6:	f7ff fee1 	bl	eb9c <std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned int)>
    edda:	bd08      	pop	{r3, pc}

0000eddc <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)>:
    eddc:	b513      	push	{r0, r1, r4, lr}
    edde:	4604      	mov	r4, r0
    ede0:	6808      	ldr	r0, [r1, #0]
    ede2:	aa01      	add	r2, sp, #4
    ede4:	4669      	mov	r1, sp
    ede6:	380c      	subs	r0, #12
    ede8:	f7ff ffed 	bl	edc6 <std::string::_Rep::_M_grab(std::allocator<char> const&, std::allocator<char> const&)>
    edec:	6020      	str	r0, [r4, #0]
    edee:	4620      	mov	r0, r4
    edf0:	b002      	add	sp, #8
    edf2:	bd10      	pop	{r4, pc}

0000edf4 <char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)>:
    edf4:	4288      	cmp	r0, r1
    edf6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    edfa:	4605      	mov	r5, r0
    edfc:	460c      	mov	r4, r1
    edfe:	d101      	bne.n	ee04 <char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)+0x10>
    ee00:	4e0d      	ldr	r6, [pc, #52]	; (ee38 <char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)+0x44>)
    ee02:	e015      	b.n	ee30 <char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)+0x3c>
    ee04:	b918      	cbnz	r0, ee0e <char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)+0x1a>
    ee06:	b114      	cbz	r4, ee0e <char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)+0x1a>
    ee08:	480c      	ldr	r0, [pc, #48]	; (ee3c <char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)+0x48>)
    ee0a:	f7ff fc62 	bl	e6d2 <std::__throw_logic_error(char const*)>
    ee0e:	1b67      	subs	r7, r4, r5
    ee10:	2100      	movs	r1, #0
    ee12:	4638      	mov	r0, r7
    ee14:	f7ff fd22 	bl	e85c <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)>
    ee18:	4680      	mov	r8, r0
    ee1a:	f100 060c 	add.w	r6, r0, #12
    ee1e:	4630      	mov	r0, r6
    ee20:	4629      	mov	r1, r5
    ee22:	4622      	mov	r2, r4
    ee24:	f7ff fccb 	bl	e7be <std::string::_S_copy_chars(char*, char const*, char const*)>
    ee28:	4640      	mov	r0, r8
    ee2a:	4639      	mov	r1, r7
    ee2c:	f7ff fd0a 	bl	e844 <std::string::_Rep::_M_set_length_and_sharable(unsigned int)>
    ee30:	4630      	mov	r0, r6
    ee32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ee36:	bf00      	nop
    ee38:	10000c70 	.word	0x10000c70
    ee3c:	0001c091 	.word	0x0001c091

0000ee40 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)>:
    ee40:	b570      	push	{r4, r5, r6, lr}
    ee42:	4605      	mov	r5, r0
    ee44:	4616      	mov	r6, r2
    ee46:	460c      	mov	r4, r1
    ee48:	b121      	cbz	r1, ee54 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)+0x14>
    ee4a:	4608      	mov	r0, r1
    ee4c:	f006 f9a4 	bl	15198 <strlen>
    ee50:	1821      	adds	r1, r4, r0
    ee52:	e001      	b.n	ee58 <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)+0x18>
    ee54:	f04f 31ff 	mov.w	r1, #4294967295
    ee58:	4620      	mov	r0, r4
    ee5a:	4632      	mov	r2, r6
    ee5c:	f04f 0300 	mov.w	r3, #0
    ee60:	f7ff ffc8 	bl	edf4 <char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)>
    ee64:	6028      	str	r0, [r5, #0]
    ee66:	4628      	mov	r0, r5
    ee68:	bd70      	pop	{r4, r5, r6, pc}

0000ee6a <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char const*>(char const*, char const*, std::allocator<char> const&)>:
    ee6a:	b510      	push	{r4, lr}
    ee6c:	4604      	mov	r4, r0
    ee6e:	4608      	mov	r0, r1
    ee70:	4611      	mov	r1, r2
    ee72:	461a      	mov	r2, r3
    ee74:	f04f 0300 	mov.w	r3, #0
    ee78:	f7ff ffbc 	bl	edf4 <char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)>
    ee7c:	6020      	str	r0, [r4, #0]
    ee7e:	4620      	mov	r0, r4
    ee80:	bd10      	pop	{r4, pc}
	...

0000ee84 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check(unsigned int, char const*) const>:
    ee84:	6803      	ldr	r3, [r0, #0]
    ee86:	b510      	push	{r4, lr}
    ee88:	f853 3c0c 	ldr.w	r3, [r3, #-12]
    ee8c:	460c      	mov	r4, r1
    ee8e:	4299      	cmp	r1, r3
    ee90:	d904      	bls.n	ee9c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check(unsigned int, char const*) const+0x18>
    ee92:	4611      	mov	r1, r2
    ee94:	4802      	ldr	r0, [pc, #8]	; (eea0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check(unsigned int, char const*) const+0x1c>)
    ee96:	4622      	mov	r2, r4
    ee98:	f7ff fc21 	bl	e6de <std::__throw_out_of_range_fmt(char const*, ...)>
    ee9c:	4608      	mov	r0, r1
    ee9e:	bd10      	pop	{r4, pc}
    eea0:	0001bf3a 	.word	0x0001bf3a

0000eea4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check_length(unsigned int, unsigned int, char const*) const>:
    eea4:	6800      	ldr	r0, [r0, #0]
    eea6:	b510      	push	{r4, lr}
    eea8:	f850 4c0c 	ldr.w	r4, [r0, #-12]
    eeac:	4804      	ldr	r0, [pc, #16]	; (eec0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check_length(unsigned int, unsigned int, char const*) const+0x1c>)
    eeae:	1b00      	subs	r0, r0, r4
    eeb0:	4401      	add	r1, r0
    eeb2:	4291      	cmp	r1, r2
    eeb4:	d202      	bcs.n	eebc <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check_length(unsigned int, unsigned int, char const*) const+0x18>
    eeb6:	4618      	mov	r0, r3
    eeb8:	f7ff fc0e 	bl	e6d8 <std::__throw_length_error(char const*)>
    eebc:	bd10      	pop	{r4, pc}
    eebe:	bf00      	nop
    eec0:	0ffffffe 	.word	0x0ffffffe

0000eec4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_disjunct(wchar_t const*) const>:
    eec4:	6803      	ldr	r3, [r0, #0]
    eec6:	4299      	cmp	r1, r3
    eec8:	d308      	bcc.n	eedc <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_disjunct(wchar_t const*) const+0x18>
    eeca:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    eece:	eb03 0080 	add.w	r0, r3, r0, lsl #2
    eed2:	4281      	cmp	r1, r0
    eed4:	bf94      	ite	ls
    eed6:	2000      	movls	r0, #0
    eed8:	2001      	movhi	r0, #1
    eeda:	4770      	bx	lr
    eedc:	2001      	movs	r0, #1
    eede:	4770      	bx	lr

0000eee0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_copy(wchar_t*, wchar_t const*, unsigned int)>:
    eee0:	2a01      	cmp	r2, #1
    eee2:	b510      	push	{r4, lr}
    eee4:	d102      	bne.n	eeec <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_copy(wchar_t*, wchar_t const*, unsigned int)+0xc>
    eee6:	680a      	ldr	r2, [r1, #0]
    eee8:	6002      	str	r2, [r0, #0]
    eeea:	bd10      	pop	{r4, pc}
    eeec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    eef0:	f008 b957 	b.w	171a2 <wmemcpy>

0000eef4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_move(wchar_t*, wchar_t const*, unsigned int)>:
    eef4:	2a01      	cmp	r2, #1
    eef6:	b510      	push	{r4, lr}
    eef8:	d102      	bne.n	ef00 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_move(wchar_t*, wchar_t const*, unsigned int)+0xc>
    eefa:	680a      	ldr	r2, [r1, #0]
    eefc:	6002      	str	r2, [r0, #0]
    eefe:	bd10      	pop	{r4, pc}
    ef00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ef04:	f008 b950 	b.w	171a8 <wmemmove>

0000ef08 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_assign(wchar_t*, unsigned int, wchar_t)>:
    ef08:	2901      	cmp	r1, #1
    ef0a:	b510      	push	{r4, lr}
    ef0c:	460b      	mov	r3, r1
    ef0e:	d101      	bne.n	ef14 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_assign(wchar_t*, unsigned int, wchar_t)+0xc>
    ef10:	6002      	str	r2, [r0, #0]
    ef12:	bd10      	pop	{r4, pc}
    ef14:	4611      	mov	r1, r2
    ef16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ef1a:	461a      	mov	r2, r3
    ef1c:	f008 b947 	b.w	171ae <wmemset>

0000ef20 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_copy_chars(wchar_t*, wchar_t const*, wchar_t const*)>:
    ef20:	b508      	push	{r3, lr}
    ef22:	1a52      	subs	r2, r2, r1
    ef24:	1092      	asrs	r2, r2, #2
    ef26:	f7ff ffdb 	bl	eee0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_copy(wchar_t*, wchar_t const*, unsigned int)>
    ef2a:	bd08      	pop	{r3, pc}

0000ef2c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned int, unsigned int) const>:
    ef2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    ef2e:	4604      	mov	r4, r0
    ef30:	461e      	mov	r6, r3
    ef32:	4615      	mov	r5, r2
    ef34:	460f      	mov	r7, r1
    ef36:	4a0a      	ldr	r2, [pc, #40]	; (ef60 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned int, unsigned int) const+0x34>)
    ef38:	4619      	mov	r1, r3
    ef3a:	f7ff ffa3 	bl	ee84 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check(unsigned int, char const*) const>
    ef3e:	6821      	ldr	r1, [r4, #0]
    ef40:	f851 4c0c 	ldr.w	r4, [r1, #-12]
    ef44:	1ba4      	subs	r4, r4, r6
    ef46:	42ac      	cmp	r4, r5
    ef48:	bf28      	it	cs
    ef4a:	462c      	movcs	r4, r5
    ef4c:	b12c      	cbz	r4, ef5a <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned int, unsigned int) const+0x2e>
    ef4e:	4638      	mov	r0, r7
    ef50:	eb01 0186 	add.w	r1, r1, r6, lsl #2
    ef54:	4622      	mov	r2, r4
    ef56:	f7ff ffc3 	bl	eee0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_copy(wchar_t*, wchar_t const*, unsigned int)>
    ef5a:	4620      	mov	r0, r4
    ef5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ef5e:	bf00      	nop
    ef60:	0001bfb5 	.word	0x0001bfb5

0000ef64 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_set_length_and_sharable(unsigned int)>:
    ef64:	4b05      	ldr	r3, [pc, #20]	; (ef7c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_set_length_and_sharable(unsigned int)+0x18>)
    ef66:	4298      	cmp	r0, r3
    ef68:	bf1f      	itttt	ne
    ef6a:	2300      	movne	r3, #0
    ef6c:	6083      	strne	r3, [r0, #8]
    ef6e:	6001      	strne	r1, [r0, #0]
    ef70:	eb00 0081 	addne.w	r0, r0, r1, lsl #2
    ef74:	bf18      	it	ne
    ef76:	60c3      	strne	r3, [r0, #12]
    ef78:	4770      	bx	lr
    ef7a:	bf00      	nop
    ef7c:	10000c74 	.word	0x10000c74

0000ef80 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned int, unsigned int, std::allocator<wchar_t> const&)>:
    ef80:	4b14      	ldr	r3, [pc, #80]	; (efd4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned int, unsigned int, std::allocator<wchar_t> const&)+0x54>)
    ef82:	b510      	push	{r4, lr}
    ef84:	4298      	cmp	r0, r3
    ef86:	4604      	mov	r4, r0
    ef88:	d902      	bls.n	ef90 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned int, unsigned int, std::allocator<wchar_t> const&)+0x10>
    ef8a:	4813      	ldr	r0, [pc, #76]	; (efd8 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned int, unsigned int, std::allocator<wchar_t> const&)+0x58>)
    ef8c:	f7ff fba4 	bl	e6d8 <std::__throw_length_error(char const*)>
    ef90:	4288      	cmp	r0, r1
    ef92:	d903      	bls.n	ef9c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned int, unsigned int, std::allocator<wchar_t> const&)+0x1c>
    ef94:	004b      	lsls	r3, r1, #1
    ef96:	4298      	cmp	r0, r3
    ef98:	bf38      	it	cc
    ef9a:	461c      	movcc	r4, r3
    ef9c:	1c63      	adds	r3, r4, #1
    ef9e:	009b      	lsls	r3, r3, #2
    efa0:	f103 000c 	add.w	r0, r3, #12
    efa4:	331c      	adds	r3, #28
    efa6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    efaa:	d90d      	bls.n	efc8 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned int, unsigned int, std::allocator<wchar_t> const&)+0x48>
    efac:	428c      	cmp	r4, r1
    efae:	d90b      	bls.n	efc8 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned int, unsigned int, std::allocator<wchar_t> const&)+0x48>
    efb0:	f3c3 000b 	ubfx	r0, r3, #0, #12
    efb4:	f5c0 5080 	rsb	r0, r0, #4096	; 0x1000
    efb8:	eb04 0090 	add.w	r0, r4, r0, lsr #2
    efbc:	4c05      	ldr	r4, [pc, #20]	; (efd4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned int, unsigned int, std::allocator<wchar_t> const&)+0x54>)
    efbe:	4284      	cmp	r4, r0
    efc0:	bf28      	it	cs
    efc2:	4604      	movcs	r4, r0
    efc4:	00a0      	lsls	r0, r4, #2
    efc6:	3010      	adds	r0, #16
    efc8:	f7f3 fa90 	bl	24ec <operator new(unsigned int)>
    efcc:	2200      	movs	r2, #0
    efce:	6044      	str	r4, [r0, #4]
    efd0:	6082      	str	r2, [r0, #8]
    efd2:	bd10      	pop	{r4, pc}
    efd4:	0ffffffe 	.word	0x0ffffffe
    efd8:	0001bfde 	.word	0x0001bfde

0000efdc <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct(unsigned int, wchar_t, std::allocator<wchar_t> const&)>:
    efdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    efde:	460f      	mov	r7, r1
    efe0:	4605      	mov	r5, r0
    efe2:	b908      	cbnz	r0, efe8 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct(unsigned int, wchar_t, std::allocator<wchar_t> const&)+0xc>
    efe4:	4c09      	ldr	r4, [pc, #36]	; (f00c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct(unsigned int, wchar_t, std::allocator<wchar_t> const&)+0x30>)
    efe6:	e00e      	b.n	f006 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct(unsigned int, wchar_t, std::allocator<wchar_t> const&)+0x2a>
    efe8:	2100      	movs	r1, #0
    efea:	f7ff ffc9 	bl	ef80 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned int, unsigned int, std::allocator<wchar_t> const&)>
    efee:	4606      	mov	r6, r0
    eff0:	f100 040c 	add.w	r4, r0, #12
    eff4:	4620      	mov	r0, r4
    eff6:	4629      	mov	r1, r5
    eff8:	463a      	mov	r2, r7
    effa:	f7ff ff85 	bl	ef08 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_assign(wchar_t*, unsigned int, wchar_t)>
    effe:	4630      	mov	r0, r6
    f000:	4629      	mov	r1, r5
    f002:	f7ff ffaf 	bl	ef64 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_set_length_and_sharable(unsigned int)>
    f006:	4620      	mov	r0, r4
    f008:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f00a:	bf00      	nop
    f00c:	10000c80 	.word	0x10000c80

0000f010 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(unsigned int, wchar_t, std::allocator<wchar_t> const&)>:
    f010:	b510      	push	{r4, lr}
    f012:	4604      	mov	r4, r0
    f014:	4608      	mov	r0, r1
    f016:	4611      	mov	r1, r2
    f018:	461a      	mov	r2, r3
    f01a:	f7ff ffdf 	bl	efdc <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct(unsigned int, wchar_t, std::allocator<wchar_t> const&)>
    f01e:	6020      	str	r0, [r4, #0]
    f020:	4620      	mov	r0, r4
    f022:	bd10      	pop	{r4, pc}

0000f024 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_dispose(std::allocator<wchar_t> const&)>:
    f024:	4a05      	ldr	r2, [pc, #20]	; (f03c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_dispose(std::allocator<wchar_t> const&)+0x18>)
    f026:	4290      	cmp	r0, r2
    f028:	d006      	beq.n	f038 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_dispose(std::allocator<wchar_t> const&)+0x14>
    f02a:	6882      	ldr	r2, [r0, #8]
    f02c:	1e51      	subs	r1, r2, #1
    f02e:	2a00      	cmp	r2, #0
    f030:	6081      	str	r1, [r0, #8]
    f032:	dc01      	bgt.n	f038 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_dispose(std::allocator<wchar_t> const&)+0x14>
    f034:	f7f3 ba6b 	b.w	250e <operator delete(void*)>
    f038:	4770      	bx	lr
    f03a:	bf00      	nop
    f03c:	10000c74 	.word	0x10000c74

0000f040 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()>:
    f040:	b513      	push	{r0, r1, r4, lr}
    f042:	4604      	mov	r4, r0
    f044:	6800      	ldr	r0, [r0, #0]
    f046:	a901      	add	r1, sp, #4
    f048:	380c      	subs	r0, #12
    f04a:	f7ff ffeb 	bl	f024 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_dispose(std::allocator<wchar_t> const&)>
    f04e:	4620      	mov	r0, r4
    f050:	b002      	add	sp, #8
    f052:	bd10      	pop	{r4, pc}

0000f054 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)>:
    f054:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    f058:	6806      	ldr	r6, [r0, #0]
    f05a:	ebc2 0803 	rsb	r8, r2, r3
    f05e:	f856 5c0c 	ldr.w	r5, [r6, #-12]
    f062:	460c      	mov	r4, r1
    f064:	44a8      	add	r8, r5
    f066:	1a6d      	subs	r5, r5, r1
    f068:	f856 1c08 	ldr.w	r1, [r6, #-8]
    f06c:	4607      	mov	r7, r0
    f06e:	4588      	cmp	r8, r1
    f070:	4691      	mov	r9, r2
    f072:	469b      	mov	r11, r3
    f074:	eba5 0502 	sub.w	r5, r5, r2
    f078:	d819      	bhi.n	f0ae <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)+0x5a>
    f07a:	f856 3c04 	ldr.w	r3, [r6, #-4]
    f07e:	2b00      	cmp	r3, #0
    f080:	dc15      	bgt.n	f0ae <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)+0x5a>
    f082:	b165      	cbz	r5, f09e <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)+0x4a>
    f084:	45d9      	cmp	r9, r11
    f086:	d00a      	beq.n	f09e <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)+0x4a>
    f088:	eb0b 0004 	add.w	r0, r11, r4
    f08c:	eb09 0104 	add.w	r1, r9, r4
    f090:	eb06 0080 	add.w	r0, r6, r0, lsl #2
    f094:	eb06 0181 	add.w	r1, r6, r1, lsl #2
    f098:	462a      	mov	r2, r5
    f09a:	f7ff ff2b 	bl	eef4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_move(wchar_t*, wchar_t const*, unsigned int)>
    f09e:	6838      	ldr	r0, [r7, #0]
    f0a0:	4641      	mov	r1, r8
    f0a2:	380c      	subs	r0, #12
    f0a4:	f7ff ff5e 	bl	ef64 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_set_length_and_sharable(unsigned int)>
    f0a8:	b003      	add	sp, #12
    f0aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    f0ae:	4640      	mov	r0, r8
    f0b0:	aa01      	add	r2, sp, #4
    f0b2:	f7ff ff65 	bl	ef80 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned int, unsigned int, std::allocator<wchar_t> const&)>
    f0b6:	4606      	mov	r6, r0
    f0b8:	f100 0a0c 	add.w	r10, r0, #12
    f0bc:	b124      	cbz	r4, f0c8 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)+0x74>
    f0be:	4650      	mov	r0, r10
    f0c0:	6839      	ldr	r1, [r7, #0]
    f0c2:	4622      	mov	r2, r4
    f0c4:	f7ff ff0c 	bl	eee0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_copy(wchar_t*, wchar_t const*, unsigned int)>
    f0c8:	b165      	cbz	r5, f0e4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)+0x90>
    f0ca:	eb0b 0004 	add.w	r0, r11, r4
    f0ce:	683b      	ldr	r3, [r7, #0]
    f0d0:	eb06 0080 	add.w	r0, r6, r0, lsl #2
    f0d4:	eb09 0104 	add.w	r1, r9, r4
    f0d8:	300c      	adds	r0, #12
    f0da:	eb03 0181 	add.w	r1, r3, r1, lsl #2
    f0de:	462a      	mov	r2, r5
    f0e0:	f7ff fefe 	bl	eee0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_copy(wchar_t*, wchar_t const*, unsigned int)>
    f0e4:	6838      	ldr	r0, [r7, #0]
    f0e6:	a901      	add	r1, sp, #4
    f0e8:	380c      	subs	r0, #12
    f0ea:	f7ff ff9b 	bl	f024 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_dispose(std::allocator<wchar_t> const&)>
    f0ee:	f8c7 a000 	str.w	r10, [r7]
    f0f2:	e7d4      	b.n	f09e <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)+0x4a>

0000f0f4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak_hard()>:
    f0f4:	6803      	ldr	r3, [r0, #0]
    f0f6:	4a0a      	ldr	r2, [pc, #40]	; (f120 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak_hard()+0x2c>)
    f0f8:	b510      	push	{r4, lr}
    f0fa:	4293      	cmp	r3, r2
    f0fc:	4604      	mov	r4, r0
    f0fe:	d00d      	beq.n	f11c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak_hard()+0x28>
    f100:	f853 3c04 	ldr.w	r3, [r3, #-4]
    f104:	2b00      	cmp	r3, #0
    f106:	dd04      	ble.n	f112 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak_hard()+0x1e>
    f108:	2100      	movs	r1, #0
    f10a:	460a      	mov	r2, r1
    f10c:	460b      	mov	r3, r1
    f10e:	f7ff ffa1 	bl	f054 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)>
    f112:	6823      	ldr	r3, [r4, #0]
    f114:	f04f 32ff 	mov.w	r2, #4294967295
    f118:	f843 2c04 	str.w	r2, [r3, #-4]
    f11c:	bd10      	pop	{r4, pc}
    f11e:	bf00      	nop
    f120:	10000c80 	.word	0x10000c80

0000f124 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak()>:
    f124:	b508      	push	{r3, lr}
    f126:	6803      	ldr	r3, [r0, #0]
    f128:	f853 3c04 	ldr.w	r3, [r3, #-4]
    f12c:	2b00      	cmp	r3, #0
    f12e:	db01      	blt.n	f134 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak()+0x10>
    f130:	f7ff ffe0 	bl	f0f4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak_hard()>
    f134:	bd08      	pop	{r3, pc}
	...

0000f138 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::erase(unsigned int, unsigned int)>:
    f138:	b570      	push	{r4, r5, r6, lr}
    f13a:	4604      	mov	r4, r0
    f13c:	460e      	mov	r6, r1
    f13e:	4615      	mov	r5, r2
    f140:	4a08      	ldr	r2, [pc, #32]	; (f164 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::erase(unsigned int, unsigned int)+0x2c>)
    f142:	f7ff fe9f 	bl	ee84 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check(unsigned int, char const*) const>
    f146:	6823      	ldr	r3, [r4, #0]
    f148:	4601      	mov	r1, r0
    f14a:	f853 2c0c 	ldr.w	r2, [r3, #-12]
    f14e:	4620      	mov	r0, r4
    f150:	1b92      	subs	r2, r2, r6
    f152:	42aa      	cmp	r2, r5
    f154:	bf28      	it	cs
    f156:	462a      	movcs	r2, r5
    f158:	2300      	movs	r3, #0
    f15a:	f7ff ff7b 	bl	f054 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)>
    f15e:	4620      	mov	r0, r4
    f160:	bd70      	pop	{r4, r5, r6, pc}
    f162:	bf00      	nop
    f164:	0001bff6 	.word	0x0001bff6

0000f168 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, wchar_t)>:
    f168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f16a:	461c      	mov	r4, r3
    f16c:	4605      	mov	r5, r0
    f16e:	460e      	mov	r6, r1
    f170:	4617      	mov	r7, r2
    f172:	4611      	mov	r1, r2
    f174:	461a      	mov	r2, r3
    f176:	4b09      	ldr	r3, [pc, #36]	; (f19c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, wchar_t)+0x34>)
    f178:	f7ff fe94 	bl	eea4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check_length(unsigned int, unsigned int, char const*) const>
    f17c:	4628      	mov	r0, r5
    f17e:	4631      	mov	r1, r6
    f180:	463a      	mov	r2, r7
    f182:	4623      	mov	r3, r4
    f184:	f7ff ff66 	bl	f054 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)>
    f188:	b134      	cbz	r4, f198 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, wchar_t)+0x30>
    f18a:	6828      	ldr	r0, [r5, #0]
    f18c:	4621      	mov	r1, r4
    f18e:	eb00 0086 	add.w	r0, r0, r6, lsl #2
    f192:	9a06      	ldr	r2, [sp, #24]
    f194:	f7ff feb8 	bl	ef08 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_assign(wchar_t*, unsigned int, wchar_t)>
    f198:	4628      	mov	r0, r5
    f19a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f19c:	0001c00a 	.word	0x0001c00a

0000f1a0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(unsigned int, wchar_t)>:
    f1a0:	b513      	push	{r0, r1, r4, lr}
    f1a2:	6804      	ldr	r4, [r0, #0]
    f1a4:	9200      	str	r2, [sp, #0]
    f1a6:	460b      	mov	r3, r1
    f1a8:	f854 2c0c 	ldr.w	r2, [r4, #-12]
    f1ac:	2100      	movs	r1, #0
    f1ae:	f7ff ffdb 	bl	f168 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, wchar_t)>
    f1b2:	b002      	add	sp, #8
    f1b4:	bd10      	pop	{r4, pc}
	...

0000f1b8 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::insert(unsigned int, unsigned int, wchar_t)>:
    f1b8:	b573      	push	{r0, r1, r4, r5, r6, lr}
    f1ba:	4614      	mov	r4, r2
    f1bc:	4a06      	ldr	r2, [pc, #24]	; (f1d8 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::insert(unsigned int, unsigned int, wchar_t)+0x20>)
    f1be:	461e      	mov	r6, r3
    f1c0:	4605      	mov	r5, r0
    f1c2:	f7ff fe5f 	bl	ee84 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check(unsigned int, char const*) const>
    f1c6:	9600      	str	r6, [sp, #0]
    f1c8:	4601      	mov	r1, r0
    f1ca:	2200      	movs	r2, #0
    f1cc:	4628      	mov	r0, r5
    f1ce:	4623      	mov	r3, r4
    f1d0:	f7ff ffca 	bl	f168 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, wchar_t)>
    f1d4:	b002      	add	sp, #8
    f1d6:	bd70      	pop	{r4, r5, r6, pc}
    f1d8:	0001c027 	.word	0x0001c027

0000f1dc <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_safe(unsigned int, unsigned int, wchar_t const*, unsigned int)>:
    f1dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f1de:	9c06      	ldr	r4, [sp, #24]
    f1e0:	461e      	mov	r6, r3
    f1e2:	4623      	mov	r3, r4
    f1e4:	4605      	mov	r5, r0
    f1e6:	460f      	mov	r7, r1
    f1e8:	f7ff ff34 	bl	f054 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned int, unsigned int, unsigned int)>
    f1ec:	b134      	cbz	r4, f1fc <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_safe(unsigned int, unsigned int, wchar_t const*, unsigned int)+0x20>
    f1ee:	6828      	ldr	r0, [r5, #0]
    f1f0:	4631      	mov	r1, r6
    f1f2:	eb00 0087 	add.w	r0, r0, r7, lsl #2
    f1f6:	4622      	mov	r2, r4
    f1f8:	f7ff fe72 	bl	eee0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_copy(wchar_t*, wchar_t const*, unsigned int)>
    f1fc:	4628      	mov	r0, r5
    f1fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000f200 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned int)>:
    f200:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    f204:	4604      	mov	r4, r0
    f206:	460d      	mov	r5, r1
    f208:	6807      	ldr	r7, [r0, #0]
    f20a:	4b18      	ldr	r3, [pc, #96]	; (f26c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned int)+0x6c>)
    f20c:	f857 8c0c 	ldr.w	r8, [r7, #-12]
    f210:	4616      	mov	r6, r2
    f212:	4641      	mov	r1, r8
    f214:	f7ff fe46 	bl	eea4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check_length(unsigned int, unsigned int, char const*) const>
    f218:	4620      	mov	r0, r4
    f21a:	4629      	mov	r1, r5
    f21c:	f7ff fe52 	bl	eec4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_disjunct(wchar_t const*) const>
    f220:	b9d0      	cbnz	r0, f258 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned int)+0x58>
    f222:	f857 3c04 	ldr.w	r3, [r7, #-4]
    f226:	2b00      	cmp	r3, #0
    f228:	dc16      	bgt.n	f258 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned int)+0x58>
    f22a:	1beb      	subs	r3, r5, r7
    f22c:	109b      	asrs	r3, r3, #2
    f22e:	42b3      	cmp	r3, r6
    f230:	d305      	bcc.n	f23e <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned int)+0x3e>
    f232:	4638      	mov	r0, r7
    f234:	4629      	mov	r1, r5
    f236:	4632      	mov	r2, r6
    f238:	f7ff fe52 	bl	eee0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_copy(wchar_t*, wchar_t const*, unsigned int)>
    f23c:	e005      	b.n	f24a <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned int)+0x4a>
    f23e:	b123      	cbz	r3, f24a <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned int)+0x4a>
    f240:	4638      	mov	r0, r7
    f242:	4629      	mov	r1, r5
    f244:	4632      	mov	r2, r6
    f246:	f7ff fe55 	bl	eef4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_move(wchar_t*, wchar_t const*, unsigned int)>
    f24a:	6820      	ldr	r0, [r4, #0]
    f24c:	4631      	mov	r1, r6
    f24e:	380c      	subs	r0, #12
    f250:	f7ff fe88 	bl	ef64 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_set_length_and_sharable(unsigned int)>
    f254:	4620      	mov	r0, r4
    f256:	e006      	b.n	f266 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned int)+0x66>
    f258:	9600      	str	r6, [sp, #0]
    f25a:	4620      	mov	r0, r4
    f25c:	2100      	movs	r1, #0
    f25e:	4642      	mov	r2, r8
    f260:	462b      	mov	r3, r5
    f262:	f7ff ffbb 	bl	f1dc <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_safe(unsigned int, unsigned int, wchar_t const*, unsigned int)>
    f266:	b002      	add	sp, #8
    f268:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    f26c:	0001c052 	.word	0x0001c052

0000f270 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_refcopy()>:
    f270:	4b05      	ldr	r3, [pc, #20]	; (f288 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_refcopy()+0x18>)
    f272:	4298      	cmp	r0, r3
    f274:	bf18      	it	ne
    f276:	6883      	ldrne	r3, [r0, #8]
    f278:	f100 000c 	add.w	r0, r0, #12
    f27c:	bf1c      	itt	ne
    f27e:	3301      	addne	r3, #1
    f280:	f840 3c04 	strne.w	r3, [r0, #-4]
    f284:	4770      	bx	lr
    f286:	bf00      	nop
    f288:	10000c74 	.word	0x10000c74

0000f28c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_clone(std::allocator<wchar_t> const&, unsigned int)>:
    f28c:	b570      	push	{r4, r5, r6, lr}
    f28e:	460b      	mov	r3, r1
    f290:	4604      	mov	r4, r0
    f292:	6800      	ldr	r0, [r0, #0]
    f294:	6861      	ldr	r1, [r4, #4]
    f296:	4410      	add	r0, r2
    f298:	461a      	mov	r2, r3
    f29a:	f7ff fe71 	bl	ef80 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned int, unsigned int, std::allocator<wchar_t> const&)>
    f29e:	6822      	ldr	r2, [r4, #0]
    f2a0:	4606      	mov	r6, r0
    f2a2:	f100 050c 	add.w	r5, r0, #12
    f2a6:	b122      	cbz	r2, f2b2 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_clone(std::allocator<wchar_t> const&, unsigned int)+0x26>
    f2a8:	4628      	mov	r0, r5
    f2aa:	f104 010c 	add.w	r1, r4, #12
    f2ae:	f7ff fe17 	bl	eee0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_copy(wchar_t*, wchar_t const*, unsigned int)>
    f2b2:	4630      	mov	r0, r6
    f2b4:	6821      	ldr	r1, [r4, #0]
    f2b6:	f7ff fe55 	bl	ef64 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_set_length_and_sharable(unsigned int)>
    f2ba:	4628      	mov	r0, r5
    f2bc:	bd70      	pop	{r4, r5, r6, pc}

0000f2be <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)>:
    f2be:	b537      	push	{r0, r1, r2, r4, r5, lr}
    f2c0:	4604      	mov	r4, r0
    f2c2:	6800      	ldr	r0, [r0, #0]
    f2c4:	460b      	mov	r3, r1
    f2c6:	f850 2c08 	ldr.w	r2, [r0, #-8]
    f2ca:	4291      	cmp	r1, r2
    f2cc:	d103      	bne.n	f2d6 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)+0x18>
    f2ce:	f850 2c04 	ldr.w	r2, [r0, #-4]
    f2d2:	2a00      	cmp	r2, #0
    f2d4:	dd11      	ble.n	f2fa <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)+0x3c>
    f2d6:	f850 2d0c 	ldr.w	r2, [r0, #-12]!
    f2da:	a901      	add	r1, sp, #4
    f2dc:	4293      	cmp	r3, r2
    f2de:	bf2c      	ite	cs
    f2e0:	ebc2 0203 	rsbcs	r2, r2, r3
    f2e4:	ebc2 0202 	rsbcc	r2, r2, r2
    f2e8:	f7ff ffd0 	bl	f28c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_clone(std::allocator<wchar_t> const&, unsigned int)>
    f2ec:	4605      	mov	r5, r0
    f2ee:	6820      	ldr	r0, [r4, #0]
    f2f0:	a901      	add	r1, sp, #4
    f2f2:	380c      	subs	r0, #12
    f2f4:	f7ff fe96 	bl	f024 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_dispose(std::allocator<wchar_t> const&)>
    f2f8:	6025      	str	r5, [r4, #0]
    f2fa:	b003      	add	sp, #12
    f2fc:	bd30      	pop	{r4, r5, pc}

0000f2fe <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)>:
    f2fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f300:	680b      	ldr	r3, [r1, #0]
    f302:	4604      	mov	r4, r0
    f304:	f853 6c0c 	ldr.w	r6, [r3, #-12]
    f308:	460f      	mov	r7, r1
    f30a:	b1fe      	cbz	r6, f34c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)+0x4e>
    f30c:	6803      	ldr	r3, [r0, #0]
    f30e:	f853 5c0c 	ldr.w	r5, [r3, #-12]
    f312:	f853 2c08 	ldr.w	r2, [r3, #-8]
    f316:	4435      	add	r5, r6
    f318:	4295      	cmp	r5, r2
    f31a:	d812      	bhi.n	f342 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)+0x44>
    f31c:	f853 3c04 	ldr.w	r3, [r3, #-4]
    f320:	2b00      	cmp	r3, #0
    f322:	dc0e      	bgt.n	f342 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)+0x44>
    f324:	6823      	ldr	r3, [r4, #0]
    f326:	6839      	ldr	r1, [r7, #0]
    f328:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    f32c:	4632      	mov	r2, r6
    f32e:	eb03 0080 	add.w	r0, r3, r0, lsl #2
    f332:	f7ff fdd5 	bl	eee0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_copy(wchar_t*, wchar_t const*, unsigned int)>
    f336:	6820      	ldr	r0, [r4, #0]
    f338:	4629      	mov	r1, r5
    f33a:	380c      	subs	r0, #12
    f33c:	f7ff fe12 	bl	ef64 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_set_length_and_sharable(unsigned int)>
    f340:	e004      	b.n	f34c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)+0x4e>
    f342:	4620      	mov	r0, r4
    f344:	4629      	mov	r1, r5
    f346:	f7ff ffba 	bl	f2be <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)>
    f34a:	e7eb      	b.n	f324 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)+0x26>
    f34c:	4620      	mov	r0, r4
    f34e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000f350 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::operator+=(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)>:
    f350:	b508      	push	{r3, lr}
    f352:	f7ff ffd4 	bl	f2fe <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)>
    f356:	bd08      	pop	{r3, pc}

0000f358 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)>:
    f358:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    f35c:	4604      	mov	r4, r0
    f35e:	460f      	mov	r7, r1
    f360:	4690      	mov	r8, r2
    f362:	b37a      	cbz	r2, f3c4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)+0x6c>
    f364:	4b19      	ldr	r3, [pc, #100]	; (f3cc <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)+0x74>)
    f366:	2100      	movs	r1, #0
    f368:	f7ff fd9c 	bl	eea4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check_length(unsigned int, unsigned int, char const*) const>
    f36c:	6825      	ldr	r5, [r4, #0]
    f36e:	f855 6c0c 	ldr.w	r6, [r5, #-12]
    f372:	f855 3c08 	ldr.w	r3, [r5, #-8]
    f376:	4446      	add	r6, r8
    f378:	429e      	cmp	r6, r3
    f37a:	d803      	bhi.n	f384 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)+0x2c>
    f37c:	f855 3c04 	ldr.w	r3, [r5, #-4]
    f380:	2b00      	cmp	r3, #0
    f382:	dd08      	ble.n	f396 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)+0x3e>
    f384:	4620      	mov	r0, r4
    f386:	4639      	mov	r1, r7
    f388:	f7ff fd9c 	bl	eec4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_disjunct(wchar_t const*) const>
    f38c:	b190      	cbz	r0, f3b4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)+0x5c>
    f38e:	4620      	mov	r0, r4
    f390:	4631      	mov	r1, r6
    f392:	f7ff ff94 	bl	f2be <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)>
    f396:	6823      	ldr	r3, [r4, #0]
    f398:	4639      	mov	r1, r7
    f39a:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    f39e:	4642      	mov	r2, r8
    f3a0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
    f3a4:	f7ff fd9c 	bl	eee0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_copy(wchar_t*, wchar_t const*, unsigned int)>
    f3a8:	6820      	ldr	r0, [r4, #0]
    f3aa:	4631      	mov	r1, r6
    f3ac:	380c      	subs	r0, #12
    f3ae:	f7ff fdd9 	bl	ef64 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_set_length_and_sharable(unsigned int)>
    f3b2:	e007      	b.n	f3c4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)+0x6c>
    f3b4:	4620      	mov	r0, r4
    f3b6:	4631      	mov	r1, r6
    f3b8:	1b7d      	subs	r5, r7, r5
    f3ba:	f7ff ff80 	bl	f2be <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)>
    f3be:	6827      	ldr	r7, [r4, #0]
    f3c0:	442f      	add	r7, r5
    f3c2:	e7e8      	b.n	f396 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned int)+0x3e>
    f3c4:	4620      	mov	r0, r4
    f3c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    f3ca:	bf00      	nop
    f3cc:	0001c067 	.word	0x0001c067

0000f3d0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t) [clone .part.20]>:
    f3d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f3d2:	460e      	mov	r6, r1
    f3d4:	4605      	mov	r5, r0
    f3d6:	4b13      	ldr	r3, [pc, #76]	; (f424 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t) [clone .part.20]+0x54>)
    f3d8:	4617      	mov	r7, r2
    f3da:	2100      	movs	r1, #0
    f3dc:	4632      	mov	r2, r6
    f3de:	f7ff fd61 	bl	eea4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check_length(unsigned int, unsigned int, char const*) const>
    f3e2:	682b      	ldr	r3, [r5, #0]
    f3e4:	f853 4c0c 	ldr.w	r4, [r3, #-12]
    f3e8:	f853 2c08 	ldr.w	r2, [r3, #-8]
    f3ec:	4434      	add	r4, r6
    f3ee:	4294      	cmp	r4, r2
    f3f0:	d803      	bhi.n	f3fa <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t) [clone .part.20]+0x2a>
    f3f2:	f853 3c04 	ldr.w	r3, [r3, #-4]
    f3f6:	2b00      	cmp	r3, #0
    f3f8:	dd03      	ble.n	f402 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t) [clone .part.20]+0x32>
    f3fa:	4628      	mov	r0, r5
    f3fc:	4621      	mov	r1, r4
    f3fe:	f7ff ff5e 	bl	f2be <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)>
    f402:	682b      	ldr	r3, [r5, #0]
    f404:	4631      	mov	r1, r6
    f406:	f853 0c0c 	ldr.w	r0, [r3, #-12]
    f40a:	463a      	mov	r2, r7
    f40c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
    f410:	f7ff fd7a 	bl	ef08 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_assign(wchar_t*, unsigned int, wchar_t)>
    f414:	6828      	ldr	r0, [r5, #0]
    f416:	4621      	mov	r1, r4
    f418:	380c      	subs	r0, #12
    f41a:	f7ff fda3 	bl	ef64 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_set_length_and_sharable(unsigned int)>
    f41e:	2000      	movs	r0, #0
    f420:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f422:	bf00      	nop
    f424:	0001c067 	.word	0x0001c067

0000f428 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t)>:
    f428:	b510      	push	{r4, lr}
    f42a:	4604      	mov	r4, r0
    f42c:	b109      	cbz	r1, f432 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t)+0xa>
    f42e:	f7ff ffcf 	bl	f3d0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t) [clone .part.20]>
    f432:	4620      	mov	r0, r4
    f434:	bd10      	pop	{r4, pc}
	...

0000f438 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned int, wchar_t)>:
    f438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f43a:	460c      	mov	r4, r1
    f43c:	6803      	ldr	r3, [r0, #0]
    f43e:	4617      	mov	r7, r2
    f440:	f853 5c0c 	ldr.w	r5, [r3, #-12]
    f444:	4622      	mov	r2, r4
    f446:	4629      	mov	r1, r5
    f448:	4b0a      	ldr	r3, [pc, #40]	; (f474 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned int, wchar_t)+0x3c>)
    f44a:	4606      	mov	r6, r0
    f44c:	f7ff fd2a 	bl	eea4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_check_length(unsigned int, unsigned int, char const*) const>
    f450:	42a5      	cmp	r5, r4
    f452:	d205      	bcs.n	f460 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned int, wchar_t)+0x28>
    f454:	4630      	mov	r0, r6
    f456:	1b61      	subs	r1, r4, r5
    f458:	463a      	mov	r2, r7
    f45a:	f7ff ffe5 	bl	f428 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned int, wchar_t)>
    f45e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f460:	42ac      	cmp	r4, r5
    f462:	d205      	bcs.n	f470 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned int, wchar_t)+0x38>
    f464:	4630      	mov	r0, r6
    f466:	4621      	mov	r1, r4
    f468:	f04f 32ff 	mov.w	r2, #4294967295
    f46c:	f7ff fe64 	bl	f138 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::erase(unsigned int, unsigned int)>
    f470:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f472:	bf00      	nop
    f474:	0001c07c 	.word	0x0001c07c

0000f478 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned int)>:
    f478:	b508      	push	{r3, lr}
    f47a:	2200      	movs	r2, #0
    f47c:	f7ff ffdc 	bl	f438 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned int, wchar_t)>
    f480:	bd08      	pop	{r3, pc}

0000f482 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)>:
    f482:	6803      	ldr	r3, [r0, #0]
    f484:	b570      	push	{r4, r5, r6, lr}
    f486:	f853 4c0c 	ldr.w	r4, [r3, #-12]
    f48a:	f853 2c08 	ldr.w	r2, [r3, #-8]
    f48e:	3401      	adds	r4, #1
    f490:	4294      	cmp	r4, r2
    f492:	4605      	mov	r5, r0
    f494:	460e      	mov	r6, r1
    f496:	d80d      	bhi.n	f4b4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)+0x32>
    f498:	f853 3c04 	ldr.w	r3, [r3, #-4]
    f49c:	2b00      	cmp	r3, #0
    f49e:	dc09      	bgt.n	f4b4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)+0x32>
    f4a0:	6828      	ldr	r0, [r5, #0]
    f4a2:	4621      	mov	r1, r4
    f4a4:	f850 3c0c 	ldr.w	r3, [r0, #-12]
    f4a8:	f840 6023 	str.w	r6, [r0, r3, lsl #2]
    f4ac:	380c      	subs	r0, #12
    f4ae:	f7ff fd59 	bl	ef64 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_set_length_and_sharable(unsigned int)>
    f4b2:	bd70      	pop	{r4, r5, r6, pc}
    f4b4:	4628      	mov	r0, r5
    f4b6:	4621      	mov	r1, r4
    f4b8:	f7ff ff01 	bl	f2be <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned int)>
    f4bc:	e7f0      	b.n	f4a0 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)+0x1e>

0000f4be <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_grab(std::allocator<wchar_t> const&, std::allocator<wchar_t> const&)>:
    f4be:	b508      	push	{r3, lr}
    f4c0:	6883      	ldr	r3, [r0, #8]
    f4c2:	2b00      	cmp	r3, #0
    f4c4:	db02      	blt.n	f4cc <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_grab(std::allocator<wchar_t> const&, std::allocator<wchar_t> const&)+0xe>
    f4c6:	f7ff fed3 	bl	f270 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_refcopy()>
    f4ca:	bd08      	pop	{r3, pc}
    f4cc:	2200      	movs	r2, #0
    f4ce:	f7ff fedd 	bl	f28c <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_clone(std::allocator<wchar_t> const&, unsigned int)>
    f4d2:	bd08      	pop	{r3, pc}

0000f4d4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)>:
    f4d4:	b513      	push	{r0, r1, r4, lr}
    f4d6:	4604      	mov	r4, r0
    f4d8:	6808      	ldr	r0, [r1, #0]
    f4da:	aa01      	add	r2, sp, #4
    f4dc:	4669      	mov	r1, sp
    f4de:	380c      	subs	r0, #12
    f4e0:	f7ff ffed 	bl	f4be <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_grab(std::allocator<wchar_t> const&, std::allocator<wchar_t> const&)>
    f4e4:	6020      	str	r0, [r4, #0]
    f4e6:	4620      	mov	r0, r4
    f4e8:	b002      	add	sp, #8
    f4ea:	bd10      	pop	{r4, pc}

0000f4ec <wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag)>:
    f4ec:	4288      	cmp	r0, r1
    f4ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    f4f2:	4606      	mov	r6, r0
    f4f4:	460d      	mov	r5, r1
    f4f6:	d101      	bne.n	f4fc <wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag)+0x10>
    f4f8:	4f0d      	ldr	r7, [pc, #52]	; (f530 <wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag)+0x44>)
    f4fa:	e016      	b.n	f52a <wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag)+0x3e>
    f4fc:	b918      	cbnz	r0, f506 <wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag)+0x1a>
    f4fe:	b115      	cbz	r5, f506 <wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag)+0x1a>
    f500:	480c      	ldr	r0, [pc, #48]	; (f534 <wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag)+0x48>)
    f502:	f7ff f8e6 	bl	e6d2 <std::__throw_logic_error(char const*)>
    f506:	1bac      	subs	r4, r5, r6
    f508:	10a4      	asrs	r4, r4, #2
    f50a:	2100      	movs	r1, #0
    f50c:	4620      	mov	r0, r4
    f50e:	f7ff fd37 	bl	ef80 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned int, unsigned int, std::allocator<wchar_t> const&)>
    f512:	4680      	mov	r8, r0
    f514:	f100 070c 	add.w	r7, r0, #12
    f518:	4638      	mov	r0, r7
    f51a:	4631      	mov	r1, r6
    f51c:	462a      	mov	r2, r5
    f51e:	f7ff fcff 	bl	ef20 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_copy_chars(wchar_t*, wchar_t const*, wchar_t const*)>
    f522:	4640      	mov	r0, r8
    f524:	4621      	mov	r1, r4
    f526:	f7ff fd1d 	bl	ef64 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_set_length_and_sharable(unsigned int)>
    f52a:	4638      	mov	r0, r7
    f52c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    f530:	10000c80 	.word	0x10000c80
    f534:	0001c091 	.word	0x0001c091

0000f538 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, std::allocator<wchar_t> const&)>:
    f538:	b570      	push	{r4, r5, r6, lr}
    f53a:	4605      	mov	r5, r0
    f53c:	4616      	mov	r6, r2
    f53e:	460c      	mov	r4, r1
    f540:	b129      	cbz	r1, f54e <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, std::allocator<wchar_t> const&)+0x16>
    f542:	4608      	mov	r0, r1
    f544:	f007 fc8e 	bl	16e64 <wcslen>
    f548:	eb04 0180 	add.w	r1, r4, r0, lsl #2
    f54c:	e001      	b.n	f552 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, std::allocator<wchar_t> const&)+0x1a>
    f54e:	f06f 0103 	mvn.w	r1, #3
    f552:	4620      	mov	r0, r4
    f554:	4632      	mov	r2, r6
    f556:	f04f 0300 	mov.w	r3, #0
    f55a:	f7ff ffc7 	bl	f4ec <wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag)>
    f55e:	6028      	str	r0, [r5, #0]
    f560:	4628      	mov	r0, r5
    f562:	bd70      	pop	{r4, r5, r6, pc}

0000f564 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&)>:
    f564:	b510      	push	{r4, lr}
    f566:	4604      	mov	r4, r0
    f568:	4608      	mov	r0, r1
    f56a:	4611      	mov	r1, r2
    f56c:	461a      	mov	r2, r3
    f56e:	f04f 0300 	mov.w	r3, #0
    f572:	f7ff ffbb 	bl	f4ec <wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag)>
    f576:	6020      	str	r0, [r4, #0]
    f578:	4620      	mov	r0, r4
    f57a:	bd10      	pop	{r4, pc}

0000f57c <__gnu_cxx::__throw_insufficient_space(char const*, char const*)>:
    f57c:	4680      	mov	r8, r0
    f57e:	b580      	push	{r7, lr}
    f580:	b09c      	sub	sp, #112	; 0x70
    f582:	af00      	add	r7, sp, #0
    f584:	1a0e      	subs	r6, r1, r0
    f586:	226c      	movs	r2, #108	; 0x6c
    f588:	490e      	ldr	r1, [pc, #56]	; (f5c4 <__gnu_cxx::__throw_insufficient_space(char const*, char const*)+0x48>)
    f58a:	1d38      	adds	r0, r7, #4
    f58c:	f004 f87e 	bl	1368c <memcpy>
    f590:	f106 037a 	add.w	r3, r6, #122	; 0x7a
    f594:	f023 0307 	bic.w	r3, r3, #7
    f598:	ebad 0d03 	sub.w	sp, sp, r3
    f59c:	1d39      	adds	r1, r7, #4
    f59e:	226b      	movs	r2, #107	; 0x6b
    f5a0:	4668      	mov	r0, sp
    f5a2:	f004 f873 	bl	1368c <memcpy>
    f5a6:	1c75      	adds	r5, r6, #1
    f5a8:	f10d 006b 	add.w	r0, sp, #107	; 0x6b
    f5ac:	4641      	mov	r1, r8
    f5ae:	4632      	mov	r2, r6
    f5b0:	f004 f86c 	bl	1368c <memcpy>
    f5b4:	446d      	add	r5, sp
    f5b6:	2300      	movs	r3, #0
    f5b8:	f885 306a 	strb.w	r3, [r5, #106]	; 0x6a
    f5bc:	4668      	mov	r0, sp
    f5be:	f7ff f888 	bl	e6d2 <std::__throw_logic_error(char const*)>
    f5c2:	bf00      	nop
    f5c4:	0001c0eb 	.word	0x0001c0eb

0000f5c8 <__gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)>:
    f5c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    f5cc:	b084      	sub	sp, #16
    f5ce:	4b10      	ldr	r3, [pc, #64]	; (f610 <__gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)+0x48>)
    f5d0:	af04      	add	r7, sp, #16
    f5d2:	681b      	ldr	r3, [r3, #0]
    f5d4:	b088      	sub	sp, #32
    f5d6:	9300      	str	r3, [sp, #0]
    f5d8:	2302      	movs	r3, #2
    f5da:	9301      	str	r3, [sp, #4]
    f5dc:	2301      	movs	r3, #1
    f5de:	9302      	str	r3, [sp, #8]
    f5e0:	4606      	mov	r6, r0
    f5e2:	2300      	movs	r3, #0
    f5e4:	a80a      	add	r0, sp, #40	; 0x28
    f5e6:	4688      	mov	r8, r1
    f5e8:	f7fa fb3b 	bl	9c62 <int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)>
    f5ec:	4580      	cmp	r8, r0
    f5ee:	ad04      	add	r5, sp, #16
    f5f0:	4604      	mov	r4, r0
    f5f2:	d307      	bcc.n	f604 <__gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)+0x3c>
    f5f4:	f1c0 0118 	rsb	r1, r0, #24
    f5f8:	4429      	add	r1, r5
    f5fa:	4630      	mov	r0, r6
    f5fc:	4622      	mov	r2, r4
    f5fe:	f004 f845 	bl	1368c <memcpy>
    f602:	e001      	b.n	f608 <__gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)+0x40>
    f604:	f04f 34ff 	mov.w	r4, #4294967295
    f608:	4620      	mov	r0, r4
    f60a:	46bd      	mov	sp, r7
    f60c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    f610:	1000016c 	.word	0x1000016c

0000f614 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)>:
    f614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    f618:	4606      	mov	r6, r0
    f61a:	4615      	mov	r5, r2
    f61c:	4604      	mov	r4, r0
    f61e:	3901      	subs	r1, #1
    f620:	1847      	adds	r7, r0, r1
    f622:	782a      	ldrb	r2, [r5, #0]
    f624:	b3a2      	cbz	r2, f690 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0x7c>
    f626:	42bc      	cmp	r4, r7
    f628:	d22e      	bcs.n	f688 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0x74>
    f62a:	2a25      	cmp	r2, #37	; 0x25
    f62c:	d123      	bne.n	f676 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0x62>
    f62e:	786a      	ldrb	r2, [r5, #1]
    f630:	2a73      	cmp	r2, #115	; 0x73
    f632:	d005      	beq.n	f640 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0x2c>
    f634:	2a7a      	cmp	r2, #122	; 0x7a
    f636:	d00e      	beq.n	f656 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0x42>
    f638:	2a25      	cmp	r2, #37	; 0x25
    f63a:	d11c      	bne.n	f676 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0x62>
    f63c:	3501      	adds	r5, #1
    f63e:	e01a      	b.n	f676 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0x62>
    f640:	1d19      	adds	r1, r3, #4
    f642:	681b      	ldr	r3, [r3, #0]
    f644:	3b01      	subs	r3, #1
    f646:	f813 2f01 	ldrb.w	r2, [r3, #1]!
    f64a:	b1d2      	cbz	r2, f682 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0x6e>
    f64c:	42bc      	cmp	r4, r7
    f64e:	d01b      	beq.n	f688 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0x74>
    f650:	f804 2b01 	strb.w	r2, [r4], #1
    f654:	e7f7      	b.n	f646 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0x32>
    f656:	78aa      	ldrb	r2, [r5, #2]
    f658:	2a75      	cmp	r2, #117	; 0x75
    f65a:	d10c      	bne.n	f676 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0x62>
    f65c:	4620      	mov	r0, r4
    f65e:	1b39      	subs	r1, r7, r4
    f660:	681a      	ldr	r2, [r3, #0]
    f662:	f103 0804 	add.w	r8, r3, #4
    f666:	f7ff ffaf 	bl	f5c8 <__gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)>
    f66a:	2800      	cmp	r0, #0
    f66c:	dd0c      	ble.n	f688 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0x74>
    f66e:	4404      	add	r4, r0
    f670:	3503      	adds	r5, #3
    f672:	4643      	mov	r3, r8
    f674:	e7d5      	b.n	f622 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0xe>
    f676:	782a      	ldrb	r2, [r5, #0]
    f678:	3401      	adds	r4, #1
    f67a:	f804 2c01 	strb.w	r2, [r4, #-1]
    f67e:	3501      	adds	r5, #1
    f680:	e7cf      	b.n	f622 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0xe>
    f682:	3502      	adds	r5, #2
    f684:	460b      	mov	r3, r1
    f686:	e7cc      	b.n	f622 <__gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)+0xe>
    f688:	4630      	mov	r0, r6
    f68a:	4621      	mov	r1, r4
    f68c:	f7ff ff76 	bl	f57c <__gnu_cxx::__throw_insufficient_space(char const*, char const*)>
    f690:	7022      	strb	r2, [r4, #0]
    f692:	1ba0      	subs	r0, r4, r6
    f694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000f698 <__dynamic_cast>:
    f698:	b5f0      	push	{r4, r5, r6, r7, lr}
    f69a:	460f      	mov	r7, r1
    f69c:	4604      	mov	r4, r0
    f69e:	4616      	mov	r6, r2
    f6a0:	461d      	mov	r5, r3
    f6a2:	6801      	ldr	r1, [r0, #0]
    f6a4:	b089      	sub	sp, #36	; 0x24
    f6a6:	f851 3c08 	ldr.w	r3, [r1, #-8]
    f6aa:	18c2      	adds	r2, r0, r3
    f6ac:	f851 0c04 	ldr.w	r0, [r1, #-4]
    f6b0:	2300      	movs	r3, #0
    f6b2:	9305      	str	r3, [sp, #20]
    f6b4:	f88d 3018 	strb.w	r3, [sp, #24]
    f6b8:	f88d 3019 	strb.w	r3, [sp, #25]
    f6bc:	f88d 301a 	strb.w	r3, [sp, #26]
    f6c0:	2310      	movs	r3, #16
    f6c2:	9307      	str	r3, [sp, #28]
    f6c4:	6803      	ldr	r3, [r0, #0]
    f6c6:	e88d 0084 	stmia.w	sp, {r2, r7}
    f6ca:	aa05      	add	r2, sp, #20
    f6cc:	9203      	str	r2, [sp, #12]
    f6ce:	9402      	str	r4, [sp, #8]
    f6d0:	f8d3 c01c 	ldr.w	r12, [r3, #28]
    f6d4:	2206      	movs	r2, #6
    f6d6:	4629      	mov	r1, r5
    f6d8:	4633      	mov	r3, r6
    f6da:	47e0      	blx	r12
    f6dc:	9a05      	ldr	r2, [sp, #20]
    f6de:	b90a      	cbnz	r2, f6e4 <__dynamic_cast+0x4c>
    f6e0:	2000      	movs	r0, #0
    f6e2:	e031      	b.n	f748 <__dynamic_cast+0xb0>
    f6e4:	f89d 001a 	ldrb.w	r0, [sp, #26]
    f6e8:	f000 0306 	and.w	r3, r0, #6
    f6ec:	2b06      	cmp	r3, #6
    f6ee:	d02a      	beq.n	f746 <__dynamic_cast+0xae>
    f6f0:	f89d 1019 	ldrb.w	r1, [sp, #25]
    f6f4:	f89d 3018 	ldrb.w	r3, [sp, #24]
    f6f8:	400b      	ands	r3, r1
    f6fa:	f003 0306 	and.w	r3, r3, #6
    f6fe:	2b06      	cmp	r3, #6
    f700:	d021      	beq.n	f746 <__dynamic_cast+0xae>
    f702:	f001 0105 	and.w	r1, r1, #5
    f706:	2904      	cmp	r1, #4
    f708:	d0ea      	beq.n	f6e0 <__dynamic_cast+0x48>
    f70a:	b9a0      	cbnz	r0, f736 <__dynamic_cast+0x9e>
    f70c:	2d00      	cmp	r5, #0
    f70e:	db05      	blt.n	f71c <__dynamic_cast+0x84>
    f710:	1950      	adds	r0, r2, r5
    f712:	4284      	cmp	r4, r0
    f714:	bf0c      	ite	eq
    f716:	2006      	moveq	r0, #6
    f718:	2001      	movne	r0, #1
    f71a:	e00a      	b.n	f732 <__dynamic_cast+0x9a>
    f71c:	1cab      	adds	r3, r5, #2
    f71e:	d007      	beq.n	f730 <__dynamic_cast+0x98>
    f720:	6833      	ldr	r3, [r6, #0]
    f722:	9400      	str	r4, [sp, #0]
    f724:	6a1c      	ldr	r4, [r3, #32]
    f726:	4630      	mov	r0, r6
    f728:	4629      	mov	r1, r5
    f72a:	463b      	mov	r3, r7
    f72c:	47a0      	blx	r4
    f72e:	e000      	b.n	f732 <__dynamic_cast+0x9a>
    f730:	2001      	movs	r0, #1
    f732:	f88d 001a 	strb.w	r0, [sp, #26]
    f736:	f89d 301a 	ldrb.w	r3, [sp, #26]
    f73a:	f003 0306 	and.w	r3, r3, #6
    f73e:	2b06      	cmp	r3, #6
    f740:	d1ce      	bne.n	f6e0 <__dynamic_cast+0x48>
    f742:	9805      	ldr	r0, [sp, #20]
    f744:	e000      	b.n	f748 <__dynamic_cast+0xb0>
    f746:	4610      	mov	r0, r2
    f748:	b009      	add	sp, #36	; 0x24
    f74a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000f74c <__cxa_bad_cast>:
    f74c:	b508      	push	{r3, lr}
    f74e:	f7f1 f9d3 	bl	af8 <abort>

0000f752 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
    f752:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    f754:	2310      	movs	r3, #16
    f756:	9302      	str	r3, [sp, #8]
    f758:	6803      	ldr	r3, [r0, #0]
    f75a:	2400      	movs	r4, #0
    f75c:	4615      	mov	r5, r2
    f75e:	699e      	ldr	r6, [r3, #24]
    f760:	9400      	str	r4, [sp, #0]
    f762:	466b      	mov	r3, sp
    f764:	f88d 4004 	strb.w	r4, [sp, #4]
    f768:	9403      	str	r4, [sp, #12]
    f76a:	6812      	ldr	r2, [r2, #0]
    f76c:	47b0      	blx	r6
    f76e:	f89d 3004 	ldrb.w	r3, [sp, #4]
    f772:	f003 0306 	and.w	r3, r3, #6
    f776:	2b06      	cmp	r3, #6
    f778:	bf11      	iteee	ne
    f77a:	4620      	movne	r0, r4
    f77c:	9b00      	ldreq	r3, [sp, #0]
    f77e:	2001      	moveq	r0, #1
    f780:	602b      	streq	r3, [r5, #0]
    f782:	b004      	add	sp, #16
    f784:	bd70      	pop	{r4, r5, r6, pc}

0000f786 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
    f786:	9800      	ldr	r0, [sp, #0]
    f788:	4290      	cmp	r0, r2
    f78a:	bf0c      	ite	eq
    f78c:	2006      	moveq	r0, #6
    f78e:	2001      	movne	r0, #1
    f790:	4770      	bx	lr
	...

0000f794 <__cxxabiv1::__class_type_info::~__class_type_info()>:
    f794:	b510      	push	{r4, lr}
    f796:	4604      	mov	r4, r0
    f798:	4b02      	ldr	r3, [pc, #8]	; (f7a4 <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
    f79a:	6003      	str	r3, [r0, #0]
    f79c:	f001 fd04 	bl	111a8 <std::type_info::~type_info()>
    f7a0:	4620      	mov	r0, r4
    f7a2:	bd10      	pop	{r4, pc}
    f7a4:	0001c160 	.word	0x0001c160

0000f7a8 <__cxxabiv1::__class_type_info::~__class_type_info()>:
    f7a8:	b510      	push	{r4, lr}
    f7aa:	4604      	mov	r4, r0
    f7ac:	f7ff fff2 	bl	f794 <__cxxabiv1::__class_type_info::~__class_type_info()>
    f7b0:	4620      	mov	r0, r4
    f7b2:	f7f2 feac 	bl	250e <operator delete(void*)>
    f7b6:	4620      	mov	r0, r4
    f7b8:	bd10      	pop	{r4, pc}

0000f7ba <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
    f7ba:	b538      	push	{r3, r4, r5, lr}
    f7bc:	4615      	mov	r5, r2
    f7be:	461c      	mov	r4, r3
    f7c0:	f001 fcf7 	bl	111b2 <std::type_info::operator==(std::type_info const&) const>
    f7c4:	b120      	cbz	r0, f7d0 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x16>
    f7c6:	2308      	movs	r3, #8
    f7c8:	60e3      	str	r3, [r4, #12]
    f7ca:	2306      	movs	r3, #6
    f7cc:	6025      	str	r5, [r4, #0]
    f7ce:	7123      	strb	r3, [r4, #4]
    f7d0:	bd38      	pop	{r3, r4, r5, pc}

0000f7d2 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
    f7d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    f7d6:	4606      	mov	r6, r0
    f7d8:	460c      	mov	r4, r1
    f7da:	4615      	mov	r5, r2
    f7dc:	461f      	mov	r7, r3
    f7de:	f001 fce8 	bl	111b2 <std::type_info::operator==(std::type_info const&) const>
    f7e2:	b948      	cbnz	r0, f7f8 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
    f7e4:	2f03      	cmp	r7, #3
    f7e6:	d807      	bhi.n	f7f8 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
    f7e8:	6823      	ldr	r3, [r4, #0]
    f7ea:	4620      	mov	r0, r4
    f7ec:	4631      	mov	r1, r6
    f7ee:	462a      	mov	r2, r5
    f7f0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    f7f4:	695b      	ldr	r3, [r3, #20]
    f7f6:	4718      	bx	r3
    f7f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000f7fc <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
    f7fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    f800:	9e06      	ldr	r6, [sp, #24]
    f802:	461f      	mov	r7, r3
    f804:	9b08      	ldr	r3, [sp, #32]
    f806:	4680      	mov	r8, r0
    f808:	429e      	cmp	r6, r3
    f80a:	4615      	mov	r5, r2
    f80c:	9c09      	ldr	r4, [sp, #36]	; 0x24
    f80e:	d103      	bne.n	f818 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1c>
    f810:	9907      	ldr	r1, [sp, #28]
    f812:	f001 fcce 	bl	111b2 <std::type_info::operator==(std::type_info const&) const>
    f816:	b948      	cbnz	r0, f82c <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x30>
    f818:	4640      	mov	r0, r8
    f81a:	4639      	mov	r1, r7
    f81c:	f001 fcc9 	bl	111b2 <std::type_info::operator==(std::type_info const&) const>
    f820:	b128      	cbz	r0, f82e <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
    f822:	2301      	movs	r3, #1
    f824:	6026      	str	r6, [r4, #0]
    f826:	7125      	strb	r5, [r4, #4]
    f828:	71a3      	strb	r3, [r4, #6]
    f82a:	e000      	b.n	f82e <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
    f82c:	7165      	strb	r5, [r4, #5]
    f82e:	2000      	movs	r0, #0
    f830:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000f834 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
    f834:	b510      	push	{r4, lr}
    f836:	4604      	mov	r4, r0
    f838:	4b02      	ldr	r3, [pc, #8]	; (f844 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()+0x10>)
    f83a:	6003      	str	r3, [r0, #0]
    f83c:	f7ff ffaa 	bl	f794 <__cxxabiv1::__class_type_info::~__class_type_info()>
    f840:	4620      	mov	r0, r4
    f842:	bd10      	pop	{r4, pc}
    f844:	0001c1f8 	.word	0x0001c1f8

0000f848 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>:
    f848:	b510      	push	{r4, lr}
    f84a:	4604      	mov	r4, r0
    f84c:	f7ff fff2 	bl	f834 <__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()>
    f850:	4620      	mov	r0, r4
    f852:	f7f2 fe5c 	bl	250e <operator delete(void*)>
    f856:	4620      	mov	r0, r4
    f858:	bd10      	pop	{r4, pc}

0000f85a <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
    f85a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
    f85e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
    f862:	4604      	mov	r4, r0
    f864:	454a      	cmp	r2, r9
    f866:	460f      	mov	r7, r1
    f868:	4692      	mov	r10, r2
    f86a:	4698      	mov	r8, r3
    f86c:	d105      	bne.n	f87a <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x20>
    f86e:	4619      	mov	r1, r3
    f870:	f001 fc9f 	bl	111b2 <std::type_info::operator==(std::type_info const&) const>
    f874:	b108      	cbz	r0, f87a <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x20>
    f876:	2006      	movs	r0, #6
    f878:	e027      	b.n	f8ca <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x70>
    f87a:	68e3      	ldr	r3, [r4, #12]
    f87c:	1e5e      	subs	r6, r3, #1
    f87e:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
    f882:	1c73      	adds	r3, r6, #1
    f884:	d020      	beq.n	f8c8 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x6e>
    f886:	68e3      	ldr	r3, [r4, #12]
    f888:	0798      	lsls	r0, r3, #30
    f88a:	d51a      	bpl.n	f8c2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x68>
    f88c:	f013 0501 	ands.w	r5, r3, #1
    f890:	ea4f 2223 	mov.w	r2, r3, asr #8
    f894:	d004      	beq.n	f8a0 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x46>
    f896:	1cf9      	adds	r1, r7, #3
    f898:	d013      	beq.n	f8c2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x68>
    f89a:	f8da 3000 	ldr.w	r3, [r10]
    f89e:	589a      	ldr	r2, [r3, r2]
    f8a0:	68a0      	ldr	r0, [r4, #8]
    f8a2:	4639      	mov	r1, r7
    f8a4:	6803      	ldr	r3, [r0, #0]
    f8a6:	f8cd 9000 	str.w	r9, [sp]
    f8aa:	f8d3 c020 	ldr.w	r12, [r3, #32]
    f8ae:	4452      	add	r2, r10
    f8b0:	4643      	mov	r3, r8
    f8b2:	47e0      	blx	r12
    f8b4:	2803      	cmp	r0, #3
    f8b6:	d904      	bls.n	f8c2 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x68>
    f8b8:	b13d      	cbz	r5, f8ca <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x70>
    f8ba:	f040 0001 	orr.w	r0, r0, #1
    f8be:	b2c0      	uxtb	r0, r0
    f8c0:	e003      	b.n	f8ca <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x70>
    f8c2:	3e01      	subs	r6, #1
    f8c4:	3c08      	subs	r4, #8
    f8c6:	e7dc      	b.n	f882 <__cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x28>
    f8c8:	2001      	movs	r0, #1
    f8ca:	b002      	add	sp, #8
    f8cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

0000f8d0 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
    f8d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    f8d2:	1e0d      	subs	r5, r1, #0
    f8d4:	9c05      	ldr	r4, [sp, #20]
    f8d6:	db05      	blt.n	f8e4 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x14>
    f8d8:	1950      	adds	r0, r2, r5
    f8da:	4284      	cmp	r4, r0
    f8dc:	bf0c      	ite	eq
    f8de:	2006      	moveq	r0, #6
    f8e0:	2001      	movne	r0, #1
    f8e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    f8e4:	3502      	adds	r5, #2
    f8e6:	d006      	beq.n	f8f6 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x26>
    f8e8:	6805      	ldr	r5, [r0, #0]
    f8ea:	9405      	str	r4, [sp, #20]
    f8ec:	6a2c      	ldr	r4, [r5, #32]
    f8ee:	46a4      	mov	r12, r4
    f8f0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    f8f4:	4760      	bx	r12
    f8f6:	2001      	movs	r0, #1
    f8f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000f8fa <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
    f8fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    f8fe:	b08f      	sub	sp, #60	; 0x3c
    f900:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
    f902:	469b      	mov	r11, r3
    f904:	68a3      	ldr	r3, [r4, #8]
    f906:	9205      	str	r2, [sp, #20]
    f908:	06df      	lsls	r7, r3, #27
    f90a:	bf48      	it	mi
    f90c:	6883      	ldrmi	r3, [r0, #8]
    f90e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    f910:	bf48      	it	mi
    f912:	60a3      	strmi	r3, [r4, #8]
    f914:	9b18      	ldr	r3, [sp, #96]	; 0x60
    f916:	4682      	mov	r10, r0
    f918:	4293      	cmp	r3, r2
    f91a:	4688      	mov	r8, r1
    f91c:	d108      	bne.n	f930 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
    f91e:	9919      	ldr	r1, [sp, #100]	; 0x64
    f920:	f001 fc47 	bl	111b2 <std::type_info::operator==(std::type_info const&) const>
    f924:	b120      	cbz	r0, f930 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
    f926:	f89d 3014 	ldrb.w	r3, [sp, #20]
    f92a:	7163      	strb	r3, [r4, #5]
    f92c:	2700      	movs	r7, #0
    f92e:	e122      	b.n	fb76 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27c>
    f930:	4650      	mov	r0, r10
    f932:	4659      	mov	r1, r11
    f934:	f001 fc3d 	bl	111b2 <std::type_info::operator==(std::type_info const&) const>
    f938:	4607      	mov	r7, r0
    f93a:	b1c8      	cbz	r0, f970 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x76>
    f93c:	9b18      	ldr	r3, [sp, #96]	; 0x60
    f93e:	f1b8 0f00 	cmp.w	r8, #0
    f942:	6023      	str	r3, [r4, #0]
    f944:	f89d 3014 	ldrb.w	r3, [sp, #20]
    f948:	7123      	strb	r3, [r4, #4]
    f94a:	db0b      	blt.n	f964 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x6a>
    f94c:	9b18      	ldr	r3, [sp, #96]	; 0x60
    f94e:	4498      	add	r8, r3
    f950:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    f952:	4543      	cmp	r3, r8
    f954:	bf0c      	ite	eq
    f956:	f04f 0806 	moveq.w	r8, #6
    f95a:	f04f 0801 	movne.w	r8, #1
    f95e:	f884 8006 	strb.w	r8, [r4, #6]
    f962:	e7e3      	b.n	f92c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
    f964:	f118 0f02 	cmn.w	r8, #2
    f968:	d1e0      	bne.n	f92c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
    f96a:	2301      	movs	r3, #1
    f96c:	71a3      	strb	r3, [r4, #6]
    f96e:	e7dd      	b.n	f92c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x32>
    f970:	f1b8 0f00 	cmp.w	r8, #0
    f974:	bfa8      	it	ge
    f976:	9b1a      	ldrge	r3, [sp, #104]	; 0x68
    f978:	f04f 0900 	mov.w	r9, #0
    f97c:	bfa6      	itte	ge
    f97e:	ebc8 0303 	rsbge	r3, r8, r3
    f982:	9306      	strge	r3, [sp, #24]
    f984:	9706      	strlt	r7, [sp, #24]
    f986:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
    f98a:	2301      	movs	r3, #1
    f98c:	9307      	str	r3, [sp, #28]
    f98e:	f8da 300c 	ldr.w	r3, [r10, #12]
    f992:	1e5a      	subs	r2, r3, #1
    f994:	9208      	str	r2, [sp, #32]
    f996:	eb0a 03c3 	add.w	r3, r10, r3, lsl #3
    f99a:	9304      	str	r3, [sp, #16]
    f99c:	9b08      	ldr	r3, [sp, #32]
    f99e:	3301      	adds	r3, #1
    f9a0:	f000 80a8 	beq.w	faf4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1fa>
    f9a4:	2300      	movs	r3, #0
    f9a6:	930b      	str	r3, [sp, #44]	; 0x2c
    f9a8:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
    f9ac:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
    f9b0:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
    f9b4:	9b04      	ldr	r3, [sp, #16]
    f9b6:	68a1      	ldr	r1, [r4, #8]
    f9b8:	68dd      	ldr	r5, [r3, #12]
    f9ba:	910d      	str	r1, [sp, #52]	; 0x34
    f9bc:	07ee      	lsls	r6, r5, #31
    f9be:	bf48      	it	mi
    f9c0:	9818      	ldrmi	r0, [sp, #96]	; 0x60
    f9c2:	ea4f 2325 	mov.w	r3, r5, asr #8
    f9c6:	bf48      	it	mi
    f9c8:	6800      	ldrmi	r0, [r0, #0]
    f9ca:	9a05      	ldr	r2, [sp, #20]
    f9cc:	bf48      	it	mi
    f9ce:	58c3      	ldrmi	r3, [r0, r3]
    f9d0:	9818      	ldr	r0, [sp, #96]	; 0x60
    f9d2:	bf48      	it	mi
    f9d4:	f042 0201 	orrmi.w	r2, r2, #1
    f9d8:	4403      	add	r3, r0
    f9da:	9806      	ldr	r0, [sp, #24]
    f9dc:	b130      	cbz	r0, f9ec <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xf2>
    f9de:	4283      	cmp	r3, r0
    f9e0:	9e07      	ldr	r6, [sp, #28]
    f9e2:	bf94      	ite	ls
    f9e4:	2000      	movls	r0, #0
    f9e6:	2001      	movhi	r0, #1
    f9e8:	42b0      	cmp	r0, r6
    f9ea:	d076      	beq.n	fada <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e0>
    f9ec:	07a8      	lsls	r0, r5, #30
    f9ee:	d406      	bmi.n	f9fe <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x104>
    f9f0:	f118 0f02 	cmn.w	r8, #2
    f9f4:	d101      	bne.n	f9fa <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x100>
    f9f6:	078e      	lsls	r6, r1, #30
    f9f8:	d076      	beq.n	fae8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ee>
    f9fa:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
    f9fe:	9904      	ldr	r1, [sp, #16]
    fa00:	6888      	ldr	r0, [r1, #8]
    fa02:	6801      	ldr	r1, [r0, #0]
    fa04:	9300      	str	r3, [sp, #0]
    fa06:	9b19      	ldr	r3, [sp, #100]	; 0x64
    fa08:	9301      	str	r3, [sp, #4]
    fa0a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    fa0c:	9302      	str	r3, [sp, #8]
    fa0e:	ab0b      	add	r3, sp, #44	; 0x2c
    fa10:	9303      	str	r3, [sp, #12]
    fa12:	69cd      	ldr	r5, [r1, #28]
    fa14:	465b      	mov	r3, r11
    fa16:	4641      	mov	r1, r8
    fa18:	47a8      	blx	r5
    fa1a:	7962      	ldrb	r2, [r4, #5]
    fa1c:	f89d 1031 	ldrb.w	r1, [sp, #49]	; 0x31
    fa20:	f89d 5032 	ldrb.w	r5, [sp, #50]	; 0x32
    fa24:	4311      	orrs	r1, r2
    fa26:	2d06      	cmp	r5, #6
    fa28:	4603      	mov	r3, r0
    fa2a:	7161      	strb	r1, [r4, #5]
    fa2c:	d001      	beq.n	fa32 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x138>
    fa2e:	2d02      	cmp	r5, #2
    fa30:	d106      	bne.n	fa40 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x146>
    fa32:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    fa34:	71a5      	strb	r5, [r4, #6]
    fa36:	6023      	str	r3, [r4, #0]
    fa38:	f89d 3030 	ldrb.w	r3, [sp, #48]	; 0x30
    fa3c:	7123      	strb	r3, [r4, #4]
    fa3e:	e04f      	b.n	fae0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e6>
    fa40:	6822      	ldr	r2, [r4, #0]
    fa42:	f1b9 0f00 	cmp.w	r9, #0
    fa46:	d10e      	bne.n	fa66 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16c>
    fa48:	b96a      	cbnz	r2, fa66 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x16c>
    fa4a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    fa4c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
    fa50:	6022      	str	r2, [r4, #0]
    fa52:	7125      	strb	r5, [r4, #4]
    fa54:	2a00      	cmp	r2, #0
    fa56:	d03b      	beq.n	fad0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d6>
    fa58:	2900      	cmp	r1, #0
    fa5a:	d039      	beq.n	fad0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d6>
    fa5c:	f8da 2008 	ldr.w	r2, [r10, #8]
    fa60:	07d5      	lsls	r5, r2, #31
    fa62:	d435      	bmi.n	fad0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d6>
    fa64:	e03c      	b.n	fae0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1e6>
    fa66:	b152      	cbz	r2, fa7e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x184>
    fa68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    fa6a:	429a      	cmp	r2, r3
    fa6c:	d105      	bne.n	fa7a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x180>
    fa6e:	7923      	ldrb	r3, [r4, #4]
    fa70:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
    fa74:	4313      	orrs	r3, r2
    fa76:	7123      	strb	r3, [r4, #4]
    fa78:	e029      	b.n	face <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d4>
    fa7a:	b92b      	cbnz	r3, fa88 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18e>
    fa7c:	b920      	cbnz	r0, fa88 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x18e>
    fa7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    fa80:	b32b      	cbz	r3, face <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d4>
    fa82:	f1b9 0f00 	cmp.w	r9, #0
    fa86:	d022      	beq.n	face <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d4>
    fa88:	2903      	cmp	r1, #3
    fa8a:	79a6      	ldrb	r6, [r4, #6]
    fa8c:	d93a      	bls.n	fb04 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20a>
    fa8e:	07c8      	lsls	r0, r1, #31
    fa90:	d502      	bpl.n	fa98 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x19e>
    fa92:	68a3      	ldr	r3, [r4, #8]
    fa94:	0799      	lsls	r1, r3, #30
    fa96:	d435      	bmi.n	fb04 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x20a>
    fa98:	2e00      	cmp	r6, #0
    fa9a:	d050      	beq.n	fb3e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x244>
    fa9c:	2d00      	cmp	r5, #0
    fa9e:	bf08      	it	eq
    faa0:	2501      	moveq	r5, #1
    faa2:	ea86 0305 	eor.w	r3, r6, r5
    faa6:	b2db      	uxtb	r3, r3
    faa8:	2b03      	cmp	r3, #3
    faaa:	d94b      	bls.n	fb44 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x24a>
    faac:	2d03      	cmp	r5, #3
    faae:	bf81      	itttt	hi
    fab0:	462e      	movhi	r6, r5
    fab2:	9b0b      	ldrhi	r3, [sp, #44]	; 0x2c
    fab4:	f04f 0900 	movhi.w	r9, #0
    fab8:	6023      	strhi	r3, [r4, #0]
    faba:	bf88      	it	hi
    fabc:	f89d 3030 	ldrbhi.w	r3, [sp, #48]	; 0x30
    fac0:	71a6      	strb	r6, [r4, #6]
    fac2:	bf88      	it	hi
    fac4:	7123      	strbhi	r3, [r4, #4]
    fac6:	07b2      	lsls	r2, r6, #30
    fac8:	d455      	bmi.n	fb76 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27c>
    faca:	07f3      	lsls	r3, r6, #31
    facc:	d553      	bpl.n	fb76 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27c>
    face:	464b      	mov	r3, r9
    fad0:	7962      	ldrb	r2, [r4, #5]
    fad2:	2a04      	cmp	r2, #4
    fad4:	d006      	beq.n	fae4 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ea>
    fad6:	4699      	mov	r9, r3
    fad8:	e006      	b.n	fae8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ee>
    fada:	2301      	movs	r3, #1
    fadc:	9309      	str	r3, [sp, #36]	; 0x24
    fade:	e003      	b.n	fae8 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1ee>
    fae0:	4607      	mov	r7, r0
    fae2:	e048      	b.n	fb76 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27c>
    fae4:	461f      	mov	r7, r3
    fae6:	e046      	b.n	fb76 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27c>
    fae8:	9b08      	ldr	r3, [sp, #32]
    faea:	3b01      	subs	r3, #1
    faec:	9308      	str	r3, [sp, #32]
    faee:	9b04      	ldr	r3, [sp, #16]
    faf0:	3b08      	subs	r3, #8
    faf2:	e752      	b.n	f99a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0xa0>
    faf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    faf6:	b11b      	cbz	r3, fb00 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x206>
    faf8:	9b07      	ldr	r3, [sp, #28]
    fafa:	b10b      	cbz	r3, fb00 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x206>
    fafc:	2300      	movs	r3, #0
    fafe:	e745      	b.n	f98c <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x92>
    fb00:	464f      	mov	r7, r9
    fb02:	e038      	b.n	fb76 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27c>
    fb04:	b97e      	cbnz	r6, fb26 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x22c>
    fb06:	2d03      	cmp	r5, #3
    fb08:	d905      	bls.n	fb16 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x21c>
    fb0a:	07eb      	lsls	r3, r5, #31
    fb0c:	d531      	bpl.n	fb72 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x278>
    fb0e:	f8da 3008 	ldr.w	r3, [r10, #8]
    fb12:	079e      	lsls	r6, r3, #30
    fb14:	d52d      	bpl.n	fb72 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x278>
    fb16:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    fb18:	4658      	mov	r0, r11
    fb1a:	9300      	str	r3, [sp, #0]
    fb1c:	4641      	mov	r1, r8
    fb1e:	9b19      	ldr	r3, [sp, #100]	; 0x64
    fb20:	f7ff fed6 	bl	f8d0 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
    fb24:	4606      	mov	r6, r0
    fb26:	2d00      	cmp	r5, #0
    fb28:	d1bb      	bne.n	faa2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1a8>
    fb2a:	2e03      	cmp	r6, #3
    fb2c:	d917      	bls.n	fb5e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x264>
    fb2e:	07f0      	lsls	r0, r6, #31
    fb30:	d503      	bpl.n	fb3a <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x240>
    fb32:	f8da 3008 	ldr.w	r3, [r10, #8]
    fb36:	0799      	lsls	r1, r3, #30
    fb38:	d411      	bmi.n	fb5e <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x264>
    fb3a:	2501      	movs	r5, #1
    fb3c:	e7b1      	b.n	faa2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1a8>
    fb3e:	b9c5      	cbnz	r5, fb72 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x278>
    fb40:	2601      	movs	r6, #1
    fb42:	4635      	mov	r5, r6
    fb44:	4035      	ands	r5, r6
    fb46:	b2ed      	uxtb	r5, r5
    fb48:	2300      	movs	r3, #0
    fb4a:	2d03      	cmp	r5, #3
    fb4c:	6023      	str	r3, [r4, #0]
    fb4e:	d903      	bls.n	fb58 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x25e>
    fb50:	2302      	movs	r3, #2
    fb52:	71a3      	strb	r3, [r4, #6]
    fb54:	2701      	movs	r7, #1
    fb56:	e00e      	b.n	fb76 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x27c>
    fb58:	2301      	movs	r3, #1
    fb5a:	71a3      	strb	r3, [r4, #6]
    fb5c:	e7b8      	b.n	fad0 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1d6>
    fb5e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    fb60:	4658      	mov	r0, r11
    fb62:	9300      	str	r3, [sp, #0]
    fb64:	4641      	mov	r1, r8
    fb66:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    fb68:	9b19      	ldr	r3, [sp, #100]	; 0x64
    fb6a:	f7ff feb1 	bl	f8d0 <__cxxabiv1::__class_type_info::__find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>
    fb6e:	4605      	mov	r5, r0
    fb70:	e797      	b.n	faa2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1a8>
    fb72:	2601      	movs	r6, #1
    fb74:	e795      	b.n	faa2 <__cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x1a8>
    fb76:	4638      	mov	r0, r7
    fb78:	b00f      	add	sp, #60	; 0x3c
    fb7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000fb7e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
    fb7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    fb82:	b089      	sub	sp, #36	; 0x24
    fb84:	4607      	mov	r7, r0
    fb86:	9102      	str	r1, [sp, #8]
    fb88:	4691      	mov	r9, r2
    fb8a:	461c      	mov	r4, r3
    fb8c:	f7ff fe15 	bl	f7ba <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
    fb90:	4606      	mov	r6, r0
    fb92:	2800      	cmp	r0, #0
    fb94:	f040 8086 	bne.w	fca4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x126>
    fb98:	f8d4 8008 	ldr.w	r8, [r4, #8]
    fb9c:	68fd      	ldr	r5, [r7, #12]
    fb9e:	f018 0f10 	tst.w	r8, #16
    fba2:	bf18      	it	ne
    fba4:	f8d7 8008 	ldrne.w	r8, [r7, #8]
    fba8:	f105 3aff 	add.w	r10, r5, #4294967295
    fbac:	eb07 05c5 	add.w	r5, r7, r5, lsl #3
    fbb0:	f1ba 3fff 	cmp.w	r10, #4294967295
    fbb4:	d06a      	beq.n	fc8c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x10e>
    fbb6:	68ea      	ldr	r2, [r5, #12]
    fbb8:	2300      	movs	r3, #0
    fbba:	9304      	str	r3, [sp, #16]
    fbbc:	f88d 3014 	strb.w	r3, [sp, #20]
    fbc0:	9307      	str	r3, [sp, #28]
    fbc2:	f3c2 0b40 	ubfx	r11, r2, #1, #1
    fbc6:	f002 0301 	and.w	r3, r2, #1
    fbca:	f8cd 8018 	str.w	r8, [sp, #24]
    fbce:	9301      	str	r3, [sp, #4]
    fbd0:	f1bb 0f00 	cmp.w	r11, #0
    fbd4:	d102      	bne.n	fbdc <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x5e>
    fbd6:	f018 0f01 	tst.w	r8, #1
    fbda:	d053      	beq.n	fc84 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x106>
    fbdc:	f1b9 0f00 	cmp.w	r9, #0
    fbe0:	d007      	beq.n	fbf2 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x74>
    fbe2:	9b01      	ldr	r3, [sp, #4]
    fbe4:	1212      	asrs	r2, r2, #8
    fbe6:	b113      	cbz	r3, fbee <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x70>
    fbe8:	f8d9 3000 	ldr.w	r3, [r9]
    fbec:	589a      	ldr	r2, [r3, r2]
    fbee:	444a      	add	r2, r9
    fbf0:	e000      	b.n	fbf4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x76>
    fbf2:	464a      	mov	r2, r9
    fbf4:	68a8      	ldr	r0, [r5, #8]
    fbf6:	f10d 0c10 	add.w	r12, sp, #16
    fbfa:	6803      	ldr	r3, [r0, #0]
    fbfc:	f8cd c00c 	str.w	r12, [sp, #12]
    fc00:	699e      	ldr	r6, [r3, #24]
    fc02:	9902      	ldr	r1, [sp, #8]
    fc04:	4663      	mov	r3, r12
    fc06:	47b0      	blx	r6
    fc08:	f8dd c00c 	ldr.w	r12, [sp, #12]
    fc0c:	4606      	mov	r6, r0
    fc0e:	2800      	cmp	r0, #0
    fc10:	d038      	beq.n	fc84 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x106>
    fc12:	9b07      	ldr	r3, [sp, #28]
    fc14:	2b08      	cmp	r3, #8
    fc16:	d103      	bne.n	fc20 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa2>
    fc18:	9b01      	ldr	r3, [sp, #4]
    fc1a:	b10b      	cbz	r3, fc20 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xa2>
    fc1c:	68ab      	ldr	r3, [r5, #8]
    fc1e:	9307      	str	r3, [sp, #28]
    fc20:	f89d 3014 	ldrb.w	r3, [sp, #20]
    fc24:	2b03      	cmp	r3, #3
    fc26:	d902      	bls.n	fc2e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xb0>
    fc28:	f1bb 0f00 	cmp.w	r11, #0
    fc2c:	d033      	beq.n	fc96 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x118>
    fc2e:	68e1      	ldr	r1, [r4, #12]
    fc30:	b999      	cbnz	r1, fc5a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xdc>
    fc32:	e89c 000f 	ldmia.w	r12, {r0, r1, r2, r3}
    fc36:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    fc3a:	7923      	ldrb	r3, [r4, #4]
    fc3c:	2b03      	cmp	r3, #3
    fc3e:	d931      	bls.n	fca4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x126>
    fc40:	079a      	lsls	r2, r3, #30
    fc42:	d503      	bpl.n	fc4c <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xce>
    fc44:	68bb      	ldr	r3, [r7, #8]
    fc46:	f013 0f01 	tst.w	r3, #1
    fc4a:	e004      	b.n	fc56 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xd8>
    fc4c:	07db      	lsls	r3, r3, #31
    fc4e:	d529      	bpl.n	fca4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x126>
    fc50:	68bb      	ldr	r3, [r7, #8]
    fc52:	f013 0f02 	tst.w	r3, #2
    fc56:	d115      	bne.n	fc84 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x106>
    fc58:	e024      	b.n	fca4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x126>
    fc5a:	6823      	ldr	r3, [r4, #0]
    fc5c:	9a04      	ldr	r2, [sp, #16]
    fc5e:	4293      	cmp	r3, r2
    fc60:	d002      	beq.n	fc68 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xea>
    fc62:	2300      	movs	r3, #0
    fc64:	6023      	str	r3, [r4, #0]
    fc66:	e01b      	b.n	fca0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x122>
    fc68:	b93b      	cbnz	r3, fc7a <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xfc>
    fc6a:	9807      	ldr	r0, [sp, #28]
    fc6c:	2808      	cmp	r0, #8
    fc6e:	d017      	beq.n	fca0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x122>
    fc70:	2908      	cmp	r1, #8
    fc72:	d015      	beq.n	fca0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x122>
    fc74:	f001 fa9d 	bl	111b2 <std::type_info::operator==(std::type_info const&) const>
    fc78:	b190      	cbz	r0, fca0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x122>
    fc7a:	7923      	ldrb	r3, [r4, #4]
    fc7c:	f89d 2014 	ldrb.w	r2, [sp, #20]
    fc80:	4313      	orrs	r3, r2
    fc82:	7123      	strb	r3, [r4, #4]
    fc84:	f10a 3aff 	add.w	r10, r10, #4294967295
    fc88:	3d08      	subs	r5, #8
    fc8a:	e791      	b.n	fbb0 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x32>
    fc8c:	7926      	ldrb	r6, [r4, #4]
    fc8e:	3600      	adds	r6, #0
    fc90:	bf18      	it	ne
    fc92:	2601      	movne	r6, #1
    fc94:	e006      	b.n	fca4 <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x126>
    fc96:	f023 0302 	bic.w	r3, r3, #2
    fc9a:	f88d 3014 	strb.w	r3, [sp, #20]
    fc9e:	e7c6      	b.n	fc2e <__cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xb0>
    fca0:	2302      	movs	r3, #2
    fca2:	7123      	strb	r3, [r4, #4]
    fca4:	4630      	mov	r0, r6
    fca6:	b009      	add	sp, #36	; 0x24
    fca8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000fcac <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
    fcac:	b510      	push	{r4, lr}
    fcae:	4604      	mov	r4, r0
    fcb0:	4b02      	ldr	r3, [pc, #8]	; (fcbc <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
    fcb2:	6003      	str	r3, [r0, #0]
    fcb4:	f7ff fd6e 	bl	f794 <__cxxabiv1::__class_type_info::~__class_type_info()>
    fcb8:	4620      	mov	r0, r4
    fcba:	bd10      	pop	{r4, pc}
    fcbc:	0001c228 	.word	0x0001c228

0000fcc0 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
    fcc0:	b510      	push	{r4, lr}
    fcc2:	4604      	mov	r4, r0
    fcc4:	f7ff fff2 	bl	fcac <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>
    fcc8:	4620      	mov	r0, r4
    fcca:	f7f2 fc20 	bl	250e <operator delete(void*)>
    fcce:	4620      	mov	r0, r4
    fcd0:	bd10      	pop	{r4, pc}

0000fcd2 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
    fcd2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    fcd6:	9e06      	ldr	r6, [sp, #24]
    fcd8:	4680      	mov	r8, r0
    fcda:	4296      	cmp	r6, r2
    fcdc:	460f      	mov	r7, r1
    fcde:	4615      	mov	r5, r2
    fce0:	461c      	mov	r4, r3
    fce2:	d103      	bne.n	fcec <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x1a>
    fce4:	4619      	mov	r1, r3
    fce6:	f001 fa64 	bl	111b2 <std::type_info::operator==(std::type_info const&) const>
    fcea:	b958      	cbnz	r0, fd04 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x32>
    fcec:	f8d8 0008 	ldr.w	r0, [r8, #8]
    fcf0:	4639      	mov	r1, r7
    fcf2:	6803      	ldr	r3, [r0, #0]
    fcf4:	9606      	str	r6, [sp, #24]
    fcf6:	6a1e      	ldr	r6, [r3, #32]
    fcf8:	462a      	mov	r2, r5
    fcfa:	4623      	mov	r3, r4
    fcfc:	46b4      	mov	r12, r6
    fcfe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    fd02:	4760      	bx	r12
    fd04:	2006      	movs	r0, #6
    fd06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000fd0a <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
    fd0a:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, r10, r11, lr}
    fd0e:	460e      	mov	r6, r1
    fd10:	4619      	mov	r1, r3
    fd12:	4683      	mov	r11, r0
    fd14:	4617      	mov	r7, r2
    fd16:	4699      	mov	r9, r3
    fd18:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    fd1a:	f8dd a02c 	ldr.w	r10, [sp, #44]	; 0x2c
    fd1e:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
    fd22:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    fd24:	f001 fa45 	bl	111b2 <std::type_info::operator==(std::type_info const&) const>
    fd28:	b178      	cbz	r0, fd4a <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x40>
    fd2a:	2e00      	cmp	r6, #0
    fd2c:	602c      	str	r4, [r5, #0]
    fd2e:	712f      	strb	r7, [r5, #4]
    fd30:	db06      	blt.n	fd40 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x36>
    fd32:	4434      	add	r4, r6
    fd34:	45a0      	cmp	r8, r4
    fd36:	bf0c      	ite	eq
    fd38:	2406      	moveq	r4, #6
    fd3a:	2401      	movne	r4, #1
    fd3c:	71ac      	strb	r4, [r5, #6]
    fd3e:	e01e      	b.n	fd7e <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
    fd40:	3602      	adds	r6, #2
    fd42:	d11c      	bne.n	fd7e <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
    fd44:	2301      	movs	r3, #1
    fd46:	71ab      	strb	r3, [r5, #6]
    fd48:	e019      	b.n	fd7e <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x74>
    fd4a:	4544      	cmp	r4, r8
    fd4c:	d104      	bne.n	fd58 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x4e>
    fd4e:	4658      	mov	r0, r11
    fd50:	4651      	mov	r1, r10
    fd52:	f001 fa2e 	bl	111b2 <std::type_info::operator==(std::type_info const&) const>
    fd56:	b988      	cbnz	r0, fd7c <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x72>
    fd58:	f8db 0008 	ldr.w	r0, [r11, #8]
    fd5c:	4631      	mov	r1, r6
    fd5e:	6803      	ldr	r3, [r0, #0]
    fd60:	940a      	str	r4, [sp, #40]	; 0x28
    fd62:	f8cd a02c 	str.w	r10, [sp, #44]	; 0x2c
    fd66:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    fd6a:	950d      	str	r5, [sp, #52]	; 0x34
    fd6c:	69dc      	ldr	r4, [r3, #28]
    fd6e:	463a      	mov	r2, r7
    fd70:	464b      	mov	r3, r9
    fd72:	46a4      	mov	r12, r4
    fd74:	b001      	add	sp, #4
    fd76:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    fd7a:	4760      	bx	r12
    fd7c:	716f      	strb	r7, [r5, #5]
    fd7e:	2000      	movs	r0, #0
    fd80:	b001      	add	sp, #4
    fd82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000fd86 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
    fd86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    fd8a:	4604      	mov	r4, r0
    fd8c:	460f      	mov	r7, r1
    fd8e:	4616      	mov	r6, r2
    fd90:	461d      	mov	r5, r3
    fd92:	f7ff fd12 	bl	f7ba <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
    fd96:	b948      	cbnz	r0, fdac <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
    fd98:	68a0      	ldr	r0, [r4, #8]
    fd9a:	4639      	mov	r1, r7
    fd9c:	6803      	ldr	r3, [r0, #0]
    fd9e:	4632      	mov	r2, r6
    fda0:	699c      	ldr	r4, [r3, #24]
    fda2:	462b      	mov	r3, r5
    fda4:	46a4      	mov	r12, r4
    fda6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    fdaa:	4760      	bx	r12
    fdac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000fdb0 <std::ctype<char>::do_widen(char) const>:
    fdb0:	4608      	mov	r0, r1
    fdb2:	4770      	bx	lr

0000fdb4 <std::ctype<char>::do_narrow(char, char) const>:
    fdb4:	4608      	mov	r0, r1
    fdb6:	4770      	bx	lr

0000fdb8 <std::ctype<char>::~ctype()>:
    fdb8:	b510      	push	{r4, lr}
    fdba:	4604      	mov	r4, r0
    fdbc:	4b07      	ldr	r3, [pc, #28]	; (fddc <std::ctype<char>::~ctype()+0x24>)
    fdbe:	f840 3b08 	str.w	r3, [r0], #8
    fdc2:	f000 fb81 	bl	104c8 <std::locale::facet::_S_destroy_c_locale(int*&)>
    fdc6:	7b23      	ldrb	r3, [r4, #12]
    fdc8:	b11b      	cbz	r3, fdd2 <std::ctype<char>::~ctype()+0x1a>
    fdca:	69a0      	ldr	r0, [r4, #24]
    fdcc:	b108      	cbz	r0, fdd2 <std::ctype<char>::~ctype()+0x1a>
    fdce:	f7f2 fbae 	bl	252e <operator delete[](void*)>
    fdd2:	4620      	mov	r0, r4
    fdd4:	f000 f934 	bl	10040 <std::locale::facet::~facet()>
    fdd8:	4620      	mov	r0, r4
    fdda:	bd10      	pop	{r4, pc}
    fddc:	0001c2c8 	.word	0x0001c2c8

0000fde0 <std::ctype<char>::~ctype()>:
    fde0:	b510      	push	{r4, lr}
    fde2:	4604      	mov	r4, r0
    fde4:	f7ff ffe8 	bl	fdb8 <std::ctype<char>::~ctype()>
    fde8:	4620      	mov	r0, r4
    fdea:	f7f2 fb90 	bl	250e <operator delete(void*)>
    fdee:	4620      	mov	r0, r4
    fdf0:	bd10      	pop	{r4, pc}

0000fdf2 <std::ctype<char>::do_narrow(char const*, char const*, char, char*) const>:
    fdf2:	b510      	push	{r4, lr}
    fdf4:	4614      	mov	r4, r2
    fdf6:	9802      	ldr	r0, [sp, #8]
    fdf8:	1a52      	subs	r2, r2, r1
    fdfa:	f003 fc47 	bl	1368c <memcpy>
    fdfe:	4620      	mov	r0, r4
    fe00:	bd10      	pop	{r4, pc}

0000fe02 <std::ctype<char>::do_widen(char const*, char const*, char*) const>:
    fe02:	b510      	push	{r4, lr}
    fe04:	4614      	mov	r4, r2
    fe06:	4618      	mov	r0, r3
    fe08:	1a52      	subs	r2, r2, r1
    fe0a:	f003 fc3f 	bl	1368c <memcpy>
    fe0e:	4620      	mov	r0, r4
    fe10:	bd10      	pop	{r4, pc}
	...

0000fe14 <std::ctype<wchar_t>::~ctype()>:
    fe14:	b510      	push	{r4, lr}
    fe16:	4604      	mov	r4, r0
    fe18:	4b05      	ldr	r3, [pc, #20]	; (fe30 <std::ctype<wchar_t>::~ctype()+0x1c>)
    fe1a:	f840 3b08 	str.w	r3, [r0], #8
    fe1e:	f000 fb53 	bl	104c8 <std::locale::facet::_S_destroy_c_locale(int*&)>
    fe22:	4b04      	ldr	r3, [pc, #16]	; (fe34 <std::ctype<wchar_t>::~ctype()+0x20>)
    fe24:	4620      	mov	r0, r4
    fe26:	6023      	str	r3, [r4, #0]
    fe28:	f000 f90a 	bl	10040 <std::locale::facet::~facet()>
    fe2c:	4620      	mov	r0, r4
    fe2e:	bd10      	pop	{r4, pc}
    fe30:	0001c308 	.word	0x0001c308
    fe34:	0001ab68 	.word	0x0001ab68

0000fe38 <std::ctype<wchar_t>::~ctype()>:
    fe38:	b510      	push	{r4, lr}
    fe3a:	4604      	mov	r4, r0
    fe3c:	f7ff ffea 	bl	fe14 <std::ctype<wchar_t>::~ctype()>
    fe40:	4620      	mov	r0, r4
    fe42:	f7f2 fb64 	bl	250e <operator delete(void*)>
    fe46:	4620      	mov	r0, r4
    fe48:	bd10      	pop	{r4, pc}

0000fe4a <std::ctype<char>::_M_widen_init() const>:
    fe4a:	b5f0      	push	{r4, r5, r6, r7, lr}
    fe4c:	4605      	mov	r5, r0
    fe4e:	b0c1      	sub	sp, #260	; 0x104
    fe50:	2400      	movs	r4, #0
    fe52:	f80d 4004 	strb.w	r4, [sp, r4]
    fe56:	3401      	adds	r4, #1
    fe58:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
    fe5c:	d1f9      	bne.n	fe52 <std::ctype<char>::_M_widen_init() const+0x8>
    fe5e:	682b      	ldr	r3, [r5, #0]
    fe60:	f105 061d 	add.w	r6, r5, #29
    fe64:	69df      	ldr	r7, [r3, #28]
    fe66:	4669      	mov	r1, sp
    fe68:	aa40      	add	r2, sp, #256	; 0x100
    fe6a:	4633      	mov	r3, r6
    fe6c:	4628      	mov	r0, r5
    fe6e:	47b8      	blx	r7
    fe70:	2301      	movs	r3, #1
    fe72:	772b      	strb	r3, [r5, #28]
    fe74:	4668      	mov	r0, sp
    fe76:	4631      	mov	r1, r6
    fe78:	4622      	mov	r2, r4
    fe7a:	f003 fbf7 	bl	1366c <memcmp>
    fe7e:	b108      	cbz	r0, fe84 <std::ctype<char>::_M_widen_init() const+0x3a>
    fe80:	2302      	movs	r3, #2
    fe82:	772b      	strb	r3, [r5, #28]
    fe84:	b041      	add	sp, #260	; 0x104
    fe86:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000fe88 <std::ctype<wchar_t>::ctype(unsigned int)>:
    fe88:	3100      	adds	r1, #0
    fe8a:	4b08      	ldr	r3, [pc, #32]	; (feac <std::ctype<wchar_t>::ctype(unsigned int)+0x24>)
    fe8c:	bf18      	it	ne
    fe8e:	2101      	movne	r1, #1
    fe90:	b510      	push	{r4, lr}
    fe92:	6041      	str	r1, [r0, #4]
    fe94:	6003      	str	r3, [r0, #0]
    fe96:	4604      	mov	r4, r0
    fe98:	f000 f8ec 	bl	10074 <std::locale::facet::_S_get_c_locale()>
    fe9c:	2300      	movs	r3, #0
    fe9e:	60a0      	str	r0, [r4, #8]
    fea0:	7323      	strb	r3, [r4, #12]
    fea2:	4620      	mov	r0, r4
    fea4:	f001 fad0 	bl	11448 <std::ctype<wchar_t>::_M_initialize_ctype()>
    fea8:	4620      	mov	r0, r4
    feaa:	bd10      	pop	{r4, pc}
    feac:	0001c308 	.word	0x0001c308

0000feb0 <std::ios_base::ios_base()>:
    feb0:	b510      	push	{r4, lr}
    feb2:	4604      	mov	r4, r0
    feb4:	4b0f      	ldr	r3, [pc, #60]	; (fef4 <std::ios_base::ios_base()+0x44>)
    feb6:	f100 0224 	add.w	r2, r0, #36	; 0x24
    feba:	6003      	str	r3, [r0, #0]
    febc:	2300      	movs	r3, #0
    febe:	6043      	str	r3, [r0, #4]
    fec0:	6083      	str	r3, [r0, #8]
    fec2:	60c3      	str	r3, [r0, #12]
    fec4:	6103      	str	r3, [r0, #16]
    fec6:	6143      	str	r3, [r0, #20]
    fec8:	6183      	str	r3, [r0, #24]
    feca:	61c3      	str	r3, [r0, #28]
    fecc:	6203      	str	r3, [r0, #32]
    fece:	f104 016c 	add.w	r1, r4, #108	; 0x6c
    fed2:	302c      	adds	r0, #44	; 0x2c
    fed4:	2300      	movs	r3, #0
    fed6:	f840 3c08 	str.w	r3, [r0, #-8]
    feda:	f840 3c04 	str.w	r3, [r0, #-4]
    fede:	3008      	adds	r0, #8
    fee0:	4288      	cmp	r0, r1
    fee2:	d1f7      	bne.n	fed4 <std::ios_base::ios_base()+0x24>
    fee4:	2308      	movs	r3, #8
    fee6:	6663      	str	r3, [r4, #100]	; 0x64
    fee8:	66a2      	str	r2, [r4, #104]	; 0x68
    feea:	f001 f93f 	bl	1116c <std::locale::locale()>
    feee:	4620      	mov	r0, r4
    fef0:	bd10      	pop	{r4, pc}
    fef2:	bf00      	nop
    fef4:	0001c360 	.word	0x0001c360

0000fef8 <std::ios_base::_M_call_callbacks(std::ios_base::event)>:
    fef8:	b570      	push	{r4, r5, r6, lr}
    fefa:	4605      	mov	r5, r0
    fefc:	460e      	mov	r6, r1
    fefe:	6984      	ldr	r4, [r0, #24]
    ff00:	b134      	cbz	r4, ff10 <std::ios_base::_M_call_callbacks(std::ios_base::event)+0x18>
    ff02:	6863      	ldr	r3, [r4, #4]
    ff04:	68a2      	ldr	r2, [r4, #8]
    ff06:	4630      	mov	r0, r6
    ff08:	4629      	mov	r1, r5
    ff0a:	4798      	blx	r3
    ff0c:	6824      	ldr	r4, [r4, #0]
    ff0e:	e7f7      	b.n	ff00 <std::ios_base::_M_call_callbacks(std::ios_base::event)+0x8>
    ff10:	bd70      	pop	{r4, r5, r6, pc}

0000ff12 <std::ios_base::_M_dispose_callbacks()>:
    ff12:	b538      	push	{r3, r4, r5, lr}
    ff14:	4604      	mov	r4, r0
    ff16:	6980      	ldr	r0, [r0, #24]
    ff18:	b910      	cbnz	r0, ff20 <std::ios_base::_M_dispose_callbacks()+0xe>
    ff1a:	2300      	movs	r3, #0
    ff1c:	61a3      	str	r3, [r4, #24]
    ff1e:	bd38      	pop	{r3, r4, r5, pc}
    ff20:	68c3      	ldr	r3, [r0, #12]
    ff22:	1e5a      	subs	r2, r3, #1
    ff24:	60c2      	str	r2, [r0, #12]
    ff26:	2b00      	cmp	r3, #0
    ff28:	d1f7      	bne.n	ff1a <std::ios_base::_M_dispose_callbacks()+0x8>
    ff2a:	6805      	ldr	r5, [r0, #0]
    ff2c:	f7f2 faef 	bl	250e <operator delete(void*)>
    ff30:	4628      	mov	r0, r5
    ff32:	e7f1      	b.n	ff18 <std::ios_base::_M_dispose_callbacks()+0x6>

0000ff34 <std::ios_base::~ios_base()>:
    ff34:	b510      	push	{r4, lr}
    ff36:	4604      	mov	r4, r0
    ff38:	4b0b      	ldr	r3, [pc, #44]	; (ff68 <std::ios_base::~ios_base()+0x34>)
    ff3a:	2100      	movs	r1, #0
    ff3c:	6003      	str	r3, [r0, #0]
    ff3e:	f7ff ffdb 	bl	fef8 <std::ios_base::_M_call_callbacks(std::ios_base::event)>
    ff42:	4620      	mov	r0, r4
    ff44:	f7ff ffe5 	bl	ff12 <std::ios_base::_M_dispose_callbacks()>
    ff48:	6ea0      	ldr	r0, [r4, #104]	; 0x68
    ff4a:	f104 0324 	add.w	r3, r4, #36	; 0x24
    ff4e:	4298      	cmp	r0, r3
    ff50:	d004      	beq.n	ff5c <std::ios_base::~ios_base()+0x28>
    ff52:	b108      	cbz	r0, ff58 <std::ios_base::~ios_base()+0x24>
    ff54:	f7f2 faeb 	bl	252e <operator delete[](void*)>
    ff58:	2300      	movs	r3, #0
    ff5a:	66a3      	str	r3, [r4, #104]	; 0x68
    ff5c:	f104 006c 	add.w	r0, r4, #108	; 0x6c
    ff60:	f000 f8e2 	bl	10128 <std::locale::~locale()>
    ff64:	4620      	mov	r0, r4
    ff66:	bd10      	pop	{r4, pc}
    ff68:	0001c360 	.word	0x0001c360

0000ff6c <std::ios_base::~ios_base()>:
    ff6c:	b510      	push	{r4, lr}
    ff6e:	4604      	mov	r4, r0
    ff70:	f7ff ffe0 	bl	ff34 <std::ios_base::~ios_base()>
    ff74:	4620      	mov	r0, r4
    ff76:	f7f2 faca 	bl	250e <operator delete(void*)>
    ff7a:	4620      	mov	r0, r4
    ff7c:	bd10      	pop	{r4, pc}

0000ff7e <std::__num_base::_S_format_float(std::ios_base const&, char*, char)>:
    ff7e:	68c0      	ldr	r0, [r0, #12]
    ff80:	b510      	push	{r4, lr}
    ff82:	0504      	lsls	r4, r0, #20
    ff84:	f04f 0325 	mov.w	r3, #37	; 0x25
    ff88:	bf48      	it	mi
    ff8a:	242b      	movmi	r4, #43	; 0x2b
    ff8c:	700b      	strb	r3, [r1, #0]
    ff8e:	bf46      	itte	mi
    ff90:	704c      	strbmi	r4, [r1, #1]
    ff92:	1c8b      	addmi	r3, r1, #2
    ff94:	1c4b      	addpl	r3, r1, #1
    ff96:	0541      	lsls	r1, r0, #21
    ff98:	bf42      	ittt	mi
    ff9a:	2123      	movmi	r1, #35	; 0x23
    ff9c:	7019      	strbmi	r1, [r3, #0]
    ff9e:	3301      	addmi	r3, #1
    ffa0:	212e      	movs	r1, #46	; 0x2e
    ffa2:	7019      	strb	r1, [r3, #0]
    ffa4:	212a      	movs	r1, #42	; 0x2a
    ffa6:	7059      	strb	r1, [r3, #1]
    ffa8:	b90a      	cbnz	r2, ffae <std::__num_base::_S_format_float(std::ios_base const&, char*, char)+0x30>
    ffaa:	1c99      	adds	r1, r3, #2
    ffac:	e001      	b.n	ffb2 <std::__num_base::_S_format_float(std::ios_base const&, char*, char)+0x34>
    ffae:	1cd9      	adds	r1, r3, #3
    ffb0:	709a      	strb	r2, [r3, #2]
    ffb2:	f400 7382 	and.w	r3, r0, #260	; 0x104
    ffb6:	2b04      	cmp	r3, #4
    ffb8:	f101 0201 	add.w	r2, r1, #1
    ffbc:	d101      	bne.n	ffc2 <std::__num_base::_S_format_float(std::ios_base const&, char*, char)+0x44>
    ffbe:	2366      	movs	r3, #102	; 0x66
    ffc0:	e00d      	b.n	ffde <std::__num_base::_S_format_float(std::ios_base const&, char*, char)+0x60>
    ffc2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
    ffc6:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
    ffca:	d104      	bne.n	ffd6 <std::__num_base::_S_format_float(std::ios_base const&, char*, char)+0x58>
    ffcc:	2800      	cmp	r0, #0
    ffce:	bf14      	ite	ne
    ffd0:	2345      	movne	r3, #69	; 0x45
    ffd2:	2365      	moveq	r3, #101	; 0x65
    ffd4:	e003      	b.n	ffde <std::__num_base::_S_format_float(std::ios_base const&, char*, char)+0x60>
    ffd6:	2800      	cmp	r0, #0
    ffd8:	bf14      	ite	ne
    ffda:	2347      	movne	r3, #71	; 0x47
    ffdc:	2367      	moveq	r3, #103	; 0x67
    ffde:	700b      	strb	r3, [r1, #0]
    ffe0:	2300      	movs	r3, #0
    ffe2:	7013      	strb	r3, [r2, #0]
    ffe4:	bd10      	pop	{r4, pc}

0000ffe6 <std::__verify_grouping(char const*, unsigned int, std::string const&)>:
    ffe6:	b530      	push	{r4, r5, lr}
    ffe8:	6814      	ldr	r4, [r2, #0]
    ffea:	3901      	subs	r1, #1
    ffec:	f854 2c0c 	ldr.w	r2, [r4, #-12]
    fff0:	2301      	movs	r3, #1
    fff2:	3a01      	subs	r2, #1
    fff4:	4291      	cmp	r1, r2
    fff6:	bf94      	ite	ls
    fff8:	1841      	addls	r1, r0, r1
    fffa:	1881      	addhi	r1, r0, r2
    fffc:	4288      	cmp	r0, r1
    fffe:	d101      	bne.n	10004 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x1e>
   10000:	4422      	add	r2, r4
   10002:	e00f      	b.n	10024 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x3e>
   10004:	2b00      	cmp	r3, #0
   10006:	d0fb      	beq.n	10000 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x1a>
   10008:	5ca3      	ldrb	r3, [r4, r2]
   1000a:	f810 5b01 	ldrb.w	r5, [r0], #1
   1000e:	3a01      	subs	r2, #1
   10010:	1b5d      	subs	r5, r3, r5
   10012:	426b      	negs	r3, r5
   10014:	416b      	adcs	r3, r5
   10016:	e7f1      	b.n	fffc <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x16>
   10018:	b13b      	cbz	r3, 1002a <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x44>
   1001a:	f812 3901 	ldrb.w	r3, [r2], #-1
   1001e:	1ac0      	subs	r0, r0, r3
   10020:	4243      	negs	r3, r0
   10022:	4143      	adcs	r3, r0
   10024:	42a2      	cmp	r2, r4
   10026:	7808      	ldrb	r0, [r1, #0]
   10028:	d1f6      	bne.n	10018 <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x32>
   1002a:	b242      	sxtb	r2, r0
   1002c:	2a00      	cmp	r2, #0
   1002e:	dd05      	ble.n	1003c <std::__verify_grouping(char const*, unsigned int, std::string const&)+0x56>
   10030:	7822      	ldrb	r2, [r4, #0]
   10032:	4282      	cmp	r2, r0
   10034:	bf8c      	ite	hi
   10036:	2300      	movhi	r3, #0
   10038:	f003 0301 	andls.w	r3, r3, #1
   1003c:	4618      	mov	r0, r3
   1003e:	bd30      	pop	{r4, r5, pc}

00010040 <std::locale::facet::~facet()>:
   10040:	4770      	bx	lr

00010042 <std::locale::facet::_M_remove_reference() const>:
   10042:	6842      	ldr	r2, [r0, #4]
   10044:	1e51      	subs	r1, r2, #1
   10046:	2a01      	cmp	r2, #1
   10048:	6041      	str	r1, [r0, #4]
   1004a:	d102      	bne.n	10052 <std::locale::facet::_M_remove_reference() const+0x10>
   1004c:	6803      	ldr	r3, [r0, #0]
   1004e:	685b      	ldr	r3, [r3, #4]
   10050:	4718      	bx	r3
   10052:	4770      	bx	lr

00010054 <std::locale::locale(std::locale const&)>:
   10054:	680b      	ldr	r3, [r1, #0]
   10056:	681a      	ldr	r2, [r3, #0]
   10058:	6003      	str	r3, [r0, #0]
   1005a:	3201      	adds	r2, #1
   1005c:	601a      	str	r2, [r3, #0]
   1005e:	4770      	bx	lr

00010060 <std::locale::facet::_S_initialize_once()>:
   10060:	4802      	ldr	r0, [pc, #8]	; (1006c <std::locale::facet::_S_initialize_once()+0xc>)
   10062:	4903      	ldr	r1, [pc, #12]	; (10070 <std::locale::facet::_S_initialize_once()+0x10>)
   10064:	2200      	movs	r2, #0
   10066:	f000 ba1f 	b.w	104a8 <std::locale::facet::_S_create_c_locale(int*&, char const*, int*)>
   1006a:	bf00      	nop
   1006c:	10000c94 	.word	0x10000c94
   10070:	0001c4e0 	.word	0x0001c4e0

00010074 <std::locale::facet::_S_get_c_locale()>:
   10074:	4b04      	ldr	r3, [pc, #16]	; (10088 <std::locale::facet::_S_get_c_locale()+0x14>)
   10076:	b510      	push	{r4, lr}
   10078:	681a      	ldr	r2, [r3, #0]
   1007a:	461c      	mov	r4, r3
   1007c:	b90a      	cbnz	r2, 10082 <std::locale::facet::_S_get_c_locale()+0xe>
   1007e:	f7ff ffef 	bl	10060 <std::locale::facet::_S_initialize_once()>
   10082:	6820      	ldr	r0, [r4, #0]
   10084:	bd10      	pop	{r4, pc}
   10086:	bf00      	nop
   10088:	10000c94 	.word	0x10000c94

0001008c <std::locale::facet::_S_get_c_name()>:
   1008c:	4800      	ldr	r0, [pc, #0]	; (10090 <std::locale::facet::_S_get_c_name()+0x4>)
   1008e:	4770      	bx	lr
   10090:	0001c4e0 	.word	0x0001c4e0

00010094 <std::locale::_Impl::~_Impl()>:
   10094:	b538      	push	{r3, r4, r5, lr}
   10096:	6843      	ldr	r3, [r0, #4]
   10098:	4604      	mov	r4, r0
   1009a:	b923      	cbnz	r3, 100a6 <std::locale::_Impl::~_Impl()+0x12>
   1009c:	6860      	ldr	r0, [r4, #4]
   1009e:	b170      	cbz	r0, 100be <std::locale::_Impl::~_Impl()+0x2a>
   100a0:	f7f2 fa45 	bl	252e <operator delete[](void*)>
   100a4:	e00b      	b.n	100be <std::locale::_Impl::~_Impl()+0x2a>
   100a6:	2500      	movs	r5, #0
   100a8:	68a3      	ldr	r3, [r4, #8]
   100aa:	429d      	cmp	r5, r3
   100ac:	d2f6      	bcs.n	1009c <std::locale::_Impl::~_Impl()+0x8>
   100ae:	6863      	ldr	r3, [r4, #4]
   100b0:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
   100b4:	b108      	cbz	r0, 100ba <std::locale::_Impl::~_Impl()+0x26>
   100b6:	f7ff ffc4 	bl	10042 <std::locale::facet::_M_remove_reference() const>
   100ba:	3501      	adds	r5, #1
   100bc:	e7f4      	b.n	100a8 <std::locale::_Impl::~_Impl()+0x14>
   100be:	68e3      	ldr	r3, [r4, #12]
   100c0:	b923      	cbnz	r3, 100cc <std::locale::_Impl::~_Impl()+0x38>
   100c2:	68e0      	ldr	r0, [r4, #12]
   100c4:	b170      	cbz	r0, 100e4 <std::locale::_Impl::~_Impl()+0x50>
   100c6:	f7f2 fa32 	bl	252e <operator delete[](void*)>
   100ca:	e00b      	b.n	100e4 <std::locale::_Impl::~_Impl()+0x50>
   100cc:	2500      	movs	r5, #0
   100ce:	68a3      	ldr	r3, [r4, #8]
   100d0:	429d      	cmp	r5, r3
   100d2:	d2f6      	bcs.n	100c2 <std::locale::_Impl::~_Impl()+0x2e>
   100d4:	68e3      	ldr	r3, [r4, #12]
   100d6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
   100da:	b108      	cbz	r0, 100e0 <std::locale::_Impl::~_Impl()+0x4c>
   100dc:	f7ff ffb1 	bl	10042 <std::locale::facet::_M_remove_reference() const>
   100e0:	3501      	adds	r5, #1
   100e2:	e7f4      	b.n	100ce <std::locale::_Impl::~_Impl()+0x3a>
   100e4:	6923      	ldr	r3, [r4, #16]
   100e6:	b923      	cbnz	r3, 100f2 <std::locale::_Impl::~_Impl()+0x5e>
   100e8:	6920      	ldr	r0, [r4, #16]
   100ea:	b160      	cbz	r0, 10106 <std::locale::_Impl::~_Impl()+0x72>
   100ec:	f7f2 fa1f 	bl	252e <operator delete[](void*)>
   100f0:	e009      	b.n	10106 <std::locale::_Impl::~_Impl()+0x72>
   100f2:	2500      	movs	r5, #0
   100f4:	6923      	ldr	r3, [r4, #16]
   100f6:	5958      	ldr	r0, [r3, r5]
   100f8:	b108      	cbz	r0, 100fe <std::locale::_Impl::~_Impl()+0x6a>
   100fa:	f7f2 fa18 	bl	252e <operator delete[](void*)>
   100fe:	3504      	adds	r5, #4
   10100:	2d18      	cmp	r5, #24
   10102:	d1f7      	bne.n	100f4 <std::locale::_Impl::~_Impl()+0x60>
   10104:	e7f0      	b.n	100e8 <std::locale::_Impl::~_Impl()+0x54>
   10106:	4620      	mov	r0, r4
   10108:	bd38      	pop	{r3, r4, r5, pc}

0001010a <std::locale::_Impl::_M_remove_reference()>:
   1010a:	6803      	ldr	r3, [r0, #0]
   1010c:	b510      	push	{r4, lr}
   1010e:	1e5a      	subs	r2, r3, #1
   10110:	2b01      	cmp	r3, #1
   10112:	4604      	mov	r4, r0
   10114:	6002      	str	r2, [r0, #0]
   10116:	d106      	bne.n	10126 <std::locale::_Impl::_M_remove_reference()+0x1c>
   10118:	f7ff ffbc 	bl	10094 <std::locale::_Impl::~_Impl()>
   1011c:	4620      	mov	r0, r4
   1011e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   10122:	f7f2 b9f4 	b.w	250e <operator delete(void*)>
   10126:	bd10      	pop	{r4, pc}

00010128 <std::locale::~locale()>:
   10128:	b510      	push	{r4, lr}
   1012a:	4604      	mov	r4, r0
   1012c:	6800      	ldr	r0, [r0, #0]
   1012e:	f7ff ffec 	bl	1010a <std::locale::_Impl::_M_remove_reference()>
   10132:	4620      	mov	r0, r4
   10134:	bd10      	pop	{r4, pc}

00010136 <std::locale::operator=(std::locale const&)>:
   10136:	b538      	push	{r3, r4, r5, lr}
   10138:	460d      	mov	r5, r1
   1013a:	4604      	mov	r4, r0
   1013c:	680a      	ldr	r2, [r1, #0]
   1013e:	6800      	ldr	r0, [r0, #0]
   10140:	6813      	ldr	r3, [r2, #0]
   10142:	3301      	adds	r3, #1
   10144:	6013      	str	r3, [r2, #0]
   10146:	f7ff ffe0 	bl	1010a <std::locale::_Impl::_M_remove_reference()>
   1014a:	682b      	ldr	r3, [r5, #0]
   1014c:	4620      	mov	r0, r4
   1014e:	6023      	str	r3, [r4, #0]
   10150:	bd38      	pop	{r3, r4, r5, pc}
	...

00010154 <std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned int)>:
   10154:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   10158:	4d0f      	ldr	r5, [pc, #60]	; (10198 <std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned int)+0x44>)
   1015a:	4607      	mov	r7, r0
   1015c:	682b      	ldr	r3, [r5, #0]
   1015e:	460c      	mov	r4, r1
   10160:	07db      	lsls	r3, r3, #31
   10162:	4616      	mov	r6, r2
   10164:	d406      	bmi.n	10174 <std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned int)+0x20>
   10166:	4628      	mov	r0, r5
   10168:	f001 f839 	bl	111de <__cxa_guard_acquire>
   1016c:	b110      	cbz	r0, 10174 <std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned int)+0x20>
   1016e:	4628      	mov	r0, r5
   10170:	f001 f841 	bl	111f6 <__cxa_guard_release>
   10174:	68f9      	ldr	r1, [r7, #12]
   10176:	f851 3026 	ldr.w	r3, [r1, r6, lsl #2]
   1017a:	b133      	cbz	r3, 1018a <std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned int)+0x36>
   1017c:	b154      	cbz	r4, 10194 <std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned int)+0x40>
   1017e:	6823      	ldr	r3, [r4, #0]
   10180:	4620      	mov	r0, r4
   10182:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   10186:	685b      	ldr	r3, [r3, #4]
   10188:	4718      	bx	r3
   1018a:	6863      	ldr	r3, [r4, #4]
   1018c:	3301      	adds	r3, #1
   1018e:	6063      	str	r3, [r4, #4]
   10190:	f841 4026 	str.w	r4, [r1, r6, lsl #2]
   10194:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   10198:	10000ca0 	.word	0x10000ca0

0001019c <std::locale::id::_M_id() const>:
   1019c:	6803      	ldr	r3, [r0, #0]
   1019e:	b923      	cbnz	r3, 101aa <std::locale::id::_M_id() const+0xe>
   101a0:	4a03      	ldr	r2, [pc, #12]	; (101b0 <std::locale::id::_M_id() const+0x14>)
   101a2:	6813      	ldr	r3, [r2, #0]
   101a4:	3301      	adds	r3, #1
   101a6:	6013      	str	r3, [r2, #0]
   101a8:	6003      	str	r3, [r0, #0]
   101aa:	6800      	ldr	r0, [r0, #0]
   101ac:	3801      	subs	r0, #1
   101ae:	4770      	bx	lr
   101b0:	10000c98 	.word	0x10000c98

000101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>:
   101b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
   101b8:	4604      	mov	r4, r0
   101ba:	4617      	mov	r7, r2
   101bc:	2a00      	cmp	r2, #0
   101be:	d072      	beq.n	102a6 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0xf2>
   101c0:	4608      	mov	r0, r1
   101c2:	f7ff ffeb 	bl	1019c <std::locale::id::_M_id() const>
   101c6:	68a3      	ldr	r3, [r4, #8]
   101c8:	4606      	mov	r6, r0
   101ca:	3b01      	subs	r3, #1
   101cc:	4298      	cmp	r0, r3
   101ce:	d94f      	bls.n	10270 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0xbc>
   101d0:	1d05      	adds	r5, r0, #4
   101d2:	f1b5 5ffe 	cmp.w	r5, #532676608	; 0x1fc00000
   101d6:	bf94      	ite	ls
   101d8:	00a8      	lslls	r0, r5, #2
   101da:	f04f 30ff 	movhi.w	r0, #4294967295
   101de:	f8d4 9004 	ldr.w	r9, [r4, #4]
   101e2:	f7f2 f9a6 	bl	2532 <operator new[](unsigned int)>
   101e6:	4682      	mov	r10, r0
   101e8:	4651      	mov	r1, r10
   101ea:	68a3      	ldr	r3, [r4, #8]
   101ec:	eb00 0083 	add.w	r0, r0, r3, lsl #2
   101f0:	4281      	cmp	r1, r0
   101f2:	d007      	beq.n	10204 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0x50>
   101f4:	6862      	ldr	r2, [r4, #4]
   101f6:	ebca 0e01 	rsb	lr, r10, r1
   101fa:	f852 200e 	ldr.w	r2, [r2, lr]
   101fe:	f841 2b04 	str.w	r2, [r1], #4
   10202:	e7f5      	b.n	101f0 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0x3c>
   10204:	42ab      	cmp	r3, r5
   10206:	d204      	bcs.n	10212 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0x5e>
   10208:	2200      	movs	r2, #0
   1020a:	f84a 2023 	str.w	r2, [r10, r3, lsl #2]
   1020e:	3301      	adds	r3, #1
   10210:	e7f8      	b.n	10204 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0x50>
   10212:	f1b5 5ffe 	cmp.w	r5, #532676608	; 0x1fc00000
   10216:	bf94      	ite	ls
   10218:	00a8      	lslls	r0, r5, #2
   1021a:	f04f 30ff 	movhi.w	r0, #4294967295
   1021e:	f8d4 800c 	ldr.w	r8, [r4, #12]
   10222:	f7f2 f986 	bl	2532 <operator new[](unsigned int)>
   10226:	4601      	mov	r1, r0
   10228:	68a2      	ldr	r2, [r4, #8]
   1022a:	eb00 0e82 	add.w	lr, r0, r2, lsl #2
   1022e:	4571      	cmp	r1, lr
   10230:	d007      	beq.n	10242 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0x8e>
   10232:	68e3      	ldr	r3, [r4, #12]
   10234:	ebc0 0c01 	rsb	r12, r0, r1
   10238:	f853 300c 	ldr.w	r3, [r3, r12]
   1023c:	f841 3b04 	str.w	r3, [r1], #4
   10240:	e7f5      	b.n	1022e <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0x7a>
   10242:	42aa      	cmp	r2, r5
   10244:	d204      	bcs.n	10250 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0x9c>
   10246:	2300      	movs	r3, #0
   10248:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
   1024c:	3201      	adds	r2, #1
   1024e:	e7f8      	b.n	10242 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0x8e>
   10250:	60a5      	str	r5, [r4, #8]
   10252:	f8c4 a004 	str.w	r10, [r4, #4]
   10256:	60e0      	str	r0, [r4, #12]
   10258:	f1b9 0f00 	cmp.w	r9, #0
   1025c:	d002      	beq.n	10264 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0xb0>
   1025e:	4648      	mov	r0, r9
   10260:	f7f2 f965 	bl	252e <operator delete[](void*)>
   10264:	f1b8 0f00 	cmp.w	r8, #0
   10268:	d002      	beq.n	10270 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0xbc>
   1026a:	4640      	mov	r0, r8
   1026c:	f7f2 f95f 	bl	252e <operator delete[](void*)>
   10270:	6865      	ldr	r5, [r4, #4]
   10272:	687b      	ldr	r3, [r7, #4]
   10274:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
   10278:	3301      	adds	r3, #1
   1027a:	607b      	str	r3, [r7, #4]
   1027c:	b108      	cbz	r0, 10282 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0xce>
   1027e:	f7ff fee0 	bl	10042 <std::locale::facet::_M_remove_reference() const>
   10282:	f845 7026 	str.w	r7, [r5, r6, lsl #2]
   10286:	2500      	movs	r5, #0
   10288:	68a3      	ldr	r3, [r4, #8]
   1028a:	429d      	cmp	r5, r3
   1028c:	d20b      	bcs.n	102a6 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0xf2>
   1028e:	68e3      	ldr	r3, [r4, #12]
   10290:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
   10294:	b128      	cbz	r0, 102a2 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0xee>
   10296:	f7ff fed4 	bl	10042 <std::locale::facet::_M_remove_reference() const>
   1029a:	68e3      	ldr	r3, [r4, #12]
   1029c:	2200      	movs	r2, #0
   1029e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
   102a2:	3501      	adds	r5, #1
   102a4:	e7f0      	b.n	10288 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)+0xd4>
   102a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
	...

000102ac <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)>:
   102ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   102b0:	4680      	mov	r8, r0
   102b2:	2000      	movs	r0, #0
   102b4:	460c      	mov	r4, r1
   102b6:	4601      	mov	r1, r0
   102b8:	4617      	mov	r7, r2
   102ba:	f003 f917 	bl	134ec <setlocale>
   102be:	4681      	mov	r9, r0
   102c0:	f004 ff6a 	bl	15198 <strlen>
   102c4:	1c45      	adds	r5, r0, #1
   102c6:	4628      	mov	r0, r5
   102c8:	f7f2 f933 	bl	2532 <operator new[](unsigned int)>
   102cc:	462a      	mov	r2, r5
   102ce:	4649      	mov	r1, r9
   102d0:	4606      	mov	r6, r0
   102d2:	f003 f9db 	bl	1368c <memcpy>
   102d6:	4918      	ldr	r1, [pc, #96]	; (10338 <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)+0x8c>)
   102d8:	2000      	movs	r0, #0
   102da:	f003 f907 	bl	134ec <setlocale>
   102de:	4640      	mov	r0, r8
   102e0:	a901      	add	r1, sp, #4
   102e2:	f005 fddb 	bl	15e9c <strtof>
   102e6:	9b01      	ldr	r3, [sp, #4]
   102e8:	4605      	mov	r5, r0
   102ea:	4543      	cmp	r3, r8
   102ec:	6020      	str	r0, [r4, #0]
   102ee:	d001      	beq.n	102f4 <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)+0x48>
   102f0:	781b      	ldrb	r3, [r3, #0]
   102f2:	b10b      	cbz	r3, 102f8 <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)+0x4c>
   102f4:	2300      	movs	r3, #0
   102f6:	e00f      	b.n	10318 <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)+0x6c>
   102f8:	4910      	ldr	r1, [pc, #64]	; (1033c <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)+0x90>)
   102fa:	f002 f81b 	bl	12334 <__aeabi_fcmpgt>
   102fe:	b928      	cbnz	r0, 1030c <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)+0x60>
   10300:	4628      	mov	r0, r5
   10302:	f46f 0100 	mvn.w	r1, #8388608	; 0x800000
   10306:	f001 fff7 	bl	122f8 <__aeabi_fcmplt>
   1030a:	b140      	cbz	r0, 1031e <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)+0x72>
   1030c:	4628      	mov	r0, r5
   1030e:	2100      	movs	r1, #0
   10310:	f002 f810 	bl	12334 <__aeabi_fcmpgt>
   10314:	b168      	cbz	r0, 10332 <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)+0x86>
   10316:	4b09      	ldr	r3, [pc, #36]	; (1033c <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)+0x90>)
   10318:	6023      	str	r3, [r4, #0]
   1031a:	2304      	movs	r3, #4
   1031c:	603b      	str	r3, [r7, #0]
   1031e:	4631      	mov	r1, r6
   10320:	2000      	movs	r0, #0
   10322:	f003 f8e3 	bl	134ec <setlocale>
   10326:	4630      	mov	r0, r6
   10328:	f7f2 f901 	bl	252e <operator delete[](void*)>
   1032c:	b003      	add	sp, #12
   1032e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   10332:	f46f 0300 	mvn.w	r3, #8388608	; 0x800000
   10336:	e7ef      	b.n	10318 <void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)+0x6c>
   10338:	0001c529 	.word	0x0001c529
   1033c:	7f7fffff 	.word	0x7f7fffff

00010340 <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)>:
   10340:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   10344:	4681      	mov	r9, r0
   10346:	2000      	movs	r0, #0
   10348:	460c      	mov	r4, r1
   1034a:	4601      	mov	r1, r0
   1034c:	4690      	mov	r8, r2
   1034e:	f003 f8cd 	bl	134ec <setlocale>
   10352:	4607      	mov	r7, r0
   10354:	f004 ff20 	bl	15198 <strlen>
   10358:	1c46      	adds	r6, r0, #1
   1035a:	4630      	mov	r0, r6
   1035c:	f7f2 f8e9 	bl	2532 <operator new[](unsigned int)>
   10360:	4632      	mov	r2, r6
   10362:	4639      	mov	r1, r7
   10364:	4605      	mov	r5, r0
   10366:	f003 f991 	bl	1368c <memcpy>
   1036a:	4920      	ldr	r1, [pc, #128]	; (103ec <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)+0xac>)
   1036c:	2000      	movs	r0, #0
   1036e:	f003 f8bd 	bl	134ec <setlocale>
   10372:	4648      	mov	r0, r9
   10374:	a901      	add	r1, sp, #4
   10376:	f005 fd87 	bl	15e88 <strtod>
   1037a:	4606      	mov	r6, r0
   1037c:	460f      	mov	r7, r1
   1037e:	9b01      	ldr	r3, [sp, #4]
   10380:	e9c4 6700 	strd	r6, r7, [r4]
   10384:	454b      	cmp	r3, r9
   10386:	d001      	beq.n	1038c <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)+0x4c>
   10388:	781b      	ldrb	r3, [r3, #0]
   1038a:	b113      	cbz	r3, 10392 <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)+0x52>
   1038c:	2200      	movs	r2, #0
   1038e:	2300      	movs	r3, #0
   10390:	e018      	b.n	103c4 <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)+0x84>
   10392:	f04f 32ff 	mov.w	r2, #4294967295
   10396:	4b16      	ldr	r3, [pc, #88]	; (103f0 <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)+0xb0>)
   10398:	f001 fcd0 	bl	11d3c <__aeabi_dcmpgt>
   1039c:	b940      	cbnz	r0, 103b0 <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)+0x70>
   1039e:	4630      	mov	r0, r6
   103a0:	4639      	mov	r1, r7
   103a2:	f04f 32ff 	mov.w	r2, #4294967295
   103a6:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
   103aa:	f001 fca9 	bl	11d00 <__aeabi_dcmplt>
   103ae:	b170      	cbz	r0, 103ce <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)+0x8e>
   103b0:	4630      	mov	r0, r6
   103b2:	4639      	mov	r1, r7
   103b4:	2200      	movs	r2, #0
   103b6:	2300      	movs	r3, #0
   103b8:	f001 fcc0 	bl	11d3c <__aeabi_dcmpgt>
   103bc:	b188      	cbz	r0, 103e2 <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)+0xa2>
   103be:	4b0c      	ldr	r3, [pc, #48]	; (103f0 <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)+0xb0>)
   103c0:	f04f 32ff 	mov.w	r2, #4294967295
   103c4:	e9c4 2300 	strd	r2, r3, [r4]
   103c8:	2304      	movs	r3, #4
   103ca:	f8c8 3000 	str.w	r3, [r8]
   103ce:	4629      	mov	r1, r5
   103d0:	2000      	movs	r0, #0
   103d2:	f003 f88b 	bl	134ec <setlocale>
   103d6:	4628      	mov	r0, r5
   103d8:	f7f2 f8a9 	bl	252e <operator delete[](void*)>
   103dc:	b003      	add	sp, #12
   103de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   103e2:	f04f 32ff 	mov.w	r2, #4294967295
   103e6:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
   103ea:	e7eb      	b.n	103c4 <void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)+0x84>
   103ec:	0001c529 	.word	0x0001c529
   103f0:	7fefffff 	.word	0x7fefffff

000103f4 <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)>:
   103f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   103f8:	4607      	mov	r7, r0
   103fa:	2000      	movs	r0, #0
   103fc:	460c      	mov	r4, r1
   103fe:	4601      	mov	r1, r0
   10400:	4690      	mov	r8, r2
   10402:	f003 f873 	bl	134ec <setlocale>
   10406:	4681      	mov	r9, r0
   10408:	f004 fec6 	bl	15198 <strlen>
   1040c:	1c46      	adds	r6, r0, #1
   1040e:	4630      	mov	r0, r6
   10410:	f7f2 f88f 	bl	2532 <operator new[](unsigned int)>
   10414:	4632      	mov	r2, r6
   10416:	4649      	mov	r1, r9
   10418:	4605      	mov	r5, r0
   1041a:	f003 f937 	bl	1368c <memcpy>
   1041e:	491f      	ldr	r1, [pc, #124]	; (1049c <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)+0xa8>)
   10420:	2000      	movs	r0, #0
   10422:	f003 f863 	bl	134ec <setlocale>
   10426:	4638      	mov	r0, r7
   10428:	491d      	ldr	r1, [pc, #116]	; (104a0 <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)+0xac>)
   1042a:	4622      	mov	r2, r4
   1042c:	f004 f99a 	bl	14764 <siscanf>
   10430:	3001      	adds	r0, #1
   10432:	2801      	cmp	r0, #1
   10434:	d92a      	bls.n	1048c <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)+0x98>
   10436:	e9d4 6700 	ldrd	r6, r7, [r4]
   1043a:	f04f 32ff 	mov.w	r2, #4294967295
   1043e:	4630      	mov	r0, r6
   10440:	4639      	mov	r1, r7
   10442:	4b18      	ldr	r3, [pc, #96]	; (104a4 <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)+0xb0>)
   10444:	f001 fc7a 	bl	11d3c <__aeabi_dcmpgt>
   10448:	b940      	cbnz	r0, 1045c <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)+0x68>
   1044a:	4630      	mov	r0, r6
   1044c:	4639      	mov	r1, r7
   1044e:	f04f 32ff 	mov.w	r2, #4294967295
   10452:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
   10456:	f001 fc53 	bl	11d00 <__aeabi_dcmplt>
   1045a:	b170      	cbz	r0, 1047a <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)+0x86>
   1045c:	4630      	mov	r0, r6
   1045e:	4639      	mov	r1, r7
   10460:	2200      	movs	r2, #0
   10462:	2300      	movs	r3, #0
   10464:	f001 fc6a 	bl	11d3c <__aeabi_dcmpgt>
   10468:	b198      	cbz	r0, 10492 <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)+0x9e>
   1046a:	4b0e      	ldr	r3, [pc, #56]	; (104a4 <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)+0xb0>)
   1046c:	f04f 32ff 	mov.w	r2, #4294967295
   10470:	e9c4 2300 	strd	r2, r3, [r4]
   10474:	2304      	movs	r3, #4
   10476:	f8c8 3000 	str.w	r3, [r8]
   1047a:	4629      	mov	r1, r5
   1047c:	2000      	movs	r0, #0
   1047e:	f003 f835 	bl	134ec <setlocale>
   10482:	4628      	mov	r0, r5
   10484:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   10488:	f7f2 b851 	b.w	252e <operator delete[](void*)>
   1048c:	2200      	movs	r2, #0
   1048e:	2300      	movs	r3, #0
   10490:	e7ee      	b.n	10470 <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)+0x7c>
   10492:	f04f 32ff 	mov.w	r2, #4294967295
   10496:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
   1049a:	e7e9      	b.n	10470 <void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)+0x7c>
   1049c:	0001c529 	.word	0x0001c529
   104a0:	0001c4e2 	.word	0x0001c4e2
   104a4:	7fefffff 	.word	0x7fefffff

000104a8 <std::locale::facet::_S_create_c_locale(int*&, char const*, int*)>:
   104a8:	b508      	push	{r3, lr}
   104aa:	2300      	movs	r3, #0
   104ac:	6003      	str	r3, [r0, #0]
   104ae:	4608      	mov	r0, r1
   104b0:	4903      	ldr	r1, [pc, #12]	; (104c0 <std::locale::facet::_S_create_c_locale(int*&, char const*, int*)+0x18>)
   104b2:	f004 f9c6 	bl	14842 <strcmp>
   104b6:	b110      	cbz	r0, 104be <std::locale::facet::_S_create_c_locale(int*&, char const*, int*)+0x16>
   104b8:	4802      	ldr	r0, [pc, #8]	; (104c4 <std::locale::facet::_S_create_c_locale(int*&, char const*, int*)+0x1c>)
   104ba:	f7fe f92c 	bl	e716 <std::__throw_runtime_error(char const*)>
   104be:	bd08      	pop	{r3, pc}
   104c0:	0001c529 	.word	0x0001c529
   104c4:	0001c4e6 	.word	0x0001c4e6

000104c8 <std::locale::facet::_S_destroy_c_locale(int*&)>:
   104c8:	2300      	movs	r3, #0
   104ca:	6003      	str	r3, [r0, #0]
   104cc:	4770      	bx	lr
	...

000104d0 <std::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)>:
   104d0:	b538      	push	{r3, r4, r5, lr}
   104d2:	6884      	ldr	r4, [r0, #8]
   104d4:	4605      	mov	r5, r0
   104d6:	b9b4      	cbnz	r4, 10506 <std::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)+0x36>
   104d8:	2044      	movs	r0, #68	; 0x44
   104da:	f7f2 f807 	bl	24ec <operator new(unsigned int)>
   104de:	4b1b      	ldr	r3, [pc, #108]	; (1054c <std::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)+0x7c>)
   104e0:	6044      	str	r4, [r0, #4]
   104e2:	6003      	str	r3, [r0, #0]
   104e4:	6084      	str	r4, [r0, #8]
   104e6:	60c4      	str	r4, [r0, #12]
   104e8:	7404      	strb	r4, [r0, #16]
   104ea:	7444      	strb	r4, [r0, #17]
   104ec:	7484      	strb	r4, [r0, #18]
   104ee:	6144      	str	r4, [r0, #20]
   104f0:	6184      	str	r4, [r0, #24]
   104f2:	61c4      	str	r4, [r0, #28]
   104f4:	6204      	str	r4, [r0, #32]
   104f6:	6244      	str	r4, [r0, #36]	; 0x24
   104f8:	6284      	str	r4, [r0, #40]	; 0x28
   104fa:	62c4      	str	r4, [r0, #44]	; 0x2c
   104fc:	6304      	str	r4, [r0, #48]	; 0x30
   104fe:	6344      	str	r4, [r0, #52]	; 0x34
   10500:	f880 4043 	strb.w	r4, [r0, #67]	; 0x43
   10504:	60a8      	str	r0, [r5, #8]
   10506:	68ab      	ldr	r3, [r5, #8]
   10508:	222e      	movs	r2, #46	; 0x2e
   1050a:	745a      	strb	r2, [r3, #17]
   1050c:	68ab      	ldr	r3, [r5, #8]
   1050e:	222c      	movs	r2, #44	; 0x2c
   10510:	749a      	strb	r2, [r3, #18]
   10512:	68aa      	ldr	r2, [r5, #8]
   10514:	490e      	ldr	r1, [pc, #56]	; (10550 <std::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)+0x80>)
   10516:	2300      	movs	r3, #0
   10518:	6091      	str	r1, [r2, #8]
   1051a:	6151      	str	r1, [r2, #20]
   1051c:	61d1      	str	r1, [r2, #28]
   1051e:	6251      	str	r1, [r2, #36]	; 0x24
   10520:	490c      	ldr	r1, [pc, #48]	; (10554 <std::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)+0x84>)
   10522:	60d3      	str	r3, [r2, #12]
   10524:	6808      	ldr	r0, [r1, #0]
   10526:	6193      	str	r3, [r2, #24]
   10528:	6310      	str	r0, [r2, #48]	; 0x30
   1052a:	6213      	str	r3, [r2, #32]
   1052c:	6293      	str	r3, [r2, #40]	; 0x28
   1052e:	62d3      	str	r3, [r2, #44]	; 0x2c
   10530:	68aa      	ldr	r2, [r5, #8]
   10532:	6350      	str	r0, [r2, #52]	; 0x34
   10534:	4a08      	ldr	r2, [pc, #32]	; (10558 <std::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)+0x88>)
   10536:	6810      	ldr	r0, [r2, #0]
   10538:	68aa      	ldr	r2, [r5, #8]
   1053a:	5cc1      	ldrb	r1, [r0, r3]
   1053c:	441a      	add	r2, r3
   1053e:	3301      	adds	r3, #1
   10540:	2b0b      	cmp	r3, #11
   10542:	f882 1038 	strb.w	r1, [r2, #56]	; 0x38
   10546:	d1f7      	bne.n	10538 <std::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)+0x68>
   10548:	bd38      	pop	{r3, r4, r5, pc}
   1054a:	bf00      	nop
   1054c:	0001b920 	.word	0x0001b920
   10550:	0001c156 	.word	0x0001c156
   10554:	0001c368 	.word	0x0001c368
   10558:	10000168 	.word	0x10000168

0001055c <std::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)>:
   1055c:	b538      	push	{r3, r4, r5, lr}
   1055e:	6884      	ldr	r4, [r0, #8]
   10560:	4605      	mov	r5, r0
   10562:	b9b4      	cbnz	r4, 10592 <std::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)+0x36>
   10564:	2044      	movs	r0, #68	; 0x44
   10566:	f7f1 ffc1 	bl	24ec <operator new(unsigned int)>
   1056a:	4b1b      	ldr	r3, [pc, #108]	; (105d8 <std::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)+0x7c>)
   1056c:	6044      	str	r4, [r0, #4]
   1056e:	6003      	str	r3, [r0, #0]
   10570:	6084      	str	r4, [r0, #8]
   10572:	60c4      	str	r4, [r0, #12]
   10574:	7404      	strb	r4, [r0, #16]
   10576:	7444      	strb	r4, [r0, #17]
   10578:	7484      	strb	r4, [r0, #18]
   1057a:	6144      	str	r4, [r0, #20]
   1057c:	6184      	str	r4, [r0, #24]
   1057e:	61c4      	str	r4, [r0, #28]
   10580:	6204      	str	r4, [r0, #32]
   10582:	6244      	str	r4, [r0, #36]	; 0x24
   10584:	6284      	str	r4, [r0, #40]	; 0x28
   10586:	62c4      	str	r4, [r0, #44]	; 0x2c
   10588:	6304      	str	r4, [r0, #48]	; 0x30
   1058a:	6344      	str	r4, [r0, #52]	; 0x34
   1058c:	f880 4043 	strb.w	r4, [r0, #67]	; 0x43
   10590:	60a8      	str	r0, [r5, #8]
   10592:	68ab      	ldr	r3, [r5, #8]
   10594:	222e      	movs	r2, #46	; 0x2e
   10596:	745a      	strb	r2, [r3, #17]
   10598:	68ab      	ldr	r3, [r5, #8]
   1059a:	222c      	movs	r2, #44	; 0x2c
   1059c:	749a      	strb	r2, [r3, #18]
   1059e:	68aa      	ldr	r2, [r5, #8]
   105a0:	490e      	ldr	r1, [pc, #56]	; (105dc <std::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)+0x80>)
   105a2:	2300      	movs	r3, #0
   105a4:	6091      	str	r1, [r2, #8]
   105a6:	6151      	str	r1, [r2, #20]
   105a8:	61d1      	str	r1, [r2, #28]
   105aa:	6251      	str	r1, [r2, #36]	; 0x24
   105ac:	490c      	ldr	r1, [pc, #48]	; (105e0 <std::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)+0x84>)
   105ae:	60d3      	str	r3, [r2, #12]
   105b0:	6808      	ldr	r0, [r1, #0]
   105b2:	6193      	str	r3, [r2, #24]
   105b4:	6310      	str	r0, [r2, #48]	; 0x30
   105b6:	6213      	str	r3, [r2, #32]
   105b8:	6293      	str	r3, [r2, #40]	; 0x28
   105ba:	62d3      	str	r3, [r2, #44]	; 0x2c
   105bc:	68aa      	ldr	r2, [r5, #8]
   105be:	6350      	str	r0, [r2, #52]	; 0x34
   105c0:	4a08      	ldr	r2, [pc, #32]	; (105e4 <std::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)+0x88>)
   105c2:	6810      	ldr	r0, [r2, #0]
   105c4:	68aa      	ldr	r2, [r5, #8]
   105c6:	5cc1      	ldrb	r1, [r0, r3]
   105c8:	441a      	add	r2, r3
   105ca:	3301      	adds	r3, #1
   105cc:	2b0b      	cmp	r3, #11
   105ce:	f882 1038 	strb.w	r1, [r2, #56]	; 0x38
   105d2:	d1f7      	bne.n	105c4 <std::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)+0x68>
   105d4:	bd38      	pop	{r3, r4, r5, pc}
   105d6:	bf00      	nop
   105d8:	0001b910 	.word	0x0001b910
   105dc:	0001c156 	.word	0x0001c156
   105e0:	0001c368 	.word	0x0001c368
   105e4:	10000168 	.word	0x10000168

000105e8 <std::moneypunct<char, true>::~moneypunct()>:
   105e8:	4b06      	ldr	r3, [pc, #24]	; (10604 <std::moneypunct<char, true>::~moneypunct()+0x1c>)
   105ea:	b510      	push	{r4, lr}
   105ec:	4604      	mov	r4, r0
   105ee:	6003      	str	r3, [r0, #0]
   105f0:	6880      	ldr	r0, [r0, #8]
   105f2:	b110      	cbz	r0, 105fa <std::moneypunct<char, true>::~moneypunct()+0x12>
   105f4:	6803      	ldr	r3, [r0, #0]
   105f6:	685b      	ldr	r3, [r3, #4]
   105f8:	4798      	blx	r3
   105fa:	4620      	mov	r0, r4
   105fc:	f7ff fd20 	bl	10040 <std::locale::facet::~facet()>
   10600:	4620      	mov	r0, r4
   10602:	bd10      	pop	{r4, pc}
   10604:	0001b7e0 	.word	0x0001b7e0

00010608 <std::moneypunct<char, true>::~moneypunct()>:
   10608:	b510      	push	{r4, lr}
   1060a:	4604      	mov	r4, r0
   1060c:	f7ff ffec 	bl	105e8 <std::moneypunct<char, true>::~moneypunct()>
   10610:	4620      	mov	r0, r4
   10612:	f7f1 ff7c 	bl	250e <operator delete(void*)>
   10616:	4620      	mov	r0, r4
   10618:	bd10      	pop	{r4, pc}
	...

0001061c <std::moneypunct<char, false>::~moneypunct()>:
   1061c:	4b06      	ldr	r3, [pc, #24]	; (10638 <std::moneypunct<char, false>::~moneypunct()+0x1c>)
   1061e:	b510      	push	{r4, lr}
   10620:	4604      	mov	r4, r0
   10622:	6003      	str	r3, [r0, #0]
   10624:	6880      	ldr	r0, [r0, #8]
   10626:	b110      	cbz	r0, 1062e <std::moneypunct<char, false>::~moneypunct()+0x12>
   10628:	6803      	ldr	r3, [r0, #0]
   1062a:	685b      	ldr	r3, [r3, #4]
   1062c:	4798      	blx	r3
   1062e:	4620      	mov	r0, r4
   10630:	f7ff fd06 	bl	10040 <std::locale::facet::~facet()>
   10634:	4620      	mov	r0, r4
   10636:	bd10      	pop	{r4, pc}
   10638:	0001b818 	.word	0x0001b818

0001063c <std::moneypunct<char, false>::~moneypunct()>:
   1063c:	b510      	push	{r4, lr}
   1063e:	4604      	mov	r4, r0
   10640:	f7ff ffec 	bl	1061c <std::moneypunct<char, false>::~moneypunct()>
   10644:	4620      	mov	r0, r4
   10646:	f7f1 ff62 	bl	250e <operator delete(void*)>
   1064a:	4620      	mov	r0, r4
   1064c:	bd10      	pop	{r4, pc}
	...

00010650 <std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)>:
   10650:	b538      	push	{r3, r4, r5, lr}
   10652:	6884      	ldr	r4, [r0, #8]
   10654:	4605      	mov	r5, r0
   10656:	b9b4      	cbnz	r4, 10686 <std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)+0x36>
   10658:	2070      	movs	r0, #112	; 0x70
   1065a:	f7f1 ff47 	bl	24ec <operator new(unsigned int)>
   1065e:	4b1c      	ldr	r3, [pc, #112]	; (106d0 <std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)+0x80>)
   10660:	6044      	str	r4, [r0, #4]
   10662:	6003      	str	r3, [r0, #0]
   10664:	6084      	str	r4, [r0, #8]
   10666:	60c4      	str	r4, [r0, #12]
   10668:	7404      	strb	r4, [r0, #16]
   1066a:	6144      	str	r4, [r0, #20]
   1066c:	6184      	str	r4, [r0, #24]
   1066e:	61c4      	str	r4, [r0, #28]
   10670:	6204      	str	r4, [r0, #32]
   10672:	6244      	str	r4, [r0, #36]	; 0x24
   10674:	6284      	str	r4, [r0, #40]	; 0x28
   10676:	62c4      	str	r4, [r0, #44]	; 0x2c
   10678:	6304      	str	r4, [r0, #48]	; 0x30
   1067a:	6344      	str	r4, [r0, #52]	; 0x34
   1067c:	6384      	str	r4, [r0, #56]	; 0x38
   1067e:	63c4      	str	r4, [r0, #60]	; 0x3c
   10680:	f880 406c 	strb.w	r4, [r0, #108]	; 0x6c
   10684:	60a8      	str	r0, [r5, #8]
   10686:	68ab      	ldr	r3, [r5, #8]
   10688:	222e      	movs	r2, #46	; 0x2e
   1068a:	615a      	str	r2, [r3, #20]
   1068c:	222c      	movs	r2, #44	; 0x2c
   1068e:	619a      	str	r2, [r3, #24]
   10690:	4a10      	ldr	r2, [pc, #64]	; (106d4 <std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)+0x84>)
   10692:	4911      	ldr	r1, [pc, #68]	; (106d8 <std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)+0x88>)
   10694:	609a      	str	r2, [r3, #8]
   10696:	2200      	movs	r2, #0
   10698:	60da      	str	r2, [r3, #12]
   1069a:	621a      	str	r2, [r3, #32]
   1069c:	629a      	str	r2, [r3, #40]	; 0x28
   1069e:	631a      	str	r2, [r3, #48]	; 0x30
   106a0:	635a      	str	r2, [r3, #52]	; 0x34
   106a2:	4a0e      	ldr	r2, [pc, #56]	; (106dc <std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)+0x8c>)
   106a4:	61d9      	str	r1, [r3, #28]
   106a6:	6810      	ldr	r0, [r2, #0]
   106a8:	6259      	str	r1, [r3, #36]	; 0x24
   106aa:	6398      	str	r0, [r3, #56]	; 0x38
   106ac:	62d9      	str	r1, [r3, #44]	; 0x2c
   106ae:	68ab      	ldr	r3, [r5, #8]
   106b0:	4a0b      	ldr	r2, [pc, #44]	; (106e0 <std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)+0x90>)
   106b2:	63d8      	str	r0, [r3, #60]	; 0x3c
   106b4:	68ab      	ldr	r3, [r5, #8]
   106b6:	6812      	ldr	r2, [r2, #0]
   106b8:	f103 013c 	add.w	r1, r3, #60	; 0x3c
   106bc:	3a01      	subs	r2, #1
   106be:	3368      	adds	r3, #104	; 0x68
   106c0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
   106c4:	f841 0f04 	str.w	r0, [r1, #4]!
   106c8:	4299      	cmp	r1, r3
   106ca:	d1f9      	bne.n	106c0 <std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)+0x70>
   106cc:	bd38      	pop	{r3, r4, r5, pc}
   106ce:	bf00      	nop
   106d0:	0001ada0 	.word	0x0001ada0
   106d4:	0001c156 	.word	0x0001c156
   106d8:	0001cd10 	.word	0x0001cd10
   106dc:	0001c368 	.word	0x0001c368
   106e0:	10000168 	.word	0x10000168

000106e4 <std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)>:
   106e4:	b538      	push	{r3, r4, r5, lr}
   106e6:	6884      	ldr	r4, [r0, #8]
   106e8:	4605      	mov	r5, r0
   106ea:	b9b4      	cbnz	r4, 1071a <std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)+0x36>
   106ec:	2070      	movs	r0, #112	; 0x70
   106ee:	f7f1 fefd 	bl	24ec <operator new(unsigned int)>
   106f2:	4b1c      	ldr	r3, [pc, #112]	; (10764 <std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)+0x80>)
   106f4:	6044      	str	r4, [r0, #4]
   106f6:	6003      	str	r3, [r0, #0]
   106f8:	6084      	str	r4, [r0, #8]
   106fa:	60c4      	str	r4, [r0, #12]
   106fc:	7404      	strb	r4, [r0, #16]
   106fe:	6144      	str	r4, [r0, #20]
   10700:	6184      	str	r4, [r0, #24]
   10702:	61c4      	str	r4, [r0, #28]
   10704:	6204      	str	r4, [r0, #32]
   10706:	6244      	str	r4, [r0, #36]	; 0x24
   10708:	6284      	str	r4, [r0, #40]	; 0x28
   1070a:	62c4      	str	r4, [r0, #44]	; 0x2c
   1070c:	6304      	str	r4, [r0, #48]	; 0x30
   1070e:	6344      	str	r4, [r0, #52]	; 0x34
   10710:	6384      	str	r4, [r0, #56]	; 0x38
   10712:	63c4      	str	r4, [r0, #60]	; 0x3c
   10714:	f880 406c 	strb.w	r4, [r0, #108]	; 0x6c
   10718:	60a8      	str	r0, [r5, #8]
   1071a:	68ab      	ldr	r3, [r5, #8]
   1071c:	222e      	movs	r2, #46	; 0x2e
   1071e:	615a      	str	r2, [r3, #20]
   10720:	222c      	movs	r2, #44	; 0x2c
   10722:	619a      	str	r2, [r3, #24]
   10724:	4a10      	ldr	r2, [pc, #64]	; (10768 <std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)+0x84>)
   10726:	4911      	ldr	r1, [pc, #68]	; (1076c <std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)+0x88>)
   10728:	609a      	str	r2, [r3, #8]
   1072a:	2200      	movs	r2, #0
   1072c:	60da      	str	r2, [r3, #12]
   1072e:	621a      	str	r2, [r3, #32]
   10730:	629a      	str	r2, [r3, #40]	; 0x28
   10732:	631a      	str	r2, [r3, #48]	; 0x30
   10734:	635a      	str	r2, [r3, #52]	; 0x34
   10736:	4a0e      	ldr	r2, [pc, #56]	; (10770 <std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)+0x8c>)
   10738:	61d9      	str	r1, [r3, #28]
   1073a:	6810      	ldr	r0, [r2, #0]
   1073c:	6259      	str	r1, [r3, #36]	; 0x24
   1073e:	6398      	str	r0, [r3, #56]	; 0x38
   10740:	62d9      	str	r1, [r3, #44]	; 0x2c
   10742:	68ab      	ldr	r3, [r5, #8]
   10744:	4a0b      	ldr	r2, [pc, #44]	; (10774 <std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)+0x90>)
   10746:	63d8      	str	r0, [r3, #60]	; 0x3c
   10748:	68ab      	ldr	r3, [r5, #8]
   1074a:	6812      	ldr	r2, [r2, #0]
   1074c:	f103 013c 	add.w	r1, r3, #60	; 0x3c
   10750:	3a01      	subs	r2, #1
   10752:	3368      	adds	r3, #104	; 0x68
   10754:	f812 0f01 	ldrb.w	r0, [r2, #1]!
   10758:	f841 0f04 	str.w	r0, [r1, #4]!
   1075c:	4299      	cmp	r1, r3
   1075e:	d1f9      	bne.n	10754 <std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)+0x70>
   10760:	bd38      	pop	{r3, r4, r5, pc}
   10762:	bf00      	nop
   10764:	0001ad90 	.word	0x0001ad90
   10768:	0001c156 	.word	0x0001c156
   1076c:	0001cd10 	.word	0x0001cd10
   10770:	0001c368 	.word	0x0001c368
   10774:	10000168 	.word	0x10000168

00010778 <std::moneypunct<wchar_t, true>::~moneypunct()>:
   10778:	4b06      	ldr	r3, [pc, #24]	; (10794 <std::moneypunct<wchar_t, true>::~moneypunct()+0x1c>)
   1077a:	b510      	push	{r4, lr}
   1077c:	4604      	mov	r4, r0
   1077e:	6003      	str	r3, [r0, #0]
   10780:	6880      	ldr	r0, [r0, #8]
   10782:	b110      	cbz	r0, 1078a <std::moneypunct<wchar_t, true>::~moneypunct()+0x12>
   10784:	6803      	ldr	r3, [r0, #0]
   10786:	685b      	ldr	r3, [r3, #4]
   10788:	4798      	blx	r3
   1078a:	4620      	mov	r0, r4
   1078c:	f7ff fc58 	bl	10040 <std::locale::facet::~facet()>
   10790:	4620      	mov	r0, r4
   10792:	bd10      	pop	{r4, pc}
   10794:	0001ac60 	.word	0x0001ac60

00010798 <std::moneypunct<wchar_t, true>::~moneypunct()>:
   10798:	b510      	push	{r4, lr}
   1079a:	4604      	mov	r4, r0
   1079c:	f7ff ffec 	bl	10778 <std::moneypunct<wchar_t, true>::~moneypunct()>
   107a0:	4620      	mov	r0, r4
   107a2:	f7f1 feb4 	bl	250e <operator delete(void*)>
   107a6:	4620      	mov	r0, r4
   107a8:	bd10      	pop	{r4, pc}
	...

000107ac <std::moneypunct<wchar_t, false>::~moneypunct()>:
   107ac:	4b06      	ldr	r3, [pc, #24]	; (107c8 <std::moneypunct<wchar_t, false>::~moneypunct()+0x1c>)
   107ae:	b510      	push	{r4, lr}
   107b0:	4604      	mov	r4, r0
   107b2:	6003      	str	r3, [r0, #0]
   107b4:	6880      	ldr	r0, [r0, #8]
   107b6:	b110      	cbz	r0, 107be <std::moneypunct<wchar_t, false>::~moneypunct()+0x12>
   107b8:	6803      	ldr	r3, [r0, #0]
   107ba:	685b      	ldr	r3, [r3, #4]
   107bc:	4798      	blx	r3
   107be:	4620      	mov	r0, r4
   107c0:	f7ff fc3e 	bl	10040 <std::locale::facet::~facet()>
   107c4:	4620      	mov	r0, r4
   107c6:	bd10      	pop	{r4, pc}
   107c8:	0001ac98 	.word	0x0001ac98

000107cc <std::moneypunct<wchar_t, false>::~moneypunct()>:
   107cc:	b510      	push	{r4, lr}
   107ce:	4604      	mov	r4, r0
   107d0:	f7ff ffec 	bl	107ac <std::moneypunct<wchar_t, false>::~moneypunct()>
   107d4:	4620      	mov	r0, r4
   107d6:	f7f1 fe9a 	bl	250e <operator delete(void*)>
   107da:	4620      	mov	r0, r4
   107dc:	bd10      	pop	{r4, pc}
	...

000107e0 <std::ctype<char>::ctype(char const*, bool, unsigned int)>:
   107e0:	b538      	push	{r3, r4, r5, lr}
   107e2:	3300      	adds	r3, #0
   107e4:	bf18      	it	ne
   107e6:	2301      	movne	r3, #1
   107e8:	6043      	str	r3, [r0, #4]
   107ea:	4b0f      	ldr	r3, [pc, #60]	; (10828 <std::ctype<char>::ctype(char const*, bool, unsigned int)+0x48>)
   107ec:	2500      	movs	r5, #0
   107ee:	6003      	str	r3, [r0, #0]
   107f0:	4b0e      	ldr	r3, [pc, #56]	; (1082c <std::ctype<char>::ctype(char const*, bool, unsigned int)+0x4c>)
   107f2:	2900      	cmp	r1, #0
   107f4:	bf04      	itt	eq
   107f6:	462a      	moveq	r2, r5
   107f8:	4619      	moveq	r1, r3
   107fa:	4604      	mov	r4, r0
   107fc:	7302      	strb	r2, [r0, #12]
   107fe:	6105      	str	r5, [r0, #16]
   10800:	6145      	str	r5, [r0, #20]
   10802:	6181      	str	r1, [r0, #24]
   10804:	f44f 7280 	mov.w	r2, #256	; 0x100
   10808:	4629      	mov	r1, r5
   1080a:	301d      	adds	r0, #29
   1080c:	f002 ff64 	bl	136d8 <memset>
   10810:	7725      	strb	r5, [r4, #28]
   10812:	f204 101d 	addw	r0, r4, #285	; 0x11d
   10816:	4629      	mov	r1, r5
   10818:	f44f 7280 	mov.w	r2, #256	; 0x100
   1081c:	f002 ff5c 	bl	136d8 <memset>
   10820:	f884 521d 	strb.w	r5, [r4, #541]	; 0x21d
   10824:	4620      	mov	r0, r4
   10826:	bd38      	pop	{r3, r4, r5, pc}
   10828:	0001c2c8 	.word	0x0001c2c8
   1082c:	0001c5e3 	.word	0x0001c5e3

00010830 <std::ctype<char>::do_toupper(char) const>:
   10830:	6983      	ldr	r3, [r0, #24]
   10832:	5c5b      	ldrb	r3, [r3, r1]
   10834:	079b      	lsls	r3, r3, #30
   10836:	bf46      	itte	mi
   10838:	3920      	submi	r1, #32
   1083a:	b2c8      	uxtbmi	r0, r1
   1083c:	4608      	movpl	r0, r1
   1083e:	4770      	bx	lr

00010840 <std::ctype<char>::do_toupper(char*, char const*) const>:
   10840:	b570      	push	{r4, r5, r6, lr}
   10842:	4606      	mov	r6, r0
   10844:	460c      	mov	r4, r1
   10846:	4615      	mov	r5, r2
   10848:	42ac      	cmp	r4, r5
   1084a:	d207      	bcs.n	1085c <std::ctype<char>::do_toupper(char*, char const*) const+0x1c>
   1084c:	6833      	ldr	r3, [r6, #0]
   1084e:	7821      	ldrb	r1, [r4, #0]
   10850:	689b      	ldr	r3, [r3, #8]
   10852:	4630      	mov	r0, r6
   10854:	4798      	blx	r3
   10856:	f804 0b01 	strb.w	r0, [r4], #1
   1085a:	e7f5      	b.n	10848 <std::ctype<char>::do_toupper(char*, char const*) const+0x8>
   1085c:	4628      	mov	r0, r5
   1085e:	bd70      	pop	{r4, r5, r6, pc}

00010860 <std::ctype<char>::do_tolower(char) const>:
   10860:	6983      	ldr	r3, [r0, #24]
   10862:	5c5b      	ldrb	r3, [r3, r1]
   10864:	07db      	lsls	r3, r3, #31
   10866:	bf46      	itte	mi
   10868:	3120      	addmi	r1, #32
   1086a:	b2c8      	uxtbmi	r0, r1
   1086c:	4608      	movpl	r0, r1
   1086e:	4770      	bx	lr

00010870 <std::ctype<char>::do_tolower(char*, char const*) const>:
   10870:	b570      	push	{r4, r5, r6, lr}
   10872:	4606      	mov	r6, r0
   10874:	460c      	mov	r4, r1
   10876:	4615      	mov	r5, r2
   10878:	42ac      	cmp	r4, r5
   1087a:	d207      	bcs.n	1088c <std::ctype<char>::do_tolower(char*, char const*) const+0x1c>
   1087c:	6833      	ldr	r3, [r6, #0]
   1087e:	7821      	ldrb	r1, [r4, #0]
   10880:	691b      	ldr	r3, [r3, #16]
   10882:	4630      	mov	r0, r6
   10884:	4798      	blx	r3
   10886:	f804 0b01 	strb.w	r0, [r4], #1
   1088a:	e7f5      	b.n	10878 <std::ctype<char>::do_tolower(char*, char const*) const+0x8>
   1088c:	4628      	mov	r0, r5
   1088e:	bd70      	pop	{r4, r5, r6, pc}

00010890 <std::numpunct<char>::_M_initialize_numpunct(int*)>:
   10890:	b538      	push	{r3, r4, r5, lr}
   10892:	6884      	ldr	r4, [r0, #8]
   10894:	4605      	mov	r5, r0
   10896:	b99c      	cbnz	r4, 108c0 <std::numpunct<char>::_M_initialize_numpunct(int*)+0x30>
   10898:	2068      	movs	r0, #104	; 0x68
   1089a:	f7f1 fe27 	bl	24ec <operator new(unsigned int)>
   1089e:	4b1e      	ldr	r3, [pc, #120]	; (10918 <std::numpunct<char>::_M_initialize_numpunct(int*)+0x88>)
   108a0:	6044      	str	r4, [r0, #4]
   108a2:	6003      	str	r3, [r0, #0]
   108a4:	6084      	str	r4, [r0, #8]
   108a6:	60c4      	str	r4, [r0, #12]
   108a8:	7404      	strb	r4, [r0, #16]
   108aa:	6144      	str	r4, [r0, #20]
   108ac:	6184      	str	r4, [r0, #24]
   108ae:	61c4      	str	r4, [r0, #28]
   108b0:	6204      	str	r4, [r0, #32]
   108b2:	f880 4024 	strb.w	r4, [r0, #36]	; 0x24
   108b6:	f880 4025 	strb.w	r4, [r0, #37]	; 0x25
   108ba:	f880 4064 	strb.w	r4, [r0, #100]	; 0x64
   108be:	60a8      	str	r0, [r5, #8]
   108c0:	68aa      	ldr	r2, [r5, #8]
   108c2:	4b16      	ldr	r3, [pc, #88]	; (1091c <std::numpunct<char>::_M_initialize_numpunct(int*)+0x8c>)
   108c4:	212e      	movs	r1, #46	; 0x2e
   108c6:	6093      	str	r3, [r2, #8]
   108c8:	f882 1024 	strb.w	r1, [r2, #36]	; 0x24
   108cc:	2300      	movs	r3, #0
   108ce:	60d3      	str	r3, [r2, #12]
   108d0:	7413      	strb	r3, [r2, #16]
   108d2:	68aa      	ldr	r2, [r5, #8]
   108d4:	212c      	movs	r1, #44	; 0x2c
   108d6:	f882 1025 	strb.w	r1, [r2, #37]	; 0x25
   108da:	4a11      	ldr	r2, [pc, #68]	; (10920 <std::numpunct<char>::_M_initialize_numpunct(int*)+0x90>)
   108dc:	6810      	ldr	r0, [r2, #0]
   108de:	68aa      	ldr	r2, [r5, #8]
   108e0:	5cc1      	ldrb	r1, [r0, r3]
   108e2:	441a      	add	r2, r3
   108e4:	3301      	adds	r3, #1
   108e6:	2b24      	cmp	r3, #36	; 0x24
   108e8:	f882 1026 	strb.w	r1, [r2, #38]	; 0x26
   108ec:	d1f7      	bne.n	108de <std::numpunct<char>::_M_initialize_numpunct(int*)+0x4e>
   108ee:	4b0d      	ldr	r3, [pc, #52]	; (10924 <std::numpunct<char>::_M_initialize_numpunct(int*)+0x94>)
   108f0:	6818      	ldr	r0, [r3, #0]
   108f2:	2300      	movs	r3, #0
   108f4:	68aa      	ldr	r2, [r5, #8]
   108f6:	5cc1      	ldrb	r1, [r0, r3]
   108f8:	441a      	add	r2, r3
   108fa:	3301      	adds	r3, #1
   108fc:	2b1a      	cmp	r3, #26
   108fe:	f882 104a 	strb.w	r1, [r2, #74]	; 0x4a
   10902:	d1f7      	bne.n	108f4 <std::numpunct<char>::_M_initialize_numpunct(int*)+0x64>
   10904:	68ab      	ldr	r3, [r5, #8]
   10906:	4a08      	ldr	r2, [pc, #32]	; (10928 <std::numpunct<char>::_M_initialize_numpunct(int*)+0x98>)
   10908:	615a      	str	r2, [r3, #20]
   1090a:	2204      	movs	r2, #4
   1090c:	619a      	str	r2, [r3, #24]
   1090e:	4a07      	ldr	r2, [pc, #28]	; (1092c <std::numpunct<char>::_M_initialize_numpunct(int*)+0x9c>)
   10910:	61da      	str	r2, [r3, #28]
   10912:	2205      	movs	r2, #5
   10914:	621a      	str	r2, [r3, #32]
   10916:	bd38      	pop	{r3, r4, r5, pc}
   10918:	0001b930 	.word	0x0001b930
   1091c:	0001c156 	.word	0x0001c156
   10920:	1000016c 	.word	0x1000016c
   10924:	10000164 	.word	0x10000164
   10928:	0001c556 	.word	0x0001c556
   1092c:	0001c55b 	.word	0x0001c55b

00010930 <std::numpunct<char>::~numpunct()>:
   10930:	4b06      	ldr	r3, [pc, #24]	; (1094c <std::numpunct<char>::~numpunct()+0x1c>)
   10932:	b510      	push	{r4, lr}
   10934:	4604      	mov	r4, r0
   10936:	6003      	str	r3, [r0, #0]
   10938:	6880      	ldr	r0, [r0, #8]
   1093a:	b110      	cbz	r0, 10942 <std::numpunct<char>::~numpunct()+0x12>
   1093c:	6803      	ldr	r3, [r0, #0]
   1093e:	685b      	ldr	r3, [r3, #4]
   10940:	4798      	blx	r3
   10942:	4620      	mov	r0, r4
   10944:	f7ff fb7c 	bl	10040 <std::locale::facet::~facet()>
   10948:	4620      	mov	r0, r4
   1094a:	bd10      	pop	{r4, pc}
   1094c:	0001b728 	.word	0x0001b728

00010950 <std::numpunct<char>::~numpunct()>:
   10950:	b510      	push	{r4, lr}
   10952:	4604      	mov	r4, r0
   10954:	f7ff ffec 	bl	10930 <std::numpunct<char>::~numpunct()>
   10958:	4620      	mov	r0, r4
   1095a:	f7f1 fdd8 	bl	250e <operator delete(void*)>
   1095e:	4620      	mov	r0, r4
   10960:	bd10      	pop	{r4, pc}
	...

00010964 <std::numpunct<wchar_t>::_M_initialize_numpunct(int*)>:
   10964:	b538      	push	{r3, r4, r5, lr}
   10966:	6884      	ldr	r4, [r0, #8]
   10968:	4605      	mov	r5, r0
   1096a:	b994      	cbnz	r4, 10992 <std::numpunct<wchar_t>::_M_initialize_numpunct(int*)+0x2e>
   1096c:	f44f 7094 	mov.w	r0, #296	; 0x128
   10970:	f7f1 fdbc 	bl	24ec <operator new(unsigned int)>
   10974:	4b1c      	ldr	r3, [pc, #112]	; (109e8 <std::numpunct<wchar_t>::_M_initialize_numpunct(int*)+0x84>)
   10976:	6044      	str	r4, [r0, #4]
   10978:	6003      	str	r3, [r0, #0]
   1097a:	6084      	str	r4, [r0, #8]
   1097c:	60c4      	str	r4, [r0, #12]
   1097e:	7404      	strb	r4, [r0, #16]
   10980:	6144      	str	r4, [r0, #20]
   10982:	6184      	str	r4, [r0, #24]
   10984:	61c4      	str	r4, [r0, #28]
   10986:	6204      	str	r4, [r0, #32]
   10988:	6244      	str	r4, [r0, #36]	; 0x24
   1098a:	6284      	str	r4, [r0, #40]	; 0x28
   1098c:	f880 4124 	strb.w	r4, [r0, #292]	; 0x124
   10990:	60a8      	str	r0, [r5, #8]
   10992:	68ab      	ldr	r3, [r5, #8]
   10994:	4a15      	ldr	r2, [pc, #84]	; (109ec <std::numpunct<wchar_t>::_M_initialize_numpunct(int*)+0x88>)
   10996:	212c      	movs	r1, #44	; 0x2c
   10998:	609a      	str	r2, [r3, #8]
   1099a:	2200      	movs	r2, #0
   1099c:	60da      	str	r2, [r3, #12]
   1099e:	741a      	strb	r2, [r3, #16]
   109a0:	222e      	movs	r2, #46	; 0x2e
   109a2:	625a      	str	r2, [r3, #36]	; 0x24
   109a4:	461a      	mov	r2, r3
   109a6:	f842 1f28 	str.w	r1, [r2, #40]!
   109aa:	4911      	ldr	r1, [pc, #68]	; (109f0 <std::numpunct<wchar_t>::_M_initialize_numpunct(int*)+0x8c>)
   109ac:	6808      	ldr	r0, [r1, #0]
   109ae:	f103 01b8 	add.w	r1, r3, #184	; 0xb8
   109b2:	3801      	subs	r0, #1
   109b4:	f810 4f01 	ldrb.w	r4, [r0, #1]!
   109b8:	f842 4f04 	str.w	r4, [r2, #4]!
   109bc:	428a      	cmp	r2, r1
   109be:	d1f9      	bne.n	109b4 <std::numpunct<wchar_t>::_M_initialize_numpunct(int*)+0x50>
   109c0:	4a0c      	ldr	r2, [pc, #48]	; (109f4 <std::numpunct<wchar_t>::_M_initialize_numpunct(int*)+0x90>)
   109c2:	f503 7090 	add.w	r0, r3, #288	; 0x120
   109c6:	6812      	ldr	r2, [r2, #0]
   109c8:	3a01      	subs	r2, #1
   109ca:	f812 4f01 	ldrb.w	r4, [r2, #1]!
   109ce:	f841 4f04 	str.w	r4, [r1, #4]!
   109d2:	4281      	cmp	r1, r0
   109d4:	d1f9      	bne.n	109ca <std::numpunct<wchar_t>::_M_initialize_numpunct(int*)+0x66>
   109d6:	4a08      	ldr	r2, [pc, #32]	; (109f8 <std::numpunct<wchar_t>::_M_initialize_numpunct(int*)+0x94>)
   109d8:	615a      	str	r2, [r3, #20]
   109da:	2204      	movs	r2, #4
   109dc:	619a      	str	r2, [r3, #24]
   109de:	4a07      	ldr	r2, [pc, #28]	; (109fc <std::numpunct<wchar_t>::_M_initialize_numpunct(int*)+0x98>)
   109e0:	61da      	str	r2, [r3, #28]
   109e2:	2205      	movs	r2, #5
   109e4:	621a      	str	r2, [r3, #32]
   109e6:	bd38      	pop	{r3, r4, r5, pc}
   109e8:	0001adb0 	.word	0x0001adb0
   109ec:	0001c156 	.word	0x0001c156
   109f0:	1000016c 	.word	0x1000016c
   109f4:	10000164 	.word	0x10000164
   109f8:	0001c564 	.word	0x0001c564
   109fc:	0001c578 	.word	0x0001c578

00010a00 <std::numpunct<wchar_t>::~numpunct()>:
   10a00:	4b06      	ldr	r3, [pc, #24]	; (10a1c <std::numpunct<wchar_t>::~numpunct()+0x1c>)
   10a02:	b510      	push	{r4, lr}
   10a04:	4604      	mov	r4, r0
   10a06:	6003      	str	r3, [r0, #0]
   10a08:	6880      	ldr	r0, [r0, #8]
   10a0a:	b110      	cbz	r0, 10a12 <std::numpunct<wchar_t>::~numpunct()+0x12>
   10a0c:	6803      	ldr	r3, [r0, #0]
   10a0e:	685b      	ldr	r3, [r3, #4]
   10a10:	4798      	blx	r3
   10a12:	4620      	mov	r0, r4
   10a14:	f7ff fb14 	bl	10040 <std::locale::facet::~facet()>
   10a18:	4620      	mov	r0, r4
   10a1a:	bd10      	pop	{r4, pc}
   10a1c:	0001aba8 	.word	0x0001aba8

00010a20 <std::numpunct<wchar_t>::~numpunct()>:
   10a20:	b510      	push	{r4, lr}
   10a22:	4604      	mov	r4, r0
   10a24:	f7ff ffec 	bl	10a00 <std::numpunct<wchar_t>::~numpunct()>
   10a28:	4620      	mov	r0, r4
   10a2a:	f7f1 fd70 	bl	250e <operator delete(void*)>
   10a2e:	4620      	mov	r0, r4
   10a30:	bd10      	pop	{r4, pc}

00010a32 <std::messages<char>::do_get(int, int, int, std::string const&) const>:
   10a32:	b510      	push	{r4, lr}
   10a34:	4604      	mov	r4, r0
   10a36:	9903      	ldr	r1, [sp, #12]
   10a38:	f7fe f9d0 	bl	eddc <std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)>
   10a3c:	4620      	mov	r0, r4
   10a3e:	bd10      	pop	{r4, pc}

00010a40 <std::messages<wchar_t>::do_get(int, int, int, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const>:
   10a40:	b510      	push	{r4, lr}
   10a42:	4604      	mov	r4, r0
   10a44:	9903      	ldr	r1, [sp, #12]
   10a46:	f7fe fd45 	bl	f4d4 <std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)>
   10a4a:	4620      	mov	r0, r4
   10a4c:	bd10      	pop	{r4, pc}
	...

00010a50 <(anonymous namespace)::get_locale_mutex()>:
   10a50:	b510      	push	{r4, lr}
   10a52:	4c06      	ldr	r4, [pc, #24]	; (10a6c <(anonymous namespace)::get_locale_mutex()+0x1c>)
   10a54:	6823      	ldr	r3, [r4, #0]
   10a56:	07db      	lsls	r3, r3, #31
   10a58:	d406      	bmi.n	10a68 <(anonymous namespace)::get_locale_mutex()+0x18>
   10a5a:	4620      	mov	r0, r4
   10a5c:	f000 fbbf 	bl	111de <__cxa_guard_acquire>
   10a60:	b110      	cbz	r0, 10a68 <(anonymous namespace)::get_locale_mutex()+0x18>
   10a62:	4620      	mov	r0, r4
   10a64:	f000 fbc7 	bl	111f6 <__cxa_guard_release>
   10a68:	4801      	ldr	r0, [pc, #4]	; (10a70 <(anonymous namespace)::get_locale_mutex()+0x20>)
   10a6a:	bd10      	pop	{r4, pc}
   10a6c:	10001a60 	.word	0x10001a60
   10a70:	10000cd8 	.word	0x10000cd8

00010a74 <std::locale::_Impl::_Impl(unsigned int)>:
   10a74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
   10a78:	4607      	mov	r7, r0
   10a7a:	4ab9      	ldr	r2, [pc, #740]	; (10d60 <std::locale::_Impl::_Impl(unsigned int)+0x2ec>)
   10a7c:	231c      	movs	r3, #28
   10a7e:	6042      	str	r2, [r0, #4]
   10a80:	4ab8      	ldr	r2, [pc, #736]	; (10d64 <std::locale::_Impl::_Impl(unsigned int)+0x2f0>)
   10a82:	6083      	str	r3, [r0, #8]
   10a84:	2300      	movs	r3, #0
   10a86:	6001      	str	r1, [r0, #0]
   10a88:	6103      	str	r3, [r0, #16]
   10a8a:	60c2      	str	r2, [r0, #12]
   10a8c:	6879      	ldr	r1, [r7, #4]
   10a8e:	68f8      	ldr	r0, [r7, #12]
   10a90:	2200      	movs	r2, #0
   10a92:	50c2      	str	r2, [r0, r3]
   10a94:	50ca      	str	r2, [r1, r3]
   10a96:	3304      	adds	r3, #4
   10a98:	2b70      	cmp	r3, #112	; 0x70
   10a9a:	d1f7      	bne.n	10a8c <std::locale::_Impl::_Impl(unsigned int)+0x18>
   10a9c:	4bb2      	ldr	r3, [pc, #712]	; (10d68 <std::locale::_Impl::_Impl(unsigned int)+0x2f4>)
   10a9e:	4cb3      	ldr	r4, [pc, #716]	; (10d6c <std::locale::_Impl::_Impl(unsigned int)+0x2f8>)
   10aa0:	613b      	str	r3, [r7, #16]
   10aa2:	601c      	str	r4, [r3, #0]
   10aa4:	f7ff faf2 	bl	1008c <std::locale::facet::_S_get_c_name()>
   10aa8:	8803      	ldrh	r3, [r0, #0]
   10aaa:	8023      	strh	r3, [r4, #0]
   10aac:	2304      	movs	r3, #4
   10aae:	693a      	ldr	r2, [r7, #16]
   10ab0:	2400      	movs	r4, #0
   10ab2:	50d4      	str	r4, [r2, r3]
   10ab4:	3304      	adds	r3, #4
   10ab6:	2b18      	cmp	r3, #24
   10ab8:	d1f9      	bne.n	10aae <std::locale::_Impl::_Impl(unsigned int)+0x3a>
   10aba:	2301      	movs	r3, #1
   10abc:	4621      	mov	r1, r4
   10abe:	4622      	mov	r2, r4
   10ac0:	48ab      	ldr	r0, [pc, #684]	; (10d70 <std::locale::_Impl::_Impl(unsigned int)+0x2fc>)
   10ac2:	f7ff fe8d 	bl	107e0 <std::ctype<char>::ctype(char const*, bool, unsigned int)>
   10ac6:	4638      	mov	r0, r7
   10ac8:	4aa9      	ldr	r2, [pc, #676]	; (10d70 <std::locale::_Impl::_Impl(unsigned int)+0x2fc>)
   10aca:	49aa      	ldr	r1, [pc, #680]	; (10d74 <std::locale::_Impl::_Impl(unsigned int)+0x300>)
   10acc:	f7ff fb72 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10ad0:	2101      	movs	r1, #1
   10ad2:	48a9      	ldr	r0, [pc, #676]	; (10d78 <std::locale::_Impl::_Impl(unsigned int)+0x304>)
   10ad4:	f7f7 fee4 	bl	88a0 <std::codecvt<char, char, _mbstate_t>::codecvt(unsigned int)>
   10ad8:	4638      	mov	r0, r7
   10ada:	49a8      	ldr	r1, [pc, #672]	; (10d7c <std::locale::_Impl::_Impl(unsigned int)+0x308>)
   10adc:	4aa6      	ldr	r2, [pc, #664]	; (10d78 <std::locale::_Impl::_Impl(unsigned int)+0x304>)
   10ade:	f7ff fb69 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10ae2:	f8df c34c 	ldr.w	r12, [pc, #844]	; 10e30 <std::locale::_Impl::_Impl(unsigned int)+0x3bc>
   10ae6:	4ba6      	ldr	r3, [pc, #664]	; (10d80 <std::locale::_Impl::_Impl(unsigned int)+0x30c>)
   10ae8:	f04f 0801 	mov.w	r8, #1
   10aec:	f8cc 8004 	str.w	r8, [r12, #4]
   10af0:	f8cc 3000 	str.w	r3, [r12]
   10af4:	f8cc 4008 	str.w	r4, [r12, #8]
   10af8:	f8cc 400c 	str.w	r4, [r12, #12]
   10afc:	f88c 4010 	strb.w	r4, [r12, #16]
   10b00:	f8cc 4014 	str.w	r4, [r12, #20]
   10b04:	f8cc 4018 	str.w	r4, [r12, #24]
   10b08:	f8cc 401c 	str.w	r4, [r12, #28]
   10b0c:	f8cc 4020 	str.w	r4, [r12, #32]
   10b10:	f88c 4024 	strb.w	r4, [r12, #36]	; 0x24
   10b14:	f88c 4025 	strb.w	r4, [r12, #37]	; 0x25
   10b18:	f88c 4064 	strb.w	r4, [r12, #100]	; 0x64
   10b1c:	4661      	mov	r1, r12
   10b1e:	4642      	mov	r2, r8
   10b20:	4898      	ldr	r0, [pc, #608]	; (10d84 <std::locale::_Impl::_Impl(unsigned int)+0x310>)
   10b22:	f8cd c004 	str.w	r12, [sp, #4]
   10b26:	f7f8 faf9 	bl	911c <std::numpunct<char>::numpunct(std::__numpunct_cache<char>*, unsigned int)>
   10b2a:	4638      	mov	r0, r7
   10b2c:	4996      	ldr	r1, [pc, #600]	; (10d88 <std::locale::_Impl::_Impl(unsigned int)+0x314>)
   10b2e:	4a95      	ldr	r2, [pc, #596]	; (10d84 <std::locale::_Impl::_Impl(unsigned int)+0x310>)
   10b30:	f7ff fb40 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10b34:	4a95      	ldr	r2, [pc, #596]	; (10d8c <std::locale::_Impl::_Impl(unsigned int)+0x318>)
   10b36:	4b96      	ldr	r3, [pc, #600]	; (10d90 <std::locale::_Impl::_Impl(unsigned int)+0x31c>)
   10b38:	f8c2 8004 	str.w	r8, [r2, #4]
   10b3c:	6013      	str	r3, [r2, #0]
   10b3e:	4638      	mov	r0, r7
   10b40:	4994      	ldr	r1, [pc, #592]	; (10d94 <std::locale::_Impl::_Impl(unsigned int)+0x320>)
   10b42:	f7ff fb37 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10b46:	4a94      	ldr	r2, [pc, #592]	; (10d98 <std::locale::_Impl::_Impl(unsigned int)+0x324>)
   10b48:	4b94      	ldr	r3, [pc, #592]	; (10d9c <std::locale::_Impl::_Impl(unsigned int)+0x328>)
   10b4a:	f8c2 8004 	str.w	r8, [r2, #4]
   10b4e:	6013      	str	r3, [r2, #0]
   10b50:	4638      	mov	r0, r7
   10b52:	4993      	ldr	r1, [pc, #588]	; (10da0 <std::locale::_Impl::_Impl(unsigned int)+0x32c>)
   10b54:	f7ff fb2e 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10b58:	4641      	mov	r1, r8
   10b5a:	4892      	ldr	r0, [pc, #584]	; (10da4 <std::locale::_Impl::_Impl(unsigned int)+0x330>)
   10b5c:	f7f8 fbe2 	bl	9324 <std::collate<char>::collate(unsigned int)>
   10b60:	4638      	mov	r0, r7
   10b62:	4991      	ldr	r1, [pc, #580]	; (10da8 <std::locale::_Impl::_Impl(unsigned int)+0x334>)
   10b64:	4a8f      	ldr	r2, [pc, #572]	; (10da4 <std::locale::_Impl::_Impl(unsigned int)+0x330>)
   10b66:	f7ff fb25 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10b6a:	4b90      	ldr	r3, [pc, #576]	; (10dac <std::locale::_Impl::_Impl(unsigned int)+0x338>)
   10b6c:	4a90      	ldr	r2, [pc, #576]	; (10db0 <std::locale::_Impl::_Impl(unsigned int)+0x33c>)
   10b6e:	f8c3 8004 	str.w	r8, [r3, #4]
   10b72:	601a      	str	r2, [r3, #0]
   10b74:	609c      	str	r4, [r3, #8]
   10b76:	60dc      	str	r4, [r3, #12]
   10b78:	741c      	strb	r4, [r3, #16]
   10b7a:	745c      	strb	r4, [r3, #17]
   10b7c:	749c      	strb	r4, [r3, #18]
   10b7e:	615c      	str	r4, [r3, #20]
   10b80:	619c      	str	r4, [r3, #24]
   10b82:	61dc      	str	r4, [r3, #28]
   10b84:	621c      	str	r4, [r3, #32]
   10b86:	625c      	str	r4, [r3, #36]	; 0x24
   10b88:	629c      	str	r4, [r3, #40]	; 0x28
   10b8a:	62dc      	str	r4, [r3, #44]	; 0x2c
   10b8c:	631c      	str	r4, [r3, #48]	; 0x30
   10b8e:	635c      	str	r4, [r3, #52]	; 0x34
   10b90:	f883 4043 	strb.w	r4, [r3, #67]	; 0x43
   10b94:	4619      	mov	r1, r3
   10b96:	4642      	mov	r2, r8
   10b98:	4886      	ldr	r0, [pc, #536]	; (10db4 <std::locale::_Impl::_Impl(unsigned int)+0x340>)
   10b9a:	9300      	str	r3, [sp, #0]
   10b9c:	f7f8 f9be 	bl	8f1c <std::moneypunct<char, false>::moneypunct(std::__moneypunct_cache<char, false>*, unsigned int)>
   10ba0:	4638      	mov	r0, r7
   10ba2:	4985      	ldr	r1, [pc, #532]	; (10db8 <std::locale::_Impl::_Impl(unsigned int)+0x344>)
   10ba4:	4a83      	ldr	r2, [pc, #524]	; (10db4 <std::locale::_Impl::_Impl(unsigned int)+0x340>)
   10ba6:	f7ff fb05 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10baa:	f8df b288 	ldr.w	r11, [pc, #648]	; 10e34 <std::locale::_Impl::_Impl(unsigned int)+0x3c0>
   10bae:	4a83      	ldr	r2, [pc, #524]	; (10dbc <std::locale::_Impl::_Impl(unsigned int)+0x348>)
   10bb0:	4659      	mov	r1, r11
   10bb2:	f8cb 2000 	str.w	r2, [r11]
   10bb6:	4882      	ldr	r0, [pc, #520]	; (10dc0 <std::locale::_Impl::_Impl(unsigned int)+0x34c>)
   10bb8:	4642      	mov	r2, r8
   10bba:	f8cb 4008 	str.w	r4, [r11, #8]
   10bbe:	f8cb 400c 	str.w	r4, [r11, #12]
   10bc2:	f88b 4010 	strb.w	r4, [r11, #16]
   10bc6:	f88b 4011 	strb.w	r4, [r11, #17]
   10bca:	f88b 4012 	strb.w	r4, [r11, #18]
   10bce:	f8cb 4014 	str.w	r4, [r11, #20]
   10bd2:	f8cb 4018 	str.w	r4, [r11, #24]
   10bd6:	f8cb 401c 	str.w	r4, [r11, #28]
   10bda:	f8cb 4020 	str.w	r4, [r11, #32]
   10bde:	f8cb 4024 	str.w	r4, [r11, #36]	; 0x24
   10be2:	f8cb 4028 	str.w	r4, [r11, #40]	; 0x28
   10be6:	f8cb 402c 	str.w	r4, [r11, #44]	; 0x2c
   10bea:	f8cb 4030 	str.w	r4, [r11, #48]	; 0x30
   10bee:	f8cb 4034 	str.w	r4, [r11, #52]	; 0x34
   10bf2:	f88b 4043 	strb.w	r4, [r11, #67]	; 0x43
   10bf6:	f8cb 8004 	str.w	r8, [r11, #4]
   10bfa:	f7f8 f9f5 	bl	8fe8 <std::moneypunct<char, true>::moneypunct(std::__moneypunct_cache<char, true>*, unsigned int)>
   10bfe:	4638      	mov	r0, r7
   10c00:	4970      	ldr	r1, [pc, #448]	; (10dc4 <std::locale::_Impl::_Impl(unsigned int)+0x350>)
   10c02:	4a6f      	ldr	r2, [pc, #444]	; (10dc0 <std::locale::_Impl::_Impl(unsigned int)+0x34c>)
   10c04:	f7ff fad6 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10c08:	4a6f      	ldr	r2, [pc, #444]	; (10dc8 <std::locale::_Impl::_Impl(unsigned int)+0x354>)
   10c0a:	4970      	ldr	r1, [pc, #448]	; (10dcc <std::locale::_Impl::_Impl(unsigned int)+0x358>)
   10c0c:	f8c2 8004 	str.w	r8, [r2, #4]
   10c10:	6011      	str	r1, [r2, #0]
   10c12:	4638      	mov	r0, r7
   10c14:	496e      	ldr	r1, [pc, #440]	; (10dd0 <std::locale::_Impl::_Impl(unsigned int)+0x35c>)
   10c16:	f7ff facd 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10c1a:	4a6e      	ldr	r2, [pc, #440]	; (10dd4 <std::locale::_Impl::_Impl(unsigned int)+0x360>)
   10c1c:	496e      	ldr	r1, [pc, #440]	; (10dd8 <std::locale::_Impl::_Impl(unsigned int)+0x364>)
   10c1e:	f8c2 8004 	str.w	r8, [r2, #4]
   10c22:	6011      	str	r1, [r2, #0]
   10c24:	4638      	mov	r0, r7
   10c26:	496d      	ldr	r1, [pc, #436]	; (10ddc <std::locale::_Impl::_Impl(unsigned int)+0x368>)
   10c28:	4e6d      	ldr	r6, [pc, #436]	; (10de0 <std::locale::_Impl::_Impl(unsigned int)+0x36c>)
   10c2a:	f7ff fac3 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10c2e:	4a6d      	ldr	r2, [pc, #436]	; (10de4 <std::locale::_Impl::_Impl(unsigned int)+0x370>)
   10c30:	4631      	mov	r1, r6
   10c32:	6032      	str	r2, [r6, #0]
   10c34:	486c      	ldr	r0, [pc, #432]	; (10de8 <std::locale::_Impl::_Impl(unsigned int)+0x374>)
   10c36:	4642      	mov	r2, r8
   10c38:	60b4      	str	r4, [r6, #8]
   10c3a:	60f4      	str	r4, [r6, #12]
   10c3c:	6134      	str	r4, [r6, #16]
   10c3e:	6174      	str	r4, [r6, #20]
   10c40:	61b4      	str	r4, [r6, #24]
   10c42:	61f4      	str	r4, [r6, #28]
   10c44:	6234      	str	r4, [r6, #32]
   10c46:	6274      	str	r4, [r6, #36]	; 0x24
   10c48:	62b4      	str	r4, [r6, #40]	; 0x28
   10c4a:	62f4      	str	r4, [r6, #44]	; 0x2c
   10c4c:	6334      	str	r4, [r6, #48]	; 0x30
   10c4e:	6374      	str	r4, [r6, #52]	; 0x34
   10c50:	63b4      	str	r4, [r6, #56]	; 0x38
   10c52:	63f4      	str	r4, [r6, #60]	; 0x3c
   10c54:	6434      	str	r4, [r6, #64]	; 0x40
   10c56:	6474      	str	r4, [r6, #68]	; 0x44
   10c58:	64b4      	str	r4, [r6, #72]	; 0x48
   10c5a:	64f4      	str	r4, [r6, #76]	; 0x4c
   10c5c:	6534      	str	r4, [r6, #80]	; 0x50
   10c5e:	6574      	str	r4, [r6, #84]	; 0x54
   10c60:	65b4      	str	r4, [r6, #88]	; 0x58
   10c62:	65f4      	str	r4, [r6, #92]	; 0x5c
   10c64:	6634      	str	r4, [r6, #96]	; 0x60
   10c66:	6674      	str	r4, [r6, #100]	; 0x64
   10c68:	66b4      	str	r4, [r6, #104]	; 0x68
   10c6a:	66f4      	str	r4, [r6, #108]	; 0x6c
   10c6c:	6734      	str	r4, [r6, #112]	; 0x70
   10c6e:	6774      	str	r4, [r6, #116]	; 0x74
   10c70:	67b4      	str	r4, [r6, #120]	; 0x78
   10c72:	67f4      	str	r4, [r6, #124]	; 0x7c
   10c74:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
   10c78:	f8c6 8004 	str.w	r8, [r6, #4]
   10c7c:	f8c6 4084 	str.w	r4, [r6, #132]	; 0x84
   10c80:	f8c6 4088 	str.w	r4, [r6, #136]	; 0x88
   10c84:	f8c6 408c 	str.w	r4, [r6, #140]	; 0x8c
   10c88:	f8c6 4090 	str.w	r4, [r6, #144]	; 0x90
   10c8c:	f8c6 4094 	str.w	r4, [r6, #148]	; 0x94
   10c90:	f8c6 4098 	str.w	r4, [r6, #152]	; 0x98
   10c94:	f8c6 409c 	str.w	r4, [r6, #156]	; 0x9c
   10c98:	f8c6 40a0 	str.w	r4, [r6, #160]	; 0xa0
   10c9c:	f8c6 40a4 	str.w	r4, [r6, #164]	; 0xa4
   10ca0:	f8c6 40a8 	str.w	r4, [r6, #168]	; 0xa8
   10ca4:	f8c6 40ac 	str.w	r4, [r6, #172]	; 0xac
   10ca8:	f8c6 40b0 	str.w	r4, [r6, #176]	; 0xb0
   10cac:	f8c6 40b4 	str.w	r4, [r6, #180]	; 0xb4
   10cb0:	f8c6 40b8 	str.w	r4, [r6, #184]	; 0xb8
   10cb4:	f8c6 40bc 	str.w	r4, [r6, #188]	; 0xbc
   10cb8:	f8c6 40c0 	str.w	r4, [r6, #192]	; 0xc0
   10cbc:	f886 40c4 	strb.w	r4, [r6, #196]	; 0xc4
   10cc0:	f7f8 fa70 	bl	91a4 <std::__timepunct<char>::__timepunct(std::__timepunct_cache<char>*, unsigned int)>
   10cc4:	4638      	mov	r0, r7
   10cc6:	4949      	ldr	r1, [pc, #292]	; (10dec <std::locale::_Impl::_Impl(unsigned int)+0x378>)
   10cc8:	4a47      	ldr	r2, [pc, #284]	; (10de8 <std::locale::_Impl::_Impl(unsigned int)+0x374>)
   10cca:	f7ff fa73 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10cce:	4a48      	ldr	r2, [pc, #288]	; (10df0 <std::locale::_Impl::_Impl(unsigned int)+0x37c>)
   10cd0:	4948      	ldr	r1, [pc, #288]	; (10df4 <std::locale::_Impl::_Impl(unsigned int)+0x380>)
   10cd2:	f8c2 8004 	str.w	r8, [r2, #4]
   10cd6:	6011      	str	r1, [r2, #0]
   10cd8:	4638      	mov	r0, r7
   10cda:	4947      	ldr	r1, [pc, #284]	; (10df8 <std::locale::_Impl::_Impl(unsigned int)+0x384>)
   10cdc:	f7ff fa6a 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10ce0:	4a46      	ldr	r2, [pc, #280]	; (10dfc <std::locale::_Impl::_Impl(unsigned int)+0x388>)
   10ce2:	4947      	ldr	r1, [pc, #284]	; (10e00 <std::locale::_Impl::_Impl(unsigned int)+0x38c>)
   10ce4:	f8c2 8004 	str.w	r8, [r2, #4]
   10ce8:	6011      	str	r1, [r2, #0]
   10cea:	4638      	mov	r0, r7
   10cec:	4945      	ldr	r1, [pc, #276]	; (10e04 <std::locale::_Impl::_Impl(unsigned int)+0x390>)
   10cee:	f7ff fa61 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10cf2:	4641      	mov	r1, r8
   10cf4:	4844      	ldr	r0, [pc, #272]	; (10e08 <std::locale::_Impl::_Impl(unsigned int)+0x394>)
   10cf6:	f7f8 fb05 	bl	9304 <std::messages<char>::messages(unsigned int)>
   10cfa:	4638      	mov	r0, r7
   10cfc:	4a42      	ldr	r2, [pc, #264]	; (10e08 <std::locale::_Impl::_Impl(unsigned int)+0x394>)
   10cfe:	4943      	ldr	r1, [pc, #268]	; (10e0c <std::locale::_Impl::_Impl(unsigned int)+0x398>)
   10d00:	f7ff fa58 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10d04:	4641      	mov	r1, r8
   10d06:	4842      	ldr	r0, [pc, #264]	; (10e10 <std::locale::_Impl::_Impl(unsigned int)+0x39c>)
   10d08:	f7ff f8be 	bl	fe88 <std::ctype<wchar_t>::ctype(unsigned int)>
   10d0c:	4638      	mov	r0, r7
   10d0e:	4a40      	ldr	r2, [pc, #256]	; (10e10 <std::locale::_Impl::_Impl(unsigned int)+0x39c>)
   10d10:	4940      	ldr	r1, [pc, #256]	; (10e14 <std::locale::_Impl::_Impl(unsigned int)+0x3a0>)
   10d12:	f7ff fa4f 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10d16:	4641      	mov	r1, r8
   10d18:	483f      	ldr	r0, [pc, #252]	; (10e18 <std::locale::_Impl::_Impl(unsigned int)+0x3a4>)
   10d1a:	f7f7 fdd1 	bl	88c0 <std::codecvt<wchar_t, char, _mbstate_t>::codecvt(unsigned int)>
   10d1e:	4638      	mov	r0, r7
   10d20:	493e      	ldr	r1, [pc, #248]	; (10e1c <std::locale::_Impl::_Impl(unsigned int)+0x3a8>)
   10d22:	4a3d      	ldr	r2, [pc, #244]	; (10e18 <std::locale::_Impl::_Impl(unsigned int)+0x3a4>)
   10d24:	f7ff fa46 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10d28:	4b3d      	ldr	r3, [pc, #244]	; (10e20 <std::locale::_Impl::_Impl(unsigned int)+0x3ac>)
   10d2a:	4a3e      	ldr	r2, [pc, #248]	; (10e24 <std::locale::_Impl::_Impl(unsigned int)+0x3b0>)
   10d2c:	f8c3 8004 	str.w	r8, [r3, #4]
   10d30:	601a      	str	r2, [r3, #0]
   10d32:	609c      	str	r4, [r3, #8]
   10d34:	60dc      	str	r4, [r3, #12]
   10d36:	741c      	strb	r4, [r3, #16]
   10d38:	615c      	str	r4, [r3, #20]
   10d3a:	619c      	str	r4, [r3, #24]
   10d3c:	61dc      	str	r4, [r3, #28]
   10d3e:	621c      	str	r4, [r3, #32]
   10d40:	625c      	str	r4, [r3, #36]	; 0x24
   10d42:	629c      	str	r4, [r3, #40]	; 0x28
   10d44:	f883 4124 	strb.w	r4, [r3, #292]	; 0x124
   10d48:	4619      	mov	r1, r3
   10d4a:	4642      	mov	r2, r8
   10d4c:	4836      	ldr	r0, [pc, #216]	; (10e28 <std::locale::_Impl::_Impl(unsigned int)+0x3b4>)
   10d4e:	f7f2 fb13 	bl	3378 <std::numpunct<wchar_t>::numpunct(std::__numpunct_cache<wchar_t>*, unsigned int)>
   10d52:	4638      	mov	r0, r7
   10d54:	4935      	ldr	r1, [pc, #212]	; (10e2c <std::locale::_Impl::_Impl(unsigned int)+0x3b8>)
   10d56:	4a34      	ldr	r2, [pc, #208]	; (10e28 <std::locale::_Impl::_Impl(unsigned int)+0x3b4>)
   10d58:	f7ff fa2c 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10d5c:	e06c      	b.n	10e38 <std::locale::_Impl::_Impl(unsigned int)+0x3c4>
   10d5e:	bf00      	nop
   10d60:	10001910 	.word	0x10001910
   10d64:	100019f0 	.word	0x100019f0
   10d68:	10000da4 	.word	0x10000da4
   10d6c:	10000ccc 	.word	0x10000ccc
   10d70:	10000ef8 	.word	0x10000ef8
   10d74:	10000c88 	.word	0x10000c88
   10d78:	10000d28 	.word	0x10000d28
   10d7c:	10000694 	.word	0x10000694
   10d80:	0001b930 	.word	0x0001b930
   10d84:	10000d04 	.word	0x10000d04
   10d88:	100006e8 	.word	0x100006e8
   10d8c:	10001a64 	.word	0x10001a64
   10d90:	0001b750 	.word	0x0001b750
   10d94:	100006e4 	.word	0x100006e4
   10d98:	10000d20 	.word	0x10000d20
   10d9c:	0001b790 	.word	0x0001b790
   10da0:	100006e0 	.word	0x100006e0
   10da4:	10000cb8 	.word	0x10000cb8
   10da8:	100006cc 	.word	0x100006cc
   10dac:	100017f4 	.word	0x100017f4
   10db0:	0001b910 	.word	0x0001b910
   10db4:	10001224 	.word	0x10001224
   10db8:	100006f8 	.word	0x100006f8
   10dbc:	0001b920 	.word	0x0001b920
   10dc0:	1000120c 	.word	0x1000120c
   10dc4:	100006f4 	.word	0x100006f4
   10dc8:	1000112c 	.word	0x1000112c
   10dcc:	0001b8a0 	.word	0x0001b8a0
   10dd0:	100006f0 	.word	0x100006f0
   10dd4:	10000d10 	.word	0x10000d10
   10dd8:	0001b8b8 	.word	0x0001b8b8
   10ddc:	100006ec 	.word	0x100006ec
   10de0:	1000123c 	.word	0x1000123c
   10de4:	0001b7c0 	.word	0x0001b7c0
   10de8:	10000ca4 	.word	0x10000ca4
   10dec:	100006dc 	.word	0x100006dc
   10df0:	100018b0 	.word	0x100018b0
   10df4:	0001b8e8 	.word	0x0001b8e8
   10df8:	100006d4 	.word	0x100006d4
   10dfc:	10001204 	.word	0x10001204
   10e00:	0001b8d0 	.word	0x0001b8d0
   10e04:	100006d8 	.word	0x100006d8
   10e08:	10000cf4 	.word	0x10000cf4
   10e0c:	100006d0 	.word	0x100006d0
   10e10:	10001304 	.word	0x10001304
   10e14:	10000c84 	.word	0x10000c84
   10e18:	10000ce8 	.word	0x10000ce8
   10e1c:	10000698 	.word	0x10000698
   10e20:	10000dd0 	.word	0x10000dd0
   10e24:	0001adb0 	.word	0x0001adb0
   10e28:	10000cdc 	.word	0x10000cdc
   10e2c:	10000680 	.word	0x10000680
   10e30:	10001980 	.word	0x10001980
   10e34:	100018b8 	.word	0x100018b8
   10e38:	4a97      	ldr	r2, [pc, #604]	; (11098 <std::locale::_Impl::_Impl(unsigned int)+0x624>)
   10e3a:	4998      	ldr	r1, [pc, #608]	; (1109c <std::locale::_Impl::_Impl(unsigned int)+0x628>)
   10e3c:	f8c2 8004 	str.w	r8, [r2, #4]
   10e40:	6011      	str	r1, [r2, #0]
   10e42:	4638      	mov	r0, r7
   10e44:	4996      	ldr	r1, [pc, #600]	; (110a0 <std::locale::_Impl::_Impl(unsigned int)+0x62c>)
   10e46:	f7ff f9b5 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10e4a:	4a96      	ldr	r2, [pc, #600]	; (110a4 <std::locale::_Impl::_Impl(unsigned int)+0x630>)
   10e4c:	4996      	ldr	r1, [pc, #600]	; (110a8 <std::locale::_Impl::_Impl(unsigned int)+0x634>)
   10e4e:	f8c2 8004 	str.w	r8, [r2, #4]
   10e52:	6011      	str	r1, [r2, #0]
   10e54:	4638      	mov	r0, r7
   10e56:	4995      	ldr	r1, [pc, #596]	; (110ac <std::locale::_Impl::_Impl(unsigned int)+0x638>)
   10e58:	f7ff f9ac 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10e5c:	4641      	mov	r1, r8
   10e5e:	4894      	ldr	r0, [pc, #592]	; (110b0 <std::locale::_Impl::_Impl(unsigned int)+0x63c>)
   10e60:	f7f2 fb8c 	bl	357c <std::collate<wchar_t>::collate(unsigned int)>
   10e64:	4638      	mov	r0, r7
   10e66:	4993      	ldr	r1, [pc, #588]	; (110b4 <std::locale::_Impl::_Impl(unsigned int)+0x640>)
   10e68:	4a91      	ldr	r2, [pc, #580]	; (110b0 <std::locale::_Impl::_Impl(unsigned int)+0x63c>)
   10e6a:	f7ff f9a3 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10e6e:	f8df a2c0 	ldr.w	r10, [pc, #704]	; 11130 <std::locale::_Impl::_Impl(unsigned int)+0x6bc>
   10e72:	4a91      	ldr	r2, [pc, #580]	; (110b8 <std::locale::_Impl::_Impl(unsigned int)+0x644>)
   10e74:	4651      	mov	r1, r10
   10e76:	f8ca 2000 	str.w	r2, [r10]
   10e7a:	4890      	ldr	r0, [pc, #576]	; (110bc <std::locale::_Impl::_Impl(unsigned int)+0x648>)
   10e7c:	4642      	mov	r2, r8
   10e7e:	f8ca 4008 	str.w	r4, [r10, #8]
   10e82:	f8ca 400c 	str.w	r4, [r10, #12]
   10e86:	f88a 4010 	strb.w	r4, [r10, #16]
   10e8a:	f8ca 4014 	str.w	r4, [r10, #20]
   10e8e:	f8ca 4018 	str.w	r4, [r10, #24]
   10e92:	f8ca 401c 	str.w	r4, [r10, #28]
   10e96:	f8ca 4020 	str.w	r4, [r10, #32]
   10e9a:	f8ca 4024 	str.w	r4, [r10, #36]	; 0x24
   10e9e:	f8ca 4028 	str.w	r4, [r10, #40]	; 0x28
   10ea2:	f8ca 402c 	str.w	r4, [r10, #44]	; 0x2c
   10ea6:	f8ca 4030 	str.w	r4, [r10, #48]	; 0x30
   10eaa:	f8ca 4034 	str.w	r4, [r10, #52]	; 0x34
   10eae:	f8ca 4038 	str.w	r4, [r10, #56]	; 0x38
   10eb2:	f8ca 403c 	str.w	r4, [r10, #60]	; 0x3c
   10eb6:	f88a 406c 	strb.w	r4, [r10, #108]	; 0x6c
   10eba:	f8ca 8004 	str.w	r8, [r10, #4]
   10ebe:	f7f2 f95b 	bl	3178 <std::moneypunct<wchar_t, false>::moneypunct(std::__moneypunct_cache<wchar_t, false>*, unsigned int)>
   10ec2:	4638      	mov	r0, r7
   10ec4:	497e      	ldr	r1, [pc, #504]	; (110c0 <std::locale::_Impl::_Impl(unsigned int)+0x64c>)
   10ec6:	4a7d      	ldr	r2, [pc, #500]	; (110bc <std::locale::_Impl::_Impl(unsigned int)+0x648>)
   10ec8:	f7ff f974 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10ecc:	f8df 9264 	ldr.w	r9, [pc, #612]	; 11134 <std::locale::_Impl::_Impl(unsigned int)+0x6c0>
   10ed0:	4a7c      	ldr	r2, [pc, #496]	; (110c4 <std::locale::_Impl::_Impl(unsigned int)+0x650>)
   10ed2:	4649      	mov	r1, r9
   10ed4:	f8c9 2000 	str.w	r2, [r9]
   10ed8:	487b      	ldr	r0, [pc, #492]	; (110c8 <std::locale::_Impl::_Impl(unsigned int)+0x654>)
   10eda:	4642      	mov	r2, r8
   10edc:	f8c9 4008 	str.w	r4, [r9, #8]
   10ee0:	f8c9 400c 	str.w	r4, [r9, #12]
   10ee4:	f889 4010 	strb.w	r4, [r9, #16]
   10ee8:	f8c9 4014 	str.w	r4, [r9, #20]
   10eec:	f8c9 4018 	str.w	r4, [r9, #24]
   10ef0:	f8c9 401c 	str.w	r4, [r9, #28]
   10ef4:	f8c9 4020 	str.w	r4, [r9, #32]
   10ef8:	f8c9 4024 	str.w	r4, [r9, #36]	; 0x24
   10efc:	f8c9 4028 	str.w	r4, [r9, #40]	; 0x28
   10f00:	f8c9 402c 	str.w	r4, [r9, #44]	; 0x2c
   10f04:	f8c9 4030 	str.w	r4, [r9, #48]	; 0x30
   10f08:	f8c9 4034 	str.w	r4, [r9, #52]	; 0x34
   10f0c:	f8c9 4038 	str.w	r4, [r9, #56]	; 0x38
   10f10:	f8c9 403c 	str.w	r4, [r9, #60]	; 0x3c
   10f14:	f889 406c 	strb.w	r4, [r9, #108]	; 0x6c
   10f18:	f8c9 8004 	str.w	r8, [r9, #4]
   10f1c:	f7f2 f992 	bl	3244 <std::moneypunct<wchar_t, true>::moneypunct(std::__moneypunct_cache<wchar_t, true>*, unsigned int)>
   10f20:	4638      	mov	r0, r7
   10f22:	496a      	ldr	r1, [pc, #424]	; (110cc <std::locale::_Impl::_Impl(unsigned int)+0x658>)
   10f24:	4a68      	ldr	r2, [pc, #416]	; (110c8 <std::locale::_Impl::_Impl(unsigned int)+0x654>)
   10f26:	f7ff f945 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10f2a:	4a69      	ldr	r2, [pc, #420]	; (110d0 <std::locale::_Impl::_Impl(unsigned int)+0x65c>)
   10f2c:	4969      	ldr	r1, [pc, #420]	; (110d4 <std::locale::_Impl::_Impl(unsigned int)+0x660>)
   10f2e:	f8c2 8004 	str.w	r8, [r2, #4]
   10f32:	6011      	str	r1, [r2, #0]
   10f34:	4638      	mov	r0, r7
   10f36:	4968      	ldr	r1, [pc, #416]	; (110d8 <std::locale::_Impl::_Impl(unsigned int)+0x664>)
   10f38:	f7ff f93c 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10f3c:	4a67      	ldr	r2, [pc, #412]	; (110dc <std::locale::_Impl::_Impl(unsigned int)+0x668>)
   10f3e:	4968      	ldr	r1, [pc, #416]	; (110e0 <std::locale::_Impl::_Impl(unsigned int)+0x66c>)
   10f40:	f8c2 8004 	str.w	r8, [r2, #4]
   10f44:	6011      	str	r1, [r2, #0]
   10f46:	4638      	mov	r0, r7
   10f48:	4966      	ldr	r1, [pc, #408]	; (110e4 <std::locale::_Impl::_Impl(unsigned int)+0x670>)
   10f4a:	4d67      	ldr	r5, [pc, #412]	; (110e8 <std::locale::_Impl::_Impl(unsigned int)+0x674>)
   10f4c:	f7ff f932 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10f50:	4a66      	ldr	r2, [pc, #408]	; (110ec <std::locale::_Impl::_Impl(unsigned int)+0x678>)
   10f52:	4629      	mov	r1, r5
   10f54:	602a      	str	r2, [r5, #0]
   10f56:	4866      	ldr	r0, [pc, #408]	; (110f0 <std::locale::_Impl::_Impl(unsigned int)+0x67c>)
   10f58:	4642      	mov	r2, r8
   10f5a:	60ac      	str	r4, [r5, #8]
   10f5c:	60ec      	str	r4, [r5, #12]
   10f5e:	612c      	str	r4, [r5, #16]
   10f60:	616c      	str	r4, [r5, #20]
   10f62:	61ac      	str	r4, [r5, #24]
   10f64:	61ec      	str	r4, [r5, #28]
   10f66:	622c      	str	r4, [r5, #32]
   10f68:	626c      	str	r4, [r5, #36]	; 0x24
   10f6a:	62ac      	str	r4, [r5, #40]	; 0x28
   10f6c:	62ec      	str	r4, [r5, #44]	; 0x2c
   10f6e:	632c      	str	r4, [r5, #48]	; 0x30
   10f70:	636c      	str	r4, [r5, #52]	; 0x34
   10f72:	63ac      	str	r4, [r5, #56]	; 0x38
   10f74:	63ec      	str	r4, [r5, #60]	; 0x3c
   10f76:	642c      	str	r4, [r5, #64]	; 0x40
   10f78:	646c      	str	r4, [r5, #68]	; 0x44
   10f7a:	64ac      	str	r4, [r5, #72]	; 0x48
   10f7c:	64ec      	str	r4, [r5, #76]	; 0x4c
   10f7e:	652c      	str	r4, [r5, #80]	; 0x50
   10f80:	656c      	str	r4, [r5, #84]	; 0x54
   10f82:	65ac      	str	r4, [r5, #88]	; 0x58
   10f84:	65ec      	str	r4, [r5, #92]	; 0x5c
   10f86:	662c      	str	r4, [r5, #96]	; 0x60
   10f88:	666c      	str	r4, [r5, #100]	; 0x64
   10f8a:	66ac      	str	r4, [r5, #104]	; 0x68
   10f8c:	66ec      	str	r4, [r5, #108]	; 0x6c
   10f8e:	672c      	str	r4, [r5, #112]	; 0x70
   10f90:	676c      	str	r4, [r5, #116]	; 0x74
   10f92:	67ac      	str	r4, [r5, #120]	; 0x78
   10f94:	67ec      	str	r4, [r5, #124]	; 0x7c
   10f96:	f8c5 4080 	str.w	r4, [r5, #128]	; 0x80
   10f9a:	f8c5 8004 	str.w	r8, [r5, #4]
   10f9e:	f8c5 4084 	str.w	r4, [r5, #132]	; 0x84
   10fa2:	f8c5 4088 	str.w	r4, [r5, #136]	; 0x88
   10fa6:	f8c5 408c 	str.w	r4, [r5, #140]	; 0x8c
   10faa:	f8c5 4090 	str.w	r4, [r5, #144]	; 0x90
   10fae:	f8c5 4094 	str.w	r4, [r5, #148]	; 0x94
   10fb2:	f8c5 4098 	str.w	r4, [r5, #152]	; 0x98
   10fb6:	f8c5 409c 	str.w	r4, [r5, #156]	; 0x9c
   10fba:	f8c5 40a0 	str.w	r4, [r5, #160]	; 0xa0
   10fbe:	f8c5 40a4 	str.w	r4, [r5, #164]	; 0xa4
   10fc2:	f8c5 40a8 	str.w	r4, [r5, #168]	; 0xa8
   10fc6:	f8c5 40ac 	str.w	r4, [r5, #172]	; 0xac
   10fca:	f8c5 40b0 	str.w	r4, [r5, #176]	; 0xb0
   10fce:	f8c5 40b4 	str.w	r4, [r5, #180]	; 0xb4
   10fd2:	f8c5 40b8 	str.w	r4, [r5, #184]	; 0xb8
   10fd6:	f8c5 40bc 	str.w	r4, [r5, #188]	; 0xbc
   10fda:	f8c5 40c0 	str.w	r4, [r5, #192]	; 0xc0
   10fde:	f885 40c4 	strb.w	r4, [r5, #196]	; 0xc4
   10fe2:	f7f2 fa0b 	bl	33fc <std::__timepunct<wchar_t>::__timepunct(std::__timepunct_cache<wchar_t>*, unsigned int)>
   10fe6:	4638      	mov	r0, r7
   10fe8:	4942      	ldr	r1, [pc, #264]	; (110f4 <std::locale::_Impl::_Impl(unsigned int)+0x680>)
   10fea:	4a41      	ldr	r2, [pc, #260]	; (110f0 <std::locale::_Impl::_Impl(unsigned int)+0x67c>)
   10fec:	f7ff f8e2 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   10ff0:	4a41      	ldr	r2, [pc, #260]	; (110f8 <std::locale::_Impl::_Impl(unsigned int)+0x684>)
   10ff2:	4942      	ldr	r1, [pc, #264]	; (110fc <std::locale::_Impl::_Impl(unsigned int)+0x688>)
   10ff4:	f8c2 8004 	str.w	r8, [r2, #4]
   10ff8:	6011      	str	r1, [r2, #0]
   10ffa:	4638      	mov	r0, r7
   10ffc:	4940      	ldr	r1, [pc, #256]	; (11100 <std::locale::_Impl::_Impl(unsigned int)+0x68c>)
   10ffe:	f7ff f8d9 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   11002:	4a40      	ldr	r2, [pc, #256]	; (11104 <std::locale::_Impl::_Impl(unsigned int)+0x690>)
   11004:	4940      	ldr	r1, [pc, #256]	; (11108 <std::locale::_Impl::_Impl(unsigned int)+0x694>)
   11006:	f8c2 8004 	str.w	r8, [r2, #4]
   1100a:	6011      	str	r1, [r2, #0]
   1100c:	4638      	mov	r0, r7
   1100e:	493f      	ldr	r1, [pc, #252]	; (1110c <std::locale::_Impl::_Impl(unsigned int)+0x698>)
   11010:	f7ff f8d0 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   11014:	4641      	mov	r1, r8
   11016:	483e      	ldr	r0, [pc, #248]	; (11110 <std::locale::_Impl::_Impl(unsigned int)+0x69c>)
   11018:	f7f2 faa0 	bl	355c <std::messages<wchar_t>::messages(unsigned int)>
   1101c:	493d      	ldr	r1, [pc, #244]	; (11114 <std::locale::_Impl::_Impl(unsigned int)+0x6a0>)
   1101e:	4a3c      	ldr	r2, [pc, #240]	; (11110 <std::locale::_Impl::_Impl(unsigned int)+0x69c>)
   11020:	4638      	mov	r0, r7
   11022:	f7ff f8c7 	bl	101b4 <std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)>
   11026:	483c      	ldr	r0, [pc, #240]	; (11118 <std::locale::_Impl::_Impl(unsigned int)+0x6a4>)
   11028:	68fc      	ldr	r4, [r7, #12]
   1102a:	f7ff f8b7 	bl	1019c <std::locale::id::_M_id() const>
   1102e:	f8dd c004 	ldr.w	r12, [sp, #4]
   11032:	f844 c020 	str.w	r12, [r4, r0, lsl #2]
   11036:	4839      	ldr	r0, [pc, #228]	; (1111c <std::locale::_Impl::_Impl(unsigned int)+0x6a8>)
   11038:	68fc      	ldr	r4, [r7, #12]
   1103a:	f7ff f8af 	bl	1019c <std::locale::id::_M_id() const>
   1103e:	9b00      	ldr	r3, [sp, #0]
   11040:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
   11044:	4836      	ldr	r0, [pc, #216]	; (11120 <std::locale::_Impl::_Impl(unsigned int)+0x6ac>)
   11046:	68fc      	ldr	r4, [r7, #12]
   11048:	f7ff f8a8 	bl	1019c <std::locale::id::_M_id() const>
   1104c:	f844 b020 	str.w	r11, [r4, r0, lsl #2]
   11050:	4834      	ldr	r0, [pc, #208]	; (11124 <std::locale::_Impl::_Impl(unsigned int)+0x6b0>)
   11052:	68fc      	ldr	r4, [r7, #12]
   11054:	f7ff f8a2 	bl	1019c <std::locale::id::_M_id() const>
   11058:	f844 6020 	str.w	r6, [r4, r0, lsl #2]
   1105c:	4832      	ldr	r0, [pc, #200]	; (11128 <std::locale::_Impl::_Impl(unsigned int)+0x6b4>)
   1105e:	68fc      	ldr	r4, [r7, #12]
   11060:	f7ff f89c 	bl	1019c <std::locale::id::_M_id() const>
   11064:	4b31      	ldr	r3, [pc, #196]	; (1112c <std::locale::_Impl::_Impl(unsigned int)+0x6b8>)
   11066:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
   1106a:	4815      	ldr	r0, [pc, #84]	; (110c0 <std::locale::_Impl::_Impl(unsigned int)+0x64c>)
   1106c:	68fc      	ldr	r4, [r7, #12]
   1106e:	f7ff f895 	bl	1019c <std::locale::id::_M_id() const>
   11072:	f844 a020 	str.w	r10, [r4, r0, lsl #2]
   11076:	4815      	ldr	r0, [pc, #84]	; (110cc <std::locale::_Impl::_Impl(unsigned int)+0x658>)
   11078:	68fc      	ldr	r4, [r7, #12]
   1107a:	f7ff f88f 	bl	1019c <std::locale::id::_M_id() const>
   1107e:	f844 9020 	str.w	r9, [r4, r0, lsl #2]
   11082:	481c      	ldr	r0, [pc, #112]	; (110f4 <std::locale::_Impl::_Impl(unsigned int)+0x680>)
   11084:	68fc      	ldr	r4, [r7, #12]
   11086:	f7ff f889 	bl	1019c <std::locale::id::_M_id() const>
   1108a:	f844 5020 	str.w	r5, [r4, r0, lsl #2]
   1108e:	4638      	mov	r0, r7
   11090:	b003      	add	sp, #12
   11092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
   11096:	bf00      	nop
   11098:	10001134 	.word	0x10001134
   1109c:	0001abd0 	.word	0x0001abd0
   110a0:	1000067c 	.word	0x1000067c
   110a4:	10000d18 	.word	0x10000d18
   110a8:	0001ac10 	.word	0x0001ac10
   110ac:	10000678 	.word	0x10000678
   110b0:	10001218 	.word	0x10001218
   110b4:	10000664 	.word	0x10000664
   110b8:	0001ad90 	.word	0x0001ad90
   110bc:	10000dc4 	.word	0x10000dc4
   110c0:	10000690 	.word	0x10000690
   110c4:	0001ada0 	.word	0x0001ada0
   110c8:	10001230 	.word	0x10001230
   110cc:	1000068c 	.word	0x1000068c
   110d0:	10000cc4 	.word	0x10000cc4
   110d4:	0001ad20 	.word	0x0001ad20
   110d8:	10000688 	.word	0x10000688
   110dc:	100018a8 	.word	0x100018a8
   110e0:	0001ad38 	.word	0x0001ad38
   110e4:	10000684 	.word	0x10000684
   110e8:	1000113c 	.word	0x1000113c
   110ec:	0001ac40 	.word	0x0001ac40
   110f0:	10001118 	.word	0x10001118
   110f4:	10000674 	.word	0x10000674
   110f8:	10000dbc 	.word	0x10000dbc
   110fc:	0001ad68 	.word	0x0001ad68
   11100:	1000066c 	.word	0x1000066c
   11104:	100019e8 	.word	0x100019e8
   11108:	0001ad50 	.word	0x0001ad50
   1110c:	10000670 	.word	0x10000670
   11110:	100017e4 	.word	0x100017e4
   11114:	10000668 	.word	0x10000668
   11118:	100006e8 	.word	0x100006e8
   1111c:	100006f8 	.word	0x100006f8
   11120:	100006f4 	.word	0x100006f4
   11124:	100006dc 	.word	0x100006dc
   11128:	10000680 	.word	0x10000680
   1112c:	10000dd0 	.word	0x10000dd0
   11130:	10000d34 	.word	0x10000d34
   11134:	10001838 	.word	0x10001838

00011138 <std::locale::_S_initialize_once()>:
   11138:	b510      	push	{r4, lr}
   1113a:	4c05      	ldr	r4, [pc, #20]	; (11150 <std::locale::_S_initialize_once()+0x18>)
   1113c:	2102      	movs	r1, #2
   1113e:	4620      	mov	r0, r4
   11140:	f7ff fc98 	bl	10a74 <std::locale::_Impl::_Impl(unsigned int)>
   11144:	4b03      	ldr	r3, [pc, #12]	; (11154 <std::locale::_S_initialize_once()+0x1c>)
   11146:	601c      	str	r4, [r3, #0]
   11148:	4b03      	ldr	r3, [pc, #12]	; (11158 <std::locale::_S_initialize_once()+0x20>)
   1114a:	601c      	str	r4, [r3, #0]
   1114c:	bd10      	pop	{r4, pc}
   1114e:	bf00      	nop
   11150:	100018fc 	.word	0x100018fc
   11154:	10000c90 	.word	0x10000c90
   11158:	10000c9c 	.word	0x10000c9c

0001115c <std::locale::_S_initialize()>:
   1115c:	4b02      	ldr	r3, [pc, #8]	; (11168 <std::locale::_S_initialize()+0xc>)
   1115e:	681b      	ldr	r3, [r3, #0]
   11160:	b90b      	cbnz	r3, 11166 <std::locale::_S_initialize()+0xa>
   11162:	f7ff bfe9 	b.w	11138 <std::locale::_S_initialize_once()>
   11166:	4770      	bx	lr
   11168:	10000c90 	.word	0x10000c90

0001116c <std::locale::locale()>:
   1116c:	b538      	push	{r3, r4, r5, lr}
   1116e:	4604      	mov	r4, r0
   11170:	2300      	movs	r3, #0
   11172:	4d0b      	ldr	r5, [pc, #44]	; (111a0 <std::locale::locale()+0x34>)
   11174:	6003      	str	r3, [r0, #0]
   11176:	f7ff fff1 	bl	1115c <std::locale::_S_initialize()>
   1117a:	682b      	ldr	r3, [r5, #0]
   1117c:	4a09      	ldr	r2, [pc, #36]	; (111a4 <std::locale::locale()+0x38>)
   1117e:	6023      	str	r3, [r4, #0]
   11180:	6812      	ldr	r2, [r2, #0]
   11182:	4293      	cmp	r3, r2
   11184:	d103      	bne.n	1118e <std::locale::locale()+0x22>
   11186:	681a      	ldr	r2, [r3, #0]
   11188:	3201      	adds	r2, #1
   1118a:	601a      	str	r2, [r3, #0]
   1118c:	e006      	b.n	1119c <std::locale::locale()+0x30>
   1118e:	f7ff fc5f 	bl	10a50 <(anonymous namespace)::get_locale_mutex()>
   11192:	682b      	ldr	r3, [r5, #0]
   11194:	681a      	ldr	r2, [r3, #0]
   11196:	3201      	adds	r2, #1
   11198:	601a      	str	r2, [r3, #0]
   1119a:	6023      	str	r3, [r4, #0]
   1119c:	4620      	mov	r0, r4
   1119e:	bd38      	pop	{r3, r4, r5, pc}
   111a0:	10000c9c 	.word	0x10000c9c
   111a4:	10000c90 	.word	0x10000c90

000111a8 <std::type_info::~type_info()>:
   111a8:	4770      	bx	lr

000111aa <std::type_info::__is_pointer_p() const>:
   111aa:	2000      	movs	r0, #0
   111ac:	4770      	bx	lr

000111ae <std::type_info::__is_function_p() const>:
   111ae:	2000      	movs	r0, #0
   111b0:	4770      	bx	lr

000111b2 <std::type_info::operator==(std::type_info const&) const>:
   111b2:	4281      	cmp	r1, r0
   111b4:	b508      	push	{r3, lr}
   111b6:	d00e      	beq.n	111d6 <std::type_info::operator==(std::type_info const&) const+0x24>
   111b8:	6840      	ldr	r0, [r0, #4]
   111ba:	7803      	ldrb	r3, [r0, #0]
   111bc:	2b2a      	cmp	r3, #42	; 0x2a
   111be:	d00c      	beq.n	111da <std::type_info::operator==(std::type_info const&) const+0x28>
   111c0:	6849      	ldr	r1, [r1, #4]
   111c2:	780b      	ldrb	r3, [r1, #0]
   111c4:	2b2a      	cmp	r3, #42	; 0x2a
   111c6:	bf08      	it	eq
   111c8:	3101      	addeq	r1, #1
   111ca:	f003 fb3a 	bl	14842 <strcmp>
   111ce:	fab0 f080 	clz	r0, r0
   111d2:	0940      	lsrs	r0, r0, #5
   111d4:	bd08      	pop	{r3, pc}
   111d6:	2001      	movs	r0, #1
   111d8:	bd08      	pop	{r3, pc}
   111da:	2000      	movs	r0, #0
   111dc:	bd08      	pop	{r3, pc}

000111de <__cxa_guard_acquire>:
   111de:	6803      	ldr	r3, [r0, #0]
   111e0:	07db      	lsls	r3, r3, #31
   111e2:	d406      	bmi.n	111f2 <__cxa_guard_acquire+0x14>
   111e4:	7843      	ldrb	r3, [r0, #1]
   111e6:	b103      	cbz	r3, 111ea <__cxa_guard_acquire+0xc>
   111e8:	deff      	udf	#255	; 0xff
   111ea:	2301      	movs	r3, #1
   111ec:	7043      	strb	r3, [r0, #1]
   111ee:	4618      	mov	r0, r3
   111f0:	4770      	bx	lr
   111f2:	2000      	movs	r0, #0
   111f4:	4770      	bx	lr

000111f6 <__cxa_guard_release>:
   111f6:	2301      	movs	r3, #1
   111f8:	6003      	str	r3, [r0, #0]
   111fa:	4770      	bx	lr

000111fc <std::ctype<wchar_t>::_M_convert_to_wmask(char) const>:
   111fc:	2908      	cmp	r1, #8
   111fe:	d01d      	beq.n	1123c <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x40>
   11200:	d80e      	bhi.n	11220 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x24>
   11202:	2903      	cmp	r1, #3
   11204:	d020      	beq.n	11248 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x4c>
   11206:	d805      	bhi.n	11214 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x18>
   11208:	2901      	cmp	r1, #1
   1120a:	d01b      	beq.n	11244 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x48>
   1120c:	2902      	cmp	r1, #2
   1120e:	d121      	bne.n	11254 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x58>
   11210:	4816      	ldr	r0, [pc, #88]	; (1126c <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x70>)
   11212:	e028      	b.n	11266 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x6a>
   11214:	2904      	cmp	r1, #4
   11216:	d019      	beq.n	1124c <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x50>
   11218:	2907      	cmp	r1, #7
   1121a:	d11b      	bne.n	11254 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x58>
   1121c:	4814      	ldr	r0, [pc, #80]	; (11270 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x74>)
   1121e:	e022      	b.n	11266 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x6a>
   11220:	2920      	cmp	r1, #32
   11222:	d00d      	beq.n	11240 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x44>
   11224:	d805      	bhi.n	11232 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x36>
   11226:	2910      	cmp	r1, #16
   11228:	d012      	beq.n	11250 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x54>
   1122a:	2917      	cmp	r1, #23
   1122c:	d112      	bne.n	11254 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x58>
   1122e:	4811      	ldr	r0, [pc, #68]	; (11274 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x78>)
   11230:	e019      	b.n	11266 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x6a>
   11232:	2944      	cmp	r1, #68	; 0x44
   11234:	d011      	beq.n	1125a <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x5e>
   11236:	2997      	cmp	r1, #151	; 0x97
   11238:	d014      	beq.n	11264 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x68>
   1123a:	e00b      	b.n	11254 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x58>
   1123c:	480e      	ldr	r0, [pc, #56]	; (11278 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x7c>)
   1123e:	e012      	b.n	11266 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x6a>
   11240:	480e      	ldr	r0, [pc, #56]	; (1127c <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x80>)
   11242:	e010      	b.n	11266 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x6a>
   11244:	480e      	ldr	r0, [pc, #56]	; (11280 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x84>)
   11246:	e00e      	b.n	11266 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x6a>
   11248:	480e      	ldr	r0, [pc, #56]	; (11284 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x88>)
   1124a:	e00c      	b.n	11266 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x6a>
   1124c:	480e      	ldr	r0, [pc, #56]	; (11288 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x8c>)
   1124e:	e00a      	b.n	11266 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x6a>
   11250:	480e      	ldr	r0, [pc, #56]	; (1128c <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x90>)
   11252:	e008      	b.n	11266 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x6a>
   11254:	f011 0f44 	tst.w	r1, #68	; 0x44
   11258:	d001      	beq.n	1125e <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x62>
   1125a:	480d      	ldr	r0, [pc, #52]	; (11290 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x94>)
   1125c:	e003      	b.n	11266 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x6a>
   1125e:	f011 0097 	ands.w	r0, r1, #151	; 0x97
   11262:	d002      	beq.n	1126a <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x6e>
   11264:	480b      	ldr	r0, [pc, #44]	; (11294 <std::ctype<wchar_t>::_M_convert_to_wmask(char) const+0x98>)
   11266:	f005 bf85 	b.w	17174 <wctype>
   1126a:	4770      	bx	lr
   1126c:	0001c5bd 	.word	0x0001c5bd
   11270:	0001c5d6 	.word	0x0001c5d6
   11274:	0001c5dc 	.word	0x0001c5dc
   11278:	0001c5a5 	.word	0x0001c5a5
   1127c:	0001c5b1 	.word	0x0001c5b1
   11280:	0001c5b7 	.word	0x0001c5b7
   11284:	0001c5c3 	.word	0x0001c5c3
   11288:	0001c5d0 	.word	0x0001c5d0
   1128c:	0001c5c9 	.word	0x0001c5c9
   11290:	0001c5cf 	.word	0x0001c5cf
   11294:	0001c5ab 	.word	0x0001c5ab

00011298 <std::ctype<wchar_t>::do_toupper(wchar_t) const>:
   11298:	4608      	mov	r0, r1
   1129a:	f004 bf59 	b.w	16150 <towupper>

0001129e <std::ctype<wchar_t>::do_toupper(wchar_t*, wchar_t const*) const>:
   1129e:	b538      	push	{r3, r4, r5, lr}
   112a0:	460c      	mov	r4, r1
   112a2:	4615      	mov	r5, r2
   112a4:	42ac      	cmp	r4, r5
   112a6:	d205      	bcs.n	112b4 <std::ctype<wchar_t>::do_toupper(wchar_t*, wchar_t const*) const+0x16>
   112a8:	6820      	ldr	r0, [r4, #0]
   112aa:	f004 ff51 	bl	16150 <towupper>
   112ae:	f844 0b04 	str.w	r0, [r4], #4
   112b2:	e7f7      	b.n	112a4 <std::ctype<wchar_t>::do_toupper(wchar_t*, wchar_t const*) const+0x6>
   112b4:	4628      	mov	r0, r5
   112b6:	bd38      	pop	{r3, r4, r5, pc}

000112b8 <std::ctype<wchar_t>::do_tolower(wchar_t) const>:
   112b8:	4608      	mov	r0, r1
   112ba:	f004 bf3b 	b.w	16134 <towlower>

000112be <std::ctype<wchar_t>::do_tolower(wchar_t*, wchar_t const*) const>:
   112be:	b538      	push	{r3, r4, r5, lr}
   112c0:	460c      	mov	r4, r1
   112c2:	4615      	mov	r5, r2
   112c4:	42ac      	cmp	r4, r5
   112c6:	d205      	bcs.n	112d4 <std::ctype<wchar_t>::do_tolower(wchar_t*, wchar_t const*) const+0x16>
   112c8:	6820      	ldr	r0, [r4, #0]
   112ca:	f004 ff33 	bl	16134 <towlower>
   112ce:	f844 0b04 	str.w	r0, [r4], #4
   112d2:	e7f7      	b.n	112c4 <std::ctype<wchar_t>::do_tolower(wchar_t*, wchar_t const*) const+0x6>
   112d4:	4628      	mov	r0, r5
   112d6:	bd38      	pop	{r3, r4, r5, pc}

000112d8 <std::ctype<wchar_t>::do_is(char, wchar_t) const>:
   112d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   112dc:	460f      	mov	r7, r1
   112de:	4690      	mov	r8, r2
   112e0:	f200 468f 	addw	r6, r0, #1167	; 0x48f
   112e4:	f500 6594 	add.w	r5, r0, #1184	; 0x4a0
   112e8:	f500 6498 	add.w	r4, r0, #1216	; 0x4c0
   112ec:	f816 3f01 	ldrb.w	r3, [r6, #1]!
   112f0:	421f      	tst	r7, r3
   112f2:	d007      	beq.n	11304 <std::ctype<wchar_t>::do_is(char, wchar_t) const+0x2c>
   112f4:	4640      	mov	r0, r8
   112f6:	6829      	ldr	r1, [r5, #0]
   112f8:	f002 f84a 	bl	13390 <iswctype>
   112fc:	b110      	cbz	r0, 11304 <std::ctype<wchar_t>::do_is(char, wchar_t) const+0x2c>
   112fe:	2001      	movs	r0, #1
   11300:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   11304:	3504      	adds	r5, #4
   11306:	42a5      	cmp	r5, r4
   11308:	d1f0      	bne.n	112ec <std::ctype<wchar_t>::do_is(char, wchar_t) const+0x14>
   1130a:	2000      	movs	r0, #0
   1130c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00011310 <std::ctype<wchar_t>::do_is(wchar_t const*, wchar_t const*, char*) const>:
   11310:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
   11314:	4606      	mov	r6, r0
   11316:	460c      	mov	r4, r1
   11318:	4691      	mov	r9, r2
   1131a:	469a      	mov	r10, r3
   1131c:	454c      	cmp	r4, r9
   1131e:	d216      	bcs.n	1134e <std::ctype<wchar_t>::do_is(wchar_t const*, wchar_t const*, char*) const+0x3e>
   11320:	f206 489c 	addw	r8, r6, #1180	; 0x49c
   11324:	f506 6792 	add.w	r7, r6, #1168	; 0x490
   11328:	f206 4bbc 	addw	r11, r6, #1212	; 0x4bc
   1132c:	2500      	movs	r5, #0
   1132e:	6820      	ldr	r0, [r4, #0]
   11330:	f858 1f04 	ldr.w	r1, [r8, #4]!
   11334:	f002 f82c 	bl	13390 <iswctype>
   11338:	b108      	cbz	r0, 1133e <std::ctype<wchar_t>::do_is(wchar_t const*, wchar_t const*, char*) const+0x2e>
   1133a:	783b      	ldrb	r3, [r7, #0]
   1133c:	431d      	orrs	r5, r3
   1133e:	45d8      	cmp	r8, r11
   11340:	f107 0701 	add.w	r7, r7, #1
   11344:	d1f3      	bne.n	1132e <std::ctype<wchar_t>::do_is(wchar_t const*, wchar_t const*, char*) const+0x1e>
   11346:	f80a 5b01 	strb.w	r5, [r10], #1
   1134a:	3404      	adds	r4, #4
   1134c:	e7e6      	b.n	1131c <std::ctype<wchar_t>::do_is(wchar_t const*, wchar_t const*, char*) const+0xc>
   1134e:	4648      	mov	r0, r9
   11350:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}

00011354 <std::ctype<wchar_t>::do_scan_is(char, wchar_t const*, wchar_t const*) const>:
   11354:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   11358:	4606      	mov	r6, r0
   1135a:	4688      	mov	r8, r1
   1135c:	4699      	mov	r9, r3
   1135e:	4614      	mov	r4, r2
   11360:	454c      	cmp	r4, r9
   11362:	4625      	mov	r5, r4
   11364:	d208      	bcs.n	11378 <std::ctype<wchar_t>::do_scan_is(char, wchar_t const*, wchar_t const*) const+0x24>
   11366:	6832      	ldr	r2, [r6, #0]
   11368:	4630      	mov	r0, r6
   1136a:	6897      	ldr	r7, [r2, #8]
   1136c:	4641      	mov	r1, r8
   1136e:	682a      	ldr	r2, [r5, #0]
   11370:	3404      	adds	r4, #4
   11372:	47b8      	blx	r7
   11374:	2800      	cmp	r0, #0
   11376:	d0f3      	beq.n	11360 <std::ctype<wchar_t>::do_scan_is(char, wchar_t const*, wchar_t const*) const+0xc>
   11378:	4628      	mov	r0, r5
   1137a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0001137e <std::ctype<wchar_t>::do_scan_not(char, wchar_t const*, wchar_t const*) const>:
   1137e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   11382:	4606      	mov	r6, r0
   11384:	4688      	mov	r8, r1
   11386:	4699      	mov	r9, r3
   11388:	4614      	mov	r4, r2
   1138a:	454c      	cmp	r4, r9
   1138c:	4625      	mov	r5, r4
   1138e:	d208      	bcs.n	113a2 <std::ctype<wchar_t>::do_scan_not(char, wchar_t const*, wchar_t const*) const+0x24>
   11390:	6832      	ldr	r2, [r6, #0]
   11392:	4630      	mov	r0, r6
   11394:	6897      	ldr	r7, [r2, #8]
   11396:	4641      	mov	r1, r8
   11398:	682a      	ldr	r2, [r5, #0]
   1139a:	3404      	adds	r4, #4
   1139c:	47b8      	blx	r7
   1139e:	2800      	cmp	r0, #0
   113a0:	d1f3      	bne.n	1138a <std::ctype<wchar_t>::do_scan_not(char, wchar_t const*, wchar_t const*) const+0xc>
   113a2:	4628      	mov	r0, r5
   113a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000113a8 <std::ctype<wchar_t>::do_widen(char) const>:
   113a8:	3124      	adds	r1, #36	; 0x24
   113aa:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
   113ae:	4770      	bx	lr

000113b0 <std::ctype<wchar_t>::do_widen(char const*, char const*, wchar_t*) const>:
   113b0:	b510      	push	{r4, lr}
   113b2:	4291      	cmp	r1, r2
   113b4:	460c      	mov	r4, r1
   113b6:	d207      	bcs.n	113c8 <std::ctype<wchar_t>::do_widen(char const*, char const*, wchar_t*) const+0x18>
   113b8:	7824      	ldrb	r4, [r4, #0]
   113ba:	3101      	adds	r1, #1
   113bc:	3424      	adds	r4, #36	; 0x24
   113be:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
   113c2:	f843 4b04 	str.w	r4, [r3], #4
   113c6:	e7f4      	b.n	113b2 <std::ctype<wchar_t>::do_widen(char const*, char const*, wchar_t*) const+0x2>
   113c8:	4610      	mov	r0, r2
   113ca:	bd10      	pop	{r4, pc}

000113cc <std::ctype<wchar_t>::do_narrow(wchar_t, char) const>:
   113cc:	297f      	cmp	r1, #127	; 0x7f
   113ce:	b510      	push	{r4, lr}
   113d0:	4614      	mov	r4, r2
   113d2:	d804      	bhi.n	113de <std::ctype<wchar_t>::do_narrow(wchar_t, char) const+0x12>
   113d4:	7b03      	ldrb	r3, [r0, #12]
   113d6:	b113      	cbz	r3, 113de <std::ctype<wchar_t>::do_narrow(wchar_t, char) const+0x12>
   113d8:	4401      	add	r1, r0
   113da:	7b48      	ldrb	r0, [r1, #13]
   113dc:	bd10      	pop	{r4, pc}
   113de:	4608      	mov	r0, r1
   113e0:	f005 fde0 	bl	16fa4 <wctob>
   113e4:	1c43      	adds	r3, r0, #1
   113e6:	bf14      	ite	ne
   113e8:	b2c0      	uxtbne	r0, r0
   113ea:	4620      	moveq	r0, r4
   113ec:	bd10      	pop	{r4, pc}

000113ee <std::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const>:
   113ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   113f2:	461e      	mov	r6, r3
   113f4:	7b03      	ldrb	r3, [r0, #12]
   113f6:	4680      	mov	r8, r0
   113f8:	4617      	mov	r7, r2
   113fa:	9d06      	ldr	r5, [sp, #24]
   113fc:	460c      	mov	r4, r1
   113fe:	b193      	cbz	r3, 11426 <std::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const+0x38>
   11400:	42bc      	cmp	r4, r7
   11402:	d21e      	bcs.n	11442 <std::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const+0x54>
   11404:	f854 0b04 	ldr.w	r0, [r4], #4
   11408:	287f      	cmp	r0, #127	; 0x7f
   1140a:	d803      	bhi.n	11414 <std::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const+0x26>
   1140c:	4440      	add	r0, r8
   1140e:	7b43      	ldrb	r3, [r0, #13]
   11410:	702b      	strb	r3, [r5, #0]
   11412:	e006      	b.n	11422 <std::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const+0x34>
   11414:	f005 fdc6 	bl	16fa4 <wctob>
   11418:	1c42      	adds	r2, r0, #1
   1141a:	bf0c      	ite	eq
   1141c:	4630      	moveq	r0, r6
   1141e:	b2c0      	uxtbne	r0, r0
   11420:	7028      	strb	r0, [r5, #0]
   11422:	3501      	adds	r5, #1
   11424:	e7ec      	b.n	11400 <std::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const+0x12>
   11426:	42bc      	cmp	r4, r7
   11428:	4623      	mov	r3, r4
   1142a:	d20a      	bcs.n	11442 <std::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const+0x54>
   1142c:	6818      	ldr	r0, [r3, #0]
   1142e:	f005 fdb9 	bl	16fa4 <wctob>
   11432:	1c43      	adds	r3, r0, #1
   11434:	bf0c      	ite	eq
   11436:	4630      	moveq	r0, r6
   11438:	b2c0      	uxtbne	r0, r0
   1143a:	3404      	adds	r4, #4
   1143c:	f805 0b01 	strb.w	r0, [r5], #1
   11440:	e7f1      	b.n	11426 <std::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const+0x38>
   11442:	4638      	mov	r0, r7
   11444:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00011448 <std::ctype<wchar_t>::_M_initialize_ctype()>:
   11448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1144a:	4604      	mov	r4, r0
   1144c:	f100 060c 	add.w	r6, r0, #12
   11450:	2500      	movs	r5, #0
   11452:	4628      	mov	r0, r5
   11454:	f005 fda6 	bl	16fa4 <wctob>
   11458:	1c43      	adds	r3, r0, #1
   1145a:	d006      	beq.n	1146a <std::ctype<wchar_t>::_M_initialize_ctype()+0x22>
   1145c:	3501      	adds	r5, #1
   1145e:	2d80      	cmp	r5, #128	; 0x80
   11460:	f806 0f01 	strb.w	r0, [r6, #1]!
   11464:	d1f5      	bne.n	11452 <std::ctype<wchar_t>::_M_initialize_ctype()+0xa>
   11466:	2301      	movs	r3, #1
   11468:	e000      	b.n	1146c <std::ctype<wchar_t>::_M_initialize_ctype()+0x24>
   1146a:	2300      	movs	r3, #0
   1146c:	7323      	strb	r3, [r4, #12]
   1146e:	f104 068c 	add.w	r6, r4, #140	; 0x8c
   11472:	2500      	movs	r5, #0
   11474:	4628      	mov	r0, r5
   11476:	f001 fa83 	bl	12980 <btowc>
   1147a:	3501      	adds	r5, #1
   1147c:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
   11480:	f846 0f04 	str.w	r0, [r6, #4]!
   11484:	d1f6      	bne.n	11474 <std::ctype<wchar_t>::_M_initialize_ctype()+0x2c>
   11486:	f204 478f 	addw	r7, r4, #1167	; 0x48f
   1148a:	f204 469c 	addw	r6, r4, #1180	; 0x49c
   1148e:	2500      	movs	r5, #0
   11490:	2101      	movs	r1, #1
   11492:	40a9      	lsls	r1, r5
   11494:	b2c9      	uxtb	r1, r1
   11496:	f807 1f01 	strb.w	r1, [r7, #1]!
   1149a:	4620      	mov	r0, r4
   1149c:	f7ff feae 	bl	111fc <std::ctype<wchar_t>::_M_convert_to_wmask(char) const>
   114a0:	3501      	adds	r5, #1
   114a2:	2d08      	cmp	r5, #8
   114a4:	f846 0f04 	str.w	r0, [r6, #4]!
   114a8:	d1f2      	bne.n	11490 <std::ctype<wchar_t>::_M_initialize_ctype()+0x48>
   114aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000114ac <__aeabi_drsub>:
   114ac:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   114b0:	e002      	b.n	114b8 <__adddf3>
   114b2:	bf00      	nop

000114b4 <__aeabi_dsub>:
   114b4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000114b8 <__adddf3>:
   114b8:	b530      	push	{r4, r5, lr}
   114ba:	ea4f 0441 	mov.w	r4, r1, lsl #1
   114be:	ea4f 0543 	mov.w	r5, r3, lsl #1
   114c2:	ea94 0f05 	teq	r4, r5
   114c6:	bf08      	it	eq
   114c8:	ea90 0f02 	teqeq	r0, r2
   114cc:	bf1f      	itttt	ne
   114ce:	ea54 0c00 	orrsne.w	r12, r4, r0
   114d2:	ea55 0c02 	orrsne.w	r12, r5, r2
   114d6:	ea7f 5c64 	mvnsne.w	r12, r4, asr #21
   114da:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
   114de:	f000 80e2 	beq.w	116a6 <__adddf3+0x1ee>
   114e2:	ea4f 5454 	mov.w	r4, r4, lsr #21
   114e6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   114ea:	bfb8      	it	lt
   114ec:	426d      	neglt	r5, r5
   114ee:	dd0c      	ble.n	1150a <__adddf3+0x52>
   114f0:	442c      	add	r4, r5
   114f2:	ea80 0202 	eor.w	r2, r0, r2
   114f6:	ea81 0303 	eor.w	r3, r1, r3
   114fa:	ea82 0000 	eor.w	r0, r2, r0
   114fe:	ea83 0101 	eor.w	r1, r3, r1
   11502:	ea80 0202 	eor.w	r2, r0, r2
   11506:	ea81 0303 	eor.w	r3, r1, r3
   1150a:	2d36      	cmp	r5, #54	; 0x36
   1150c:	bf88      	it	hi
   1150e:	bd30      	pophi	{r4, r5, pc}
   11510:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   11514:	ea4f 3101 	mov.w	r1, r1, lsl #12
   11518:	f44f 1c80 	mov.w	r12, #1048576	; 0x100000
   1151c:	ea4c 3111 	orr.w	r1, r12, r1, lsr #12
   11520:	d002      	beq.n	11528 <__adddf3+0x70>
   11522:	4240      	negs	r0, r0
   11524:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   11528:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   1152c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   11530:	ea4c 3313 	orr.w	r3, r12, r3, lsr #12
   11534:	d002      	beq.n	1153c <__adddf3+0x84>
   11536:	4252      	negs	r2, r2
   11538:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   1153c:	ea94 0f05 	teq	r4, r5
   11540:	f000 80a7 	beq.w	11692 <__adddf3+0x1da>
   11544:	f1a4 0401 	sub.w	r4, r4, #1
   11548:	f1d5 0e20 	rsbs	lr, r5, #32
   1154c:	db0d      	blt.n	1156a <__adddf3+0xb2>
   1154e:	fa02 fc0e 	lsl.w	r12, r2, lr
   11552:	fa22 f205 	lsr.w	r2, r2, r5
   11556:	1880      	adds	r0, r0, r2
   11558:	f141 0100 	adc.w	r1, r1, #0
   1155c:	fa03 f20e 	lsl.w	r2, r3, lr
   11560:	1880      	adds	r0, r0, r2
   11562:	fa43 f305 	asr.w	r3, r3, r5
   11566:	4159      	adcs	r1, r3
   11568:	e00e      	b.n	11588 <__adddf3+0xd0>
   1156a:	f1a5 0520 	sub.w	r5, r5, #32
   1156e:	f10e 0e20 	add.w	lr, lr, #32
   11572:	2a01      	cmp	r2, #1
   11574:	fa03 fc0e 	lsl.w	r12, r3, lr
   11578:	bf28      	it	cs
   1157a:	f04c 0c02 	orrcs.w	r12, r12, #2
   1157e:	fa43 f305 	asr.w	r3, r3, r5
   11582:	18c0      	adds	r0, r0, r3
   11584:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   11588:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   1158c:	d507      	bpl.n	1159e <__adddf3+0xe6>
   1158e:	f04f 0e00 	mov.w	lr, #0
   11592:	f1dc 0c00 	rsbs	r12, r12, #0
   11596:	eb7e 0000 	sbcs.w	r0, lr, r0
   1159a:	eb6e 0101 	sbc.w	r1, lr, r1
   1159e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   115a2:	d31b      	bcc.n	115dc <__adddf3+0x124>
   115a4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   115a8:	d30c      	bcc.n	115c4 <__adddf3+0x10c>
   115aa:	0849      	lsrs	r1, r1, #1
   115ac:	ea5f 0030 	movs.w	r0, r0, rrx
   115b0:	ea4f 0c3c 	mov.w	r12, r12, rrx
   115b4:	f104 0401 	add.w	r4, r4, #1
   115b8:	ea4f 5244 	mov.w	r2, r4, lsl #21
   115bc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   115c0:	f080 809a 	bcs.w	116f8 <__adddf3+0x240>
   115c4:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
   115c8:	bf08      	it	eq
   115ca:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
   115ce:	f150 0000 	adcs.w	r0, r0, #0
   115d2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   115d6:	ea41 0105 	orr.w	r1, r1, r5
   115da:	bd30      	pop	{r4, r5, pc}
   115dc:	ea5f 0c4c 	movs.w	r12, r12, lsl #1
   115e0:	4140      	adcs	r0, r0
   115e2:	eb41 0101 	adc.w	r1, r1, r1
   115e6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   115ea:	f1a4 0401 	sub.w	r4, r4, #1
   115ee:	d1e9      	bne.n	115c4 <__adddf3+0x10c>
   115f0:	f091 0f00 	teq	r1, #0
   115f4:	bf04      	itt	eq
   115f6:	4601      	moveq	r1, r0
   115f8:	2000      	moveq	r0, #0
   115fa:	fab1 f381 	clz	r3, r1
   115fe:	bf08      	it	eq
   11600:	3320      	addeq	r3, #32
   11602:	f1a3 030b 	sub.w	r3, r3, #11
   11606:	f1b3 0220 	subs.w	r2, r3, #32
   1160a:	da0c      	bge.n	11626 <__adddf3+0x16e>
   1160c:	320c      	adds	r2, #12
   1160e:	dd08      	ble.n	11622 <__adddf3+0x16a>
   11610:	f102 0c14 	add.w	r12, r2, #20
   11614:	f1c2 020c 	rsb	r2, r2, #12
   11618:	fa01 f00c 	lsl.w	r0, r1, r12
   1161c:	fa21 f102 	lsr.w	r1, r1, r2
   11620:	e00c      	b.n	1163c <__adddf3+0x184>
   11622:	f102 0214 	add.w	r2, r2, #20
   11626:	bfd8      	it	le
   11628:	f1c2 0c20 	rsble	r12, r2, #32
   1162c:	fa01 f102 	lsl.w	r1, r1, r2
   11630:	fa20 fc0c 	lsr.w	r12, r0, r12
   11634:	bfdc      	itt	le
   11636:	ea41 010c 	orrle.w	r1, r1, r12
   1163a:	4090      	lslle	r0, r2
   1163c:	1ae4      	subs	r4, r4, r3
   1163e:	bfa2      	ittt	ge
   11640:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   11644:	4329      	orrge	r1, r5
   11646:	bd30      	popge	{r4, r5, pc}
   11648:	ea6f 0404 	mvn.w	r4, r4
   1164c:	3c1f      	subs	r4, #31
   1164e:	da1c      	bge.n	1168a <__adddf3+0x1d2>
   11650:	340c      	adds	r4, #12
   11652:	dc0e      	bgt.n	11672 <__adddf3+0x1ba>
   11654:	f104 0414 	add.w	r4, r4, #20
   11658:	f1c4 0220 	rsb	r2, r4, #32
   1165c:	fa20 f004 	lsr.w	r0, r0, r4
   11660:	fa01 f302 	lsl.w	r3, r1, r2
   11664:	ea40 0003 	orr.w	r0, r0, r3
   11668:	fa21 f304 	lsr.w	r3, r1, r4
   1166c:	ea45 0103 	orr.w	r1, r5, r3
   11670:	bd30      	pop	{r4, r5, pc}
   11672:	f1c4 040c 	rsb	r4, r4, #12
   11676:	f1c4 0220 	rsb	r2, r4, #32
   1167a:	fa20 f002 	lsr.w	r0, r0, r2
   1167e:	fa01 f304 	lsl.w	r3, r1, r4
   11682:	ea40 0003 	orr.w	r0, r0, r3
   11686:	4629      	mov	r1, r5
   11688:	bd30      	pop	{r4, r5, pc}
   1168a:	fa21 f004 	lsr.w	r0, r1, r4
   1168e:	4629      	mov	r1, r5
   11690:	bd30      	pop	{r4, r5, pc}
   11692:	f094 0f00 	teq	r4, #0
   11696:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   1169a:	bf06      	itte	eq
   1169c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   116a0:	3401      	addeq	r4, #1
   116a2:	3d01      	subne	r5, #1
   116a4:	e74e      	b.n	11544 <__adddf3+0x8c>
   116a6:	ea7f 5c64 	mvns.w	r12, r4, asr #21
   116aa:	bf18      	it	ne
   116ac:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
   116b0:	d029      	beq.n	11706 <__adddf3+0x24e>
   116b2:	ea94 0f05 	teq	r4, r5
   116b6:	bf08      	it	eq
   116b8:	ea90 0f02 	teqeq	r0, r2
   116bc:	d005      	beq.n	116ca <__adddf3+0x212>
   116be:	ea54 0c00 	orrs.w	r12, r4, r0
   116c2:	bf04      	itt	eq
   116c4:	4619      	moveq	r1, r3
   116c6:	4610      	moveq	r0, r2
   116c8:	bd30      	pop	{r4, r5, pc}
   116ca:	ea91 0f03 	teq	r1, r3
   116ce:	bf1e      	ittt	ne
   116d0:	2100      	movne	r1, #0
   116d2:	2000      	movne	r0, #0
   116d4:	bd30      	popne	{r4, r5, pc}
   116d6:	ea5f 5c54 	movs.w	r12, r4, lsr #21
   116da:	d105      	bne.n	116e8 <__adddf3+0x230>
   116dc:	0040      	lsls	r0, r0, #1
   116de:	4149      	adcs	r1, r1
   116e0:	bf28      	it	cs
   116e2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   116e6:	bd30      	pop	{r4, r5, pc}
   116e8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   116ec:	bf3c      	itt	cc
   116ee:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   116f2:	bd30      	popcc	{r4, r5, pc}
   116f4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   116f8:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   116fc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   11700:	f04f 0000 	mov.w	r0, #0
   11704:	bd30      	pop	{r4, r5, pc}
   11706:	ea7f 5c64 	mvns.w	r12, r4, asr #21
   1170a:	bf1a      	itte	ne
   1170c:	4619      	movne	r1, r3
   1170e:	4610      	movne	r0, r2
   11710:	ea7f 5c65 	mvnseq.w	r12, r5, asr #21
   11714:	bf1c      	itt	ne
   11716:	460b      	movne	r3, r1
   11718:	4602      	movne	r2, r0
   1171a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   1171e:	bf06      	itte	eq
   11720:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   11724:	ea91 0f03 	teqeq	r1, r3
   11728:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   1172c:	bd30      	pop	{r4, r5, pc}
   1172e:	bf00      	nop

00011730 <__aeabi_ui2d>:
   11730:	f090 0f00 	teq	r0, #0
   11734:	bf04      	itt	eq
   11736:	2100      	moveq	r1, #0
   11738:	4770      	bxeq	lr
   1173a:	b530      	push	{r4, r5, lr}
   1173c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   11740:	f104 0432 	add.w	r4, r4, #50	; 0x32
   11744:	f04f 0500 	mov.w	r5, #0
   11748:	f04f 0100 	mov.w	r1, #0
   1174c:	e750      	b.n	115f0 <__adddf3+0x138>
   1174e:	bf00      	nop

00011750 <__aeabi_i2d>:
   11750:	f090 0f00 	teq	r0, #0
   11754:	bf04      	itt	eq
   11756:	2100      	moveq	r1, #0
   11758:	4770      	bxeq	lr
   1175a:	b530      	push	{r4, r5, lr}
   1175c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   11760:	f104 0432 	add.w	r4, r4, #50	; 0x32
   11764:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   11768:	bf48      	it	mi
   1176a:	4240      	negmi	r0, r0
   1176c:	f04f 0100 	mov.w	r1, #0
   11770:	e73e      	b.n	115f0 <__adddf3+0x138>
   11772:	bf00      	nop

00011774 <__aeabi_f2d>:
   11774:	0042      	lsls	r2, r0, #1
   11776:	ea4f 01e2 	mov.w	r1, r2, asr #3
   1177a:	ea4f 0131 	mov.w	r1, r1, rrx
   1177e:	ea4f 7002 	mov.w	r0, r2, lsl #28
   11782:	bf1f      	itttt	ne
   11784:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   11788:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1178c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   11790:	4770      	bxne	lr
   11792:	f092 0f00 	teq	r2, #0
   11796:	bf14      	ite	ne
   11798:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   1179c:	4770      	bxeq	lr
   1179e:	b530      	push	{r4, r5, lr}
   117a0:	f44f 7460 	mov.w	r4, #896	; 0x380
   117a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   117a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   117ac:	e720      	b.n	115f0 <__adddf3+0x138>
   117ae:	bf00      	nop

000117b0 <__aeabi_ul2d>:
   117b0:	ea50 0201 	orrs.w	r2, r0, r1
   117b4:	bf08      	it	eq
   117b6:	4770      	bxeq	lr
   117b8:	b530      	push	{r4, r5, lr}
   117ba:	f04f 0500 	mov.w	r5, #0
   117be:	e00a      	b.n	117d6 <__aeabi_l2d+0x16>

000117c0 <__aeabi_l2d>:
   117c0:	ea50 0201 	orrs.w	r2, r0, r1
   117c4:	bf08      	it	eq
   117c6:	4770      	bxeq	lr
   117c8:	b530      	push	{r4, r5, lr}
   117ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   117ce:	d502      	bpl.n	117d6 <__aeabi_l2d+0x16>
   117d0:	4240      	negs	r0, r0
   117d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   117d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
   117da:	f104 0432 	add.w	r4, r4, #50	; 0x32
   117de:	ea5f 5c91 	movs.w	r12, r1, lsr #22
   117e2:	f43f aedc 	beq.w	1159e <__adddf3+0xe6>
   117e6:	f04f 0203 	mov.w	r2, #3
   117ea:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
   117ee:	bf18      	it	ne
   117f0:	3203      	addne	r2, #3
   117f2:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
   117f6:	bf18      	it	ne
   117f8:	3203      	addne	r2, #3
   117fa:	eb02 02dc 	add.w	r2, r2, r12, lsr #3
   117fe:	f1c2 0320 	rsb	r3, r2, #32
   11802:	fa00 fc03 	lsl.w	r12, r0, r3
   11806:	fa20 f002 	lsr.w	r0, r0, r2
   1180a:	fa01 fe03 	lsl.w	lr, r1, r3
   1180e:	ea40 000e 	orr.w	r0, r0, lr
   11812:	fa21 f102 	lsr.w	r1, r1, r2
   11816:	4414      	add	r4, r2
   11818:	e6c1      	b.n	1159e <__adddf3+0xe6>
   1181a:	bf00      	nop

0001181c <__aeabi_dmul>:
   1181c:	b570      	push	{r4, r5, r6, lr}
   1181e:	f04f 0cff 	mov.w	r12, #255	; 0xff
   11822:	f44c 6ce0 	orr.w	r12, r12, #1792	; 0x700
   11826:	ea1c 5411 	ands.w	r4, r12, r1, lsr #20
   1182a:	bf1d      	ittte	ne
   1182c:	ea1c 5513 	andsne.w	r5, r12, r3, lsr #20
   11830:	ea94 0f0c 	teqne	r4, r12
   11834:	ea95 0f0c 	teqne	r5, r12
   11838:	f000 f8de 	bleq	119f8 <__aeabi_dmul+0x1dc>
   1183c:	442c      	add	r4, r5
   1183e:	ea81 0603 	eor.w	r6, r1, r3
   11842:	ea21 514c 	bic.w	r1, r1, r12, lsl #21
   11846:	ea23 534c 	bic.w	r3, r3, r12, lsl #21
   1184a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   1184e:	bf18      	it	ne
   11850:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   11854:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   11858:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   1185c:	d038      	beq.n	118d0 <__aeabi_dmul+0xb4>
   1185e:	fba0 ce02 	umull	r12, lr, r0, r2
   11862:	f04f 0500 	mov.w	r5, #0
   11866:	fbe1 e502 	umlal	lr, r5, r1, r2
   1186a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   1186e:	fbe0 e503 	umlal	lr, r5, r0, r3
   11872:	f04f 0600 	mov.w	r6, #0
   11876:	fbe1 5603 	umlal	r5, r6, r1, r3
   1187a:	f09c 0f00 	teq	r12, #0
   1187e:	bf18      	it	ne
   11880:	f04e 0e01 	orrne.w	lr, lr, #1
   11884:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   11888:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   1188c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   11890:	d204      	bcs.n	1189c <__aeabi_dmul+0x80>
   11892:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   11896:	416d      	adcs	r5, r5
   11898:	eb46 0606 	adc.w	r6, r6, r6
   1189c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   118a0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   118a4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   118a8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   118ac:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   118b0:	f1b4 0cfd 	subs.w	r12, r4, #253	; 0xfd
   118b4:	bf88      	it	hi
   118b6:	f5bc 6fe0 	cmphi.w	r12, #1792	; 0x700
   118ba:	d81e      	bhi.n	118fa <__aeabi_dmul+0xde>
   118bc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   118c0:	bf08      	it	eq
   118c2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   118c6:	f150 0000 	adcs.w	r0, r0, #0
   118ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   118ce:	bd70      	pop	{r4, r5, r6, pc}
   118d0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   118d4:	ea46 0101 	orr.w	r1, r6, r1
   118d8:	ea40 0002 	orr.w	r0, r0, r2
   118dc:	ea81 0103 	eor.w	r1, r1, r3
   118e0:	ebb4 045c 	subs.w	r4, r4, r12, lsr #1
   118e4:	bfc2      	ittt	gt
   118e6:	ebd4 050c 	rsbsgt	r5, r4, r12
   118ea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   118ee:	bd70      	popgt	{r4, r5, r6, pc}
   118f0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   118f4:	f04f 0e00 	mov.w	lr, #0
   118f8:	3c01      	subs	r4, #1
   118fa:	f300 80ab 	bgt.w	11a54 <__aeabi_dmul+0x238>
   118fe:	f114 0f36 	cmn.w	r4, #54	; 0x36
   11902:	bfde      	ittt	le
   11904:	2000      	movle	r0, #0
   11906:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   1190a:	bd70      	pople	{r4, r5, r6, pc}
   1190c:	f1c4 0400 	rsb	r4, r4, #0
   11910:	3c20      	subs	r4, #32
   11912:	da35      	bge.n	11980 <__aeabi_dmul+0x164>
   11914:	340c      	adds	r4, #12
   11916:	dc1b      	bgt.n	11950 <__aeabi_dmul+0x134>
   11918:	f104 0414 	add.w	r4, r4, #20
   1191c:	f1c4 0520 	rsb	r5, r4, #32
   11920:	fa00 f305 	lsl.w	r3, r0, r5
   11924:	fa20 f004 	lsr.w	r0, r0, r4
   11928:	fa01 f205 	lsl.w	r2, r1, r5
   1192c:	ea40 0002 	orr.w	r0, r0, r2
   11930:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   11934:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   11938:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   1193c:	fa21 f604 	lsr.w	r6, r1, r4
   11940:	eb42 0106 	adc.w	r1, r2, r6
   11944:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   11948:	bf08      	it	eq
   1194a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1194e:	bd70      	pop	{r4, r5, r6, pc}
   11950:	f1c4 040c 	rsb	r4, r4, #12
   11954:	f1c4 0520 	rsb	r5, r4, #32
   11958:	fa00 f304 	lsl.w	r3, r0, r4
   1195c:	fa20 f005 	lsr.w	r0, r0, r5
   11960:	fa01 f204 	lsl.w	r2, r1, r4
   11964:	ea40 0002 	orr.w	r0, r0, r2
   11968:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   1196c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   11970:	f141 0100 	adc.w	r1, r1, #0
   11974:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   11978:	bf08      	it	eq
   1197a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   1197e:	bd70      	pop	{r4, r5, r6, pc}
   11980:	f1c4 0520 	rsb	r5, r4, #32
   11984:	fa00 f205 	lsl.w	r2, r0, r5
   11988:	ea4e 0e02 	orr.w	lr, lr, r2
   1198c:	fa20 f304 	lsr.w	r3, r0, r4
   11990:	fa01 f205 	lsl.w	r2, r1, r5
   11994:	ea43 0302 	orr.w	r3, r3, r2
   11998:	fa21 f004 	lsr.w	r0, r1, r4
   1199c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   119a0:	fa21 f204 	lsr.w	r2, r1, r4
   119a4:	ea20 0002 	bic.w	r0, r0, r2
   119a8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   119ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   119b0:	bf08      	it	eq
   119b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   119b6:	bd70      	pop	{r4, r5, r6, pc}
   119b8:	f094 0f00 	teq	r4, #0
   119bc:	d10f      	bne.n	119de <__aeabi_dmul+0x1c2>
   119be:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   119c2:	0040      	lsls	r0, r0, #1
   119c4:	eb41 0101 	adc.w	r1, r1, r1
   119c8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   119cc:	bf08      	it	eq
   119ce:	3c01      	subeq	r4, #1
   119d0:	d0f7      	beq.n	119c2 <__aeabi_dmul+0x1a6>
   119d2:	ea41 0106 	orr.w	r1, r1, r6
   119d6:	f095 0f00 	teq	r5, #0
   119da:	bf18      	it	ne
   119dc:	4770      	bxne	lr
   119de:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   119e2:	0052      	lsls	r2, r2, #1
   119e4:	eb43 0303 	adc.w	r3, r3, r3
   119e8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   119ec:	bf08      	it	eq
   119ee:	3d01      	subeq	r5, #1
   119f0:	d0f7      	beq.n	119e2 <__aeabi_dmul+0x1c6>
   119f2:	ea43 0306 	orr.w	r3, r3, r6
   119f6:	4770      	bx	lr
   119f8:	ea94 0f0c 	teq	r4, r12
   119fc:	ea0c 5513 	and.w	r5, r12, r3, lsr #20
   11a00:	bf18      	it	ne
   11a02:	ea95 0f0c 	teqne	r5, r12
   11a06:	d00c      	beq.n	11a22 <__aeabi_dmul+0x206>
   11a08:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   11a0c:	bf18      	it	ne
   11a0e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   11a12:	d1d1      	bne.n	119b8 <__aeabi_dmul+0x19c>
   11a14:	ea81 0103 	eor.w	r1, r1, r3
   11a18:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   11a1c:	f04f 0000 	mov.w	r0, #0
   11a20:	bd70      	pop	{r4, r5, r6, pc}
   11a22:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   11a26:	bf06      	itte	eq
   11a28:	4610      	moveq	r0, r2
   11a2a:	4619      	moveq	r1, r3
   11a2c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   11a30:	d019      	beq.n	11a66 <__aeabi_dmul+0x24a>
   11a32:	ea94 0f0c 	teq	r4, r12
   11a36:	d102      	bne.n	11a3e <__aeabi_dmul+0x222>
   11a38:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   11a3c:	d113      	bne.n	11a66 <__aeabi_dmul+0x24a>
   11a3e:	ea95 0f0c 	teq	r5, r12
   11a42:	d105      	bne.n	11a50 <__aeabi_dmul+0x234>
   11a44:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   11a48:	bf1c      	itt	ne
   11a4a:	4610      	movne	r0, r2
   11a4c:	4619      	movne	r1, r3
   11a4e:	d10a      	bne.n	11a66 <__aeabi_dmul+0x24a>
   11a50:	ea81 0103 	eor.w	r1, r1, r3
   11a54:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   11a58:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   11a5c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   11a60:	f04f 0000 	mov.w	r0, #0
   11a64:	bd70      	pop	{r4, r5, r6, pc}
   11a66:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   11a6a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   11a6e:	bd70      	pop	{r4, r5, r6, pc}

00011a70 <__aeabi_ddiv>:
   11a70:	b570      	push	{r4, r5, r6, lr}
   11a72:	f04f 0cff 	mov.w	r12, #255	; 0xff
   11a76:	f44c 6ce0 	orr.w	r12, r12, #1792	; 0x700
   11a7a:	ea1c 5411 	ands.w	r4, r12, r1, lsr #20
   11a7e:	bf1d      	ittte	ne
   11a80:	ea1c 5513 	andsne.w	r5, r12, r3, lsr #20
   11a84:	ea94 0f0c 	teqne	r4, r12
   11a88:	ea95 0f0c 	teqne	r5, r12
   11a8c:	f000 f8a7 	bleq	11bde <__aeabi_ddiv+0x16e>
   11a90:	eba4 0405 	sub.w	r4, r4, r5
   11a94:	ea81 0e03 	eor.w	lr, r1, r3
   11a98:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   11a9c:	ea4f 3101 	mov.w	r1, r1, lsl #12
   11aa0:	f000 8088 	beq.w	11bb4 <__aeabi_ddiv+0x144>
   11aa4:	ea4f 3303 	mov.w	r3, r3, lsl #12
   11aa8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   11aac:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   11ab0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   11ab4:	ea4f 2202 	mov.w	r2, r2, lsl #8
   11ab8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   11abc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   11ac0:	ea4f 2600 	mov.w	r6, r0, lsl #8
   11ac4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   11ac8:	429d      	cmp	r5, r3
   11aca:	bf08      	it	eq
   11acc:	4296      	cmpeq	r6, r2
   11ace:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   11ad2:	f504 7440 	add.w	r4, r4, #768	; 0x300
   11ad6:	d202      	bcs.n	11ade <__aeabi_ddiv+0x6e>
   11ad8:	085b      	lsrs	r3, r3, #1
   11ada:	ea4f 0232 	mov.w	r2, r2, rrx
   11ade:	1ab6      	subs	r6, r6, r2
   11ae0:	eb65 0503 	sbc.w	r5, r5, r3
   11ae4:	085b      	lsrs	r3, r3, #1
   11ae6:	ea4f 0232 	mov.w	r2, r2, rrx
   11aea:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   11aee:	f44f 2c00 	mov.w	r12, #524288	; 0x80000
   11af2:	ebb6 0e02 	subs.w	lr, r6, r2
   11af6:	eb75 0e03 	sbcs.w	lr, r5, r3
   11afa:	bf22      	ittt	cs
   11afc:	1ab6      	subcs	r6, r6, r2
   11afe:	4675      	movcs	r5, lr
   11b00:	ea40 000c 	orrcs.w	r0, r0, r12
   11b04:	085b      	lsrs	r3, r3, #1
   11b06:	ea4f 0232 	mov.w	r2, r2, rrx
   11b0a:	ebb6 0e02 	subs.w	lr, r6, r2
   11b0e:	eb75 0e03 	sbcs.w	lr, r5, r3
   11b12:	bf22      	ittt	cs
   11b14:	1ab6      	subcs	r6, r6, r2
   11b16:	4675      	movcs	r5, lr
   11b18:	ea40 005c 	orrcs.w	r0, r0, r12, lsr #1
   11b1c:	085b      	lsrs	r3, r3, #1
   11b1e:	ea4f 0232 	mov.w	r2, r2, rrx
   11b22:	ebb6 0e02 	subs.w	lr, r6, r2
   11b26:	eb75 0e03 	sbcs.w	lr, r5, r3
   11b2a:	bf22      	ittt	cs
   11b2c:	1ab6      	subcs	r6, r6, r2
   11b2e:	4675      	movcs	r5, lr
   11b30:	ea40 009c 	orrcs.w	r0, r0, r12, lsr #2
   11b34:	085b      	lsrs	r3, r3, #1
   11b36:	ea4f 0232 	mov.w	r2, r2, rrx
   11b3a:	ebb6 0e02 	subs.w	lr, r6, r2
   11b3e:	eb75 0e03 	sbcs.w	lr, r5, r3
   11b42:	bf22      	ittt	cs
   11b44:	1ab6      	subcs	r6, r6, r2
   11b46:	4675      	movcs	r5, lr
   11b48:	ea40 00dc 	orrcs.w	r0, r0, r12, lsr #3
   11b4c:	ea55 0e06 	orrs.w	lr, r5, r6
   11b50:	d018      	beq.n	11b84 <__aeabi_ddiv+0x114>
   11b52:	ea4f 1505 	mov.w	r5, r5, lsl #4
   11b56:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   11b5a:	ea4f 1606 	mov.w	r6, r6, lsl #4
   11b5e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   11b62:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   11b66:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   11b6a:	ea5f 1c1c 	movs.w	r12, r12, lsr #4
   11b6e:	d1c0      	bne.n	11af2 <__aeabi_ddiv+0x82>
   11b70:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   11b74:	d10b      	bne.n	11b8e <__aeabi_ddiv+0x11e>
   11b76:	ea41 0100 	orr.w	r1, r1, r0
   11b7a:	f04f 0000 	mov.w	r0, #0
   11b7e:	f04f 4c00 	mov.w	r12, #2147483648	; 0x80000000
   11b82:	e7b6      	b.n	11af2 <__aeabi_ddiv+0x82>
   11b84:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   11b88:	bf04      	itt	eq
   11b8a:	4301      	orreq	r1, r0
   11b8c:	2000      	moveq	r0, #0
   11b8e:	f1b4 0cfd 	subs.w	r12, r4, #253	; 0xfd
   11b92:	bf88      	it	hi
   11b94:	f5bc 6fe0 	cmphi.w	r12, #1792	; 0x700
   11b98:	f63f aeaf 	bhi.w	118fa <__aeabi_dmul+0xde>
   11b9c:	ebb5 0c03 	subs.w	r12, r5, r3
   11ba0:	bf04      	itt	eq
   11ba2:	ebb6 0c02 	subseq.w	r12, r6, r2
   11ba6:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
   11baa:	f150 0000 	adcs.w	r0, r0, #0
   11bae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   11bb2:	bd70      	pop	{r4, r5, r6, pc}
   11bb4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   11bb8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   11bbc:	eb14 045c 	adds.w	r4, r4, r12, lsr #1
   11bc0:	bfc2      	ittt	gt
   11bc2:	ebd4 050c 	rsbsgt	r5, r4, r12
   11bc6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   11bca:	bd70      	popgt	{r4, r5, r6, pc}
   11bcc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   11bd0:	f04f 0e00 	mov.w	lr, #0
   11bd4:	3c01      	subs	r4, #1
   11bd6:	e690      	b.n	118fa <__aeabi_dmul+0xde>
   11bd8:	ea45 0e06 	orr.w	lr, r5, r6
   11bdc:	e68d      	b.n	118fa <__aeabi_dmul+0xde>
   11bde:	ea0c 5513 	and.w	r5, r12, r3, lsr #20
   11be2:	ea94 0f0c 	teq	r4, r12
   11be6:	bf08      	it	eq
   11be8:	ea95 0f0c 	teqeq	r5, r12
   11bec:	f43f af3b 	beq.w	11a66 <__aeabi_dmul+0x24a>
   11bf0:	ea94 0f0c 	teq	r4, r12
   11bf4:	d10a      	bne.n	11c0c <__aeabi_ddiv+0x19c>
   11bf6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   11bfa:	f47f af34 	bne.w	11a66 <__aeabi_dmul+0x24a>
   11bfe:	ea95 0f0c 	teq	r5, r12
   11c02:	f47f af25 	bne.w	11a50 <__aeabi_dmul+0x234>
   11c06:	4610      	mov	r0, r2
   11c08:	4619      	mov	r1, r3
   11c0a:	e72c      	b.n	11a66 <__aeabi_dmul+0x24a>
   11c0c:	ea95 0f0c 	teq	r5, r12
   11c10:	d106      	bne.n	11c20 <__aeabi_ddiv+0x1b0>
   11c12:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   11c16:	f43f aefd 	beq.w	11a14 <__aeabi_dmul+0x1f8>
   11c1a:	4610      	mov	r0, r2
   11c1c:	4619      	mov	r1, r3
   11c1e:	e722      	b.n	11a66 <__aeabi_dmul+0x24a>
   11c20:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   11c24:	bf18      	it	ne
   11c26:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   11c2a:	f47f aec5 	bne.w	119b8 <__aeabi_dmul+0x19c>
   11c2e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   11c32:	f47f af0d 	bne.w	11a50 <__aeabi_dmul+0x234>
   11c36:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   11c3a:	f47f aeeb 	bne.w	11a14 <__aeabi_dmul+0x1f8>
   11c3e:	e712      	b.n	11a66 <__aeabi_dmul+0x24a>

00011c40 <__gedf2>:
   11c40:	f04f 3cff 	mov.w	r12, #4294967295
   11c44:	e006      	b.n	11c54 <__cmpdf2+0x4>
   11c46:	bf00      	nop

00011c48 <__ledf2>:
   11c48:	f04f 0c01 	mov.w	r12, #1
   11c4c:	e002      	b.n	11c54 <__cmpdf2+0x4>
   11c4e:	bf00      	nop

00011c50 <__cmpdf2>:
   11c50:	f04f 0c01 	mov.w	r12, #1
   11c54:	f84d cd04 	str.w	r12, [sp, #-4]!
   11c58:	ea4f 0c41 	mov.w	r12, r1, lsl #1
   11c5c:	ea7f 5c6c 	mvns.w	r12, r12, asr #21
   11c60:	ea4f 0c43 	mov.w	r12, r3, lsl #1
   11c64:	bf18      	it	ne
   11c66:	ea7f 5c6c 	mvnsne.w	r12, r12, asr #21
   11c6a:	d01b      	beq.n	11ca4 <__cmpdf2+0x54>
   11c6c:	b001      	add	sp, #4
   11c6e:	ea50 0c41 	orrs.w	r12, r0, r1, lsl #1
   11c72:	bf0c      	ite	eq
   11c74:	ea52 0c43 	orrseq.w	r12, r2, r3, lsl #1
   11c78:	ea91 0f03 	teqne	r1, r3
   11c7c:	bf02      	ittt	eq
   11c7e:	ea90 0f02 	teqeq	r0, r2
   11c82:	2000      	moveq	r0, #0
   11c84:	4770      	bxeq	lr
   11c86:	f110 0f00 	cmn.w	r0, #0
   11c8a:	ea91 0f03 	teq	r1, r3
   11c8e:	bf58      	it	pl
   11c90:	4299      	cmppl	r1, r3
   11c92:	bf08      	it	eq
   11c94:	4290      	cmpeq	r0, r2
   11c96:	bf2c      	ite	cs
   11c98:	17d8      	asrcs	r0, r3, #31
   11c9a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   11c9e:	f040 0001 	orr.w	r0, r0, #1
   11ca2:	4770      	bx	lr
   11ca4:	ea4f 0c41 	mov.w	r12, r1, lsl #1
   11ca8:	ea7f 5c6c 	mvns.w	r12, r12, asr #21
   11cac:	d102      	bne.n	11cb4 <__cmpdf2+0x64>
   11cae:	ea50 3c01 	orrs.w	r12, r0, r1, lsl #12
   11cb2:	d107      	bne.n	11cc4 <__cmpdf2+0x74>
   11cb4:	ea4f 0c43 	mov.w	r12, r3, lsl #1
   11cb8:	ea7f 5c6c 	mvns.w	r12, r12, asr #21
   11cbc:	d1d6      	bne.n	11c6c <__cmpdf2+0x1c>
   11cbe:	ea52 3c03 	orrs.w	r12, r2, r3, lsl #12
   11cc2:	d0d3      	beq.n	11c6c <__cmpdf2+0x1c>
   11cc4:	f85d 0b04 	ldr.w	r0, [sp], #4
   11cc8:	4770      	bx	lr
   11cca:	bf00      	nop

00011ccc <__aeabi_cdrcmple>:
   11ccc:	4684      	mov	r12, r0
   11cce:	4610      	mov	r0, r2
   11cd0:	4662      	mov	r2, r12
   11cd2:	468c      	mov	r12, r1
   11cd4:	4619      	mov	r1, r3
   11cd6:	4663      	mov	r3, r12
   11cd8:	e000      	b.n	11cdc <__aeabi_cdcmpeq>
   11cda:	bf00      	nop

00011cdc <__aeabi_cdcmpeq>:
   11cdc:	b501      	push	{r0, lr}
   11cde:	f7ff ffb7 	bl	11c50 <__cmpdf2>
   11ce2:	2800      	cmp	r0, #0
   11ce4:	bf48      	it	mi
   11ce6:	f110 0f00 	cmnmi.w	r0, #0
   11cea:	bd01      	pop	{r0, pc}

00011cec <__aeabi_dcmpeq>:
   11cec:	f84d ed08 	str.w	lr, [sp, #-8]!
   11cf0:	f7ff fff4 	bl	11cdc <__aeabi_cdcmpeq>
   11cf4:	bf0c      	ite	eq
   11cf6:	2001      	moveq	r0, #1
   11cf8:	2000      	movne	r0, #0
   11cfa:	f85d fb08 	ldr.w	pc, [sp], #8
   11cfe:	bf00      	nop

00011d00 <__aeabi_dcmplt>:
   11d00:	f84d ed08 	str.w	lr, [sp, #-8]!
   11d04:	f7ff ffea 	bl	11cdc <__aeabi_cdcmpeq>
   11d08:	bf34      	ite	cc
   11d0a:	2001      	movcc	r0, #1
   11d0c:	2000      	movcs	r0, #0
   11d0e:	f85d fb08 	ldr.w	pc, [sp], #8
   11d12:	bf00      	nop

00011d14 <__aeabi_dcmple>:
   11d14:	f84d ed08 	str.w	lr, [sp, #-8]!
   11d18:	f7ff ffe0 	bl	11cdc <__aeabi_cdcmpeq>
   11d1c:	bf94      	ite	ls
   11d1e:	2001      	movls	r0, #1
   11d20:	2000      	movhi	r0, #0
   11d22:	f85d fb08 	ldr.w	pc, [sp], #8
   11d26:	bf00      	nop

00011d28 <__aeabi_dcmpge>:
   11d28:	f84d ed08 	str.w	lr, [sp, #-8]!
   11d2c:	f7ff ffce 	bl	11ccc <__aeabi_cdrcmple>
   11d30:	bf94      	ite	ls
   11d32:	2001      	movls	r0, #1
   11d34:	2000      	movhi	r0, #0
   11d36:	f85d fb08 	ldr.w	pc, [sp], #8
   11d3a:	bf00      	nop

00011d3c <__aeabi_dcmpgt>:
   11d3c:	f84d ed08 	str.w	lr, [sp, #-8]!
   11d40:	f7ff ffc4 	bl	11ccc <__aeabi_cdrcmple>
   11d44:	bf34      	ite	cc
   11d46:	2001      	movcc	r0, #1
   11d48:	2000      	movcs	r0, #0
   11d4a:	f85d fb08 	ldr.w	pc, [sp], #8
   11d4e:	bf00      	nop

00011d50 <__aeabi_d2iz>:
   11d50:	ea4f 0241 	mov.w	r2, r1, lsl #1
   11d54:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   11d58:	d215      	bcs.n	11d86 <__aeabi_d2iz+0x36>
   11d5a:	d511      	bpl.n	11d80 <__aeabi_d2iz+0x30>
   11d5c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   11d60:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   11d64:	d912      	bls.n	11d8c <__aeabi_d2iz+0x3c>
   11d66:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   11d6a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   11d6e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   11d72:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   11d76:	fa23 f002 	lsr.w	r0, r3, r2
   11d7a:	bf18      	it	ne
   11d7c:	4240      	negne	r0, r0
   11d7e:	4770      	bx	lr
   11d80:	f04f 0000 	mov.w	r0, #0
   11d84:	4770      	bx	lr
   11d86:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   11d8a:	d105      	bne.n	11d98 <__aeabi_d2iz+0x48>
   11d8c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   11d90:	bf08      	it	eq
   11d92:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   11d96:	4770      	bx	lr
   11d98:	f04f 0000 	mov.w	r0, #0
   11d9c:	4770      	bx	lr
   11d9e:	bf00      	nop

00011da0 <__aeabi_frsub>:
   11da0:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   11da4:	e002      	b.n	11dac <__addsf3>
   11da6:	bf00      	nop

00011da8 <__aeabi_fsub>:
   11da8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00011dac <__addsf3>:
   11dac:	0042      	lsls	r2, r0, #1
   11dae:	bf1f      	itttt	ne
   11db0:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   11db4:	ea92 0f03 	teqne	r2, r3
   11db8:	ea7f 6c22 	mvnsne.w	r12, r2, asr #24
   11dbc:	ea7f 6c23 	mvnsne.w	r12, r3, asr #24
   11dc0:	d06a      	beq.n	11e98 <__addsf3+0xec>
   11dc2:	ea4f 6212 	mov.w	r2, r2, lsr #24
   11dc6:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   11dca:	bfc1      	itttt	gt
   11dcc:	18d2      	addgt	r2, r2, r3
   11dce:	4041      	eorgt	r1, r0
   11dd0:	4048      	eorgt	r0, r1
   11dd2:	4041      	eorgt	r1, r0
   11dd4:	bfb8      	it	lt
   11dd6:	425b      	neglt	r3, r3
   11dd8:	2b19      	cmp	r3, #25
   11dda:	bf88      	it	hi
   11ddc:	4770      	bxhi	lr
   11dde:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   11de2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   11de6:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   11dea:	bf18      	it	ne
   11dec:	4240      	negne	r0, r0
   11dee:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   11df2:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   11df6:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   11dfa:	bf18      	it	ne
   11dfc:	4249      	negne	r1, r1
   11dfe:	ea92 0f03 	teq	r2, r3
   11e02:	d03f      	beq.n	11e84 <__addsf3+0xd8>
   11e04:	f1a2 0201 	sub.w	r2, r2, #1
   11e08:	fa41 fc03 	asr.w	r12, r1, r3
   11e0c:	eb10 000c 	adds.w	r0, r0, r12
   11e10:	f1c3 0320 	rsb	r3, r3, #32
   11e14:	fa01 f103 	lsl.w	r1, r1, r3
   11e18:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   11e1c:	d502      	bpl.n	11e24 <__addsf3+0x78>
   11e1e:	4249      	negs	r1, r1
   11e20:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   11e24:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   11e28:	d313      	bcc.n	11e52 <__addsf3+0xa6>
   11e2a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   11e2e:	d306      	bcc.n	11e3e <__addsf3+0x92>
   11e30:	0840      	lsrs	r0, r0, #1
   11e32:	ea4f 0131 	mov.w	r1, r1, rrx
   11e36:	f102 0201 	add.w	r2, r2, #1
   11e3a:	2afe      	cmp	r2, #254	; 0xfe
   11e3c:	d251      	bcs.n	11ee2 <__addsf3+0x136>
   11e3e:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   11e42:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   11e46:	bf08      	it	eq
   11e48:	f020 0001 	biceq.w	r0, r0, #1
   11e4c:	ea40 0003 	orr.w	r0, r0, r3
   11e50:	4770      	bx	lr
   11e52:	0049      	lsls	r1, r1, #1
   11e54:	eb40 0000 	adc.w	r0, r0, r0
   11e58:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   11e5c:	f1a2 0201 	sub.w	r2, r2, #1
   11e60:	d1ed      	bne.n	11e3e <__addsf3+0x92>
   11e62:	fab0 fc80 	clz	r12, r0
   11e66:	f1ac 0c08 	sub.w	r12, r12, #8
   11e6a:	ebb2 020c 	subs.w	r2, r2, r12
   11e6e:	fa00 f00c 	lsl.w	r0, r0, r12
   11e72:	bfaa      	itet	ge
   11e74:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   11e78:	4252      	neglt	r2, r2
   11e7a:	4318      	orrge	r0, r3
   11e7c:	bfbc      	itt	lt
   11e7e:	40d0      	lsrlt	r0, r2
   11e80:	4318      	orrlt	r0, r3
   11e82:	4770      	bx	lr
   11e84:	f092 0f00 	teq	r2, #0
   11e88:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   11e8c:	bf06      	itte	eq
   11e8e:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   11e92:	3201      	addeq	r2, #1
   11e94:	3b01      	subne	r3, #1
   11e96:	e7b5      	b.n	11e04 <__addsf3+0x58>
   11e98:	ea4f 0341 	mov.w	r3, r1, lsl #1
   11e9c:	ea7f 6c22 	mvns.w	r12, r2, asr #24
   11ea0:	bf18      	it	ne
   11ea2:	ea7f 6c23 	mvnsne.w	r12, r3, asr #24
   11ea6:	d021      	beq.n	11eec <__addsf3+0x140>
   11ea8:	ea92 0f03 	teq	r2, r3
   11eac:	d004      	beq.n	11eb8 <__addsf3+0x10c>
   11eae:	f092 0f00 	teq	r2, #0
   11eb2:	bf08      	it	eq
   11eb4:	4608      	moveq	r0, r1
   11eb6:	4770      	bx	lr
   11eb8:	ea90 0f01 	teq	r0, r1
   11ebc:	bf1c      	itt	ne
   11ebe:	2000      	movne	r0, #0
   11ec0:	4770      	bxne	lr
   11ec2:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   11ec6:	d104      	bne.n	11ed2 <__addsf3+0x126>
   11ec8:	0040      	lsls	r0, r0, #1
   11eca:	bf28      	it	cs
   11ecc:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   11ed0:	4770      	bx	lr
   11ed2:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   11ed6:	bf3c      	itt	cc
   11ed8:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   11edc:	4770      	bxcc	lr
   11ede:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   11ee2:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   11ee6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   11eea:	4770      	bx	lr
   11eec:	ea7f 6222 	mvns.w	r2, r2, asr #24
   11ef0:	bf16      	itet	ne
   11ef2:	4608      	movne	r0, r1
   11ef4:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   11ef8:	4601      	movne	r1, r0
   11efa:	0242      	lsls	r2, r0, #9
   11efc:	bf06      	itte	eq
   11efe:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   11f02:	ea90 0f01 	teqeq	r0, r1
   11f06:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   11f0a:	4770      	bx	lr

00011f0c <__aeabi_ui2f>:
   11f0c:	f04f 0300 	mov.w	r3, #0
   11f10:	e004      	b.n	11f1c <__aeabi_i2f+0x8>
   11f12:	bf00      	nop

00011f14 <__aeabi_i2f>:
   11f14:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   11f18:	bf48      	it	mi
   11f1a:	4240      	negmi	r0, r0
   11f1c:	ea5f 0c00 	movs.w	r12, r0
   11f20:	bf08      	it	eq
   11f22:	4770      	bxeq	lr
   11f24:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   11f28:	4601      	mov	r1, r0
   11f2a:	f04f 0000 	mov.w	r0, #0
   11f2e:	e01c      	b.n	11f6a <__aeabi_l2f+0x2a>

00011f30 <__aeabi_ul2f>:
   11f30:	ea50 0201 	orrs.w	r2, r0, r1
   11f34:	bf08      	it	eq
   11f36:	4770      	bxeq	lr
   11f38:	f04f 0300 	mov.w	r3, #0
   11f3c:	e00a      	b.n	11f54 <__aeabi_l2f+0x14>
   11f3e:	bf00      	nop

00011f40 <__aeabi_l2f>:
   11f40:	ea50 0201 	orrs.w	r2, r0, r1
   11f44:	bf08      	it	eq
   11f46:	4770      	bxeq	lr
   11f48:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   11f4c:	d502      	bpl.n	11f54 <__aeabi_l2f+0x14>
   11f4e:	4240      	negs	r0, r0
   11f50:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   11f54:	ea5f 0c01 	movs.w	r12, r1
   11f58:	bf02      	ittt	eq
   11f5a:	4684      	moveq	r12, r0
   11f5c:	4601      	moveq	r1, r0
   11f5e:	2000      	moveq	r0, #0
   11f60:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   11f64:	bf08      	it	eq
   11f66:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   11f6a:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   11f6e:	fabc f28c 	clz	r2, r12
   11f72:	3a08      	subs	r2, #8
   11f74:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   11f78:	db10      	blt.n	11f9c <__aeabi_l2f+0x5c>
   11f7a:	fa01 fc02 	lsl.w	r12, r1, r2
   11f7e:	4463      	add	r3, r12
   11f80:	fa00 fc02 	lsl.w	r12, r0, r2
   11f84:	f1c2 0220 	rsb	r2, r2, #32
   11f88:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
   11f8c:	fa20 f202 	lsr.w	r2, r0, r2
   11f90:	eb43 0002 	adc.w	r0, r3, r2
   11f94:	bf08      	it	eq
   11f96:	f020 0001 	biceq.w	r0, r0, #1
   11f9a:	4770      	bx	lr
   11f9c:	f102 0220 	add.w	r2, r2, #32
   11fa0:	fa01 fc02 	lsl.w	r12, r1, r2
   11fa4:	f1c2 0220 	rsb	r2, r2, #32
   11fa8:	ea50 004c 	orrs.w	r0, r0, r12, lsl #1
   11fac:	fa21 f202 	lsr.w	r2, r1, r2
   11fb0:	eb43 0002 	adc.w	r0, r3, r2
   11fb4:	bf08      	it	eq
   11fb6:	ea20 70dc 	biceq.w	r0, r0, r12, lsr #31
   11fba:	4770      	bx	lr

00011fbc <__aeabi_fmul>:
   11fbc:	f04f 0cff 	mov.w	r12, #255	; 0xff
   11fc0:	ea1c 52d0 	ands.w	r2, r12, r0, lsr #23
   11fc4:	bf1e      	ittt	ne
   11fc6:	ea1c 53d1 	andsne.w	r3, r12, r1, lsr #23
   11fca:	ea92 0f0c 	teqne	r2, r12
   11fce:	ea93 0f0c 	teqne	r3, r12
   11fd2:	d06f      	beq.n	120b4 <__aeabi_fmul+0xf8>
   11fd4:	441a      	add	r2, r3
   11fd6:	ea80 0c01 	eor.w	r12, r0, r1
   11fda:	0240      	lsls	r0, r0, #9
   11fdc:	bf18      	it	ne
   11fde:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   11fe2:	d01e      	beq.n	12022 <__aeabi_fmul+0x66>
   11fe4:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   11fe8:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   11fec:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   11ff0:	fba0 3101 	umull	r3, r1, r0, r1
   11ff4:	f00c 4000 	and.w	r0, r12, #2147483648	; 0x80000000
   11ff8:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   11ffc:	bf3e      	ittt	cc
   11ffe:	0049      	lslcc	r1, r1, #1
   12000:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   12004:	005b      	lslcc	r3, r3, #1
   12006:	ea40 0001 	orr.w	r0, r0, r1
   1200a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   1200e:	2afd      	cmp	r2, #253	; 0xfd
   12010:	d81d      	bhi.n	1204e <__aeabi_fmul+0x92>
   12012:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   12016:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   1201a:	bf08      	it	eq
   1201c:	f020 0001 	biceq.w	r0, r0, #1
   12020:	4770      	bx	lr
   12022:	f090 0f00 	teq	r0, #0
   12026:	f00c 4c00 	and.w	r12, r12, #2147483648	; 0x80000000
   1202a:	bf08      	it	eq
   1202c:	0249      	lsleq	r1, r1, #9
   1202e:	ea4c 2050 	orr.w	r0, r12, r0, lsr #9
   12032:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   12036:	3a7f      	subs	r2, #127	; 0x7f
   12038:	bfc2      	ittt	gt
   1203a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1203e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   12042:	4770      	bxgt	lr
   12044:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   12048:	f04f 0300 	mov.w	r3, #0
   1204c:	3a01      	subs	r2, #1
   1204e:	dc5d      	bgt.n	1210c <__aeabi_fmul+0x150>
   12050:	f112 0f19 	cmn.w	r2, #25
   12054:	bfdc      	itt	le
   12056:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   1205a:	4770      	bxle	lr
   1205c:	f1c2 0200 	rsb	r2, r2, #0
   12060:	0041      	lsls	r1, r0, #1
   12062:	fa21 f102 	lsr.w	r1, r1, r2
   12066:	f1c2 0220 	rsb	r2, r2, #32
   1206a:	fa00 fc02 	lsl.w	r12, r0, r2
   1206e:	ea5f 0031 	movs.w	r0, r1, rrx
   12072:	f140 0000 	adc.w	r0, r0, #0
   12076:	ea53 034c 	orrs.w	r3, r3, r12, lsl #1
   1207a:	bf08      	it	eq
   1207c:	ea20 70dc 	biceq.w	r0, r0, r12, lsr #31
   12080:	4770      	bx	lr
   12082:	f092 0f00 	teq	r2, #0
   12086:	f000 4c00 	and.w	r12, r0, #2147483648	; 0x80000000
   1208a:	bf02      	ittt	eq
   1208c:	0040      	lsleq	r0, r0, #1
   1208e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   12092:	3a01      	subeq	r2, #1
   12094:	d0f9      	beq.n	1208a <__aeabi_fmul+0xce>
   12096:	ea40 000c 	orr.w	r0, r0, r12
   1209a:	f093 0f00 	teq	r3, #0
   1209e:	f001 4c00 	and.w	r12, r1, #2147483648	; 0x80000000
   120a2:	bf02      	ittt	eq
   120a4:	0049      	lsleq	r1, r1, #1
   120a6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   120aa:	3b01      	subeq	r3, #1
   120ac:	d0f9      	beq.n	120a2 <__aeabi_fmul+0xe6>
   120ae:	ea41 010c 	orr.w	r1, r1, r12
   120b2:	e78f      	b.n	11fd4 <__aeabi_fmul+0x18>
   120b4:	ea0c 53d1 	and.w	r3, r12, r1, lsr #23
   120b8:	ea92 0f0c 	teq	r2, r12
   120bc:	bf18      	it	ne
   120be:	ea93 0f0c 	teqne	r3, r12
   120c2:	d00a      	beq.n	120da <__aeabi_fmul+0x11e>
   120c4:	f030 4c00 	bics.w	r12, r0, #2147483648	; 0x80000000
   120c8:	bf18      	it	ne
   120ca:	f031 4c00 	bicsne.w	r12, r1, #2147483648	; 0x80000000
   120ce:	d1d8      	bne.n	12082 <__aeabi_fmul+0xc6>
   120d0:	ea80 0001 	eor.w	r0, r0, r1
   120d4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   120d8:	4770      	bx	lr
   120da:	f090 0f00 	teq	r0, #0
   120de:	bf17      	itett	ne
   120e0:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   120e4:	4608      	moveq	r0, r1
   120e6:	f091 0f00 	teqne	r1, #0
   120ea:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   120ee:	d014      	beq.n	1211a <__aeabi_fmul+0x15e>
   120f0:	ea92 0f0c 	teq	r2, r12
   120f4:	d101      	bne.n	120fa <__aeabi_fmul+0x13e>
   120f6:	0242      	lsls	r2, r0, #9
   120f8:	d10f      	bne.n	1211a <__aeabi_fmul+0x15e>
   120fa:	ea93 0f0c 	teq	r3, r12
   120fe:	d103      	bne.n	12108 <__aeabi_fmul+0x14c>
   12100:	024b      	lsls	r3, r1, #9
   12102:	bf18      	it	ne
   12104:	4608      	movne	r0, r1
   12106:	d108      	bne.n	1211a <__aeabi_fmul+0x15e>
   12108:	ea80 0001 	eor.w	r0, r0, r1
   1210c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   12110:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   12114:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   12118:	4770      	bx	lr
   1211a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1211e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   12122:	4770      	bx	lr

00012124 <__aeabi_fdiv>:
   12124:	f04f 0cff 	mov.w	r12, #255	; 0xff
   12128:	ea1c 52d0 	ands.w	r2, r12, r0, lsr #23
   1212c:	bf1e      	ittt	ne
   1212e:	ea1c 53d1 	andsne.w	r3, r12, r1, lsr #23
   12132:	ea92 0f0c 	teqne	r2, r12
   12136:	ea93 0f0c 	teqne	r3, r12
   1213a:	d069      	beq.n	12210 <__aeabi_fdiv+0xec>
   1213c:	eba2 0203 	sub.w	r2, r2, r3
   12140:	ea80 0c01 	eor.w	r12, r0, r1
   12144:	0249      	lsls	r1, r1, #9
   12146:	ea4f 2040 	mov.w	r0, r0, lsl #9
   1214a:	d037      	beq.n	121bc <__aeabi_fdiv+0x98>
   1214c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   12150:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   12154:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   12158:	f00c 4000 	and.w	r0, r12, #2147483648	; 0x80000000
   1215c:	428b      	cmp	r3, r1
   1215e:	bf38      	it	cc
   12160:	005b      	lslcc	r3, r3, #1
   12162:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   12166:	f44f 0c00 	mov.w	r12, #8388608	; 0x800000
   1216a:	428b      	cmp	r3, r1
   1216c:	bf24      	itt	cs
   1216e:	1a5b      	subcs	r3, r3, r1
   12170:	ea40 000c 	orrcs.w	r0, r0, r12
   12174:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   12178:	bf24      	itt	cs
   1217a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   1217e:	ea40 005c 	orrcs.w	r0, r0, r12, lsr #1
   12182:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   12186:	bf24      	itt	cs
   12188:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   1218c:	ea40 009c 	orrcs.w	r0, r0, r12, lsr #2
   12190:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   12194:	bf24      	itt	cs
   12196:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   1219a:	ea40 00dc 	orrcs.w	r0, r0, r12, lsr #3
   1219e:	011b      	lsls	r3, r3, #4
   121a0:	bf18      	it	ne
   121a2:	ea5f 1c1c 	movsne.w	r12, r12, lsr #4
   121a6:	d1e0      	bne.n	1216a <__aeabi_fdiv+0x46>
   121a8:	2afd      	cmp	r2, #253	; 0xfd
   121aa:	f63f af50 	bhi.w	1204e <__aeabi_fmul+0x92>
   121ae:	428b      	cmp	r3, r1
   121b0:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   121b4:	bf08      	it	eq
   121b6:	f020 0001 	biceq.w	r0, r0, #1
   121ba:	4770      	bx	lr
   121bc:	f00c 4c00 	and.w	r12, r12, #2147483648	; 0x80000000
   121c0:	ea4c 2050 	orr.w	r0, r12, r0, lsr #9
   121c4:	327f      	adds	r2, #127	; 0x7f
   121c6:	bfc2      	ittt	gt
   121c8:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   121cc:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   121d0:	4770      	bxgt	lr
   121d2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   121d6:	f04f 0300 	mov.w	r3, #0
   121da:	3a01      	subs	r2, #1
   121dc:	e737      	b.n	1204e <__aeabi_fmul+0x92>
   121de:	f092 0f00 	teq	r2, #0
   121e2:	f000 4c00 	and.w	r12, r0, #2147483648	; 0x80000000
   121e6:	bf02      	ittt	eq
   121e8:	0040      	lsleq	r0, r0, #1
   121ea:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   121ee:	3a01      	subeq	r2, #1
   121f0:	d0f9      	beq.n	121e6 <__aeabi_fdiv+0xc2>
   121f2:	ea40 000c 	orr.w	r0, r0, r12
   121f6:	f093 0f00 	teq	r3, #0
   121fa:	f001 4c00 	and.w	r12, r1, #2147483648	; 0x80000000
   121fe:	bf02      	ittt	eq
   12200:	0049      	lsleq	r1, r1, #1
   12202:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   12206:	3b01      	subeq	r3, #1
   12208:	d0f9      	beq.n	121fe <__aeabi_fdiv+0xda>
   1220a:	ea41 010c 	orr.w	r1, r1, r12
   1220e:	e795      	b.n	1213c <__aeabi_fdiv+0x18>
   12210:	ea0c 53d1 	and.w	r3, r12, r1, lsr #23
   12214:	ea92 0f0c 	teq	r2, r12
   12218:	d108      	bne.n	1222c <__aeabi_fdiv+0x108>
   1221a:	0242      	lsls	r2, r0, #9
   1221c:	f47f af7d 	bne.w	1211a <__aeabi_fmul+0x15e>
   12220:	ea93 0f0c 	teq	r3, r12
   12224:	f47f af70 	bne.w	12108 <__aeabi_fmul+0x14c>
   12228:	4608      	mov	r0, r1
   1222a:	e776      	b.n	1211a <__aeabi_fmul+0x15e>
   1222c:	ea93 0f0c 	teq	r3, r12
   12230:	d104      	bne.n	1223c <__aeabi_fdiv+0x118>
   12232:	024b      	lsls	r3, r1, #9
   12234:	f43f af4c 	beq.w	120d0 <__aeabi_fmul+0x114>
   12238:	4608      	mov	r0, r1
   1223a:	e76e      	b.n	1211a <__aeabi_fmul+0x15e>
   1223c:	f030 4c00 	bics.w	r12, r0, #2147483648	; 0x80000000
   12240:	bf18      	it	ne
   12242:	f031 4c00 	bicsne.w	r12, r1, #2147483648	; 0x80000000
   12246:	d1ca      	bne.n	121de <__aeabi_fdiv+0xba>
   12248:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   1224c:	f47f af5c 	bne.w	12108 <__aeabi_fmul+0x14c>
   12250:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   12254:	f47f af3c 	bne.w	120d0 <__aeabi_fmul+0x114>
   12258:	e75f      	b.n	1211a <__aeabi_fmul+0x15e>
   1225a:	bf00      	nop

0001225c <__gesf2>:
   1225c:	f04f 3cff 	mov.w	r12, #4294967295
   12260:	e006      	b.n	12270 <__cmpsf2+0x4>
   12262:	bf00      	nop

00012264 <__lesf2>:
   12264:	f04f 0c01 	mov.w	r12, #1
   12268:	e002      	b.n	12270 <__cmpsf2+0x4>
   1226a:	bf00      	nop

0001226c <__cmpsf2>:
   1226c:	f04f 0c01 	mov.w	r12, #1
   12270:	f84d cd04 	str.w	r12, [sp, #-4]!
   12274:	ea4f 0240 	mov.w	r2, r0, lsl #1
   12278:	ea4f 0341 	mov.w	r3, r1, lsl #1
   1227c:	ea7f 6c22 	mvns.w	r12, r2, asr #24
   12280:	bf18      	it	ne
   12282:	ea7f 6c23 	mvnsne.w	r12, r3, asr #24
   12286:	d011      	beq.n	122ac <__cmpsf2+0x40>
   12288:	b001      	add	sp, #4
   1228a:	ea52 0c53 	orrs.w	r12, r2, r3, lsr #1
   1228e:	bf18      	it	ne
   12290:	ea90 0f01 	teqne	r0, r1
   12294:	bf58      	it	pl
   12296:	ebb2 0003 	subspl.w	r0, r2, r3
   1229a:	bf88      	it	hi
   1229c:	17c8      	asrhi	r0, r1, #31
   1229e:	bf38      	it	cc
   122a0:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
   122a4:	bf18      	it	ne
   122a6:	f040 0001 	orrne.w	r0, r0, #1
   122aa:	4770      	bx	lr
   122ac:	ea7f 6c22 	mvns.w	r12, r2, asr #24
   122b0:	d102      	bne.n	122b8 <__cmpsf2+0x4c>
   122b2:	ea5f 2c40 	movs.w	r12, r0, lsl #9
   122b6:	d105      	bne.n	122c4 <__cmpsf2+0x58>
   122b8:	ea7f 6c23 	mvns.w	r12, r3, asr #24
   122bc:	d1e4      	bne.n	12288 <__cmpsf2+0x1c>
   122be:	ea5f 2c41 	movs.w	r12, r1, lsl #9
   122c2:	d0e1      	beq.n	12288 <__cmpsf2+0x1c>
   122c4:	f85d 0b04 	ldr.w	r0, [sp], #4
   122c8:	4770      	bx	lr
   122ca:	bf00      	nop

000122cc <__aeabi_cfrcmple>:
   122cc:	4684      	mov	r12, r0
   122ce:	4608      	mov	r0, r1
   122d0:	4661      	mov	r1, r12
   122d2:	e7ff      	b.n	122d4 <__aeabi_cfcmpeq>

000122d4 <__aeabi_cfcmpeq>:
   122d4:	b50f      	push	{r0, r1, r2, r3, lr}
   122d6:	f7ff ffc9 	bl	1226c <__cmpsf2>
   122da:	2800      	cmp	r0, #0
   122dc:	bf48      	it	mi
   122de:	f110 0f00 	cmnmi.w	r0, #0
   122e2:	bd0f      	pop	{r0, r1, r2, r3, pc}

000122e4 <__aeabi_fcmpeq>:
   122e4:	f84d ed08 	str.w	lr, [sp, #-8]!
   122e8:	f7ff fff4 	bl	122d4 <__aeabi_cfcmpeq>
   122ec:	bf0c      	ite	eq
   122ee:	2001      	moveq	r0, #1
   122f0:	2000      	movne	r0, #0
   122f2:	f85d fb08 	ldr.w	pc, [sp], #8
   122f6:	bf00      	nop

000122f8 <__aeabi_fcmplt>:
   122f8:	f84d ed08 	str.w	lr, [sp, #-8]!
   122fc:	f7ff ffea 	bl	122d4 <__aeabi_cfcmpeq>
   12300:	bf34      	ite	cc
   12302:	2001      	movcc	r0, #1
   12304:	2000      	movcs	r0, #0
   12306:	f85d fb08 	ldr.w	pc, [sp], #8
   1230a:	bf00      	nop

0001230c <__aeabi_fcmple>:
   1230c:	f84d ed08 	str.w	lr, [sp, #-8]!
   12310:	f7ff ffe0 	bl	122d4 <__aeabi_cfcmpeq>
   12314:	bf94      	ite	ls
   12316:	2001      	movls	r0, #1
   12318:	2000      	movhi	r0, #0
   1231a:	f85d fb08 	ldr.w	pc, [sp], #8
   1231e:	bf00      	nop

00012320 <__aeabi_fcmpge>:
   12320:	f84d ed08 	str.w	lr, [sp, #-8]!
   12324:	f7ff ffd2 	bl	122cc <__aeabi_cfrcmple>
   12328:	bf94      	ite	ls
   1232a:	2001      	movls	r0, #1
   1232c:	2000      	movhi	r0, #0
   1232e:	f85d fb08 	ldr.w	pc, [sp], #8
   12332:	bf00      	nop

00012334 <__aeabi_fcmpgt>:
   12334:	f84d ed08 	str.w	lr, [sp, #-8]!
   12338:	f7ff ffc8 	bl	122cc <__aeabi_cfrcmple>
   1233c:	bf34      	ite	cc
   1233e:	2001      	movcc	r0, #1
   12340:	2000      	movcs	r0, #0
   12342:	f85d fb08 	ldr.w	pc, [sp], #8
   12346:	bf00      	nop

00012348 <__aeabi_f2iz>:
   12348:	ea4f 0240 	mov.w	r2, r0, lsl #1
   1234c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   12350:	d30f      	bcc.n	12372 <__aeabi_f2iz+0x2a>
   12352:	f04f 039e 	mov.w	r3, #158	; 0x9e
   12356:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   1235a:	d90d      	bls.n	12378 <__aeabi_f2iz+0x30>
   1235c:	ea4f 2300 	mov.w	r3, r0, lsl #8
   12360:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   12364:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   12368:	fa23 f002 	lsr.w	r0, r3, r2
   1236c:	bf18      	it	ne
   1236e:	4240      	negne	r0, r0
   12370:	4770      	bx	lr
   12372:	f04f 0000 	mov.w	r0, #0
   12376:	4770      	bx	lr
   12378:	f112 0f61 	cmn.w	r2, #97	; 0x61
   1237c:	d101      	bne.n	12382 <__aeabi_f2iz+0x3a>
   1237e:	0242      	lsls	r2, r0, #9
   12380:	d105      	bne.n	1238e <__aeabi_f2iz+0x46>
   12382:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
   12386:	bf08      	it	eq
   12388:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   1238c:	4770      	bx	lr
   1238e:	f04f 0000 	mov.w	r0, #0
   12392:	4770      	bx	lr

00012394 <__aeabi_f2uiz>:
   12394:	0042      	lsls	r2, r0, #1
   12396:	d20e      	bcs.n	123b6 <__aeabi_f2uiz+0x22>
   12398:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   1239c:	d30b      	bcc.n	123b6 <__aeabi_f2uiz+0x22>
   1239e:	f04f 039e 	mov.w	r3, #158	; 0x9e
   123a2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   123a6:	d409      	bmi.n	123bc <__aeabi_f2uiz+0x28>
   123a8:	ea4f 2300 	mov.w	r3, r0, lsl #8
   123ac:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   123b0:	fa23 f002 	lsr.w	r0, r3, r2
   123b4:	4770      	bx	lr
   123b6:	f04f 0000 	mov.w	r0, #0
   123ba:	4770      	bx	lr
   123bc:	f112 0f61 	cmn.w	r2, #97	; 0x61
   123c0:	d101      	bne.n	123c6 <__aeabi_f2uiz+0x32>
   123c2:	0242      	lsls	r2, r0, #9
   123c4:	d102      	bne.n	123cc <__aeabi_f2uiz+0x38>
   123c6:	f04f 30ff 	mov.w	r0, #4294967295
   123ca:	4770      	bx	lr
   123cc:	f04f 0000 	mov.w	r0, #0
   123d0:	4770      	bx	lr
   123d2:	bf00      	nop

000123d4 <__aeabi_uldivmod>:
   123d4:	b94b      	cbnz	r3, 123ea <__aeabi_uldivmod+0x16>
   123d6:	b942      	cbnz	r2, 123ea <__aeabi_uldivmod+0x16>
   123d8:	2900      	cmp	r1, #0
   123da:	bf08      	it	eq
   123dc:	2800      	cmpeq	r0, #0
   123de:	d002      	beq.n	123e6 <__aeabi_uldivmod+0x12>
   123e0:	f04f 31ff 	mov.w	r1, #4294967295
   123e4:	4608      	mov	r0, r1
   123e6:	f000 b83b 	b.w	12460 <__aeabi_idiv0>
   123ea:	b082      	sub	sp, #8
   123ec:	46ec      	mov	r12, sp
   123ee:	e92d 5000 	stmdb	sp!, {r12, lr}
   123f2:	f000 f81d 	bl	12430 <__gnu_uldivmod_helper>
   123f6:	f8dd e004 	ldr.w	lr, [sp, #4]
   123fa:	b002      	add	sp, #8
   123fc:	bc0c      	pop	{r2, r3}
   123fe:	4770      	bx	lr

00012400 <__gnu_ldivmod_helper>:
   12400:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   12404:	9c06      	ldr	r4, [sp, #24]
   12406:	4690      	mov	r8, r2
   12408:	4606      	mov	r6, r0
   1240a:	460f      	mov	r7, r1
   1240c:	461d      	mov	r5, r3
   1240e:	f000 f829 	bl	12464 <__divdi3>
   12412:	fb08 fc01 	mul.w	r12, r8, r1
   12416:	fba8 2300 	umull	r2, r3, r8, r0
   1241a:	fb00 c505 	mla	r5, r0, r5, r12
   1241e:	1ab2      	subs	r2, r6, r2
   12420:	442b      	add	r3, r5
   12422:	eb67 0303 	sbc.w	r3, r7, r3
   12426:	4686      	mov	lr, r0
   12428:	e9c4 2300 	strd	r2, r3, [r4]
   1242c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00012430 <__gnu_uldivmod_helper>:
   12430:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   12434:	9e08      	ldr	r6, [sp, #32]
   12436:	4617      	mov	r7, r2
   12438:	4680      	mov	r8, r0
   1243a:	4689      	mov	r9, r1
   1243c:	461d      	mov	r5, r3
   1243e:	f000 f967 	bl	12710 <__udivdi3>
   12442:	fb00 f305 	mul.w	r3, r0, r5
   12446:	fba0 4507 	umull	r4, r5, r0, r7
   1244a:	fb07 3701 	mla	r7, r7, r1, r3
   1244e:	ebb8 0404 	subs.w	r4, r8, r4
   12452:	443d      	add	r5, r7
   12454:	eb69 0505 	sbc.w	r5, r9, r5
   12458:	e9c6 4500 	strd	r4, r5, [r6]
   1245c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00012460 <__aeabi_idiv0>:
   12460:	4770      	bx	lr
   12462:	bf00      	nop

00012464 <__divdi3>:
   12464:	2900      	cmp	r1, #0
   12466:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1246a:	f2c0 80a8 	blt.w	125be <__divdi3+0x15a>
   1246e:	2600      	movs	r6, #0
   12470:	2b00      	cmp	r3, #0
   12472:	f2c0 809e 	blt.w	125b2 <__divdi3+0x14e>
   12476:	4681      	mov	r9, r0
   12478:	468e      	mov	lr, r1
   1247a:	4690      	mov	r8, r2
   1247c:	469c      	mov	r12, r3
   1247e:	4617      	mov	r7, r2
   12480:	4604      	mov	r4, r0
   12482:	460d      	mov	r5, r1
   12484:	2b00      	cmp	r3, #0
   12486:	d13d      	bne.n	12504 <__divdi3+0xa0>
   12488:	428a      	cmp	r2, r1
   1248a:	d959      	bls.n	12540 <__divdi3+0xdc>
   1248c:	fab2 f382 	clz	r3, r2
   12490:	b13b      	cbz	r3, 124a2 <__divdi3+0x3e>
   12492:	f1c3 0220 	rsb	r2, r3, #32
   12496:	409d      	lsls	r5, r3
   12498:	fa20 f202 	lsr.w	r2, r0, r2
   1249c:	409f      	lsls	r7, r3
   1249e:	4315      	orrs	r5, r2
   124a0:	409c      	lsls	r4, r3
   124a2:	0c39      	lsrs	r1, r7, #16
   124a4:	fbb5 f0f1 	udiv	r0, r5, r1
   124a8:	fa1f fe87 	uxth.w	lr, r7
   124ac:	fb01 5510 	mls	r5, r1, r0, r5
   124b0:	fb0e f300 	mul.w	r3, lr, r0
   124b4:	0c22      	lsrs	r2, r4, #16
   124b6:	ea42 4505 	orr.w	r5, r2, r5, lsl #16
   124ba:	42ab      	cmp	r3, r5
   124bc:	d909      	bls.n	124d2 <__divdi3+0x6e>
   124be:	19ed      	adds	r5, r5, r7
   124c0:	f100 32ff 	add.w	r2, r0, #4294967295
   124c4:	f080 810b 	bcs.w	126de <__divdi3+0x27a>
   124c8:	42ab      	cmp	r3, r5
   124ca:	f240 8108 	bls.w	126de <__divdi3+0x27a>
   124ce:	3802      	subs	r0, #2
   124d0:	443d      	add	r5, r7
   124d2:	1aed      	subs	r5, r5, r3
   124d4:	fbb5 f3f1 	udiv	r3, r5, r1
   124d8:	fb01 5513 	mls	r5, r1, r3, r5
   124dc:	fb0e fe03 	mul.w	lr, lr, r3
   124e0:	b2a4      	uxth	r4, r4
   124e2:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
   124e6:	45ae      	cmp	lr, r5
   124e8:	d908      	bls.n	124fc <__divdi3+0x98>
   124ea:	19ed      	adds	r5, r5, r7
   124ec:	f103 32ff 	add.w	r2, r3, #4294967295
   124f0:	f080 80f7 	bcs.w	126e2 <__divdi3+0x27e>
   124f4:	45ae      	cmp	lr, r5
   124f6:	f240 80f4 	bls.w	126e2 <__divdi3+0x27e>
   124fa:	3b02      	subs	r3, #2
   124fc:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
   12500:	2200      	movs	r2, #0
   12502:	e003      	b.n	1250c <__divdi3+0xa8>
   12504:	428b      	cmp	r3, r1
   12506:	d90f      	bls.n	12528 <__divdi3+0xc4>
   12508:	2200      	movs	r2, #0
   1250a:	4613      	mov	r3, r2
   1250c:	1c34      	adds	r4, r6, #0
   1250e:	bf18      	it	ne
   12510:	2401      	movne	r4, #1
   12512:	4260      	negs	r0, r4
   12514:	f04f 0500 	mov.w	r5, #0
   12518:	eb65 0145 	sbc.w	r1, r5, r5, lsl #1
   1251c:	4058      	eors	r0, r3
   1251e:	4051      	eors	r1, r2
   12520:	1900      	adds	r0, r0, r4
   12522:	4169      	adcs	r1, r5
   12524:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   12528:	fab3 f283 	clz	r2, r3
   1252c:	2a00      	cmp	r2, #0
   1252e:	f040 8089 	bne.w	12644 <__divdi3+0x1e0>
   12532:	428b      	cmp	r3, r1
   12534:	d302      	bcc.n	1253c <__divdi3+0xd8>
   12536:	4580      	cmp	r8, r0
   12538:	f200 80e2 	bhi.w	12700 <__divdi3+0x29c>
   1253c:	2301      	movs	r3, #1
   1253e:	e7e5      	b.n	1250c <__divdi3+0xa8>
   12540:	b912      	cbnz	r2, 12548 <__divdi3+0xe4>
   12542:	2301      	movs	r3, #1
   12544:	fbb3 f7f2 	udiv	r7, r3, r2
   12548:	fab7 f887 	clz	r8, r7
   1254c:	f1b8 0f00 	cmp.w	r8, #0
   12550:	d13b      	bne.n	125ca <__divdi3+0x166>
   12552:	1bed      	subs	r5, r5, r7
   12554:	ea4f 4c17 	mov.w	r12, r7, lsr #16
   12558:	fa1f fe87 	uxth.w	lr, r7
   1255c:	2201      	movs	r2, #1
   1255e:	fbb5 f0fc 	udiv	r0, r5, r12
   12562:	fb0c 5510 	mls	r5, r12, r0, r5
   12566:	fb0e f300 	mul.w	r3, lr, r0
   1256a:	0c21      	lsrs	r1, r4, #16
   1256c:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
   12570:	42ab      	cmp	r3, r5
   12572:	d907      	bls.n	12584 <__divdi3+0x120>
   12574:	19ed      	adds	r5, r5, r7
   12576:	f100 31ff 	add.w	r1, r0, #4294967295
   1257a:	d202      	bcs.n	12582 <__divdi3+0x11e>
   1257c:	42ab      	cmp	r3, r5
   1257e:	f200 80c3 	bhi.w	12708 <__divdi3+0x2a4>
   12582:	4608      	mov	r0, r1
   12584:	1aed      	subs	r5, r5, r3
   12586:	fbb5 f3fc 	udiv	r3, r5, r12
   1258a:	fb0c 5513 	mls	r5, r12, r3, r5
   1258e:	fb0e fe03 	mul.w	lr, lr, r3
   12592:	b2a4      	uxth	r4, r4
   12594:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
   12598:	45ae      	cmp	lr, r5
   1259a:	d907      	bls.n	125ac <__divdi3+0x148>
   1259c:	19ed      	adds	r5, r5, r7
   1259e:	f103 31ff 	add.w	r1, r3, #4294967295
   125a2:	d202      	bcs.n	125aa <__divdi3+0x146>
   125a4:	45ae      	cmp	lr, r5
   125a6:	f200 80ad 	bhi.w	12704 <__divdi3+0x2a0>
   125aa:	460b      	mov	r3, r1
   125ac:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
   125b0:	e7ac      	b.n	1250c <__divdi3+0xa8>
   125b2:	4252      	negs	r2, r2
   125b4:	ea6f 0606 	mvn.w	r6, r6
   125b8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   125bc:	e75b      	b.n	12476 <__divdi3+0x12>
   125be:	4240      	negs	r0, r0
   125c0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   125c4:	f04f 36ff 	mov.w	r6, #4294967295
   125c8:	e752      	b.n	12470 <__divdi3+0xc>
   125ca:	fa07 f708 	lsl.w	r7, r7, r8
   125ce:	f1c8 0220 	rsb	r2, r8, #32
   125d2:	fa25 f302 	lsr.w	r3, r5, r2
   125d6:	ea4f 4c17 	mov.w	r12, r7, lsr #16
   125da:	fbb3 f1fc 	udiv	r1, r3, r12
   125de:	fa1f fe87 	uxth.w	lr, r7
   125e2:	fb0c 3311 	mls	r3, r12, r1, r3
   125e6:	fa24 f202 	lsr.w	r2, r4, r2
   125ea:	fa05 f508 	lsl.w	r5, r5, r8
   125ee:	fb0e f901 	mul.w	r9, lr, r1
   125f2:	432a      	orrs	r2, r5
   125f4:	0c10      	lsrs	r0, r2, #16
   125f6:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
   125fa:	4599      	cmp	r9, r3
   125fc:	fa04 f408 	lsl.w	r4, r4, r8
   12600:	d907      	bls.n	12612 <__divdi3+0x1ae>
   12602:	19db      	adds	r3, r3, r7
   12604:	f101 30ff 	add.w	r0, r1, #4294967295
   12608:	d278      	bcs.n	126fc <__divdi3+0x298>
   1260a:	4599      	cmp	r9, r3
   1260c:	d976      	bls.n	126fc <__divdi3+0x298>
   1260e:	3902      	subs	r1, #2
   12610:	443b      	add	r3, r7
   12612:	ebc9 0303 	rsb	r3, r9, r3
   12616:	fbb3 f0fc 	udiv	r0, r3, r12
   1261a:	fb0c 3310 	mls	r3, r12, r0, r3
   1261e:	fb0e f500 	mul.w	r5, lr, r0
   12622:	b292      	uxth	r2, r2
   12624:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   12628:	429d      	cmp	r5, r3
   1262a:	d907      	bls.n	1263c <__divdi3+0x1d8>
   1262c:	19db      	adds	r3, r3, r7
   1262e:	f100 32ff 	add.w	r2, r0, #4294967295
   12632:	d25f      	bcs.n	126f4 <__divdi3+0x290>
   12634:	429d      	cmp	r5, r3
   12636:	d95d      	bls.n	126f4 <__divdi3+0x290>
   12638:	3802      	subs	r0, #2
   1263a:	443b      	add	r3, r7
   1263c:	1b5d      	subs	r5, r3, r5
   1263e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
   12642:	e78c      	b.n	1255e <__divdi3+0xfa>
   12644:	f1c2 0320 	rsb	r3, r2, #32
   12648:	fa28 f103 	lsr.w	r1, r8, r3
   1264c:	fa0c fc02 	lsl.w	r12, r12, r2
   12650:	ea41 0c0c 	orr.w	r12, r1, r12
   12654:	ea4f 401c 	mov.w	r0, r12, lsr #16
   12658:	fa2e f103 	lsr.w	r1, lr, r3
   1265c:	fbb1 f5f0 	udiv	r5, r1, r0
   12660:	fa1f f78c 	uxth.w	r7, r12
   12664:	fb00 1115 	mls	r1, r0, r5, r1
   12668:	fa29 f303 	lsr.w	r3, r9, r3
   1266c:	fa0e fe02 	lsl.w	lr, lr, r2
   12670:	fb07 f905 	mul.w	r9, r7, r5
   12674:	ea43 0e0e 	orr.w	lr, r3, lr
   12678:	ea4f 431e 	mov.w	r3, lr, lsr #16
   1267c:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   12680:	4589      	cmp	r9, r1
   12682:	fa08 f802 	lsl.w	r8, r8, r2
   12686:	d908      	bls.n	1269a <__divdi3+0x236>
   12688:	eb11 010c 	adds.w	r1, r1, r12
   1268c:	f105 33ff 	add.w	r3, r5, #4294967295
   12690:	d232      	bcs.n	126f8 <__divdi3+0x294>
   12692:	4589      	cmp	r9, r1
   12694:	d930      	bls.n	126f8 <__divdi3+0x294>
   12696:	3d02      	subs	r5, #2
   12698:	4461      	add	r1, r12
   1269a:	ebc9 0101 	rsb	r1, r9, r1
   1269e:	fbb1 f3f0 	udiv	r3, r1, r0
   126a2:	fb00 1113 	mls	r1, r0, r3, r1
   126a6:	fb07 f703 	mul.w	r7, r7, r3
   126aa:	fa1f fe8e 	uxth.w	lr, lr
   126ae:	ea4e 4e01 	orr.w	lr, lr, r1, lsl #16
   126b2:	4577      	cmp	r7, lr
   126b4:	d908      	bls.n	126c8 <__divdi3+0x264>
   126b6:	eb1e 0e0c 	adds.w	lr, lr, r12
   126ba:	f103 31ff 	add.w	r1, r3, #4294967295
   126be:	d217      	bcs.n	126f0 <__divdi3+0x28c>
   126c0:	4577      	cmp	r7, lr
   126c2:	d915      	bls.n	126f0 <__divdi3+0x28c>
   126c4:	3b02      	subs	r3, #2
   126c6:	44e6      	add	lr, r12
   126c8:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
   126cc:	fba3 8908 	umull	r8, r9, r3, r8
   126d0:	ebc7 0e0e 	rsb	lr, r7, lr
   126d4:	45ce      	cmp	lr, r9
   126d6:	d309      	bcc.n	126ec <__divdi3+0x288>
   126d8:	d005      	beq.n	126e6 <__divdi3+0x282>
   126da:	2200      	movs	r2, #0
   126dc:	e716      	b.n	1250c <__divdi3+0xa8>
   126de:	4610      	mov	r0, r2
   126e0:	e6f7      	b.n	124d2 <__divdi3+0x6e>
   126e2:	4613      	mov	r3, r2
   126e4:	e70a      	b.n	124fc <__divdi3+0x98>
   126e6:	4094      	lsls	r4, r2
   126e8:	4544      	cmp	r4, r8
   126ea:	d2f6      	bcs.n	126da <__divdi3+0x276>
   126ec:	3b01      	subs	r3, #1
   126ee:	e7f4      	b.n	126da <__divdi3+0x276>
   126f0:	460b      	mov	r3, r1
   126f2:	e7e9      	b.n	126c8 <__divdi3+0x264>
   126f4:	4610      	mov	r0, r2
   126f6:	e7a1      	b.n	1263c <__divdi3+0x1d8>
   126f8:	461d      	mov	r5, r3
   126fa:	e7ce      	b.n	1269a <__divdi3+0x236>
   126fc:	4601      	mov	r1, r0
   126fe:	e788      	b.n	12612 <__divdi3+0x1ae>
   12700:	4613      	mov	r3, r2
   12702:	e703      	b.n	1250c <__divdi3+0xa8>
   12704:	3b02      	subs	r3, #2
   12706:	e751      	b.n	125ac <__divdi3+0x148>
   12708:	3802      	subs	r0, #2
   1270a:	443d      	add	r5, r7
   1270c:	e73a      	b.n	12584 <__divdi3+0x120>
   1270e:	bf00      	nop

00012710 <__udivdi3>:
   12710:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   12714:	2b00      	cmp	r3, #0
   12716:	d144      	bne.n	127a2 <__udivdi3+0x92>
   12718:	428a      	cmp	r2, r1
   1271a:	4615      	mov	r5, r2
   1271c:	4604      	mov	r4, r0
   1271e:	d94f      	bls.n	127c0 <__udivdi3+0xb0>
   12720:	fab2 f782 	clz	r7, r2
   12724:	460e      	mov	r6, r1
   12726:	b14f      	cbz	r7, 1273c <__udivdi3+0x2c>
   12728:	f1c7 0320 	rsb	r3, r7, #32
   1272c:	40b9      	lsls	r1, r7
   1272e:	fa20 f603 	lsr.w	r6, r0, r3
   12732:	fa02 f507 	lsl.w	r5, r2, r7
   12736:	430e      	orrs	r6, r1
   12738:	fa00 f407 	lsl.w	r4, r0, r7
   1273c:	0c2f      	lsrs	r7, r5, #16
   1273e:	fbb6 f0f7 	udiv	r0, r6, r7
   12742:	fa1f fe85 	uxth.w	lr, r5
   12746:	fb07 6210 	mls	r2, r7, r0, r6
   1274a:	fb0e f100 	mul.w	r1, lr, r0
   1274e:	0c26      	lsrs	r6, r4, #16
   12750:	ea46 4302 	orr.w	r3, r6, r2, lsl #16
   12754:	4299      	cmp	r1, r3
   12756:	d909      	bls.n	1276c <__udivdi3+0x5c>
   12758:	195b      	adds	r3, r3, r5
   1275a:	f100 32ff 	add.w	r2, r0, #4294967295
   1275e:	f080 80ee 	bcs.w	1293e <__udivdi3+0x22e>
   12762:	4299      	cmp	r1, r3
   12764:	f240 80eb 	bls.w	1293e <__udivdi3+0x22e>
   12768:	3802      	subs	r0, #2
   1276a:	442b      	add	r3, r5
   1276c:	1a59      	subs	r1, r3, r1
   1276e:	fbb1 f3f7 	udiv	r3, r1, r7
   12772:	fb07 1113 	mls	r1, r7, r3, r1
   12776:	fb0e fe03 	mul.w	lr, lr, r3
   1277a:	b2a4      	uxth	r4, r4
   1277c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
   12780:	458e      	cmp	lr, r1
   12782:	d908      	bls.n	12796 <__udivdi3+0x86>
   12784:	1949      	adds	r1, r1, r5
   12786:	f103 32ff 	add.w	r2, r3, #4294967295
   1278a:	f080 80da 	bcs.w	12942 <__udivdi3+0x232>
   1278e:	458e      	cmp	lr, r1
   12790:	f240 80d7 	bls.w	12942 <__udivdi3+0x232>
   12794:	3b02      	subs	r3, #2
   12796:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
   1279a:	2600      	movs	r6, #0
   1279c:	4631      	mov	r1, r6
   1279e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   127a2:	428b      	cmp	r3, r1
   127a4:	d847      	bhi.n	12836 <__udivdi3+0x126>
   127a6:	fab3 f683 	clz	r6, r3
   127aa:	2e00      	cmp	r6, #0
   127ac:	d148      	bne.n	12840 <__udivdi3+0x130>
   127ae:	428b      	cmp	r3, r1
   127b0:	d302      	bcc.n	127b8 <__udivdi3+0xa8>
   127b2:	4282      	cmp	r2, r0
   127b4:	f200 80cf 	bhi.w	12956 <__udivdi3+0x246>
   127b8:	2001      	movs	r0, #1
   127ba:	4631      	mov	r1, r6
   127bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   127c0:	b912      	cbnz	r2, 127c8 <__udivdi3+0xb8>
   127c2:	2501      	movs	r5, #1
   127c4:	fbb5 f5f2 	udiv	r5, r5, r2
   127c8:	fab5 fc85 	clz	r12, r5
   127cc:	f1bc 0f00 	cmp.w	r12, #0
   127d0:	d178      	bne.n	128c4 <__udivdi3+0x1b4>
   127d2:	1b49      	subs	r1, r1, r5
   127d4:	0c2f      	lsrs	r7, r5, #16
   127d6:	fa1f fe85 	uxth.w	lr, r5
   127da:	2601      	movs	r6, #1
   127dc:	fbb1 f0f7 	udiv	r0, r1, r7
   127e0:	fb07 1110 	mls	r1, r7, r0, r1
   127e4:	fb0e f200 	mul.w	r2, lr, r0
   127e8:	0c23      	lsrs	r3, r4, #16
   127ea:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   127ee:	428a      	cmp	r2, r1
   127f0:	d907      	bls.n	12802 <__udivdi3+0xf2>
   127f2:	1949      	adds	r1, r1, r5
   127f4:	f100 33ff 	add.w	r3, r0, #4294967295
   127f8:	d202      	bcs.n	12800 <__udivdi3+0xf0>
   127fa:	428a      	cmp	r2, r1
   127fc:	f200 80bc 	bhi.w	12978 <__udivdi3+0x268>
   12800:	4618      	mov	r0, r3
   12802:	1a89      	subs	r1, r1, r2
   12804:	fbb1 f3f7 	udiv	r3, r1, r7
   12808:	fb07 1113 	mls	r1, r7, r3, r1
   1280c:	fb0e fe03 	mul.w	lr, lr, r3
   12810:	b2a4      	uxth	r4, r4
   12812:	ea44 4201 	orr.w	r2, r4, r1, lsl #16
   12816:	4596      	cmp	lr, r2
   12818:	d908      	bls.n	1282c <__udivdi3+0x11c>
   1281a:	1952      	adds	r2, r2, r5
   1281c:	f103 31ff 	add.w	r1, r3, #4294967295
   12820:	f080 8091 	bcs.w	12946 <__udivdi3+0x236>
   12824:	4596      	cmp	lr, r2
   12826:	f240 808e 	bls.w	12946 <__udivdi3+0x236>
   1282a:	3b02      	subs	r3, #2
   1282c:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
   12830:	4631      	mov	r1, r6
   12832:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   12836:	2600      	movs	r6, #0
   12838:	4630      	mov	r0, r6
   1283a:	4631      	mov	r1, r6
   1283c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   12840:	f1c6 0420 	rsb	r4, r6, #32
   12844:	fa22 f504 	lsr.w	r5, r2, r4
   12848:	40b3      	lsls	r3, r6
   1284a:	432b      	orrs	r3, r5
   1284c:	fa21 f704 	lsr.w	r7, r1, r4
   12850:	ea4f 4813 	mov.w	r8, r3, lsr #16
   12854:	fbb7 fcf8 	udiv	r12, r7, r8
   12858:	fa1f f983 	uxth.w	r9, r3
   1285c:	fb08 771c 	mls	r7, r8, r12, r7
   12860:	fa20 fe04 	lsr.w	lr, r0, r4
   12864:	fa01 f506 	lsl.w	r5, r1, r6
   12868:	fb09 f40c 	mul.w	r4, r9, r12
   1286c:	ea4e 0505 	orr.w	r5, lr, r5
   12870:	ea4f 4e15 	mov.w	lr, r5, lsr #16
   12874:	ea4e 4707 	orr.w	r7, lr, r7, lsl #16
   12878:	42bc      	cmp	r4, r7
   1287a:	fa02 f206 	lsl.w	r2, r2, r6
   1287e:	d904      	bls.n	1288a <__udivdi3+0x17a>
   12880:	18ff      	adds	r7, r7, r3
   12882:	f10c 31ff 	add.w	r1, r12, #4294967295
   12886:	d368      	bcc.n	1295a <__udivdi3+0x24a>
   12888:	468c      	mov	r12, r1
   1288a:	1b3f      	subs	r7, r7, r4
   1288c:	fbb7 f4f8 	udiv	r4, r7, r8
   12890:	fb08 7714 	mls	r7, r8, r4, r7
   12894:	fb09 f904 	mul.w	r9, r9, r4
   12898:	b2ad      	uxth	r5, r5
   1289a:	ea45 4107 	orr.w	r1, r5, r7, lsl #16
   1289e:	4589      	cmp	r9, r1
   128a0:	d904      	bls.n	128ac <__udivdi3+0x19c>
   128a2:	18c9      	adds	r1, r1, r3
   128a4:	f104 35ff 	add.w	r5, r4, #4294967295
   128a8:	d35d      	bcc.n	12966 <__udivdi3+0x256>
   128aa:	462c      	mov	r4, r5
   128ac:	ea44 440c 	orr.w	r4, r4, r12, lsl #16
   128b0:	fba4 2302 	umull	r2, r3, r4, r2
   128b4:	ebc9 0101 	rsb	r1, r9, r1
   128b8:	4299      	cmp	r1, r3
   128ba:	d349      	bcc.n	12950 <__udivdi3+0x240>
   128bc:	d045      	beq.n	1294a <__udivdi3+0x23a>
   128be:	4620      	mov	r0, r4
   128c0:	2600      	movs	r6, #0
   128c2:	e76b      	b.n	1279c <__udivdi3+0x8c>
   128c4:	f1cc 0420 	rsb	r4, r12, #32
   128c8:	fa05 f50c 	lsl.w	r5, r5, r12
   128cc:	fa21 f304 	lsr.w	r3, r1, r4
   128d0:	0c2a      	lsrs	r2, r5, #16
   128d2:	fbb3 f6f2 	udiv	r6, r3, r2
   128d6:	fa1f fe85 	uxth.w	lr, r5
   128da:	fb02 3816 	mls	r8, r2, r6, r3
   128de:	fa20 f704 	lsr.w	r7, r0, r4
   128e2:	fa01 f10c 	lsl.w	r1, r1, r12
   128e6:	fb0e f906 	mul.w	r9, lr, r6
   128ea:	430f      	orrs	r7, r1
   128ec:	0c3c      	lsrs	r4, r7, #16
   128ee:	ea44 4308 	orr.w	r3, r4, r8, lsl #16
   128f2:	4599      	cmp	r9, r3
   128f4:	fa00 f40c 	lsl.w	r4, r0, r12
   128f8:	d907      	bls.n	1290a <__udivdi3+0x1fa>
   128fa:	195b      	adds	r3, r3, r5
   128fc:	f106 31ff 	add.w	r1, r6, #4294967295
   12900:	d238      	bcs.n	12974 <__udivdi3+0x264>
   12902:	4599      	cmp	r9, r3
   12904:	d936      	bls.n	12974 <__udivdi3+0x264>
   12906:	3e02      	subs	r6, #2
   12908:	442b      	add	r3, r5
   1290a:	ebc9 0303 	rsb	r3, r9, r3
   1290e:	fbb3 f0f2 	udiv	r0, r3, r2
   12912:	fb02 3310 	mls	r3, r2, r0, r3
   12916:	fb0e f100 	mul.w	r1, lr, r0
   1291a:	b2bf      	uxth	r7, r7
   1291c:	ea47 4303 	orr.w	r3, r7, r3, lsl #16
   12920:	4299      	cmp	r1, r3
   12922:	d907      	bls.n	12934 <__udivdi3+0x224>
   12924:	195b      	adds	r3, r3, r5
   12926:	f100 37ff 	add.w	r7, r0, #4294967295
   1292a:	d221      	bcs.n	12970 <__udivdi3+0x260>
   1292c:	4299      	cmp	r1, r3
   1292e:	d91f      	bls.n	12970 <__udivdi3+0x260>
   12930:	3802      	subs	r0, #2
   12932:	442b      	add	r3, r5
   12934:	4617      	mov	r7, r2
   12936:	1a59      	subs	r1, r3, r1
   12938:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
   1293c:	e74e      	b.n	127dc <__udivdi3+0xcc>
   1293e:	4610      	mov	r0, r2
   12940:	e714      	b.n	1276c <__udivdi3+0x5c>
   12942:	4613      	mov	r3, r2
   12944:	e727      	b.n	12796 <__udivdi3+0x86>
   12946:	460b      	mov	r3, r1
   12948:	e770      	b.n	1282c <__udivdi3+0x11c>
   1294a:	40b0      	lsls	r0, r6
   1294c:	4290      	cmp	r0, r2
   1294e:	d2b6      	bcs.n	128be <__udivdi3+0x1ae>
   12950:	1e60      	subs	r0, r4, #1
   12952:	2600      	movs	r6, #0
   12954:	e722      	b.n	1279c <__udivdi3+0x8c>
   12956:	4630      	mov	r0, r6
   12958:	e720      	b.n	1279c <__udivdi3+0x8c>
   1295a:	42bc      	cmp	r4, r7
   1295c:	d994      	bls.n	12888 <__udivdi3+0x178>
   1295e:	f1ac 0c02 	sub.w	r12, r12, #2
   12962:	441f      	add	r7, r3
   12964:	e791      	b.n	1288a <__udivdi3+0x17a>
   12966:	4589      	cmp	r9, r1
   12968:	d99f      	bls.n	128aa <__udivdi3+0x19a>
   1296a:	3c02      	subs	r4, #2
   1296c:	4419      	add	r1, r3
   1296e:	e79d      	b.n	128ac <__udivdi3+0x19c>
   12970:	4638      	mov	r0, r7
   12972:	e7df      	b.n	12934 <__udivdi3+0x224>
   12974:	460e      	mov	r6, r1
   12976:	e7c8      	b.n	1290a <__udivdi3+0x1fa>
   12978:	3802      	subs	r0, #2
   1297a:	4429      	add	r1, r5
   1297c:	e741      	b.n	12802 <__udivdi3+0xf2>
   1297e:	bf00      	nop

00012980 <btowc>:
   12980:	b5f0      	push	{r4, r5, r6, r7, lr}
   12982:	1c43      	adds	r3, r0, #1
   12984:	b087      	sub	sp, #28
   12986:	d102      	bne.n	1298e <btowc+0xe>
   12988:	f04f 30ff 	mov.w	r0, #4294967295
   1298c:	e03d      	b.n	12a0a <btowc+0x8a>
   1298e:	ae04      	add	r6, sp, #16
   12990:	4d1f      	ldr	r5, [pc, #124]	; (12a10 <btowc+0x90>)
   12992:	f88d 000b 	strb.w	r0, [sp, #11]
   12996:	2100      	movs	r1, #0
   12998:	4630      	mov	r0, r6
   1299a:	2208      	movs	r2, #8
   1299c:	f000 fe9c 	bl	136d8 <memset>
   129a0:	682f      	ldr	r7, [r5, #0]
   129a2:	6dbc      	ldr	r4, [r7, #88]	; 0x58
   129a4:	bb0c      	cbnz	r4, 129ea <btowc+0x6a>
   129a6:	2050      	movs	r0, #80	; 0x50
   129a8:	f7ee f89a 	bl	ae0 <__wrap_malloc>
   129ac:	682b      	ldr	r3, [r5, #0]
   129ae:	65b8      	str	r0, [r7, #88]	; 0x58
   129b0:	6d9a      	ldr	r2, [r3, #88]	; 0x58
   129b2:	6094      	str	r4, [r2, #8]
   129b4:	6014      	str	r4, [r2, #0]
   129b6:	6054      	str	r4, [r2, #4]
   129b8:	6d9a      	ldr	r2, [r3, #88]	; 0x58
   129ba:	6114      	str	r4, [r2, #16]
   129bc:	60d4      	str	r4, [r2, #12]
   129be:	6d9a      	ldr	r2, [r3, #88]	; 0x58
   129c0:	6194      	str	r4, [r2, #24]
   129c2:	6154      	str	r4, [r2, #20]
   129c4:	6d9a      	ldr	r2, [r3, #88]	; 0x58
   129c6:	62d4      	str	r4, [r2, #44]	; 0x2c
   129c8:	6294      	str	r4, [r2, #40]	; 0x28
   129ca:	6d9a      	ldr	r2, [r3, #88]	; 0x58
   129cc:	6354      	str	r4, [r2, #52]	; 0x34
   129ce:	6314      	str	r4, [r2, #48]	; 0x30
   129d0:	6d9a      	ldr	r2, [r3, #88]	; 0x58
   129d2:	63d4      	str	r4, [r2, #60]	; 0x3c
   129d4:	6394      	str	r4, [r2, #56]	; 0x38
   129d6:	6d9a      	ldr	r2, [r3, #88]	; 0x58
   129d8:	6454      	str	r4, [r2, #68]	; 0x44
   129da:	6414      	str	r4, [r2, #64]	; 0x40
   129dc:	6d9a      	ldr	r2, [r3, #88]	; 0x58
   129de:	64d4      	str	r4, [r2, #76]	; 0x4c
   129e0:	6494      	str	r4, [r2, #72]	; 0x48
   129e2:	6d9a      	ldr	r2, [r3, #88]	; 0x58
   129e4:	7714      	strb	r4, [r2, #28]
   129e6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
   129e8:	625c      	str	r4, [r3, #36]	; 0x24
   129ea:	4b0a      	ldr	r3, [pc, #40]	; (12a14 <btowc+0x94>)
   129ec:	682d      	ldr	r5, [r5, #0]
   129ee:	681c      	ldr	r4, [r3, #0]
   129f0:	f000 fd6e 	bl	134d0 <__locale_charset>
   129f4:	a903      	add	r1, sp, #12
   129f6:	e88d 0041 	stmia.w	sp, {r0, r6}
   129fa:	f10d 020b 	add.w	r2, sp, #11
   129fe:	4628      	mov	r0, r5
   12a00:	2301      	movs	r3, #1
   12a02:	47a0      	blx	r4
   12a04:	2801      	cmp	r0, #1
   12a06:	d8bf      	bhi.n	12988 <btowc+0x8>
   12a08:	9803      	ldr	r0, [sp, #12]
   12a0a:	b007      	add	sp, #28
   12a0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   12a0e:	bf00      	nop
   12a10:	100001d4 	.word	0x100001d4
   12a14:	10000234 	.word	0x10000234

00012a18 <__cxa_atexit>:
   12a18:	b538      	push	{r3, r4, r5, lr}
   12a1a:	4605      	mov	r5, r0
   12a1c:	4804      	ldr	r0, [pc, #16]	; (12a30 <__cxa_atexit+0x18>)
   12a1e:	460c      	mov	r4, r1
   12a20:	4613      	mov	r3, r2
   12a22:	b120      	cbz	r0, 12a2e <__cxa_atexit+0x16>
   12a24:	2002      	movs	r0, #2
   12a26:	4629      	mov	r1, r5
   12a28:	4622      	mov	r2, r4
   12a2a:	f3af 8000 	nop.w
   12a2e:	bd38      	pop	{r3, r4, r5, pc}
   12a30:	00000000 	.word	0x00000000

00012a34 <__errno>:
   12a34:	4b01      	ldr	r3, [pc, #4]	; (12a3c <__errno+0x8>)
   12a36:	6818      	ldr	r0, [r3, #0]
   12a38:	4770      	bx	lr
   12a3a:	bf00      	nop
   12a3c:	100001d4 	.word	0x100001d4

00012a40 <exit>:
   12a40:	b508      	push	{r3, lr}
   12a42:	4b07      	ldr	r3, [pc, #28]	; (12a60 <exit+0x20>)
   12a44:	4604      	mov	r4, r0
   12a46:	b113      	cbz	r3, 12a4e <exit+0xe>
   12a48:	2100      	movs	r1, #0
   12a4a:	f3af 8000 	nop.w
   12a4e:	4b05      	ldr	r3, [pc, #20]	; (12a64 <exit+0x24>)
   12a50:	6818      	ldr	r0, [r3, #0]
   12a52:	6a83      	ldr	r3, [r0, #40]	; 0x28
   12a54:	b103      	cbz	r3, 12a58 <exit+0x18>
   12a56:	4798      	blx	r3
   12a58:	4620      	mov	r0, r4
   12a5a:	f7ef fbd5 	bl	2208 <_exit>
   12a5e:	bf00      	nop
   12a60:	00000000 	.word	0x00000000
   12a64:	0001c744 	.word	0x0001c744

00012a68 <_fclose_r>:
   12a68:	b570      	push	{r4, r5, r6, lr}
   12a6a:	4605      	mov	r5, r0
   12a6c:	460c      	mov	r4, r1
   12a6e:	b909      	cbnz	r1, 12a74 <_fclose_r+0xc>
   12a70:	2000      	movs	r0, #0
   12a72:	bd70      	pop	{r4, r5, r6, pc}
   12a74:	b118      	cbz	r0, 12a7e <_fclose_r+0x16>
   12a76:	6983      	ldr	r3, [r0, #24]
   12a78:	b90b      	cbnz	r3, 12a7e <_fclose_r+0x16>
   12a7a:	f000 f94f 	bl	12d1c <__sinit>
   12a7e:	4b20      	ldr	r3, [pc, #128]	; (12b00 <_fclose_r+0x98>)
   12a80:	429c      	cmp	r4, r3
   12a82:	d101      	bne.n	12a88 <_fclose_r+0x20>
   12a84:	686c      	ldr	r4, [r5, #4]
   12a86:	e008      	b.n	12a9a <_fclose_r+0x32>
   12a88:	4b1e      	ldr	r3, [pc, #120]	; (12b04 <_fclose_r+0x9c>)
   12a8a:	429c      	cmp	r4, r3
   12a8c:	d101      	bne.n	12a92 <_fclose_r+0x2a>
   12a8e:	68ac      	ldr	r4, [r5, #8]
   12a90:	e003      	b.n	12a9a <_fclose_r+0x32>
   12a92:	4b1d      	ldr	r3, [pc, #116]	; (12b08 <_fclose_r+0xa0>)
   12a94:	429c      	cmp	r4, r3
   12a96:	bf08      	it	eq
   12a98:	68ec      	ldreq	r4, [r5, #12]
   12a9a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   12a9e:	2b00      	cmp	r3, #0
   12aa0:	d0e6      	beq.n	12a70 <_fclose_r+0x8>
   12aa2:	4628      	mov	r0, r5
   12aa4:	4621      	mov	r1, r4
   12aa6:	f000 f839 	bl	12b1c <__sflush_r>
   12aaa:	6b23      	ldr	r3, [r4, #48]	; 0x30
   12aac:	4606      	mov	r6, r0
   12aae:	b133      	cbz	r3, 12abe <_fclose_r+0x56>
   12ab0:	4628      	mov	r0, r5
   12ab2:	6a21      	ldr	r1, [r4, #32]
   12ab4:	4798      	blx	r3
   12ab6:	2800      	cmp	r0, #0
   12ab8:	bfb8      	it	lt
   12aba:	f04f 36ff 	movlt.w	r6, #4294967295
   12abe:	89a3      	ldrh	r3, [r4, #12]
   12ac0:	061b      	lsls	r3, r3, #24
   12ac2:	d503      	bpl.n	12acc <_fclose_r+0x64>
   12ac4:	4628      	mov	r0, r5
   12ac6:	6921      	ldr	r1, [r4, #16]
   12ac8:	f000 fe0e 	bl	136e8 <_free_r>
   12acc:	6b61      	ldr	r1, [r4, #52]	; 0x34
   12ace:	b141      	cbz	r1, 12ae2 <_fclose_r+0x7a>
   12ad0:	f104 0344 	add.w	r3, r4, #68	; 0x44
   12ad4:	4299      	cmp	r1, r3
   12ad6:	d002      	beq.n	12ade <_fclose_r+0x76>
   12ad8:	4628      	mov	r0, r5
   12ada:	f000 fe05 	bl	136e8 <_free_r>
   12ade:	2300      	movs	r3, #0
   12ae0:	6363      	str	r3, [r4, #52]	; 0x34
   12ae2:	6ca1      	ldr	r1, [r4, #72]	; 0x48
   12ae4:	b121      	cbz	r1, 12af0 <_fclose_r+0x88>
   12ae6:	4628      	mov	r0, r5
   12ae8:	f000 fdfe 	bl	136e8 <_free_r>
   12aec:	2300      	movs	r3, #0
   12aee:	64a3      	str	r3, [r4, #72]	; 0x48
   12af0:	f000 f97e 	bl	12df0 <__sfp_lock_acquire>
   12af4:	2300      	movs	r3, #0
   12af6:	81a3      	strh	r3, [r4, #12]
   12af8:	f000 f97b 	bl	12df2 <__sfp_lock_release>
   12afc:	4630      	mov	r0, r6
   12afe:	bd70      	pop	{r4, r5, r6, pc}
   12b00:	0001c6e4 	.word	0x0001c6e4
   12b04:	0001c704 	.word	0x0001c704
   12b08:	0001c724 	.word	0x0001c724

00012b0c <fclose>:
   12b0c:	4b02      	ldr	r3, [pc, #8]	; (12b18 <fclose+0xc>)
   12b0e:	4601      	mov	r1, r0
   12b10:	6818      	ldr	r0, [r3, #0]
   12b12:	f7ff bfa9 	b.w	12a68 <_fclose_r>
   12b16:	bf00      	nop
   12b18:	100001d4 	.word	0x100001d4

00012b1c <__sflush_r>:
   12b1c:	898a      	ldrh	r2, [r1, #12]
   12b1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   12b22:	4605      	mov	r5, r0
   12b24:	0710      	lsls	r0, r2, #28
   12b26:	460c      	mov	r4, r1
   12b28:	d457      	bmi.n	12bda <__sflush_r+0xbe>
   12b2a:	684b      	ldr	r3, [r1, #4]
   12b2c:	2b00      	cmp	r3, #0
   12b2e:	dc02      	bgt.n	12b36 <__sflush_r+0x1a>
   12b30:	6c0b      	ldr	r3, [r1, #64]	; 0x40
   12b32:	2b00      	cmp	r3, #0
   12b34:	dd18      	ble.n	12b68 <__sflush_r+0x4c>
   12b36:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   12b38:	b1b6      	cbz	r6, 12b68 <__sflush_r+0x4c>
   12b3a:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
   12b3e:	2300      	movs	r3, #0
   12b40:	b292      	uxth	r2, r2
   12b42:	682f      	ldr	r7, [r5, #0]
   12b44:	602b      	str	r3, [r5, #0]
   12b46:	b10a      	cbz	r2, 12b4c <__sflush_r+0x30>
   12b48:	6d62      	ldr	r2, [r4, #84]	; 0x54
   12b4a:	e010      	b.n	12b6e <__sflush_r+0x52>
   12b4c:	6a21      	ldr	r1, [r4, #32]
   12b4e:	4628      	mov	r0, r5
   12b50:	2301      	movs	r3, #1
   12b52:	47b0      	blx	r6
   12b54:	1c41      	adds	r1, r0, #1
   12b56:	4602      	mov	r2, r0
   12b58:	d109      	bne.n	12b6e <__sflush_r+0x52>
   12b5a:	682b      	ldr	r3, [r5, #0]
   12b5c:	b13b      	cbz	r3, 12b6e <__sflush_r+0x52>
   12b5e:	2b1d      	cmp	r3, #29
   12b60:	d001      	beq.n	12b66 <__sflush_r+0x4a>
   12b62:	2b16      	cmp	r3, #22
   12b64:	d146      	bne.n	12bf4 <__sflush_r+0xd8>
   12b66:	602f      	str	r7, [r5, #0]
   12b68:	2000      	movs	r0, #0
   12b6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   12b6e:	89a3      	ldrh	r3, [r4, #12]
   12b70:	075b      	lsls	r3, r3, #29
   12b72:	d505      	bpl.n	12b80 <__sflush_r+0x64>
   12b74:	6863      	ldr	r3, [r4, #4]
   12b76:	1ad2      	subs	r2, r2, r3
   12b78:	6b63      	ldr	r3, [r4, #52]	; 0x34
   12b7a:	b10b      	cbz	r3, 12b80 <__sflush_r+0x64>
   12b7c:	6c23      	ldr	r3, [r4, #64]	; 0x40
   12b7e:	1ad2      	subs	r2, r2, r3
   12b80:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   12b82:	2300      	movs	r3, #0
   12b84:	4628      	mov	r0, r5
   12b86:	6a21      	ldr	r1, [r4, #32]
   12b88:	47b0      	blx	r6
   12b8a:	1c46      	adds	r6, r0, #1
   12b8c:	89a3      	ldrh	r3, [r4, #12]
   12b8e:	d105      	bne.n	12b9c <__sflush_r+0x80>
   12b90:	682a      	ldr	r2, [r5, #0]
   12b92:	b11a      	cbz	r2, 12b9c <__sflush_r+0x80>
   12b94:	2a1d      	cmp	r2, #29
   12b96:	d001      	beq.n	12b9c <__sflush_r+0x80>
   12b98:	2a16      	cmp	r2, #22
   12b9a:	d119      	bne.n	12bd0 <__sflush_r+0xb4>
   12b9c:	2200      	movs	r2, #0
   12b9e:	6062      	str	r2, [r4, #4]
   12ba0:	6922      	ldr	r2, [r4, #16]
   12ba2:	04d9      	lsls	r1, r3, #19
   12ba4:	6022      	str	r2, [r4, #0]
   12ba6:	d504      	bpl.n	12bb2 <__sflush_r+0x96>
   12ba8:	1c42      	adds	r2, r0, #1
   12baa:	d101      	bne.n	12bb0 <__sflush_r+0x94>
   12bac:	682b      	ldr	r3, [r5, #0]
   12bae:	b903      	cbnz	r3, 12bb2 <__sflush_r+0x96>
   12bb0:	6560      	str	r0, [r4, #84]	; 0x54
   12bb2:	6b61      	ldr	r1, [r4, #52]	; 0x34
   12bb4:	602f      	str	r7, [r5, #0]
   12bb6:	2900      	cmp	r1, #0
   12bb8:	d0d6      	beq.n	12b68 <__sflush_r+0x4c>
   12bba:	f104 0344 	add.w	r3, r4, #68	; 0x44
   12bbe:	4299      	cmp	r1, r3
   12bc0:	d002      	beq.n	12bc8 <__sflush_r+0xac>
   12bc2:	4628      	mov	r0, r5
   12bc4:	f000 fd90 	bl	136e8 <_free_r>
   12bc8:	2000      	movs	r0, #0
   12bca:	6360      	str	r0, [r4, #52]	; 0x34
   12bcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   12bd0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   12bd4:	81a3      	strh	r3, [r4, #12]
   12bd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   12bda:	690f      	ldr	r7, [r1, #16]
   12bdc:	2f00      	cmp	r7, #0
   12bde:	d0c3      	beq.n	12b68 <__sflush_r+0x4c>
   12be0:	0793      	lsls	r3, r2, #30
   12be2:	680e      	ldr	r6, [r1, #0]
   12be4:	bf0c      	ite	eq
   12be6:	694b      	ldreq	r3, [r1, #20]
   12be8:	2300      	movne	r3, #0
   12bea:	ebc7 0806 	rsb	r8, r7, r6
   12bee:	600f      	str	r7, [r1, #0]
   12bf0:	608b      	str	r3, [r1, #8]
   12bf2:	e012      	b.n	12c1a <__sflush_r+0xfe>
   12bf4:	89a3      	ldrh	r3, [r4, #12]
   12bf6:	f04f 30ff 	mov.w	r0, #4294967295
   12bfa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   12bfe:	81a3      	strh	r3, [r4, #12]
   12c00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   12c04:	4628      	mov	r0, r5
   12c06:	6a21      	ldr	r1, [r4, #32]
   12c08:	463a      	mov	r2, r7
   12c0a:	4643      	mov	r3, r8
   12c0c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
   12c0e:	47b0      	blx	r6
   12c10:	2800      	cmp	r0, #0
   12c12:	ddef      	ble.n	12bf4 <__sflush_r+0xd8>
   12c14:	4407      	add	r7, r0
   12c16:	ebc0 0808 	rsb	r8, r0, r8
   12c1a:	f1b8 0f00 	cmp.w	r8, #0
   12c1e:	dcf1      	bgt.n	12c04 <__sflush_r+0xe8>
   12c20:	e7a2      	b.n	12b68 <__sflush_r+0x4c>
	...

00012c24 <_fflush_r>:
   12c24:	b538      	push	{r3, r4, r5, lr}
   12c26:	690b      	ldr	r3, [r1, #16]
   12c28:	4605      	mov	r5, r0
   12c2a:	460c      	mov	r4, r1
   12c2c:	b1db      	cbz	r3, 12c66 <_fflush_r+0x42>
   12c2e:	b118      	cbz	r0, 12c38 <_fflush_r+0x14>
   12c30:	6983      	ldr	r3, [r0, #24]
   12c32:	b90b      	cbnz	r3, 12c38 <_fflush_r+0x14>
   12c34:	f000 f872 	bl	12d1c <__sinit>
   12c38:	4b0c      	ldr	r3, [pc, #48]	; (12c6c <_fflush_r+0x48>)
   12c3a:	429c      	cmp	r4, r3
   12c3c:	d101      	bne.n	12c42 <_fflush_r+0x1e>
   12c3e:	686c      	ldr	r4, [r5, #4]
   12c40:	e008      	b.n	12c54 <_fflush_r+0x30>
   12c42:	4b0b      	ldr	r3, [pc, #44]	; (12c70 <_fflush_r+0x4c>)
   12c44:	429c      	cmp	r4, r3
   12c46:	d101      	bne.n	12c4c <_fflush_r+0x28>
   12c48:	68ac      	ldr	r4, [r5, #8]
   12c4a:	e003      	b.n	12c54 <_fflush_r+0x30>
   12c4c:	4b09      	ldr	r3, [pc, #36]	; (12c74 <_fflush_r+0x50>)
   12c4e:	429c      	cmp	r4, r3
   12c50:	bf08      	it	eq
   12c52:	68ec      	ldreq	r4, [r5, #12]
   12c54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   12c58:	b12b      	cbz	r3, 12c66 <_fflush_r+0x42>
   12c5a:	4628      	mov	r0, r5
   12c5c:	4621      	mov	r1, r4
   12c5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   12c62:	f7ff bf5b 	b.w	12b1c <__sflush_r>
   12c66:	2000      	movs	r0, #0
   12c68:	bd38      	pop	{r3, r4, r5, pc}
   12c6a:	bf00      	nop
   12c6c:	0001c6e4 	.word	0x0001c6e4
   12c70:	0001c704 	.word	0x0001c704
   12c74:	0001c724 	.word	0x0001c724

00012c78 <fflush>:
   12c78:	4601      	mov	r1, r0
   12c7a:	b920      	cbnz	r0, 12c86 <fflush+0xe>
   12c7c:	4b04      	ldr	r3, [pc, #16]	; (12c90 <fflush+0x18>)
   12c7e:	4905      	ldr	r1, [pc, #20]	; (12c94 <fflush+0x1c>)
   12c80:	6818      	ldr	r0, [r3, #0]
   12c82:	f000 baa5 	b.w	131d0 <_fwalk_reent>
   12c86:	4b04      	ldr	r3, [pc, #16]	; (12c98 <fflush+0x20>)
   12c88:	6818      	ldr	r0, [r3, #0]
   12c8a:	f7ff bfcb 	b.w	12c24 <_fflush_r>
   12c8e:	bf00      	nop
   12c90:	0001c744 	.word	0x0001c744
   12c94:	00012c25 	.word	0x00012c25
   12c98:	100001d4 	.word	0x100001d4

00012c9c <_cleanup_r>:
   12c9c:	4901      	ldr	r1, [pc, #4]	; (12ca4 <_cleanup_r+0x8>)
   12c9e:	f000 ba97 	b.w	131d0 <_fwalk_reent>
   12ca2:	bf00      	nop
   12ca4:	00012c25 	.word	0x00012c25

00012ca8 <std.isra.0>:
   12ca8:	b510      	push	{r4, lr}
   12caa:	4604      	mov	r4, r0
   12cac:	2300      	movs	r3, #0
   12cae:	6003      	str	r3, [r0, #0]
   12cb0:	6043      	str	r3, [r0, #4]
   12cb2:	6083      	str	r3, [r0, #8]
   12cb4:	8181      	strh	r1, [r0, #12]
   12cb6:	6643      	str	r3, [r0, #100]	; 0x64
   12cb8:	81c2      	strh	r2, [r0, #14]
   12cba:	6103      	str	r3, [r0, #16]
   12cbc:	6143      	str	r3, [r0, #20]
   12cbe:	6183      	str	r3, [r0, #24]
   12cc0:	4619      	mov	r1, r3
   12cc2:	305c      	adds	r0, #92	; 0x5c
   12cc4:	2208      	movs	r2, #8
   12cc6:	f000 fd07 	bl	136d8 <memset>
   12cca:	4b05      	ldr	r3, [pc, #20]	; (12ce0 <std.isra.0+0x38>)
   12ccc:	6224      	str	r4, [r4, #32]
   12cce:	6263      	str	r3, [r4, #36]	; 0x24
   12cd0:	4b04      	ldr	r3, [pc, #16]	; (12ce4 <std.isra.0+0x3c>)
   12cd2:	62a3      	str	r3, [r4, #40]	; 0x28
   12cd4:	4b04      	ldr	r3, [pc, #16]	; (12ce8 <std.isra.0+0x40>)
   12cd6:	62e3      	str	r3, [r4, #44]	; 0x2c
   12cd8:	4b04      	ldr	r3, [pc, #16]	; (12cec <std.isra.0+0x44>)
   12cda:	6323      	str	r3, [r4, #48]	; 0x30
   12cdc:	bd10      	pop	{r4, pc}
   12cde:	bf00      	nop
   12ce0:	000147b9 	.word	0x000147b9
   12ce4:	000147df 	.word	0x000147df
   12ce8:	00014817 	.word	0x00014817
   12cec:	0001483b 	.word	0x0001483b

00012cf0 <__sfmoreglue>:
   12cf0:	b570      	push	{r4, r5, r6, lr}
   12cf2:	2368      	movs	r3, #104	; 0x68
   12cf4:	1e4d      	subs	r5, r1, #1
   12cf6:	435d      	muls	r5, r3
   12cf8:	460e      	mov	r6, r1
   12cfa:	f105 0174 	add.w	r1, r5, #116	; 0x74
   12cfe:	f000 fd37 	bl	13770 <_malloc_r>
   12d02:	4604      	mov	r4, r0
   12d04:	b140      	cbz	r0, 12d18 <__sfmoreglue+0x28>
   12d06:	2100      	movs	r1, #0
   12d08:	e880 0042 	stmia.w	r0, {r1, r6}
   12d0c:	300c      	adds	r0, #12
   12d0e:	60a0      	str	r0, [r4, #8]
   12d10:	f105 0268 	add.w	r2, r5, #104	; 0x68
   12d14:	f000 fce0 	bl	136d8 <memset>
   12d18:	4620      	mov	r0, r4
   12d1a:	bd70      	pop	{r4, r5, r6, pc}

00012d1c <__sinit>:
   12d1c:	6983      	ldr	r3, [r0, #24]
   12d1e:	b510      	push	{r4, lr}
   12d20:	4604      	mov	r4, r0
   12d22:	bb33      	cbnz	r3, 12d72 <__sinit+0x56>
   12d24:	6483      	str	r3, [r0, #72]	; 0x48
   12d26:	64c3      	str	r3, [r0, #76]	; 0x4c
   12d28:	6503      	str	r3, [r0, #80]	; 0x50
   12d2a:	4b12      	ldr	r3, [pc, #72]	; (12d74 <__sinit+0x58>)
   12d2c:	4a12      	ldr	r2, [pc, #72]	; (12d78 <__sinit+0x5c>)
   12d2e:	681b      	ldr	r3, [r3, #0]
   12d30:	6282      	str	r2, [r0, #40]	; 0x28
   12d32:	4298      	cmp	r0, r3
   12d34:	bf04      	itt	eq
   12d36:	2301      	moveq	r3, #1
   12d38:	6183      	streq	r3, [r0, #24]
   12d3a:	f000 f81f 	bl	12d7c <__sfp>
   12d3e:	6060      	str	r0, [r4, #4]
   12d40:	4620      	mov	r0, r4
   12d42:	f000 f81b 	bl	12d7c <__sfp>
   12d46:	60a0      	str	r0, [r4, #8]
   12d48:	4620      	mov	r0, r4
   12d4a:	f000 f817 	bl	12d7c <__sfp>
   12d4e:	2104      	movs	r1, #4
   12d50:	60e0      	str	r0, [r4, #12]
   12d52:	2200      	movs	r2, #0
   12d54:	6860      	ldr	r0, [r4, #4]
   12d56:	f7ff ffa7 	bl	12ca8 <std.isra.0>
   12d5a:	68a0      	ldr	r0, [r4, #8]
   12d5c:	2109      	movs	r1, #9
   12d5e:	2201      	movs	r2, #1
   12d60:	f7ff ffa2 	bl	12ca8 <std.isra.0>
   12d64:	68e0      	ldr	r0, [r4, #12]
   12d66:	2112      	movs	r1, #18
   12d68:	2202      	movs	r2, #2
   12d6a:	f7ff ff9d 	bl	12ca8 <std.isra.0>
   12d6e:	2301      	movs	r3, #1
   12d70:	61a3      	str	r3, [r4, #24]
   12d72:	bd10      	pop	{r4, pc}
   12d74:	0001c744 	.word	0x0001c744
   12d78:	00012c9d 	.word	0x00012c9d

00012d7c <__sfp>:
   12d7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   12d7e:	4b1b      	ldr	r3, [pc, #108]	; (12dec <__sfp+0x70>)
   12d80:	4607      	mov	r7, r0
   12d82:	681e      	ldr	r6, [r3, #0]
   12d84:	69b3      	ldr	r3, [r6, #24]
   12d86:	b913      	cbnz	r3, 12d8e <__sfp+0x12>
   12d88:	4630      	mov	r0, r6
   12d8a:	f7ff ffc7 	bl	12d1c <__sinit>
   12d8e:	3648      	adds	r6, #72	; 0x48
   12d90:	68b4      	ldr	r4, [r6, #8]
   12d92:	6873      	ldr	r3, [r6, #4]
   12d94:	3b01      	subs	r3, #1
   12d96:	d404      	bmi.n	12da2 <__sfp+0x26>
   12d98:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
   12d9c:	b175      	cbz	r5, 12dbc <__sfp+0x40>
   12d9e:	3468      	adds	r4, #104	; 0x68
   12da0:	e7f8      	b.n	12d94 <__sfp+0x18>
   12da2:	6833      	ldr	r3, [r6, #0]
   12da4:	b92b      	cbnz	r3, 12db2 <__sfp+0x36>
   12da6:	4638      	mov	r0, r7
   12da8:	2104      	movs	r1, #4
   12daa:	f7ff ffa1 	bl	12cf0 <__sfmoreglue>
   12dae:	6030      	str	r0, [r6, #0]
   12db0:	b108      	cbz	r0, 12db6 <__sfp+0x3a>
   12db2:	6836      	ldr	r6, [r6, #0]
   12db4:	e7ec      	b.n	12d90 <__sfp+0x14>
   12db6:	230c      	movs	r3, #12
   12db8:	603b      	str	r3, [r7, #0]
   12dba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12dbc:	f64f 73ff 	movw	r3, #65535	; 0xffff
   12dc0:	81e3      	strh	r3, [r4, #14]
   12dc2:	2301      	movs	r3, #1
   12dc4:	81a3      	strh	r3, [r4, #12]
   12dc6:	6665      	str	r5, [r4, #100]	; 0x64
   12dc8:	6025      	str	r5, [r4, #0]
   12dca:	60a5      	str	r5, [r4, #8]
   12dcc:	6065      	str	r5, [r4, #4]
   12dce:	6125      	str	r5, [r4, #16]
   12dd0:	6165      	str	r5, [r4, #20]
   12dd2:	61a5      	str	r5, [r4, #24]
   12dd4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   12dd8:	4629      	mov	r1, r5
   12dda:	2208      	movs	r2, #8
   12ddc:	f000 fc7c 	bl	136d8 <memset>
   12de0:	6365      	str	r5, [r4, #52]	; 0x34
   12de2:	63a5      	str	r5, [r4, #56]	; 0x38
   12de4:	64a5      	str	r5, [r4, #72]	; 0x48
   12de6:	64e5      	str	r5, [r4, #76]	; 0x4c
   12de8:	4620      	mov	r0, r4
   12dea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   12dec:	0001c744 	.word	0x0001c744

00012df0 <__sfp_lock_acquire>:
   12df0:	4770      	bx	lr

00012df2 <__sfp_lock_release>:
   12df2:	4770      	bx	lr

00012df4 <__sflags>:
   12df4:	780b      	ldrb	r3, [r1, #0]
   12df6:	b530      	push	{r4, r5, lr}
   12df8:	2b72      	cmp	r3, #114	; 0x72
   12dfa:	d00e      	beq.n	12e1a <__sflags+0x26>
   12dfc:	2b77      	cmp	r3, #119	; 0x77
   12dfe:	d007      	beq.n	12e10 <__sflags+0x1c>
   12e00:	2b61      	cmp	r3, #97	; 0x61
   12e02:	d10e      	bne.n	12e22 <__sflags+0x2e>
   12e04:	f44f 7402 	mov.w	r4, #520	; 0x208
   12e08:	2301      	movs	r3, #1
   12e0a:	f44f 7084 	mov.w	r0, #264	; 0x108
   12e0e:	e01a      	b.n	12e46 <__sflags+0x52>
   12e10:	f44f 64c0 	mov.w	r4, #1536	; 0x600
   12e14:	2301      	movs	r3, #1
   12e16:	2008      	movs	r0, #8
   12e18:	e015      	b.n	12e46 <__sflags+0x52>
   12e1a:	2400      	movs	r4, #0
   12e1c:	4623      	mov	r3, r4
   12e1e:	2004      	movs	r0, #4
   12e20:	e011      	b.n	12e46 <__sflags+0x52>
   12e22:	2316      	movs	r3, #22
   12e24:	6003      	str	r3, [r0, #0]
   12e26:	2000      	movs	r0, #0
   12e28:	bd30      	pop	{r4, r5, pc}
   12e2a:	2d62      	cmp	r5, #98	; 0x62
   12e2c:	d010      	beq.n	12e50 <__sflags+0x5c>
   12e2e:	2d78      	cmp	r5, #120	; 0x78
   12e30:	d011      	beq.n	12e56 <__sflags+0x62>
   12e32:	2d2b      	cmp	r5, #43	; 0x2b
   12e34:	d107      	bne.n	12e46 <__sflags+0x52>
   12e36:	f020 001c 	bic.w	r0, r0, #28
   12e3a:	f023 0303 	bic.w	r3, r3, #3
   12e3e:	f040 0010 	orr.w	r0, r0, #16
   12e42:	f043 0302 	orr.w	r3, r3, #2
   12e46:	f811 5f01 	ldrb.w	r5, [r1, #1]!
   12e4a:	2d00      	cmp	r5, #0
   12e4c:	d1ed      	bne.n	12e2a <__sflags+0x36>
   12e4e:	e005      	b.n	12e5c <__sflags+0x68>
   12e50:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   12e54:	e7f7      	b.n	12e46 <__sflags+0x52>
   12e56:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   12e5a:	e7f4      	b.n	12e46 <__sflags+0x52>
   12e5c:	4323      	orrs	r3, r4
   12e5e:	6013      	str	r3, [r2, #0]
   12e60:	bd30      	pop	{r4, r5, pc}
	...

00012e64 <_fopen_r>:
   12e64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   12e66:	460f      	mov	r7, r1
   12e68:	4611      	mov	r1, r2
   12e6a:	aa01      	add	r2, sp, #4
   12e6c:	4605      	mov	r5, r0
   12e6e:	f7ff ffc1 	bl	12df4 <__sflags>
   12e72:	4606      	mov	r6, r0
   12e74:	b908      	cbnz	r0, 12e7a <_fopen_r+0x16>
   12e76:	2000      	movs	r0, #0
   12e78:	e029      	b.n	12ece <_fopen_r+0x6a>
   12e7a:	4628      	mov	r0, r5
   12e7c:	f7ff ff7e 	bl	12d7c <__sfp>
   12e80:	4604      	mov	r4, r0
   12e82:	2800      	cmp	r0, #0
   12e84:	d0f7      	beq.n	12e76 <_fopen_r+0x12>
   12e86:	4628      	mov	r0, r5
   12e88:	4639      	mov	r1, r7
   12e8a:	9a01      	ldr	r2, [sp, #4]
   12e8c:	f44f 73db 	mov.w	r3, #438	; 0x1b6
   12e90:	f001 fa5c 	bl	1434c <_open_r>
   12e94:	2800      	cmp	r0, #0
   12e96:	da06      	bge.n	12ea6 <_fopen_r+0x42>
   12e98:	2500      	movs	r5, #0
   12e9a:	f7ff ffa9 	bl	12df0 <__sfp_lock_acquire>
   12e9e:	81a5      	strh	r5, [r4, #12]
   12ea0:	f7ff ffa7 	bl	12df2 <__sfp_lock_release>
   12ea4:	e7e7      	b.n	12e76 <_fopen_r+0x12>
   12ea6:	4b0b      	ldr	r3, [pc, #44]	; (12ed4 <_fopen_r+0x70>)
   12ea8:	81e0      	strh	r0, [r4, #14]
   12eaa:	6263      	str	r3, [r4, #36]	; 0x24
   12eac:	4b0a      	ldr	r3, [pc, #40]	; (12ed8 <_fopen_r+0x74>)
   12eae:	81a6      	strh	r6, [r4, #12]
   12eb0:	62a3      	str	r3, [r4, #40]	; 0x28
   12eb2:	4b0a      	ldr	r3, [pc, #40]	; (12edc <_fopen_r+0x78>)
   12eb4:	6224      	str	r4, [r4, #32]
   12eb6:	62e3      	str	r3, [r4, #44]	; 0x2c
   12eb8:	4b09      	ldr	r3, [pc, #36]	; (12ee0 <_fopen_r+0x7c>)
   12eba:	6323      	str	r3, [r4, #48]	; 0x30
   12ebc:	05f3      	lsls	r3, r6, #23
   12ebe:	d505      	bpl.n	12ecc <_fopen_r+0x68>
   12ec0:	4628      	mov	r0, r5
   12ec2:	4621      	mov	r1, r4
   12ec4:	2200      	movs	r2, #0
   12ec6:	2302      	movs	r3, #2
   12ec8:	f000 f878 	bl	12fbc <_fseek_r>
   12ecc:	4620      	mov	r0, r4
   12ece:	b003      	add	sp, #12
   12ed0:	bdf0      	pop	{r4, r5, r6, r7, pc}
   12ed2:	bf00      	nop
   12ed4:	000147b9 	.word	0x000147b9
   12ed8:	000147df 	.word	0x000147df
   12edc:	00014817 	.word	0x00014817
   12ee0:	0001483b 	.word	0x0001483b

00012ee4 <fopen>:
   12ee4:	4603      	mov	r3, r0
   12ee6:	460a      	mov	r2, r1
   12ee8:	4902      	ldr	r1, [pc, #8]	; (12ef4 <fopen+0x10>)
   12eea:	6808      	ldr	r0, [r1, #0]
   12eec:	4619      	mov	r1, r3
   12eee:	f7ff bfb9 	b.w	12e64 <_fopen_r>
   12ef2:	bf00      	nop
   12ef4:	100001d4 	.word	0x100001d4

00012ef8 <_fread_r>:
   12ef8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
   12efc:	4615      	mov	r5, r2
   12efe:	435d      	muls	r5, r3
   12f00:	4607      	mov	r7, r0
   12f02:	468b      	mov	r11, r1
   12f04:	4692      	mov	r10, r2
   12f06:	4699      	mov	r9, r3
   12f08:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   12f0a:	d03e      	beq.n	12f8a <_fread_r+0x92>
   12f0c:	b118      	cbz	r0, 12f16 <_fread_r+0x1e>
   12f0e:	6983      	ldr	r3, [r0, #24]
   12f10:	b90b      	cbnz	r3, 12f16 <_fread_r+0x1e>
   12f12:	f7ff ff03 	bl	12d1c <__sinit>
   12f16:	4b1e      	ldr	r3, [pc, #120]	; (12f90 <_fread_r+0x98>)
   12f18:	429c      	cmp	r4, r3
   12f1a:	d101      	bne.n	12f20 <_fread_r+0x28>
   12f1c:	687c      	ldr	r4, [r7, #4]
   12f1e:	e008      	b.n	12f32 <_fread_r+0x3a>
   12f20:	4b1c      	ldr	r3, [pc, #112]	; (12f94 <_fread_r+0x9c>)
   12f22:	429c      	cmp	r4, r3
   12f24:	d101      	bne.n	12f2a <_fread_r+0x32>
   12f26:	68bc      	ldr	r4, [r7, #8]
   12f28:	e003      	b.n	12f32 <_fread_r+0x3a>
   12f2a:	4b1b      	ldr	r3, [pc, #108]	; (12f98 <_fread_r+0xa0>)
   12f2c:	429c      	cmp	r4, r3
   12f2e:	bf08      	it	eq
   12f30:	68fc      	ldreq	r4, [r7, #12]
   12f32:	6863      	ldr	r3, [r4, #4]
   12f34:	2b00      	cmp	r3, #0
   12f36:	da01      	bge.n	12f3c <_fread_r+0x44>
   12f38:	2300      	movs	r3, #0
   12f3a:	6063      	str	r3, [r4, #4]
   12f3c:	462e      	mov	r6, r5
   12f3e:	f8d4 8004 	ldr.w	r8, [r4, #4]
   12f42:	4658      	mov	r0, r11
   12f44:	4546      	cmp	r6, r8
   12f46:	6821      	ldr	r1, [r4, #0]
   12f48:	d913      	bls.n	12f72 <_fread_r+0x7a>
   12f4a:	4642      	mov	r2, r8
   12f4c:	f000 fb9e 	bl	1368c <memcpy>
   12f50:	6823      	ldr	r3, [r4, #0]
   12f52:	4638      	mov	r0, r7
   12f54:	4443      	add	r3, r8
   12f56:	6023      	str	r3, [r4, #0]
   12f58:	4621      	mov	r1, r4
   12f5a:	44c3      	add	r11, r8
   12f5c:	ebc8 0606 	rsb	r6, r8, r6
   12f60:	f001 fa58 	bl	14414 <__srefill_r>
   12f64:	2800      	cmp	r0, #0
   12f66:	d0ea      	beq.n	12f3e <_fread_r+0x46>
   12f68:	1ba8      	subs	r0, r5, r6
   12f6a:	fbb0 f0fa 	udiv	r0, r0, r10
   12f6e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
   12f72:	4632      	mov	r2, r6
   12f74:	f000 fb8a 	bl	1368c <memcpy>
   12f78:	6863      	ldr	r3, [r4, #4]
   12f7a:	6820      	ldr	r0, [r4, #0]
   12f7c:	1b9b      	subs	r3, r3, r6
   12f7e:	4430      	add	r0, r6
   12f80:	6020      	str	r0, [r4, #0]
   12f82:	6063      	str	r3, [r4, #4]
   12f84:	4648      	mov	r0, r9
   12f86:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
   12f8a:	4628      	mov	r0, r5
   12f8c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
   12f90:	0001c6e4 	.word	0x0001c6e4
   12f94:	0001c704 	.word	0x0001c704
   12f98:	0001c724 	.word	0x0001c724

00012f9c <fread>:
   12f9c:	b573      	push	{r0, r1, r4, r5, r6, lr}
   12f9e:	4606      	mov	r6, r0
   12fa0:	460d      	mov	r5, r1
   12fa2:	4614      	mov	r4, r2
   12fa4:	9300      	str	r3, [sp, #0]
   12fa6:	4b04      	ldr	r3, [pc, #16]	; (12fb8 <fread+0x1c>)
   12fa8:	4631      	mov	r1, r6
   12faa:	6818      	ldr	r0, [r3, #0]
   12fac:	462a      	mov	r2, r5
   12fae:	4623      	mov	r3, r4
   12fb0:	f7ff ffa2 	bl	12ef8 <_fread_r>
   12fb4:	b002      	add	sp, #8
   12fb6:	bd70      	pop	{r4, r5, r6, pc}
   12fb8:	100001d4 	.word	0x100001d4

00012fbc <_fseek_r>:
   12fbc:	f000 b80e 	b.w	12fdc <_fseeko_r>

00012fc0 <fseek>:
   12fc0:	b530      	push	{r4, r5, lr}
   12fc2:	4605      	mov	r5, r0
   12fc4:	460c      	mov	r4, r1
   12fc6:	4613      	mov	r3, r2
   12fc8:	4a03      	ldr	r2, [pc, #12]	; (12fd8 <fseek+0x18>)
   12fca:	4629      	mov	r1, r5
   12fcc:	6810      	ldr	r0, [r2, #0]
   12fce:	4622      	mov	r2, r4
   12fd0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   12fd4:	f000 b802 	b.w	12fdc <_fseeko_r>
   12fd8:	100001d4 	.word	0x100001d4

00012fdc <_fseeko_r>:
   12fdc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   12fe0:	460c      	mov	r4, r1
   12fe2:	4690      	mov	r8, r2
   12fe4:	461e      	mov	r6, r3
   12fe6:	4605      	mov	r5, r0
   12fe8:	b118      	cbz	r0, 12ff2 <_fseeko_r+0x16>
   12fea:	6983      	ldr	r3, [r0, #24]
   12fec:	b90b      	cbnz	r3, 12ff2 <_fseeko_r+0x16>
   12fee:	f7ff fe95 	bl	12d1c <__sinit>
   12ff2:	4b3d      	ldr	r3, [pc, #244]	; (130e8 <_fseeko_r+0x10c>)
   12ff4:	429c      	cmp	r4, r3
   12ff6:	d101      	bne.n	12ffc <_fseeko_r+0x20>
   12ff8:	686c      	ldr	r4, [r5, #4]
   12ffa:	e008      	b.n	1300e <_fseeko_r+0x32>
   12ffc:	4b3b      	ldr	r3, [pc, #236]	; (130ec <_fseeko_r+0x110>)
   12ffe:	429c      	cmp	r4, r3
   13000:	d101      	bne.n	13006 <_fseeko_r+0x2a>
   13002:	68ac      	ldr	r4, [r5, #8]
   13004:	e003      	b.n	1300e <_fseeko_r+0x32>
   13006:	4b3a      	ldr	r3, [pc, #232]	; (130f0 <_fseeko_r+0x114>)
   13008:	429c      	cmp	r4, r3
   1300a:	bf08      	it	eq
   1300c:	68ec      	ldreq	r4, [r5, #12]
   1300e:	89a3      	ldrh	r3, [r4, #12]
   13010:	f403 7384 	and.w	r3, r3, #264	; 0x108
   13014:	f5b3 7f84 	cmp.w	r3, #264	; 0x108
   13018:	d103      	bne.n	13022 <_fseeko_r+0x46>
   1301a:	4628      	mov	r0, r5
   1301c:	4621      	mov	r1, r4
   1301e:	f7ff fe01 	bl	12c24 <_fflush_r>
   13022:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
   13024:	b90f      	cbnz	r7, 1302a <_fseeko_r+0x4e>
   13026:	231d      	movs	r3, #29
   13028:	e02b      	b.n	13082 <_fseeko_r+0xa6>
   1302a:	2e01      	cmp	r6, #1
   1302c:	d004      	beq.n	13038 <_fseeko_r+0x5c>
   1302e:	2e02      	cmp	r6, #2
   13030:	d02b      	beq.n	1308a <_fseeko_r+0xae>
   13032:	b356      	cbz	r6, 1308a <_fseeko_r+0xae>
   13034:	2316      	movs	r3, #22
   13036:	e024      	b.n	13082 <_fseeko_r+0xa6>
   13038:	4628      	mov	r0, r5
   1303a:	4621      	mov	r1, r4
   1303c:	f7ff fdf2 	bl	12c24 <_fflush_r>
   13040:	89a2      	ldrh	r2, [r4, #12]
   13042:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
   13046:	b292      	uxth	r2, r2
   13048:	b10a      	cbz	r2, 1304e <_fseeko_r+0x72>
   1304a:	6d60      	ldr	r0, [r4, #84]	; 0x54
   1304c:	e005      	b.n	1305a <_fseeko_r+0x7e>
   1304e:	6a21      	ldr	r1, [r4, #32]
   13050:	4628      	mov	r0, r5
   13052:	4633      	mov	r3, r6
   13054:	47b8      	blx	r7
   13056:	1c41      	adds	r1, r0, #1
   13058:	d014      	beq.n	13084 <_fseeko_r+0xa8>
   1305a:	89a3      	ldrh	r3, [r4, #12]
   1305c:	075a      	lsls	r2, r3, #29
   1305e:	d506      	bpl.n	1306e <_fseeko_r+0x92>
   13060:	6863      	ldr	r3, [r4, #4]
   13062:	1ac0      	subs	r0, r0, r3
   13064:	6b63      	ldr	r3, [r4, #52]	; 0x34
   13066:	b14b      	cbz	r3, 1307c <_fseeko_r+0xa0>
   13068:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1306a:	1ac0      	subs	r0, r0, r3
   1306c:	e006      	b.n	1307c <_fseeko_r+0xa0>
   1306e:	071b      	lsls	r3, r3, #28
   13070:	d504      	bpl.n	1307c <_fseeko_r+0xa0>
   13072:	6823      	ldr	r3, [r4, #0]
   13074:	b113      	cbz	r3, 1307c <_fseeko_r+0xa0>
   13076:	6922      	ldr	r2, [r4, #16]
   13078:	1a9b      	subs	r3, r3, r2
   1307a:	4418      	add	r0, r3
   1307c:	4480      	add	r8, r0
   1307e:	2600      	movs	r6, #0
   13080:	e003      	b.n	1308a <_fseeko_r+0xae>
   13082:	602b      	str	r3, [r5, #0]
   13084:	f04f 39ff 	mov.w	r9, #4294967295
   13088:	e02b      	b.n	130e2 <_fseeko_r+0x106>
   1308a:	6923      	ldr	r3, [r4, #16]
   1308c:	b91b      	cbnz	r3, 13096 <_fseeko_r+0xba>
   1308e:	4628      	mov	r0, r5
   13090:	4621      	mov	r1, r4
   13092:	f000 fa35 	bl	13500 <__smakebuf_r>
   13096:	4628      	mov	r0, r5
   13098:	4621      	mov	r1, r4
   1309a:	f7ff fdc3 	bl	12c24 <_fflush_r>
   1309e:	4681      	mov	r9, r0
   130a0:	2800      	cmp	r0, #0
   130a2:	d1ef      	bne.n	13084 <_fseeko_r+0xa8>
   130a4:	4628      	mov	r0, r5
   130a6:	6a21      	ldr	r1, [r4, #32]
   130a8:	4642      	mov	r2, r8
   130aa:	4633      	mov	r3, r6
   130ac:	47b8      	blx	r7
   130ae:	3001      	adds	r0, #1
   130b0:	d0e8      	beq.n	13084 <_fseeko_r+0xa8>
   130b2:	6b61      	ldr	r1, [r4, #52]	; 0x34
   130b4:	b141      	cbz	r1, 130c8 <_fseeko_r+0xec>
   130b6:	f104 0344 	add.w	r3, r4, #68	; 0x44
   130ba:	4299      	cmp	r1, r3
   130bc:	d002      	beq.n	130c4 <_fseeko_r+0xe8>
   130be:	4628      	mov	r0, r5
   130c0:	f000 fb12 	bl	136e8 <_free_r>
   130c4:	2300      	movs	r3, #0
   130c6:	6363      	str	r3, [r4, #52]	; 0x34
   130c8:	6923      	ldr	r3, [r4, #16]
   130ca:	2100      	movs	r1, #0
   130cc:	6023      	str	r3, [r4, #0]
   130ce:	89a3      	ldrh	r3, [r4, #12]
   130d0:	6061      	str	r1, [r4, #4]
   130d2:	f423 6302 	bic.w	r3, r3, #2080	; 0x820
   130d6:	81a3      	strh	r3, [r4, #12]
   130d8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
   130dc:	2208      	movs	r2, #8
   130de:	f000 fafb 	bl	136d8 <memset>
   130e2:	4648      	mov	r0, r9
   130e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   130e8:	0001c6e4 	.word	0x0001c6e4
   130ec:	0001c704 	.word	0x0001c704
   130f0:	0001c724 	.word	0x0001c724

000130f4 <ftell>:
   130f4:	4b02      	ldr	r3, [pc, #8]	; (13100 <ftell+0xc>)
   130f6:	4601      	mov	r1, r0
   130f8:	6818      	ldr	r0, [r3, #0]
   130fa:	f000 b803 	b.w	13104 <_ftello_r>
   130fe:	bf00      	nop
   13100:	100001d4 	.word	0x100001d4

00013104 <_ftello_r>:
   13104:	b570      	push	{r4, r5, r6, lr}
   13106:	460c      	mov	r4, r1
   13108:	4605      	mov	r5, r0
   1310a:	b118      	cbz	r0, 13114 <_ftello_r+0x10>
   1310c:	6983      	ldr	r3, [r0, #24]
   1310e:	b90b      	cbnz	r3, 13114 <_ftello_r+0x10>
   13110:	f7ff fe04 	bl	12d1c <__sinit>
   13114:	4b1d      	ldr	r3, [pc, #116]	; (1318c <_ftello_r+0x88>)
   13116:	429c      	cmp	r4, r3
   13118:	d101      	bne.n	1311e <_ftello_r+0x1a>
   1311a:	686c      	ldr	r4, [r5, #4]
   1311c:	e008      	b.n	13130 <_ftello_r+0x2c>
   1311e:	4b1c      	ldr	r3, [pc, #112]	; (13190 <_ftello_r+0x8c>)
   13120:	429c      	cmp	r4, r3
   13122:	d101      	bne.n	13128 <_ftello_r+0x24>
   13124:	68ac      	ldr	r4, [r5, #8]
   13126:	e003      	b.n	13130 <_ftello_r+0x2c>
   13128:	4b1a      	ldr	r3, [pc, #104]	; (13194 <_ftello_r+0x90>)
   1312a:	429c      	cmp	r4, r3
   1312c:	bf08      	it	eq
   1312e:	68ec      	ldreq	r4, [r5, #12]
   13130:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   13132:	b923      	cbnz	r3, 1313e <_ftello_r+0x3a>
   13134:	231d      	movs	r3, #29
   13136:	602b      	str	r3, [r5, #0]
   13138:	f04f 30ff 	mov.w	r0, #4294967295
   1313c:	bd70      	pop	{r4, r5, r6, pc}
   1313e:	89a3      	ldrh	r3, [r4, #12]
   13140:	0718      	lsls	r0, r3, #28
   13142:	d503      	bpl.n	1314c <_ftello_r+0x48>
   13144:	4628      	mov	r0, r5
   13146:	4621      	mov	r1, r4
   13148:	f7ff fd6c 	bl	12c24 <_fflush_r>
   1314c:	89a2      	ldrh	r2, [r4, #12]
   1314e:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
   13152:	b292      	uxth	r2, r2
   13154:	b10a      	cbz	r2, 1315a <_ftello_r+0x56>
   13156:	6d60      	ldr	r0, [r4, #84]	; 0x54
   13158:	e006      	b.n	13168 <_ftello_r+0x64>
   1315a:	6a21      	ldr	r1, [r4, #32]
   1315c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   1315e:	4628      	mov	r0, r5
   13160:	2301      	movs	r3, #1
   13162:	47b0      	blx	r6
   13164:	1c41      	adds	r1, r0, #1
   13166:	d010      	beq.n	1318a <_ftello_r+0x86>
   13168:	89a3      	ldrh	r3, [r4, #12]
   1316a:	075a      	lsls	r2, r3, #29
   1316c:	d506      	bpl.n	1317c <_ftello_r+0x78>
   1316e:	6863      	ldr	r3, [r4, #4]
   13170:	1ac0      	subs	r0, r0, r3
   13172:	6b63      	ldr	r3, [r4, #52]	; 0x34
   13174:	b14b      	cbz	r3, 1318a <_ftello_r+0x86>
   13176:	6c23      	ldr	r3, [r4, #64]	; 0x40
   13178:	1ac0      	subs	r0, r0, r3
   1317a:	bd70      	pop	{r4, r5, r6, pc}
   1317c:	071b      	lsls	r3, r3, #28
   1317e:	d504      	bpl.n	1318a <_ftello_r+0x86>
   13180:	6823      	ldr	r3, [r4, #0]
   13182:	b113      	cbz	r3, 1318a <_ftello_r+0x86>
   13184:	6922      	ldr	r2, [r4, #16]
   13186:	1a9b      	subs	r3, r3, r2
   13188:	4418      	add	r0, r3
   1318a:	bd70      	pop	{r4, r5, r6, pc}
   1318c:	0001c6e4 	.word	0x0001c6e4
   13190:	0001c704 	.word	0x0001c704
   13194:	0001c724 	.word	0x0001c724

00013198 <_fwalk>:
   13198:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1319c:	4688      	mov	r8, r1
   1319e:	f100 0448 	add.w	r4, r0, #72	; 0x48
   131a2:	2600      	movs	r6, #0
   131a4:	b18c      	cbz	r4, 131ca <_fwalk+0x32>
   131a6:	68a5      	ldr	r5, [r4, #8]
   131a8:	6867      	ldr	r7, [r4, #4]
   131aa:	3f01      	subs	r7, #1
   131ac:	d40b      	bmi.n	131c6 <_fwalk+0x2e>
   131ae:	89ab      	ldrh	r3, [r5, #12]
   131b0:	2b01      	cmp	r3, #1
   131b2:	d906      	bls.n	131c2 <_fwalk+0x2a>
   131b4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   131b8:	3301      	adds	r3, #1
   131ba:	d002      	beq.n	131c2 <_fwalk+0x2a>
   131bc:	4628      	mov	r0, r5
   131be:	47c0      	blx	r8
   131c0:	4306      	orrs	r6, r0
   131c2:	3568      	adds	r5, #104	; 0x68
   131c4:	e7f1      	b.n	131aa <_fwalk+0x12>
   131c6:	6824      	ldr	r4, [r4, #0]
   131c8:	e7ec      	b.n	131a4 <_fwalk+0xc>
   131ca:	4630      	mov	r0, r6
   131cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000131d0 <_fwalk_reent>:
   131d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   131d4:	4680      	mov	r8, r0
   131d6:	4689      	mov	r9, r1
   131d8:	f100 0448 	add.w	r4, r0, #72	; 0x48
   131dc:	2600      	movs	r6, #0
   131de:	b194      	cbz	r4, 13206 <_fwalk_reent+0x36>
   131e0:	68a5      	ldr	r5, [r4, #8]
   131e2:	6867      	ldr	r7, [r4, #4]
   131e4:	3f01      	subs	r7, #1
   131e6:	d40c      	bmi.n	13202 <_fwalk_reent+0x32>
   131e8:	89ab      	ldrh	r3, [r5, #12]
   131ea:	2b01      	cmp	r3, #1
   131ec:	d907      	bls.n	131fe <_fwalk_reent+0x2e>
   131ee:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
   131f2:	3301      	adds	r3, #1
   131f4:	d003      	beq.n	131fe <_fwalk_reent+0x2e>
   131f6:	4640      	mov	r0, r8
   131f8:	4629      	mov	r1, r5
   131fa:	47c8      	blx	r9
   131fc:	4306      	orrs	r6, r0
   131fe:	3568      	adds	r5, #104	; 0x68
   13200:	e7f0      	b.n	131e4 <_fwalk_reent+0x14>
   13202:	6824      	ldr	r4, [r4, #0]
   13204:	e7eb      	b.n	131de <_fwalk_reent+0xe>
   13206:	4630      	mov	r0, r6
   13208:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0001320c <_fwrite_r>:
   1320c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   13210:	9c08      	ldr	r4, [sp, #32]
   13212:	460d      	mov	r5, r1
   13214:	4690      	mov	r8, r2
   13216:	fb02 f903 	mul.w	r9, r2, r3
   1321a:	4606      	mov	r6, r0
   1321c:	b118      	cbz	r0, 13226 <_fwrite_r+0x1a>
   1321e:	6983      	ldr	r3, [r0, #24]
   13220:	b90b      	cbnz	r3, 13226 <_fwrite_r+0x1a>
   13222:	f7ff fd7b 	bl	12d1c <__sinit>
   13226:	4b23      	ldr	r3, [pc, #140]	; (132b4 <_fwrite_r+0xa8>)
   13228:	429c      	cmp	r4, r3
   1322a:	d101      	bne.n	13230 <_fwrite_r+0x24>
   1322c:	6874      	ldr	r4, [r6, #4]
   1322e:	e008      	b.n	13242 <_fwrite_r+0x36>
   13230:	4b21      	ldr	r3, [pc, #132]	; (132b8 <_fwrite_r+0xac>)
   13232:	429c      	cmp	r4, r3
   13234:	d101      	bne.n	1323a <_fwrite_r+0x2e>
   13236:	68b4      	ldr	r4, [r6, #8]
   13238:	e003      	b.n	13242 <_fwrite_r+0x36>
   1323a:	4b20      	ldr	r3, [pc, #128]	; (132bc <_fwrite_r+0xb0>)
   1323c:	429c      	cmp	r4, r3
   1323e:	bf08      	it	eq
   13240:	68f4      	ldreq	r4, [r6, #12]
   13242:	89a3      	ldrh	r3, [r4, #12]
   13244:	071a      	lsls	r2, r3, #28
   13246:	d503      	bpl.n	13250 <_fwrite_r+0x44>
   13248:	6923      	ldr	r3, [r4, #16]
   1324a:	b10b      	cbz	r3, 13250 <_fwrite_r+0x44>
   1324c:	2700      	movs	r7, #0
   1324e:	e020      	b.n	13292 <_fwrite_r+0x86>
   13250:	4630      	mov	r0, r6
   13252:	4621      	mov	r1, r4
   13254:	f003 ffc6 	bl	171e4 <__swsetup_r>
   13258:	2800      	cmp	r0, #0
   1325a:	d0f7      	beq.n	1324c <_fwrite_r+0x40>
   1325c:	2700      	movs	r7, #0
   1325e:	e025      	b.n	132ac <_fwrite_r+0xa0>
   13260:	68a3      	ldr	r3, [r4, #8]
   13262:	3b01      	subs	r3, #1
   13264:	2b00      	cmp	r3, #0
   13266:	60a3      	str	r3, [r4, #8]
   13268:	da19      	bge.n	1329e <_fwrite_r+0x92>
   1326a:	69a2      	ldr	r2, [r4, #24]
   1326c:	4293      	cmp	r3, r2
   1326e:	db13      	blt.n	13298 <_fwrite_r+0x8c>
   13270:	6823      	ldr	r3, [r4, #0]
   13272:	782a      	ldrb	r2, [r5, #0]
   13274:	701a      	strb	r2, [r3, #0]
   13276:	6823      	ldr	r3, [r4, #0]
   13278:	7819      	ldrb	r1, [r3, #0]
   1327a:	290a      	cmp	r1, #10
   1327c:	d113      	bne.n	132a6 <_fwrite_r+0x9a>
   1327e:	4630      	mov	r0, r6
   13280:	4622      	mov	r2, r4
   13282:	f003 f89f 	bl	163c4 <__swbuf_r>
   13286:	1c43      	adds	r3, r0, #1
   13288:	4258      	negs	r0, r3
   1328a:	4158      	adcs	r0, r3
   1328c:	b970      	cbnz	r0, 132ac <_fwrite_r+0xa0>
   1328e:	3701      	adds	r7, #1
   13290:	3501      	adds	r5, #1
   13292:	454f      	cmp	r7, r9
   13294:	d1e4      	bne.n	13260 <_fwrite_r+0x54>
   13296:	e009      	b.n	132ac <_fwrite_r+0xa0>
   13298:	4630      	mov	r0, r6
   1329a:	7829      	ldrb	r1, [r5, #0]
   1329c:	e7f0      	b.n	13280 <_fwrite_r+0x74>
   1329e:	6823      	ldr	r3, [r4, #0]
   132a0:	782a      	ldrb	r2, [r5, #0]
   132a2:	701a      	strb	r2, [r3, #0]
   132a4:	6823      	ldr	r3, [r4, #0]
   132a6:	3301      	adds	r3, #1
   132a8:	6023      	str	r3, [r4, #0]
   132aa:	e7f0      	b.n	1328e <_fwrite_r+0x82>
   132ac:	fbb7 f0f8 	udiv	r0, r7, r8
   132b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   132b4:	0001c6e4 	.word	0x0001c6e4
   132b8:	0001c704 	.word	0x0001c704
   132bc:	0001c724 	.word	0x0001c724

000132c0 <fwrite>:
   132c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
   132c2:	4606      	mov	r6, r0
   132c4:	460d      	mov	r5, r1
   132c6:	4614      	mov	r4, r2
   132c8:	9300      	str	r3, [sp, #0]
   132ca:	4b04      	ldr	r3, [pc, #16]	; (132dc <fwrite+0x1c>)
   132cc:	4631      	mov	r1, r6
   132ce:	6818      	ldr	r0, [r3, #0]
   132d0:	462a      	mov	r2, r5
   132d2:	4623      	mov	r3, r4
   132d4:	f7ff ff9a 	bl	1320c <_fwrite_r>
   132d8:	b002      	add	sp, #8
   132da:	bd70      	pop	{r4, r5, r6, pc}
   132dc:	100001d4 	.word	0x100001d4

000132e0 <getc>:
   132e0:	b538      	push	{r3, r4, r5, lr}
   132e2:	4b13      	ldr	r3, [pc, #76]	; (13330 <getc+0x50>)
   132e4:	4604      	mov	r4, r0
   132e6:	681d      	ldr	r5, [r3, #0]
   132e8:	b125      	cbz	r5, 132f4 <getc+0x14>
   132ea:	69ab      	ldr	r3, [r5, #24]
   132ec:	b913      	cbnz	r3, 132f4 <getc+0x14>
   132ee:	4628      	mov	r0, r5
   132f0:	f7ff fd14 	bl	12d1c <__sinit>
   132f4:	4b0f      	ldr	r3, [pc, #60]	; (13334 <getc+0x54>)
   132f6:	429c      	cmp	r4, r3
   132f8:	d101      	bne.n	132fe <getc+0x1e>
   132fa:	686c      	ldr	r4, [r5, #4]
   132fc:	e008      	b.n	13310 <getc+0x30>
   132fe:	4b0e      	ldr	r3, [pc, #56]	; (13338 <getc+0x58>)
   13300:	429c      	cmp	r4, r3
   13302:	d101      	bne.n	13308 <getc+0x28>
   13304:	68ac      	ldr	r4, [r5, #8]
   13306:	e003      	b.n	13310 <getc+0x30>
   13308:	4b0c      	ldr	r3, [pc, #48]	; (1333c <getc+0x5c>)
   1330a:	429c      	cmp	r4, r3
   1330c:	bf08      	it	eq
   1330e:	68ec      	ldreq	r4, [r5, #12]
   13310:	6863      	ldr	r3, [r4, #4]
   13312:	3b01      	subs	r3, #1
   13314:	2b00      	cmp	r3, #0
   13316:	6063      	str	r3, [r4, #4]
   13318:	da05      	bge.n	13326 <getc+0x46>
   1331a:	4628      	mov	r0, r5
   1331c:	4621      	mov	r1, r4
   1331e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   13322:	f001 b8fd 	b.w	14520 <__srget_r>
   13326:	6823      	ldr	r3, [r4, #0]
   13328:	1c5a      	adds	r2, r3, #1
   1332a:	6022      	str	r2, [r4, #0]
   1332c:	7818      	ldrb	r0, [r3, #0]
   1332e:	bd38      	pop	{r3, r4, r5, pc}
   13330:	100001d4 	.word	0x100001d4
   13334:	0001c6e4 	.word	0x0001c6e4
   13338:	0001c704 	.word	0x0001c704
   1333c:	0001c724 	.word	0x0001c724

00013340 <getwc>:
   13340:	f004 b812 	b.w	17368 <fgetwc>

00013344 <__libc_init_array>:
   13344:	4b0e      	ldr	r3, [pc, #56]	; (13380 <__libc_init_array+0x3c>)
   13346:	b570      	push	{r4, r5, r6, lr}
   13348:	461e      	mov	r6, r3
   1334a:	4c0e      	ldr	r4, [pc, #56]	; (13384 <__libc_init_array+0x40>)
   1334c:	2500      	movs	r5, #0
   1334e:	1ae4      	subs	r4, r4, r3
   13350:	10a4      	asrs	r4, r4, #2
   13352:	42a5      	cmp	r5, r4
   13354:	d004      	beq.n	13360 <__libc_init_array+0x1c>
   13356:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   1335a:	4798      	blx	r3
   1335c:	3501      	adds	r5, #1
   1335e:	e7f8      	b.n	13352 <__libc_init_array+0xe>
   13360:	f007 f8d6 	bl	1a510 <_init>
   13364:	4b08      	ldr	r3, [pc, #32]	; (13388 <__libc_init_array+0x44>)
   13366:	4c09      	ldr	r4, [pc, #36]	; (1338c <__libc_init_array+0x48>)
   13368:	461e      	mov	r6, r3
   1336a:	1ae4      	subs	r4, r4, r3
   1336c:	10a4      	asrs	r4, r4, #2
   1336e:	2500      	movs	r5, #0
   13370:	42a5      	cmp	r5, r4
   13372:	d004      	beq.n	1337e <__libc_init_array+0x3a>
   13374:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
   13378:	4798      	blx	r3
   1337a:	3501      	adds	r5, #1
   1337c:	e7f8      	b.n	13370 <__libc_init_array+0x2c>
   1337e:	bd70      	pop	{r4, r5, r6, pc}
   13380:	10000284 	.word	0x10000284
   13384:	10000284 	.word	0x10000284
   13388:	10000284 	.word	0x10000284
   1338c:	100002a8 	.word	0x100002a8

00013390 <iswctype>:
   13390:	3901      	subs	r1, #1
   13392:	290b      	cmp	r1, #11
   13394:	d81f      	bhi.n	133d6 <iswctype+0x46>
   13396:	e8df f001 	tbb	[pc, r1]
   1339a:	0806      	.short	0x0806
   1339c:	100e0c0a 	.word	0x100e0c0a
   133a0:	18161412 	.word	0x18161412
   133a4:	1c1a      	.short	0x1c1a
   133a6:	f004 bbad 	b.w	17b04 <iswalnum>
   133aa:	f004 bbb9 	b.w	17b20 <iswalpha>
   133ae:	f004 bbc5 	b.w	17b3c <iswblank>
   133b2:	f004 bbd7 	b.w	17b64 <iswcntrl>
   133b6:	f000 b810 	b.w	133da <iswdigit>
   133ba:	f000 b814 	b.w	133e6 <iswgraph>
   133be:	f000 b81e 	b.w	133fe <iswlower>
   133c2:	f000 b825 	b.w	13410 <iswprint>
   133c6:	f000 b831 	b.w	1342c <iswpunct>
   133ca:	f000 b83d 	b.w	13448 <iswspace>
   133ce:	f000 b849 	b.w	13464 <iswupper>
   133d2:	f000 b84f 	b.w	13474 <iswxdigit>
   133d6:	2000      	movs	r0, #0
   133d8:	4770      	bx	lr

000133da <iswdigit>:
   133da:	3830      	subs	r0, #48	; 0x30
   133dc:	2809      	cmp	r0, #9
   133de:	bf8c      	ite	hi
   133e0:	2000      	movhi	r0, #0
   133e2:	2001      	movls	r0, #1
   133e4:	4770      	bx	lr

000133e6 <iswgraph>:
   133e6:	b510      	push	{r4, lr}
   133e8:	4604      	mov	r4, r0
   133ea:	f000 f811 	bl	13410 <iswprint>
   133ee:	b128      	cbz	r0, 133fc <iswgraph+0x16>
   133f0:	4620      	mov	r0, r4
   133f2:	f000 f829 	bl	13448 <iswspace>
   133f6:	fab0 f080 	clz	r0, r0
   133fa:	0940      	lsrs	r0, r0, #5
   133fc:	bd10      	pop	{r4, pc}

000133fe <iswlower>:
   133fe:	b510      	push	{r4, lr}
   13400:	4604      	mov	r4, r0
   13402:	f002 fea5 	bl	16150 <towupper>
   13406:	1b00      	subs	r0, r0, r4
   13408:	bf18      	it	ne
   1340a:	2001      	movne	r0, #1
   1340c:	bd10      	pop	{r4, pc}
	...

00013410 <iswprint>:
   13410:	28ff      	cmp	r0, #255	; 0xff
   13412:	bf9f      	itttt	ls
   13414:	4b04      	ldrls	r3, [pc, #16]	; (13428 <iswprint+0x18>)
   13416:	681b      	ldrls	r3, [r3, #0]
   13418:	18c0      	addls	r0, r0, r3
   1341a:	7840      	ldrbls	r0, [r0, #1]
   1341c:	bf94      	ite	ls
   1341e:	f000 0097 	andls.w	r0, r0, #151	; 0x97
   13422:	2000      	movhi	r0, #0
   13424:	4770      	bx	lr
   13426:	bf00      	nop
   13428:	10000170 	.word	0x10000170

0001342c <iswpunct>:
   1342c:	b510      	push	{r4, lr}
   1342e:	4604      	mov	r4, r0
   13430:	f004 fb68 	bl	17b04 <iswalnum>
   13434:	b930      	cbnz	r0, 13444 <iswpunct+0x18>
   13436:	4620      	mov	r0, r4
   13438:	f7ff ffd5 	bl	133e6 <iswgraph>
   1343c:	3000      	adds	r0, #0
   1343e:	bf18      	it	ne
   13440:	2001      	movne	r0, #1
   13442:	bd10      	pop	{r4, pc}
   13444:	2000      	movs	r0, #0
   13446:	bd10      	pop	{r4, pc}

00013448 <iswspace>:
   13448:	28ff      	cmp	r0, #255	; 0xff
   1344a:	bf9f      	itttt	ls
   1344c:	4b04      	ldrls	r3, [pc, #16]	; (13460 <iswspace+0x18>)
   1344e:	681b      	ldrls	r3, [r3, #0]
   13450:	18c0      	addls	r0, r0, r3
   13452:	7840      	ldrbls	r0, [r0, #1]
   13454:	bf9a      	itte	ls
   13456:	f000 0008 	andls.w	r0, r0, #8
   1345a:	b2c0      	uxtbls	r0, r0
   1345c:	2000      	movhi	r0, #0
   1345e:	4770      	bx	lr
   13460:	10000170 	.word	0x10000170

00013464 <iswupper>:
   13464:	b510      	push	{r4, lr}
   13466:	4604      	mov	r4, r0
   13468:	f002 fe64 	bl	16134 <towlower>
   1346c:	1b00      	subs	r0, r0, r4
   1346e:	bf18      	it	ne
   13470:	2001      	movne	r0, #1
   13472:	bd10      	pop	{r4, pc}

00013474 <iswxdigit>:
   13474:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   13478:	2b09      	cmp	r3, #9
   1347a:	d907      	bls.n	1348c <iswxdigit+0x18>
   1347c:	f020 0020 	bic.w	r0, r0, #32
   13480:	3841      	subs	r0, #65	; 0x41
   13482:	2805      	cmp	r0, #5
   13484:	bf8c      	ite	hi
   13486:	2000      	movhi	r0, #0
   13488:	2001      	movls	r0, #1
   1348a:	4770      	bx	lr
   1348c:	2001      	movs	r0, #1
   1348e:	4770      	bx	lr

00013490 <_setlocale_r>:
   13490:	b510      	push	{r4, lr}
   13492:	4614      	mov	r4, r2
   13494:	b90a      	cbnz	r2, 1349a <_setlocale_r+0xa>
   13496:	480b      	ldr	r0, [pc, #44]	; (134c4 <_setlocale_r+0x34>)
   13498:	bd10      	pop	{r4, pc}
   1349a:	4610      	mov	r0, r2
   1349c:	490a      	ldr	r1, [pc, #40]	; (134c8 <_setlocale_r+0x38>)
   1349e:	f001 f9d0 	bl	14842 <strcmp>
   134a2:	2800      	cmp	r0, #0
   134a4:	d0f7      	beq.n	13496 <_setlocale_r+0x6>
   134a6:	4620      	mov	r0, r4
   134a8:	4906      	ldr	r1, [pc, #24]	; (134c4 <_setlocale_r+0x34>)
   134aa:	f001 f9ca 	bl	14842 <strcmp>
   134ae:	2800      	cmp	r0, #0
   134b0:	d0f1      	beq.n	13496 <_setlocale_r+0x6>
   134b2:	4620      	mov	r0, r4
   134b4:	4905      	ldr	r1, [pc, #20]	; (134cc <_setlocale_r+0x3c>)
   134b6:	f001 f9c4 	bl	14842 <strcmp>
   134ba:	2800      	cmp	r0, #0
   134bc:	4801      	ldr	r0, [pc, #4]	; (134c4 <_setlocale_r+0x34>)
   134be:	bf18      	it	ne
   134c0:	2000      	movne	r0, #0
   134c2:	bd10      	pop	{r4, pc}
   134c4:	0001c529 	.word	0x0001c529
   134c8:	0001b148 	.word	0x0001b148
   134cc:	0001c156 	.word	0x0001c156

000134d0 <__locale_charset>:
   134d0:	4800      	ldr	r0, [pc, #0]	; (134d4 <__locale_charset+0x4>)
   134d2:	4770      	bx	lr
   134d4:	10000210 	.word	0x10000210

000134d8 <__locale_mb_cur_max>:
   134d8:	4b01      	ldr	r3, [pc, #4]	; (134e0 <__locale_mb_cur_max+0x8>)
   134da:	6818      	ldr	r0, [r3, #0]
   134dc:	4770      	bx	lr
   134de:	bf00      	nop
   134e0:	10000230 	.word	0x10000230

000134e4 <_localeconv_r>:
   134e4:	4800      	ldr	r0, [pc, #0]	; (134e8 <_localeconv_r+0x4>)
   134e6:	4770      	bx	lr
   134e8:	100001d8 	.word	0x100001d8

000134ec <setlocale>:
   134ec:	4603      	mov	r3, r0
   134ee:	460a      	mov	r2, r1
   134f0:	4902      	ldr	r1, [pc, #8]	; (134fc <setlocale+0x10>)
   134f2:	6808      	ldr	r0, [r1, #0]
   134f4:	4619      	mov	r1, r3
   134f6:	f7ff bfcb 	b.w	13490 <_setlocale_r>
   134fa:	bf00      	nop
   134fc:	100001d4 	.word	0x100001d4

00013500 <__smakebuf_r>:
   13500:	b5f0      	push	{r4, r5, r6, r7, lr}
   13502:	898b      	ldrh	r3, [r1, #12]
   13504:	b091      	sub	sp, #68	; 0x44
   13506:	079d      	lsls	r5, r3, #30
   13508:	4606      	mov	r6, r0
   1350a:	460c      	mov	r4, r1
   1350c:	d425      	bmi.n	1355a <__smakebuf_r+0x5a>
   1350e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   13512:	2900      	cmp	r1, #0
   13514:	da08      	bge.n	13528 <__smakebuf_r+0x28>
   13516:	89a3      	ldrh	r3, [r4, #12]
   13518:	2500      	movs	r5, #0
   1351a:	f013 0f80 	tst.w	r3, #128	; 0x80
   1351e:	bf14      	ite	ne
   13520:	2740      	movne	r7, #64	; 0x40
   13522:	f44f 6780 	moveq.w	r7, #1024	; 0x400
   13526:	e00d      	b.n	13544 <__smakebuf_r+0x44>
   13528:	aa01      	add	r2, sp, #4
   1352a:	f003 ffb9 	bl	174a0 <_fstat_r>
   1352e:	2800      	cmp	r0, #0
   13530:	dbf1      	blt.n	13516 <__smakebuf_r+0x16>
   13532:	9d02      	ldr	r5, [sp, #8]
   13534:	f44f 6780 	mov.w	r7, #1024	; 0x400
   13538:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
   1353c:	f5a5 5100 	sub.w	r1, r5, #8192	; 0x2000
   13540:	424d      	negs	r5, r1
   13542:	414d      	adcs	r5, r1
   13544:	4630      	mov	r0, r6
   13546:	4639      	mov	r1, r7
   13548:	f000 f912 	bl	13770 <_malloc_r>
   1354c:	b960      	cbnz	r0, 13568 <__smakebuf_r+0x68>
   1354e:	89a3      	ldrh	r3, [r4, #12]
   13550:	059a      	lsls	r2, r3, #22
   13552:	d41d      	bmi.n	13590 <__smakebuf_r+0x90>
   13554:	f043 0302 	orr.w	r3, r3, #2
   13558:	81a3      	strh	r3, [r4, #12]
   1355a:	f104 0347 	add.w	r3, r4, #71	; 0x47
   1355e:	6023      	str	r3, [r4, #0]
   13560:	6123      	str	r3, [r4, #16]
   13562:	2301      	movs	r3, #1
   13564:	6163      	str	r3, [r4, #20]
   13566:	e013      	b.n	13590 <__smakebuf_r+0x90>
   13568:	4b0a      	ldr	r3, [pc, #40]	; (13594 <__smakebuf_r+0x94>)
   1356a:	62b3      	str	r3, [r6, #40]	; 0x28
   1356c:	89a3      	ldrh	r3, [r4, #12]
   1356e:	6020      	str	r0, [r4, #0]
   13570:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   13574:	81a3      	strh	r3, [r4, #12]
   13576:	6120      	str	r0, [r4, #16]
   13578:	6167      	str	r7, [r4, #20]
   1357a:	b14d      	cbz	r5, 13590 <__smakebuf_r+0x90>
   1357c:	4630      	mov	r0, r6
   1357e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   13582:	f004 faaf 	bl	17ae4 <_isatty_r>
   13586:	b118      	cbz	r0, 13590 <__smakebuf_r+0x90>
   13588:	89a3      	ldrh	r3, [r4, #12]
   1358a:	f043 0301 	orr.w	r3, r3, #1
   1358e:	81a3      	strh	r3, [r4, #12]
   13590:	b011      	add	sp, #68	; 0x44
   13592:	bdf0      	pop	{r4, r5, r6, r7, pc}
   13594:	00012c9d 	.word	0x00012c9d

00013598 <malloc>:
   13598:	4b02      	ldr	r3, [pc, #8]	; (135a4 <malloc+0xc>)
   1359a:	4601      	mov	r1, r0
   1359c:	6818      	ldr	r0, [r3, #0]
   1359e:	f000 b8e7 	b.w	13770 <_malloc_r>
   135a2:	bf00      	nop
   135a4:	100001d4 	.word	0x100001d4

000135a8 <free>:
   135a8:	4b02      	ldr	r3, [pc, #8]	; (135b4 <free+0xc>)
   135aa:	4601      	mov	r1, r0
   135ac:	6818      	ldr	r0, [r3, #0]
   135ae:	f000 b89b 	b.w	136e8 <_free_r>
   135b2:	bf00      	nop
   135b4:	100001d4 	.word	0x100001d4

000135b8 <_mbrtowc_r>:
   135b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   135bc:	4616      	mov	r6, r2
   135be:	4a11      	ldr	r2, [pc, #68]	; (13604 <_mbrtowc_r+0x4c>)
   135c0:	4604      	mov	r4, r0
   135c2:	4689      	mov	r9, r1
   135c4:	4698      	mov	r8, r3
   135c6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   135c8:	6817      	ldr	r7, [r2, #0]
   135ca:	b946      	cbnz	r6, 135de <_mbrtowc_r+0x26>
   135cc:	f7ff ff80 	bl	134d0 <__locale_charset>
   135d0:	4631      	mov	r1, r6
   135d2:	e88d 0021 	stmia.w	sp, {r0, r5}
   135d6:	4a0c      	ldr	r2, [pc, #48]	; (13608 <_mbrtowc_r+0x50>)
   135d8:	4620      	mov	r0, r4
   135da:	2301      	movs	r3, #1
   135dc:	e007      	b.n	135ee <_mbrtowc_r+0x36>
   135de:	f7ff ff77 	bl	134d0 <__locale_charset>
   135e2:	4649      	mov	r1, r9
   135e4:	e88d 0021 	stmia.w	sp, {r0, r5}
   135e8:	4632      	mov	r2, r6
   135ea:	4620      	mov	r0, r4
   135ec:	4643      	mov	r3, r8
   135ee:	47b8      	blx	r7
   135f0:	1c43      	adds	r3, r0, #1
   135f2:	bf01      	itttt	eq
   135f4:	2300      	moveq	r3, #0
   135f6:	602b      	streq	r3, [r5, #0]
   135f8:	238a      	moveq	r3, #138	; 0x8a
   135fa:	6023      	streq	r3, [r4, #0]
   135fc:	b003      	add	sp, #12
   135fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   13602:	bf00      	nop
   13604:	10000234 	.word	0x10000234
   13608:	0001c156 	.word	0x0001c156

0001360c <mbrtowc>:
   1360c:	b573      	push	{r0, r1, r4, r5, r6, lr}
   1360e:	4606      	mov	r6, r0
   13610:	460d      	mov	r5, r1
   13612:	4614      	mov	r4, r2
   13614:	9300      	str	r3, [sp, #0]
   13616:	4b04      	ldr	r3, [pc, #16]	; (13628 <mbrtowc+0x1c>)
   13618:	4631      	mov	r1, r6
   1361a:	6818      	ldr	r0, [r3, #0]
   1361c:	462a      	mov	r2, r5
   1361e:	4623      	mov	r3, r4
   13620:	f7ff ffca 	bl	135b8 <_mbrtowc_r>
   13624:	b002      	add	sp, #8
   13626:	bd70      	pop	{r4, r5, r6, pc}
   13628:	100001d4 	.word	0x100001d4

0001362c <__ascii_mbtowc>:
   1362c:	b082      	sub	sp, #8
   1362e:	b901      	cbnz	r1, 13632 <__ascii_mbtowc+0x6>
   13630:	a901      	add	r1, sp, #4
   13632:	b13a      	cbz	r2, 13644 <__ascii_mbtowc+0x18>
   13634:	b143      	cbz	r3, 13648 <__ascii_mbtowc+0x1c>
   13636:	7813      	ldrb	r3, [r2, #0]
   13638:	600b      	str	r3, [r1, #0]
   1363a:	7812      	ldrb	r2, [r2, #0]
   1363c:	1c10      	adds	r0, r2, #0
   1363e:	bf18      	it	ne
   13640:	2001      	movne	r0, #1
   13642:	e003      	b.n	1364c <__ascii_mbtowc+0x20>
   13644:	4610      	mov	r0, r2
   13646:	e001      	b.n	1364c <__ascii_mbtowc+0x20>
   13648:	f06f 0001 	mvn.w	r0, #1
   1364c:	b002      	add	sp, #8
   1364e:	4770      	bx	lr

00013650 <memchr>:
   13650:	b510      	push	{r4, lr}
   13652:	b2c9      	uxtb	r1, r1
   13654:	4402      	add	r2, r0
   13656:	4290      	cmp	r0, r2
   13658:	4603      	mov	r3, r0
   1365a:	d005      	beq.n	13668 <memchr+0x18>
   1365c:	781c      	ldrb	r4, [r3, #0]
   1365e:	3001      	adds	r0, #1
   13660:	428c      	cmp	r4, r1
   13662:	d1f8      	bne.n	13656 <memchr+0x6>
   13664:	4618      	mov	r0, r3
   13666:	bd10      	pop	{r4, pc}
   13668:	2000      	movs	r0, #0
   1366a:	bd10      	pop	{r4, pc}

0001366c <memcmp>:
   1366c:	b510      	push	{r4, lr}
   1366e:	440a      	add	r2, r1
   13670:	1e44      	subs	r4, r0, #1
   13672:	4291      	cmp	r1, r2
   13674:	d008      	beq.n	13688 <memcmp+0x1c>
   13676:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   1367a:	7808      	ldrb	r0, [r1, #0]
   1367c:	4283      	cmp	r3, r0
   1367e:	d001      	beq.n	13684 <memcmp+0x18>
   13680:	1a18      	subs	r0, r3, r0
   13682:	bd10      	pop	{r4, pc}
   13684:	3101      	adds	r1, #1
   13686:	e7f4      	b.n	13672 <memcmp+0x6>
   13688:	2000      	movs	r0, #0
   1368a:	bd10      	pop	{r4, pc}

0001368c <memcpy>:
   1368c:	b510      	push	{r4, lr}
   1368e:	1e43      	subs	r3, r0, #1
   13690:	440a      	add	r2, r1
   13692:	4291      	cmp	r1, r2
   13694:	d004      	beq.n	136a0 <memcpy+0x14>
   13696:	f811 4b01 	ldrb.w	r4, [r1], #1
   1369a:	f803 4f01 	strb.w	r4, [r3, #1]!
   1369e:	e7f8      	b.n	13692 <memcpy+0x6>
   136a0:	bd10      	pop	{r4, pc}

000136a2 <memmove>:
   136a2:	4281      	cmp	r1, r0
   136a4:	b510      	push	{r4, lr}
   136a6:	eb01 0302 	add.w	r3, r1, r2
   136aa:	d301      	bcc.n	136b0 <memmove+0xe>
   136ac:	1e42      	subs	r2, r0, #1
   136ae:	e00b      	b.n	136c8 <memmove+0x26>
   136b0:	4298      	cmp	r0, r3
   136b2:	d2fb      	bcs.n	136ac <memmove+0xa>
   136b4:	1881      	adds	r1, r0, r2
   136b6:	1ad2      	subs	r2, r2, r3
   136b8:	42d3      	cmn	r3, r2
   136ba:	d004      	beq.n	136c6 <memmove+0x24>
   136bc:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   136c0:	f801 4d01 	strb.w	r4, [r1, #-1]!
   136c4:	e7f8      	b.n	136b8 <memmove+0x16>
   136c6:	bd10      	pop	{r4, pc}
   136c8:	4299      	cmp	r1, r3
   136ca:	d004      	beq.n	136d6 <memmove+0x34>
   136cc:	f811 4b01 	ldrb.w	r4, [r1], #1
   136d0:	f802 4f01 	strb.w	r4, [r2, #1]!
   136d4:	e7f8      	b.n	136c8 <memmove+0x26>
   136d6:	bd10      	pop	{r4, pc}

000136d8 <memset>:
   136d8:	4603      	mov	r3, r0
   136da:	4402      	add	r2, r0
   136dc:	4293      	cmp	r3, r2
   136de:	d002      	beq.n	136e6 <memset+0xe>
   136e0:	f803 1b01 	strb.w	r1, [r3], #1
   136e4:	e7fa      	b.n	136dc <memset+0x4>
   136e6:	4770      	bx	lr

000136e8 <_free_r>:
   136e8:	b530      	push	{r4, r5, lr}
   136ea:	2900      	cmp	r1, #0
   136ec:	d03c      	beq.n	13768 <_free_r+0x80>
   136ee:	f851 2c04 	ldr.w	r2, [r1, #-4]
   136f2:	1f0b      	subs	r3, r1, #4
   136f4:	491d      	ldr	r1, [pc, #116]	; (1376c <_free_r+0x84>)
   136f6:	2a00      	cmp	r2, #0
   136f8:	bfb8      	it	lt
   136fa:	189b      	addlt	r3, r3, r2
   136fc:	680a      	ldr	r2, [r1, #0]
   136fe:	460c      	mov	r4, r1
   13700:	b912      	cbnz	r2, 13708 <_free_r+0x20>
   13702:	605a      	str	r2, [r3, #4]
   13704:	600b      	str	r3, [r1, #0]
   13706:	bd30      	pop	{r4, r5, pc}
   13708:	4293      	cmp	r3, r2
   1370a:	d20d      	bcs.n	13728 <_free_r+0x40>
   1370c:	6819      	ldr	r1, [r3, #0]
   1370e:	1858      	adds	r0, r3, r1
   13710:	4290      	cmp	r0, r2
   13712:	bf01      	itttt	eq
   13714:	585a      	ldreq	r2, [r3, r1]
   13716:	1852      	addeq	r2, r2, r1
   13718:	601a      	streq	r2, [r3, #0]
   1371a:	6842      	ldreq	r2, [r0, #4]
   1371c:	6023      	str	r3, [r4, #0]
   1371e:	605a      	str	r2, [r3, #4]
   13720:	bd30      	pop	{r4, r5, pc}
   13722:	4299      	cmp	r1, r3
   13724:	d803      	bhi.n	1372e <_free_r+0x46>
   13726:	460a      	mov	r2, r1
   13728:	6851      	ldr	r1, [r2, #4]
   1372a:	2900      	cmp	r1, #0
   1372c:	d1f9      	bne.n	13722 <_free_r+0x3a>
   1372e:	6814      	ldr	r4, [r2, #0]
   13730:	1915      	adds	r5, r2, r4
   13732:	429d      	cmp	r5, r3
   13734:	d10a      	bne.n	1374c <_free_r+0x64>
   13736:	681b      	ldr	r3, [r3, #0]
   13738:	4423      	add	r3, r4
   1373a:	18d0      	adds	r0, r2, r3
   1373c:	4288      	cmp	r0, r1
   1373e:	6013      	str	r3, [r2, #0]
   13740:	d112      	bne.n	13768 <_free_r+0x80>
   13742:	6808      	ldr	r0, [r1, #0]
   13744:	4403      	add	r3, r0
   13746:	6013      	str	r3, [r2, #0]
   13748:	684b      	ldr	r3, [r1, #4]
   1374a:	e00c      	b.n	13766 <_free_r+0x7e>
   1374c:	d902      	bls.n	13754 <_free_r+0x6c>
   1374e:	230c      	movs	r3, #12
   13750:	6003      	str	r3, [r0, #0]
   13752:	bd30      	pop	{r4, r5, pc}
   13754:	681c      	ldr	r4, [r3, #0]
   13756:	1918      	adds	r0, r3, r4
   13758:	4288      	cmp	r0, r1
   1375a:	bf01      	itttt	eq
   1375c:	6808      	ldreq	r0, [r1, #0]
   1375e:	6849      	ldreq	r1, [r1, #4]
   13760:	1900      	addeq	r0, r0, r4
   13762:	6018      	streq	r0, [r3, #0]
   13764:	6059      	str	r1, [r3, #4]
   13766:	6053      	str	r3, [r2, #4]
   13768:	bd30      	pop	{r4, r5, pc}
   1376a:	bf00      	nop
   1376c:	10001a70 	.word	0x10001a70

00013770 <_malloc_r>:
   13770:	b570      	push	{r4, r5, r6, lr}
   13772:	1ccc      	adds	r4, r1, #3
   13774:	f024 0403 	bic.w	r4, r4, #3
   13778:	3408      	adds	r4, #8
   1377a:	2c0c      	cmp	r4, #12
   1377c:	bf38      	it	cc
   1377e:	240c      	movcc	r4, #12
   13780:	2c00      	cmp	r4, #0
   13782:	4606      	mov	r6, r0
   13784:	da03      	bge.n	1378e <_malloc_r+0x1e>
   13786:	230c      	movs	r3, #12
   13788:	6033      	str	r3, [r6, #0]
   1378a:	2000      	movs	r0, #0
   1378c:	bd70      	pop	{r4, r5, r6, pc}
   1378e:	428c      	cmp	r4, r1
   13790:	d3f9      	bcc.n	13786 <_malloc_r+0x16>
   13792:	4a20      	ldr	r2, [pc, #128]	; (13814 <_malloc_r+0xa4>)
   13794:	6813      	ldr	r3, [r2, #0]
   13796:	4610      	mov	r0, r2
   13798:	4619      	mov	r1, r3
   1379a:	b1a1      	cbz	r1, 137c6 <_malloc_r+0x56>
   1379c:	680a      	ldr	r2, [r1, #0]
   1379e:	1b12      	subs	r2, r2, r4
   137a0:	d40e      	bmi.n	137c0 <_malloc_r+0x50>
   137a2:	2a0b      	cmp	r2, #11
   137a4:	d903      	bls.n	137ae <_malloc_r+0x3e>
   137a6:	600a      	str	r2, [r1, #0]
   137a8:	188b      	adds	r3, r1, r2
   137aa:	508c      	str	r4, [r1, r2]
   137ac:	e01f      	b.n	137ee <_malloc_r+0x7e>
   137ae:	428b      	cmp	r3, r1
   137b0:	bf0b      	itete	eq
   137b2:	685a      	ldreq	r2, [r3, #4]
   137b4:	684a      	ldrne	r2, [r1, #4]
   137b6:	6002      	streq	r2, [r0, #0]
   137b8:	605a      	strne	r2, [r3, #4]
   137ba:	bf18      	it	ne
   137bc:	460b      	movne	r3, r1
   137be:	e016      	b.n	137ee <_malloc_r+0x7e>
   137c0:	460b      	mov	r3, r1
   137c2:	6849      	ldr	r1, [r1, #4]
   137c4:	e7e9      	b.n	1379a <_malloc_r+0x2a>
   137c6:	4d14      	ldr	r5, [pc, #80]	; (13818 <_malloc_r+0xa8>)
   137c8:	682b      	ldr	r3, [r5, #0]
   137ca:	b91b      	cbnz	r3, 137d4 <_malloc_r+0x64>
   137cc:	4630      	mov	r0, r6
   137ce:	f000 fed3 	bl	14578 <_sbrk_r>
   137d2:	6028      	str	r0, [r5, #0]
   137d4:	4630      	mov	r0, r6
   137d6:	4621      	mov	r1, r4
   137d8:	f000 fece 	bl	14578 <_sbrk_r>
   137dc:	1c42      	adds	r2, r0, #1
   137de:	4603      	mov	r3, r0
   137e0:	d0d1      	beq.n	13786 <_malloc_r+0x16>
   137e2:	1cc5      	adds	r5, r0, #3
   137e4:	f025 0503 	bic.w	r5, r5, #3
   137e8:	4285      	cmp	r5, r0
   137ea:	d10a      	bne.n	13802 <_malloc_r+0x92>
   137ec:	601c      	str	r4, [r3, #0]
   137ee:	f103 000b 	add.w	r0, r3, #11
   137f2:	1d1a      	adds	r2, r3, #4
   137f4:	f020 0007 	bic.w	r0, r0, #7
   137f8:	1a82      	subs	r2, r0, r2
   137fa:	d00a      	beq.n	13812 <_malloc_r+0xa2>
   137fc:	4251      	negs	r1, r2
   137fe:	5099      	str	r1, [r3, r2]
   13800:	bd70      	pop	{r4, r5, r6, pc}
   13802:	4630      	mov	r0, r6
   13804:	1ae9      	subs	r1, r5, r3
   13806:	f000 feb7 	bl	14578 <_sbrk_r>
   1380a:	3001      	adds	r0, #1
   1380c:	d0bb      	beq.n	13786 <_malloc_r+0x16>
   1380e:	462b      	mov	r3, r5
   13810:	e7ec      	b.n	137ec <_malloc_r+0x7c>
   13812:	bd70      	pop	{r4, r5, r6, pc}
   13814:	10001a70 	.word	0x10001a70
   13818:	10001a6c 	.word	0x10001a6c

0001381c <__sfputc_r>:
   1381c:	6893      	ldr	r3, [r2, #8]
   1381e:	b510      	push	{r4, lr}
   13820:	3b01      	subs	r3, #1
   13822:	2b00      	cmp	r3, #0
   13824:	6093      	str	r3, [r2, #8]
   13826:	da09      	bge.n	1383c <__sfputc_r+0x20>
   13828:	6994      	ldr	r4, [r2, #24]
   1382a:	42a3      	cmp	r3, r4
   1382c:	db02      	blt.n	13834 <__sfputc_r+0x18>
   1382e:	b2cb      	uxtb	r3, r1
   13830:	2b0a      	cmp	r3, #10
   13832:	d103      	bne.n	1383c <__sfputc_r+0x20>
   13834:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   13838:	f002 bdc4 	b.w	163c4 <__swbuf_r>
   1383c:	6813      	ldr	r3, [r2, #0]
   1383e:	1c58      	adds	r0, r3, #1
   13840:	6010      	str	r0, [r2, #0]
   13842:	7019      	strb	r1, [r3, #0]
   13844:	b2c8      	uxtb	r0, r1
   13846:	bd10      	pop	{r4, pc}

00013848 <__sfputs_r>:
   13848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1384a:	4606      	mov	r6, r0
   1384c:	460f      	mov	r7, r1
   1384e:	4614      	mov	r4, r2
   13850:	18d5      	adds	r5, r2, r3
   13852:	42ac      	cmp	r4, r5
   13854:	d008      	beq.n	13868 <__sfputs_r+0x20>
   13856:	4630      	mov	r0, r6
   13858:	f814 1b01 	ldrb.w	r1, [r4], #1
   1385c:	463a      	mov	r2, r7
   1385e:	f7ff ffdd 	bl	1381c <__sfputc_r>
   13862:	1c43      	adds	r3, r0, #1
   13864:	d1f5      	bne.n	13852 <__sfputs_r+0xa>
   13866:	e000      	b.n	1386a <__sfputs_r+0x22>
   13868:	2000      	movs	r0, #0
   1386a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001386c <_vfiprintf_r>:
   1386c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   13870:	b09d      	sub	sp, #116	; 0x74
   13872:	460d      	mov	r5, r1
   13874:	4690      	mov	r8, r2
   13876:	9303      	str	r3, [sp, #12]
   13878:	4606      	mov	r6, r0
   1387a:	b118      	cbz	r0, 13884 <_vfiprintf_r+0x18>
   1387c:	6983      	ldr	r3, [r0, #24]
   1387e:	b90b      	cbnz	r3, 13884 <_vfiprintf_r+0x18>
   13880:	f7ff fa4c 	bl	12d1c <__sinit>
   13884:	4b75      	ldr	r3, [pc, #468]	; (13a5c <_vfiprintf_r+0x1f0>)
   13886:	429d      	cmp	r5, r3
   13888:	d101      	bne.n	1388e <_vfiprintf_r+0x22>
   1388a:	6875      	ldr	r5, [r6, #4]
   1388c:	e008      	b.n	138a0 <_vfiprintf_r+0x34>
   1388e:	4b74      	ldr	r3, [pc, #464]	; (13a60 <_vfiprintf_r+0x1f4>)
   13890:	429d      	cmp	r5, r3
   13892:	d101      	bne.n	13898 <_vfiprintf_r+0x2c>
   13894:	68b5      	ldr	r5, [r6, #8]
   13896:	e003      	b.n	138a0 <_vfiprintf_r+0x34>
   13898:	4b72      	ldr	r3, [pc, #456]	; (13a64 <_vfiprintf_r+0x1f8>)
   1389a:	429d      	cmp	r5, r3
   1389c:	bf08      	it	eq
   1389e:	68f5      	ldreq	r5, [r6, #12]
   138a0:	89ab      	ldrh	r3, [r5, #12]
   138a2:	071c      	lsls	r4, r3, #28
   138a4:	d50a      	bpl.n	138bc <_vfiprintf_r+0x50>
   138a6:	692b      	ldr	r3, [r5, #16]
   138a8:	b143      	cbz	r3, 138bc <_vfiprintf_r+0x50>
   138aa:	2300      	movs	r3, #0
   138ac:	9309      	str	r3, [sp, #36]	; 0x24
   138ae:	2320      	movs	r3, #32
   138b0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   138b4:	2330      	movs	r3, #48	; 0x30
   138b6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   138ba:	e041      	b.n	13940 <_vfiprintf_r+0xd4>
   138bc:	4630      	mov	r0, r6
   138be:	4629      	mov	r1, r5
   138c0:	f003 fc90 	bl	171e4 <__swsetup_r>
   138c4:	2800      	cmp	r0, #0
   138c6:	d0f0      	beq.n	138aa <_vfiprintf_r+0x3e>
   138c8:	f04f 30ff 	mov.w	r0, #4294967295
   138cc:	e0c2      	b.n	13a54 <_vfiprintf_r+0x1e8>
   138ce:	9a03      	ldr	r2, [sp, #12]
   138d0:	3401      	adds	r4, #1
   138d2:	1d11      	adds	r1, r2, #4
   138d4:	6812      	ldr	r2, [r2, #0]
   138d6:	9103      	str	r1, [sp, #12]
   138d8:	2a00      	cmp	r2, #0
   138da:	bfbb      	ittet	lt
   138dc:	4252      	neglt	r2, r2
   138de:	f043 0302 	orrlt.w	r3, r3, #2
   138e2:	9207      	strge	r2, [sp, #28]
   138e4:	9207      	strlt	r2, [sp, #28]
   138e6:	bfb8      	it	lt
   138e8:	9304      	strlt	r3, [sp, #16]
   138ea:	7823      	ldrb	r3, [r4, #0]
   138ec:	2b2e      	cmp	r3, #46	; 0x2e
   138ee:	d07b      	beq.n	139e8 <_vfiprintf_r+0x17c>
   138f0:	f8df 8180 	ldr.w	r8, [pc, #384]	; 13a74 <_vfiprintf_r+0x208>
   138f4:	7821      	ldrb	r1, [r4, #0]
   138f6:	4640      	mov	r0, r8
   138f8:	2203      	movs	r2, #3
   138fa:	f7ff fea9 	bl	13650 <memchr>
   138fe:	b138      	cbz	r0, 13910 <_vfiprintf_r+0xa4>
   13900:	9a04      	ldr	r2, [sp, #16]
   13902:	ebc8 0000 	rsb	r0, r8, r0
   13906:	2340      	movs	r3, #64	; 0x40
   13908:	4083      	lsls	r3, r0
   1390a:	4313      	orrs	r3, r2
   1390c:	9304      	str	r3, [sp, #16]
   1390e:	3401      	adds	r4, #1
   13910:	7821      	ldrb	r1, [r4, #0]
   13912:	4855      	ldr	r0, [pc, #340]	; (13a68 <_vfiprintf_r+0x1fc>)
   13914:	2206      	movs	r2, #6
   13916:	f104 0801 	add.w	r8, r4, #1
   1391a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   1391e:	f7ff fe97 	bl	13650 <memchr>
   13922:	2800      	cmp	r0, #0
   13924:	f000 8085 	beq.w	13a32 <_vfiprintf_r+0x1c6>
   13928:	4b50      	ldr	r3, [pc, #320]	; (13a6c <_vfiprintf_r+0x200>)
   1392a:	2b00      	cmp	r3, #0
   1392c:	d178      	bne.n	13a20 <_vfiprintf_r+0x1b4>
   1392e:	9b03      	ldr	r3, [sp, #12]
   13930:	3307      	adds	r3, #7
   13932:	f023 0307 	bic.w	r3, r3, #7
   13936:	3308      	adds	r3, #8
   13938:	9303      	str	r3, [sp, #12]
   1393a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1393c:	443b      	add	r3, r7
   1393e:	9309      	str	r3, [sp, #36]	; 0x24
   13940:	4643      	mov	r3, r8
   13942:	461c      	mov	r4, r3
   13944:	f813 2b01 	ldrb.w	r2, [r3], #1
   13948:	b91a      	cbnz	r2, 13952 <_vfiprintf_r+0xe6>
   1394a:	ebb4 0908 	subs.w	r9, r4, r8
   1394e:	d00e      	beq.n	1396e <_vfiprintf_r+0x102>
   13950:	e002      	b.n	13958 <_vfiprintf_r+0xec>
   13952:	2a25      	cmp	r2, #37	; 0x25
   13954:	d1f5      	bne.n	13942 <_vfiprintf_r+0xd6>
   13956:	e7f8      	b.n	1394a <_vfiprintf_r+0xde>
   13958:	4630      	mov	r0, r6
   1395a:	4629      	mov	r1, r5
   1395c:	4642      	mov	r2, r8
   1395e:	464b      	mov	r3, r9
   13960:	f7ff ff72 	bl	13848 <__sfputs_r>
   13964:	3001      	adds	r0, #1
   13966:	d070      	beq.n	13a4a <_vfiprintf_r+0x1de>
   13968:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1396a:	444b      	add	r3, r9
   1396c:	9309      	str	r3, [sp, #36]	; 0x24
   1396e:	7823      	ldrb	r3, [r4, #0]
   13970:	2b00      	cmp	r3, #0
   13972:	d06a      	beq.n	13a4a <_vfiprintf_r+0x1de>
   13974:	2300      	movs	r3, #0
   13976:	f04f 32ff 	mov.w	r2, #4294967295
   1397a:	9304      	str	r3, [sp, #16]
   1397c:	9307      	str	r3, [sp, #28]
   1397e:	9205      	str	r2, [sp, #20]
   13980:	9306      	str	r3, [sp, #24]
   13982:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   13986:	931a      	str	r3, [sp, #104]	; 0x68
   13988:	f104 0801 	add.w	r8, r4, #1
   1398c:	4644      	mov	r4, r8
   1398e:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 13a78 <_vfiprintf_r+0x20c>
   13992:	7821      	ldrb	r1, [r4, #0]
   13994:	4648      	mov	r0, r9
   13996:	2205      	movs	r2, #5
   13998:	f7ff fe5a 	bl	13650 <memchr>
   1399c:	f108 0801 	add.w	r8, r8, #1
   139a0:	9b04      	ldr	r3, [sp, #16]
   139a2:	b130      	cbz	r0, 139b2 <_vfiprintf_r+0x146>
   139a4:	ebc9 0000 	rsb	r0, r9, r0
   139a8:	2201      	movs	r2, #1
   139aa:	4082      	lsls	r2, r0
   139ac:	4313      	orrs	r3, r2
   139ae:	9304      	str	r3, [sp, #16]
   139b0:	e7ec      	b.n	1398c <_vfiprintf_r+0x120>
   139b2:	06d8      	lsls	r0, r3, #27
   139b4:	bf44      	itt	mi
   139b6:	2220      	movmi	r2, #32
   139b8:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   139bc:	0719      	lsls	r1, r3, #28
   139be:	bf44      	itt	mi
   139c0:	222b      	movmi	r2, #43	; 0x2b
   139c2:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   139c6:	7822      	ldrb	r2, [r4, #0]
   139c8:	2a2a      	cmp	r2, #42	; 0x2a
   139ca:	d080      	beq.n	138ce <_vfiprintf_r+0x62>
   139cc:	4623      	mov	r3, r4
   139ce:	9907      	ldr	r1, [sp, #28]
   139d0:	461c      	mov	r4, r3
   139d2:	7822      	ldrb	r2, [r4, #0]
   139d4:	3301      	adds	r3, #1
   139d6:	3a30      	subs	r2, #48	; 0x30
   139d8:	2a09      	cmp	r2, #9
   139da:	d803      	bhi.n	139e4 <_vfiprintf_r+0x178>
   139dc:	200a      	movs	r0, #10
   139de:	fb00 2101 	mla	r1, r0, r1, r2
   139e2:	e7f5      	b.n	139d0 <_vfiprintf_r+0x164>
   139e4:	9107      	str	r1, [sp, #28]
   139e6:	e780      	b.n	138ea <_vfiprintf_r+0x7e>
   139e8:	7863      	ldrb	r3, [r4, #1]
   139ea:	2b2a      	cmp	r3, #42	; 0x2a
   139ec:	d10a      	bne.n	13a04 <_vfiprintf_r+0x198>
   139ee:	9b03      	ldr	r3, [sp, #12]
   139f0:	3402      	adds	r4, #2
   139f2:	1d1a      	adds	r2, r3, #4
   139f4:	681b      	ldr	r3, [r3, #0]
   139f6:	9203      	str	r2, [sp, #12]
   139f8:	2b00      	cmp	r3, #0
   139fa:	bfb8      	it	lt
   139fc:	f04f 33ff 	movlt.w	r3, #4294967295
   13a00:	9305      	str	r3, [sp, #20]
   13a02:	e775      	b.n	138f0 <_vfiprintf_r+0x84>
   13a04:	1c61      	adds	r1, r4, #1
   13a06:	2200      	movs	r2, #0
   13a08:	460c      	mov	r4, r1
   13a0a:	7823      	ldrb	r3, [r4, #0]
   13a0c:	3101      	adds	r1, #1
   13a0e:	3b30      	subs	r3, #48	; 0x30
   13a10:	2b09      	cmp	r3, #9
   13a12:	d803      	bhi.n	13a1c <_vfiprintf_r+0x1b0>
   13a14:	200a      	movs	r0, #10
   13a16:	fb00 3202 	mla	r2, r0, r2, r3
   13a1a:	e7f5      	b.n	13a08 <_vfiprintf_r+0x19c>
   13a1c:	9205      	str	r2, [sp, #20]
   13a1e:	e767      	b.n	138f0 <_vfiprintf_r+0x84>
   13a20:	ab03      	add	r3, sp, #12
   13a22:	9300      	str	r3, [sp, #0]
   13a24:	4630      	mov	r0, r6
   13a26:	a904      	add	r1, sp, #16
   13a28:	462a      	mov	r2, r5
   13a2a:	4b11      	ldr	r3, [pc, #68]	; (13a70 <_vfiprintf_r+0x204>)
   13a2c:	f3af 8000 	nop.w
   13a30:	e007      	b.n	13a42 <_vfiprintf_r+0x1d6>
   13a32:	ab03      	add	r3, sp, #12
   13a34:	9300      	str	r3, [sp, #0]
   13a36:	4630      	mov	r0, r6
   13a38:	a904      	add	r1, sp, #16
   13a3a:	462a      	mov	r2, r5
   13a3c:	4b0c      	ldr	r3, [pc, #48]	; (13a70 <_vfiprintf_r+0x204>)
   13a3e:	f000 f8a1 	bl	13b84 <_printf_i>
   13a42:	1c42      	adds	r2, r0, #1
   13a44:	4607      	mov	r7, r0
   13a46:	f47f af78 	bne.w	1393a <_vfiprintf_r+0xce>
   13a4a:	89ab      	ldrh	r3, [r5, #12]
   13a4c:	065b      	lsls	r3, r3, #25
   13a4e:	f53f af3b 	bmi.w	138c8 <_vfiprintf_r+0x5c>
   13a52:	9809      	ldr	r0, [sp, #36]	; 0x24
   13a54:	b01d      	add	sp, #116	; 0x74
   13a56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   13a5a:	bf00      	nop
   13a5c:	0001c6e4 	.word	0x0001c6e4
   13a60:	0001c704 	.word	0x0001c704
   13a64:	0001c724 	.word	0x0001c724
   13a68:	0001c754 	.word	0x0001c754
   13a6c:	00000000 	.word	0x00000000
   13a70:	00013849 	.word	0x00013849
   13a74:	0001c750 	.word	0x0001c750
   13a78:	0001c74a 	.word	0x0001c74a

00013a7c <vfiprintf>:
   13a7c:	b530      	push	{r4, r5, lr}
   13a7e:	4605      	mov	r5, r0
   13a80:	460c      	mov	r4, r1
   13a82:	4613      	mov	r3, r2
   13a84:	4a03      	ldr	r2, [pc, #12]	; (13a94 <vfiprintf+0x18>)
   13a86:	4629      	mov	r1, r5
   13a88:	6810      	ldr	r0, [r2, #0]
   13a8a:	4622      	mov	r2, r4
   13a8c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   13a90:	f7ff beec 	b.w	1386c <_vfiprintf_r>
   13a94:	100001d4 	.word	0x100001d4

00013a98 <_printf_common>:
   13a98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   13a9c:	4691      	mov	r9, r2
   13a9e:	461f      	mov	r7, r3
   13aa0:	688a      	ldr	r2, [r1, #8]
   13aa2:	690b      	ldr	r3, [r1, #16]
   13aa4:	4606      	mov	r6, r0
   13aa6:	4293      	cmp	r3, r2
   13aa8:	bfb8      	it	lt
   13aaa:	4613      	movlt	r3, r2
   13aac:	f8c9 3000 	str.w	r3, [r9]
   13ab0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
   13ab4:	460c      	mov	r4, r1
   13ab6:	f8dd 8020 	ldr.w	r8, [sp, #32]
   13aba:	b112      	cbz	r2, 13ac2 <_printf_common+0x2a>
   13abc:	3301      	adds	r3, #1
   13abe:	f8c9 3000 	str.w	r3, [r9]
   13ac2:	6823      	ldr	r3, [r4, #0]
   13ac4:	0699      	lsls	r1, r3, #26
   13ac6:	bf42      	ittt	mi
   13ac8:	f8d9 3000 	ldrmi.w	r3, [r9]
   13acc:	3302      	addmi	r3, #2
   13ace:	f8c9 3000 	strmi.w	r3, [r9]
   13ad2:	6825      	ldr	r5, [r4, #0]
   13ad4:	f015 0506 	ands.w	r5, r5, #6
   13ad8:	d01c      	beq.n	13b14 <_printf_common+0x7c>
   13ada:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
   13ade:	6822      	ldr	r2, [r4, #0]
   13ae0:	3300      	adds	r3, #0
   13ae2:	bf18      	it	ne
   13ae4:	2301      	movne	r3, #1
   13ae6:	0692      	lsls	r2, r2, #26
   13ae8:	d51f      	bpl.n	13b2a <_printf_common+0x92>
   13aea:	18e1      	adds	r1, r4, r3
   13aec:	2030      	movs	r0, #48	; 0x30
   13aee:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
   13af2:	1c5a      	adds	r2, r3, #1
   13af4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
   13af8:	4422      	add	r2, r4
   13afa:	3302      	adds	r3, #2
   13afc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
   13b00:	e013      	b.n	13b2a <_printf_common+0x92>
   13b02:	4630      	mov	r0, r6
   13b04:	4639      	mov	r1, r7
   13b06:	f104 0219 	add.w	r2, r4, #25
   13b0a:	2301      	movs	r3, #1
   13b0c:	47c0      	blx	r8
   13b0e:	3001      	adds	r0, #1
   13b10:	d007      	beq.n	13b22 <_printf_common+0x8a>
   13b12:	3501      	adds	r5, #1
   13b14:	68e3      	ldr	r3, [r4, #12]
   13b16:	f8d9 2000 	ldr.w	r2, [r9]
   13b1a:	1a9b      	subs	r3, r3, r2
   13b1c:	429d      	cmp	r5, r3
   13b1e:	dbf0      	blt.n	13b02 <_printf_common+0x6a>
   13b20:	e7db      	b.n	13ada <_printf_common+0x42>
   13b22:	f04f 30ff 	mov.w	r0, #4294967295
   13b26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   13b2a:	4630      	mov	r0, r6
   13b2c:	4639      	mov	r1, r7
   13b2e:	f104 0243 	add.w	r2, r4, #67	; 0x43
   13b32:	47c0      	blx	r8
   13b34:	3001      	adds	r0, #1
   13b36:	d0f4      	beq.n	13b22 <_printf_common+0x8a>
   13b38:	6822      	ldr	r2, [r4, #0]
   13b3a:	f8d9 5000 	ldr.w	r5, [r9]
   13b3e:	68e3      	ldr	r3, [r4, #12]
   13b40:	f002 0206 	and.w	r2, r2, #6
   13b44:	2a04      	cmp	r2, #4
   13b46:	bf08      	it	eq
   13b48:	1b5d      	subeq	r5, r3, r5
   13b4a:	6922      	ldr	r2, [r4, #16]
   13b4c:	68a3      	ldr	r3, [r4, #8]
   13b4e:	bf0c      	ite	eq
   13b50:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
   13b54:	2500      	movne	r5, #0
   13b56:	4293      	cmp	r3, r2
   13b58:	bfc4      	itt	gt
   13b5a:	1a9b      	subgt	r3, r3, r2
   13b5c:	18ed      	addgt	r5, r5, r3
   13b5e:	f04f 0900 	mov.w	r9, #0
   13b62:	45a9      	cmp	r9, r5
   13b64:	da0a      	bge.n	13b7c <_printf_common+0xe4>
   13b66:	4630      	mov	r0, r6
   13b68:	4639      	mov	r1, r7
   13b6a:	f104 021a 	add.w	r2, r4, #26
   13b6e:	2301      	movs	r3, #1
   13b70:	47c0      	blx	r8
   13b72:	3001      	adds	r0, #1
   13b74:	d0d5      	beq.n	13b22 <_printf_common+0x8a>
   13b76:	f109 0901 	add.w	r9, r9, #1
   13b7a:	e7f2      	b.n	13b62 <_printf_common+0xca>
   13b7c:	2000      	movs	r0, #0
   13b7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

00013b84 <_printf_i>:
   13b84:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   13b88:	460c      	mov	r4, r1
   13b8a:	4617      	mov	r7, r2
   13b8c:	7e22      	ldrb	r2, [r4, #24]
   13b8e:	4698      	mov	r8, r3
   13b90:	2a6e      	cmp	r2, #110	; 0x6e
   13b92:	4606      	mov	r6, r0
   13b94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   13b96:	f101 0143 	add.w	r1, r1, #67	; 0x43
   13b9a:	f000 80aa 	beq.w	13cf2 <_printf_i+0x16e>
   13b9e:	d812      	bhi.n	13bc6 <_printf_i+0x42>
   13ba0:	2a63      	cmp	r2, #99	; 0x63
   13ba2:	d023      	beq.n	13bec <_printf_i+0x68>
   13ba4:	d80a      	bhi.n	13bbc <_printf_i+0x38>
   13ba6:	2a00      	cmp	r2, #0
   13ba8:	f000 80b7 	beq.w	13d1a <_printf_i+0x196>
   13bac:	2a58      	cmp	r2, #88	; 0x58
   13bae:	f040 80c6 	bne.w	13d3e <_printf_i+0x1ba>
   13bb2:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
   13bb6:	f8df e1f8 	ldr.w	lr, [pc, #504]	; 13db0 <_printf_i+0x22c>
   13bba:	e051      	b.n	13c60 <_printf_i+0xdc>
   13bbc:	2a64      	cmp	r2, #100	; 0x64
   13bbe:	d01e      	beq.n	13bfe <_printf_i+0x7a>
   13bc0:	2a69      	cmp	r2, #105	; 0x69
   13bc2:	d01c      	beq.n	13bfe <_printf_i+0x7a>
   13bc4:	e0bb      	b.n	13d3e <_printf_i+0x1ba>
   13bc6:	2a73      	cmp	r2, #115	; 0x73
   13bc8:	f000 80ab 	beq.w	13d22 <_printf_i+0x19e>
   13bcc:	d809      	bhi.n	13be2 <_printf_i+0x5e>
   13bce:	2a6f      	cmp	r2, #111	; 0x6f
   13bd0:	d02b      	beq.n	13c2a <_printf_i+0xa6>
   13bd2:	2a70      	cmp	r2, #112	; 0x70
   13bd4:	f040 80b3 	bne.w	13d3e <_printf_i+0x1ba>
   13bd8:	6822      	ldr	r2, [r4, #0]
   13bda:	f042 0220 	orr.w	r2, r2, #32
   13bde:	6022      	str	r2, [r4, #0]
   13be0:	e039      	b.n	13c56 <_printf_i+0xd2>
   13be2:	2a75      	cmp	r2, #117	; 0x75
   13be4:	d021      	beq.n	13c2a <_printf_i+0xa6>
   13be6:	2a78      	cmp	r2, #120	; 0x78
   13be8:	d035      	beq.n	13c56 <_printf_i+0xd2>
   13bea:	e0a8      	b.n	13d3e <_printf_i+0x1ba>
   13bec:	681a      	ldr	r2, [r3, #0]
   13bee:	f104 0542 	add.w	r5, r4, #66	; 0x42
   13bf2:	1d11      	adds	r1, r2, #4
   13bf4:	6019      	str	r1, [r3, #0]
   13bf6:	6813      	ldr	r3, [r2, #0]
   13bf8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
   13bfc:	e0a3      	b.n	13d46 <_printf_i+0x1c2>
   13bfe:	6820      	ldr	r0, [r4, #0]
   13c00:	681a      	ldr	r2, [r3, #0]
   13c02:	f010 0f80 	tst.w	r0, #128	; 0x80
   13c06:	d003      	beq.n	13c10 <_printf_i+0x8c>
   13c08:	1d10      	adds	r0, r2, #4
   13c0a:	6018      	str	r0, [r3, #0]
   13c0c:	6813      	ldr	r3, [r2, #0]
   13c0e:	e005      	b.n	13c1c <_printf_i+0x98>
   13c10:	0645      	lsls	r5, r0, #25
   13c12:	d5f9      	bpl.n	13c08 <_printf_i+0x84>
   13c14:	1d10      	adds	r0, r2, #4
   13c16:	6018      	str	r0, [r3, #0]
   13c18:	f9b2 3000 	ldrsh.w	r3, [r2]
   13c1c:	2b00      	cmp	r3, #0
   13c1e:	da3b      	bge.n	13c98 <_printf_i+0x114>
   13c20:	222d      	movs	r2, #45	; 0x2d
   13c22:	425b      	negs	r3, r3
   13c24:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
   13c28:	e036      	b.n	13c98 <_printf_i+0x114>
   13c2a:	6820      	ldr	r0, [r4, #0]
   13c2c:	681a      	ldr	r2, [r3, #0]
   13c2e:	f010 0f80 	tst.w	r0, #128	; 0x80
   13c32:	d003      	beq.n	13c3c <_printf_i+0xb8>
   13c34:	1d10      	adds	r0, r2, #4
   13c36:	6018      	str	r0, [r3, #0]
   13c38:	6813      	ldr	r3, [r2, #0]
   13c3a:	e004      	b.n	13c46 <_printf_i+0xc2>
   13c3c:	0640      	lsls	r0, r0, #25
   13c3e:	d5f9      	bpl.n	13c34 <_printf_i+0xb0>
   13c40:	1d10      	adds	r0, r2, #4
   13c42:	6018      	str	r0, [r3, #0]
   13c44:	8813      	ldrh	r3, [r2, #0]
   13c46:	7e22      	ldrb	r2, [r4, #24]
   13c48:	f8df e164 	ldr.w	lr, [pc, #356]	; 13db0 <_printf_i+0x22c>
   13c4c:	2a6f      	cmp	r2, #111	; 0x6f
   13c4e:	bf0c      	ite	eq
   13c50:	2208      	moveq	r2, #8
   13c52:	220a      	movne	r2, #10
   13c54:	e01c      	b.n	13c90 <_printf_i+0x10c>
   13c56:	2278      	movs	r2, #120	; 0x78
   13c58:	f8df e158 	ldr.w	lr, [pc, #344]	; 13db4 <_printf_i+0x230>
   13c5c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
   13c60:	6822      	ldr	r2, [r4, #0]
   13c62:	6818      	ldr	r0, [r3, #0]
   13c64:	f012 0f80 	tst.w	r2, #128	; 0x80
   13c68:	f100 0504 	add.w	r5, r0, #4
   13c6c:	601d      	str	r5, [r3, #0]
   13c6e:	d001      	beq.n	13c74 <_printf_i+0xf0>
   13c70:	6803      	ldr	r3, [r0, #0]
   13c72:	e002      	b.n	13c7a <_printf_i+0xf6>
   13c74:	0655      	lsls	r5, r2, #25
   13c76:	d5fb      	bpl.n	13c70 <_printf_i+0xec>
   13c78:	8803      	ldrh	r3, [r0, #0]
   13c7a:	07d0      	lsls	r0, r2, #31
   13c7c:	bf44      	itt	mi
   13c7e:	f042 0220 	orrmi.w	r2, r2, #32
   13c82:	6022      	strmi	r2, [r4, #0]
   13c84:	b91b      	cbnz	r3, 13c8e <_printf_i+0x10a>
   13c86:	6822      	ldr	r2, [r4, #0]
   13c88:	f022 0220 	bic.w	r2, r2, #32
   13c8c:	6022      	str	r2, [r4, #0]
   13c8e:	2210      	movs	r2, #16
   13c90:	2000      	movs	r0, #0
   13c92:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
   13c96:	e002      	b.n	13c9e <_printf_i+0x11a>
   13c98:	f8df e114 	ldr.w	lr, [pc, #276]	; 13db0 <_printf_i+0x22c>
   13c9c:	220a      	movs	r2, #10
   13c9e:	6865      	ldr	r5, [r4, #4]
   13ca0:	2d00      	cmp	r5, #0
   13ca2:	bfa8      	it	ge
   13ca4:	6820      	ldrge	r0, [r4, #0]
   13ca6:	60a5      	str	r5, [r4, #8]
   13ca8:	bfa4      	itt	ge
   13caa:	f020 0004 	bicge.w	r0, r0, #4
   13cae:	6020      	strge	r0, [r4, #0]
   13cb0:	b903      	cbnz	r3, 13cb4 <_printf_i+0x130>
   13cb2:	b165      	cbz	r5, 13cce <_printf_i+0x14a>
   13cb4:	460d      	mov	r5, r1
   13cb6:	fbb3 f0f2 	udiv	r0, r3, r2
   13cba:	fb02 3310 	mls	r3, r2, r0, r3
   13cbe:	f81e 3003 	ldrb.w	r3, [lr, r3]
   13cc2:	f805 3d01 	strb.w	r3, [r5, #-1]!
   13cc6:	4603      	mov	r3, r0
   13cc8:	2800      	cmp	r0, #0
   13cca:	d1f4      	bne.n	13cb6 <_printf_i+0x132>
   13ccc:	e000      	b.n	13cd0 <_printf_i+0x14c>
   13cce:	460d      	mov	r5, r1
   13cd0:	2a08      	cmp	r2, #8
   13cd2:	d10b      	bne.n	13cec <_printf_i+0x168>
   13cd4:	6823      	ldr	r3, [r4, #0]
   13cd6:	07da      	lsls	r2, r3, #31
   13cd8:	d508      	bpl.n	13cec <_printf_i+0x168>
   13cda:	6923      	ldr	r3, [r4, #16]
   13cdc:	6862      	ldr	r2, [r4, #4]
   13cde:	429a      	cmp	r2, r3
   13ce0:	bfde      	ittt	le
   13ce2:	2330      	movle	r3, #48	; 0x30
   13ce4:	f805 3c01 	strble.w	r3, [r5, #-1]
   13ce8:	f105 35ff 	addle.w	r5, r5, #4294967295
   13cec:	1b49      	subs	r1, r1, r5
   13cee:	6121      	str	r1, [r4, #16]
   13cf0:	e02e      	b.n	13d50 <_printf_i+0x1cc>
   13cf2:	6825      	ldr	r5, [r4, #0]
   13cf4:	681a      	ldr	r2, [r3, #0]
   13cf6:	f015 0f80 	tst.w	r5, #128	; 0x80
   13cfa:	6960      	ldr	r0, [r4, #20]
   13cfc:	d003      	beq.n	13d06 <_printf_i+0x182>
   13cfe:	1d15      	adds	r5, r2, #4
   13d00:	601d      	str	r5, [r3, #0]
   13d02:	6813      	ldr	r3, [r2, #0]
   13d04:	e008      	b.n	13d18 <_printf_i+0x194>
   13d06:	f015 0f40 	tst.w	r5, #64	; 0x40
   13d0a:	f102 0504 	add.w	r5, r2, #4
   13d0e:	601d      	str	r5, [r3, #0]
   13d10:	6813      	ldr	r3, [r2, #0]
   13d12:	d001      	beq.n	13d18 <_printf_i+0x194>
   13d14:	8018      	strh	r0, [r3, #0]
   13d16:	e000      	b.n	13d1a <_printf_i+0x196>
   13d18:	6018      	str	r0, [r3, #0]
   13d1a:	2300      	movs	r3, #0
   13d1c:	6123      	str	r3, [r4, #16]
   13d1e:	460d      	mov	r5, r1
   13d20:	e016      	b.n	13d50 <_printf_i+0x1cc>
   13d22:	681a      	ldr	r2, [r3, #0]
   13d24:	1d11      	adds	r1, r2, #4
   13d26:	6019      	str	r1, [r3, #0]
   13d28:	6815      	ldr	r5, [r2, #0]
   13d2a:	2100      	movs	r1, #0
   13d2c:	4628      	mov	r0, r5
   13d2e:	6862      	ldr	r2, [r4, #4]
   13d30:	f7ff fc8e 	bl	13650 <memchr>
   13d34:	b108      	cbz	r0, 13d3a <_printf_i+0x1b6>
   13d36:	1b40      	subs	r0, r0, r5
   13d38:	6060      	str	r0, [r4, #4]
   13d3a:	6863      	ldr	r3, [r4, #4]
   13d3c:	e004      	b.n	13d48 <_printf_i+0x1c4>
   13d3e:	f104 0542 	add.w	r5, r4, #66	; 0x42
   13d42:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
   13d46:	2301      	movs	r3, #1
   13d48:	6123      	str	r3, [r4, #16]
   13d4a:	2300      	movs	r3, #0
   13d4c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
   13d50:	f8cd 8000 	str.w	r8, [sp]
   13d54:	4630      	mov	r0, r6
   13d56:	4621      	mov	r1, r4
   13d58:	aa03      	add	r2, sp, #12
   13d5a:	463b      	mov	r3, r7
   13d5c:	f7ff fe9c 	bl	13a98 <_printf_common>
   13d60:	3001      	adds	r0, #1
   13d62:	d102      	bne.n	13d6a <_printf_i+0x1e6>
   13d64:	f04f 30ff 	mov.w	r0, #4294967295
   13d68:	e01f      	b.n	13daa <_printf_i+0x226>
   13d6a:	4630      	mov	r0, r6
   13d6c:	4639      	mov	r1, r7
   13d6e:	462a      	mov	r2, r5
   13d70:	6923      	ldr	r3, [r4, #16]
   13d72:	47c0      	blx	r8
   13d74:	3001      	adds	r0, #1
   13d76:	d0f5      	beq.n	13d64 <_printf_i+0x1e0>
   13d78:	6823      	ldr	r3, [r4, #0]
   13d7a:	079b      	lsls	r3, r3, #30
   13d7c:	d405      	bmi.n	13d8a <_printf_i+0x206>
   13d7e:	68e0      	ldr	r0, [r4, #12]
   13d80:	9b03      	ldr	r3, [sp, #12]
   13d82:	4298      	cmp	r0, r3
   13d84:	bfb8      	it	lt
   13d86:	4618      	movlt	r0, r3
   13d88:	e00f      	b.n	13daa <_printf_i+0x226>
   13d8a:	2500      	movs	r5, #0
   13d8c:	68e3      	ldr	r3, [r4, #12]
   13d8e:	9a03      	ldr	r2, [sp, #12]
   13d90:	1a9b      	subs	r3, r3, r2
   13d92:	429d      	cmp	r5, r3
   13d94:	daf3      	bge.n	13d7e <_printf_i+0x1fa>
   13d96:	4630      	mov	r0, r6
   13d98:	4639      	mov	r1, r7
   13d9a:	f104 0219 	add.w	r2, r4, #25
   13d9e:	2301      	movs	r3, #1
   13da0:	47c0      	blx	r8
   13da2:	3001      	adds	r0, #1
   13da4:	d0de      	beq.n	13d64 <_printf_i+0x1e0>
   13da6:	3501      	adds	r5, #1
   13da8:	e7f0      	b.n	13d8c <_printf_i+0x208>
   13daa:	b004      	add	sp, #16
   13dac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13db0:	0001c380 	.word	0x0001c380
   13db4:	0001c75b 	.word	0x0001c75b

00013db8 <__svfiscanf_r>:
   13db8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
   13dbc:	4607      	mov	r7, r0
   13dbe:	460c      	mov	r4, r1
   13dc0:	4690      	mov	r8, r2
   13dc2:	f5ad 7d24 	sub.w	sp, sp, #656	; 0x290
   13dc6:	9301      	str	r3, [sp, #4]
   13dc8:	2300      	movs	r3, #0
   13dca:	9346      	str	r3, [sp, #280]	; 0x118
   13dcc:	9347      	str	r3, [sp, #284]	; 0x11c
   13dce:	4b9c      	ldr	r3, [pc, #624]	; (14040 <__svfiscanf_r+0x288>)
   13dd0:	f10d 0a0c 	add.w	r10, sp, #12
   13dd4:	93a2      	str	r3, [sp, #648]	; 0x288
   13dd6:	4b9b      	ldr	r3, [pc, #620]	; (14044 <__svfiscanf_r+0x28c>)
   13dd8:	f8cd a120 	str.w	r10, [sp, #288]	; 0x120
   13ddc:	93a3      	str	r3, [sp, #652]	; 0x28c
   13dde:	f898 5000 	ldrb.w	r5, [r8]
   13de2:	2d00      	cmp	r5, #0
   13de4:	f000 8124 	beq.w	14030 <__svfiscanf_r+0x278>
   13de8:	4997      	ldr	r1, [pc, #604]	; (14048 <__svfiscanf_r+0x290>)
   13dea:	680b      	ldr	r3, [r1, #0]
   13dec:	4689      	mov	r9, r1
   13dee:	442b      	add	r3, r5
   13df0:	785b      	ldrb	r3, [r3, #1]
   13df2:	f003 0308 	and.w	r3, r3, #8
   13df6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
   13dfa:	b1eb      	cbz	r3, 13e38 <__svfiscanf_r+0x80>
   13dfc:	6863      	ldr	r3, [r4, #4]
   13dfe:	2b00      	cmp	r3, #0
   13e00:	dd10      	ble.n	13e24 <__svfiscanf_r+0x6c>
   13e02:	6823      	ldr	r3, [r4, #0]
   13e04:	f8d9 1000 	ldr.w	r1, [r9]
   13e08:	781a      	ldrb	r2, [r3, #0]
   13e0a:	440a      	add	r2, r1
   13e0c:	7852      	ldrb	r2, [r2, #1]
   13e0e:	0715      	lsls	r5, r2, #28
   13e10:	d50e      	bpl.n	13e30 <__svfiscanf_r+0x78>
   13e12:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   13e14:	3301      	adds	r3, #1
   13e16:	3201      	adds	r2, #1
   13e18:	9247      	str	r2, [sp, #284]	; 0x11c
   13e1a:	6862      	ldr	r2, [r4, #4]
   13e1c:	6023      	str	r3, [r4, #0]
   13e1e:	3a01      	subs	r2, #1
   13e20:	6062      	str	r2, [r4, #4]
   13e22:	e7eb      	b.n	13dfc <__svfiscanf_r+0x44>
   13e24:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   13e26:	4638      	mov	r0, r7
   13e28:	4621      	mov	r1, r4
   13e2a:	4798      	blx	r3
   13e2c:	2800      	cmp	r0, #0
   13e2e:	d0e8      	beq.n	13e02 <__svfiscanf_r+0x4a>
   13e30:	f108 0601 	add.w	r6, r8, #1
   13e34:	46b0      	mov	r8, r6
   13e36:	e7d2      	b.n	13dde <__svfiscanf_r+0x26>
   13e38:	2d25      	cmp	r5, #37	; 0x25
   13e3a:	f108 0601 	add.w	r6, r8, #1
   13e3e:	d14f      	bne.n	13ee0 <__svfiscanf_r+0x128>
   13e40:	9245      	str	r2, [sp, #276]	; 0x114
   13e42:	9243      	str	r2, [sp, #268]	; 0x10c
   13e44:	f898 3001 	ldrb.w	r3, [r8, #1]
   13e48:	2b2a      	cmp	r3, #42	; 0x2a
   13e4a:	d103      	bne.n	13e54 <__svfiscanf_r+0x9c>
   13e4c:	2310      	movs	r3, #16
   13e4e:	9343      	str	r3, [sp, #268]	; 0x10c
   13e50:	f108 0602 	add.w	r6, r8, #2
   13e54:	7831      	ldrb	r1, [r6, #0]
   13e56:	4635      	mov	r5, r6
   13e58:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
   13e5c:	2b09      	cmp	r3, #9
   13e5e:	f106 0601 	add.w	r6, r6, #1
   13e62:	d806      	bhi.n	13e72 <__svfiscanf_r+0xba>
   13e64:	9b45      	ldr	r3, [sp, #276]	; 0x114
   13e66:	220a      	movs	r2, #10
   13e68:	fb02 1303 	mla	r3, r2, r3, r1
   13e6c:	3b30      	subs	r3, #48	; 0x30
   13e6e:	9345      	str	r3, [sp, #276]	; 0x114
   13e70:	e7f0      	b.n	13e54 <__svfiscanf_r+0x9c>
   13e72:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 14050 <__svfiscanf_r+0x298>
   13e76:	2203      	movs	r2, #3
   13e78:	4640      	mov	r0, r8
   13e7a:	f7ff fbe9 	bl	13650 <memchr>
   13e7e:	b140      	cbz	r0, 13e92 <__svfiscanf_r+0xda>
   13e80:	4635      	mov	r5, r6
   13e82:	2301      	movs	r3, #1
   13e84:	ebc8 0000 	rsb	r0, r8, r0
   13e88:	fa03 f200 	lsl.w	r2, r3, r0
   13e8c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   13e8e:	4313      	orrs	r3, r2
   13e90:	9343      	str	r3, [sp, #268]	; 0x10c
   13e92:	1c6e      	adds	r6, r5, #1
   13e94:	782d      	ldrb	r5, [r5, #0]
   13e96:	2d67      	cmp	r5, #103	; 0x67
   13e98:	d80f      	bhi.n	13eba <__svfiscanf_r+0x102>
   13e9a:	2d65      	cmp	r5, #101	; 0x65
   13e9c:	d278      	bcs.n	13f90 <__svfiscanf_r+0x1d8>
   13e9e:	2d5b      	cmp	r5, #91	; 0x5b
   13ea0:	d054      	beq.n	13f4c <__svfiscanf_r+0x194>
   13ea2:	d805      	bhi.n	13eb0 <__svfiscanf_r+0xf8>
   13ea4:	2d00      	cmp	r5, #0
   13ea6:	f000 80c5 	beq.w	14034 <__svfiscanf_r+0x27c>
   13eaa:	2d25      	cmp	r5, #37	; 0x25
   13eac:	d018      	beq.n	13ee0 <__svfiscanf_r+0x128>
   13eae:	e071      	b.n	13f94 <__svfiscanf_r+0x1dc>
   13eb0:	2d63      	cmp	r5, #99	; 0x63
   13eb2:	d057      	beq.n	13f64 <__svfiscanf_r+0x1ac>
   13eb4:	2d64      	cmp	r5, #100	; 0x64
   13eb6:	d03f      	beq.n	13f38 <__svfiscanf_r+0x180>
   13eb8:	e06c      	b.n	13f94 <__svfiscanf_r+0x1dc>
   13eba:	2d70      	cmp	r5, #112	; 0x70
   13ebc:	d032      	beq.n	13f24 <__svfiscanf_r+0x16c>
   13ebe:	d807      	bhi.n	13ed0 <__svfiscanf_r+0x118>
   13ec0:	2d6e      	cmp	r5, #110	; 0x6e
   13ec2:	d055      	beq.n	13f70 <__svfiscanf_r+0x1b8>
   13ec4:	d83a      	bhi.n	13f3c <__svfiscanf_r+0x184>
   13ec6:	2d69      	cmp	r5, #105	; 0x69
   13ec8:	d164      	bne.n	13f94 <__svfiscanf_r+0x1dc>
   13eca:	2300      	movs	r3, #0
   13ecc:	9344      	str	r3, [sp, #272]	; 0x110
   13ece:	e03b      	b.n	13f48 <__svfiscanf_r+0x190>
   13ed0:	2d75      	cmp	r5, #117	; 0x75
   13ed2:	d031      	beq.n	13f38 <__svfiscanf_r+0x180>
   13ed4:	2d78      	cmp	r5, #120	; 0x78
   13ed6:	d029      	beq.n	13f2c <__svfiscanf_r+0x174>
   13ed8:	2d73      	cmp	r5, #115	; 0x73
   13eda:	d15b      	bne.n	13f94 <__svfiscanf_r+0x1dc>
   13edc:	2302      	movs	r3, #2
   13ede:	e03f      	b.n	13f60 <__svfiscanf_r+0x1a8>
   13ee0:	6863      	ldr	r3, [r4, #4]
   13ee2:	2b00      	cmp	r3, #0
   13ee4:	dd0d      	ble.n	13f02 <__svfiscanf_r+0x14a>
   13ee6:	6823      	ldr	r3, [r4, #0]
   13ee8:	781a      	ldrb	r2, [r3, #0]
   13eea:	42aa      	cmp	r2, r5
   13eec:	f040 80a0 	bne.w	14030 <__svfiscanf_r+0x278>
   13ef0:	3301      	adds	r3, #1
   13ef2:	6862      	ldr	r2, [r4, #4]
   13ef4:	6023      	str	r3, [r4, #0]
   13ef6:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   13ef8:	3a01      	subs	r2, #1
   13efa:	3301      	adds	r3, #1
   13efc:	6062      	str	r2, [r4, #4]
   13efe:	9347      	str	r3, [sp, #284]	; 0x11c
   13f00:	e798      	b.n	13e34 <__svfiscanf_r+0x7c>
   13f02:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   13f04:	4638      	mov	r0, r7
   13f06:	4621      	mov	r1, r4
   13f08:	4798      	blx	r3
   13f0a:	2800      	cmp	r0, #0
   13f0c:	d0eb      	beq.n	13ee6 <__svfiscanf_r+0x12e>
   13f0e:	9846      	ldr	r0, [sp, #280]	; 0x118
   13f10:	2800      	cmp	r0, #0
   13f12:	f000 808f 	beq.w	14034 <__svfiscanf_r+0x27c>
   13f16:	89a3      	ldrh	r3, [r4, #12]
   13f18:	f013 0f40 	tst.w	r3, #64	; 0x40
   13f1c:	bf18      	it	ne
   13f1e:	f04f 30ff 	movne.w	r0, #4294967295
   13f22:	e089      	b.n	14038 <__svfiscanf_r+0x280>
   13f24:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   13f26:	f043 0320 	orr.w	r3, r3, #32
   13f2a:	9343      	str	r3, [sp, #268]	; 0x10c
   13f2c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   13f2e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   13f32:	9343      	str	r3, [sp, #268]	; 0x10c
   13f34:	2310      	movs	r3, #16
   13f36:	e002      	b.n	13f3e <__svfiscanf_r+0x186>
   13f38:	230a      	movs	r3, #10
   13f3a:	e000      	b.n	13f3e <__svfiscanf_r+0x186>
   13f3c:	2308      	movs	r3, #8
   13f3e:	2d6e      	cmp	r5, #110	; 0x6e
   13f40:	9344      	str	r3, [sp, #272]	; 0x110
   13f42:	dd01      	ble.n	13f48 <__svfiscanf_r+0x190>
   13f44:	2304      	movs	r3, #4
   13f46:	e00b      	b.n	13f60 <__svfiscanf_r+0x1a8>
   13f48:	2303      	movs	r3, #3
   13f4a:	e009      	b.n	13f60 <__svfiscanf_r+0x1a8>
   13f4c:	4631      	mov	r1, r6
   13f4e:	4650      	mov	r0, r10
   13f50:	f000 fb22 	bl	14598 <__sccl>
   13f54:	4606      	mov	r6, r0
   13f56:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   13f58:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   13f5c:	9343      	str	r3, [sp, #268]	; 0x10c
   13f5e:	2301      	movs	r3, #1
   13f60:	9349      	str	r3, [sp, #292]	; 0x124
   13f62:	e01b      	b.n	13f9c <__svfiscanf_r+0x1e4>
   13f64:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   13f66:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   13f6a:	9343      	str	r3, [sp, #268]	; 0x10c
   13f6c:	2300      	movs	r3, #0
   13f6e:	e7f7      	b.n	13f60 <__svfiscanf_r+0x1a8>
   13f70:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   13f72:	06d0      	lsls	r0, r2, #27
   13f74:	f53f af5e 	bmi.w	13e34 <__svfiscanf_r+0x7c>
   13f78:	f012 0f01 	tst.w	r2, #1
   13f7c:	9a01      	ldr	r2, [sp, #4]
   13f7e:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   13f80:	f102 0104 	add.w	r1, r2, #4
   13f84:	9101      	str	r1, [sp, #4]
   13f86:	6812      	ldr	r2, [r2, #0]
   13f88:	bf14      	ite	ne
   13f8a:	8013      	strhne	r3, [r2, #0]
   13f8c:	6013      	streq	r3, [r2, #0]
   13f8e:	e751      	b.n	13e34 <__svfiscanf_r+0x7c>
   13f90:	2305      	movs	r3, #5
   13f92:	e7e5      	b.n	13f60 <__svfiscanf_r+0x1a8>
   13f94:	2303      	movs	r3, #3
   13f96:	9349      	str	r3, [sp, #292]	; 0x124
   13f98:	230a      	movs	r3, #10
   13f9a:	9344      	str	r3, [sp, #272]	; 0x110
   13f9c:	6863      	ldr	r3, [r4, #4]
   13f9e:	2b00      	cmp	r3, #0
   13fa0:	dd03      	ble.n	13faa <__svfiscanf_r+0x1f2>
   13fa2:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   13fa4:	0659      	lsls	r1, r3, #25
   13fa6:	d511      	bpl.n	13fcc <__svfiscanf_r+0x214>
   13fa8:	e018      	b.n	13fdc <__svfiscanf_r+0x224>
   13faa:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   13fac:	4638      	mov	r0, r7
   13fae:	4621      	mov	r1, r4
   13fb0:	4798      	blx	r3
   13fb2:	2800      	cmp	r0, #0
   13fb4:	d0f5      	beq.n	13fa2 <__svfiscanf_r+0x1ea>
   13fb6:	e7aa      	b.n	13f0e <__svfiscanf_r+0x156>
   13fb8:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   13fba:	3201      	adds	r2, #1
   13fbc:	9247      	str	r2, [sp, #284]	; 0x11c
   13fbe:	6862      	ldr	r2, [r4, #4]
   13fc0:	3a01      	subs	r2, #1
   13fc2:	2a00      	cmp	r2, #0
   13fc4:	6062      	str	r2, [r4, #4]
   13fc6:	dd13      	ble.n	13ff0 <__svfiscanf_r+0x238>
   13fc8:	3301      	adds	r3, #1
   13fca:	6023      	str	r3, [r4, #0]
   13fcc:	6823      	ldr	r3, [r4, #0]
   13fce:	f8d9 1000 	ldr.w	r1, [r9]
   13fd2:	781a      	ldrb	r2, [r3, #0]
   13fd4:	440a      	add	r2, r1
   13fd6:	7852      	ldrb	r2, [r2, #1]
   13fd8:	0712      	lsls	r2, r2, #28
   13fda:	d4ed      	bmi.n	13fb8 <__svfiscanf_r+0x200>
   13fdc:	9b49      	ldr	r3, [sp, #292]	; 0x124
   13fde:	2b02      	cmp	r3, #2
   13fe0:	dc0d      	bgt.n	13ffe <__svfiscanf_r+0x246>
   13fe2:	4638      	mov	r0, r7
   13fe4:	a943      	add	r1, sp, #268	; 0x10c
   13fe6:	4622      	mov	r2, r4
   13fe8:	ab01      	add	r3, sp, #4
   13fea:	f000 f85f 	bl	140ac <_scanf_chars>
   13fee:	e019      	b.n	14024 <__svfiscanf_r+0x26c>
   13ff0:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   13ff2:	4638      	mov	r0, r7
   13ff4:	4621      	mov	r1, r4
   13ff6:	4798      	blx	r3
   13ff8:	2800      	cmp	r0, #0
   13ffa:	d0e7      	beq.n	13fcc <__svfiscanf_r+0x214>
   13ffc:	e787      	b.n	13f0e <__svfiscanf_r+0x156>
   13ffe:	2b04      	cmp	r3, #4
   14000:	dc06      	bgt.n	14010 <__svfiscanf_r+0x258>
   14002:	4638      	mov	r0, r7
   14004:	a943      	add	r1, sp, #268	; 0x10c
   14006:	4622      	mov	r2, r4
   14008:	ab01      	add	r3, sp, #4
   1400a:	f000 f8ad 	bl	14168 <_scanf_i>
   1400e:	e009      	b.n	14024 <__svfiscanf_r+0x26c>
   14010:	4b0e      	ldr	r3, [pc, #56]	; (1404c <__svfiscanf_r+0x294>)
   14012:	2b00      	cmp	r3, #0
   14014:	f43f af0e 	beq.w	13e34 <__svfiscanf_r+0x7c>
   14018:	4638      	mov	r0, r7
   1401a:	a943      	add	r1, sp, #268	; 0x10c
   1401c:	4622      	mov	r2, r4
   1401e:	ab01      	add	r3, sp, #4
   14020:	f3af 8000 	nop.w
   14024:	2801      	cmp	r0, #1
   14026:	d003      	beq.n	14030 <__svfiscanf_r+0x278>
   14028:	2802      	cmp	r0, #2
   1402a:	f47f af03 	bne.w	13e34 <__svfiscanf_r+0x7c>
   1402e:	e76e      	b.n	13f0e <__svfiscanf_r+0x156>
   14030:	9846      	ldr	r0, [sp, #280]	; 0x118
   14032:	e001      	b.n	14038 <__svfiscanf_r+0x280>
   14034:	f04f 30ff 	mov.w	r0, #4294967295
   14038:	f50d 7d24 	add.w	sp, sp, #656	; 0x290
   1403c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
   14040:	000161e5 	.word	0x000161e5
   14044:	00014415 	.word	0x00014415
   14048:	10000170 	.word	0x10000170
   1404c:	00000000 	.word	0x00000000
   14050:	0001c750 	.word	0x0001c750

00014054 <vfiscanf>:
   14054:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14058:	4617      	mov	r7, r2
   1405a:	4a10      	ldr	r2, [pc, #64]	; (1409c <vfiscanf+0x48>)
   1405c:	4604      	mov	r4, r0
   1405e:	6815      	ldr	r5, [r2, #0]
   14060:	4688      	mov	r8, r1
   14062:	4616      	mov	r6, r2
   14064:	b125      	cbz	r5, 14070 <vfiscanf+0x1c>
   14066:	69ab      	ldr	r3, [r5, #24]
   14068:	b913      	cbnz	r3, 14070 <vfiscanf+0x1c>
   1406a:	4628      	mov	r0, r5
   1406c:	f7fe fe56 	bl	12d1c <__sinit>
   14070:	4b0b      	ldr	r3, [pc, #44]	; (140a0 <vfiscanf+0x4c>)
   14072:	429c      	cmp	r4, r3
   14074:	d101      	bne.n	1407a <vfiscanf+0x26>
   14076:	686c      	ldr	r4, [r5, #4]
   14078:	e008      	b.n	1408c <vfiscanf+0x38>
   1407a:	4b0a      	ldr	r3, [pc, #40]	; (140a4 <vfiscanf+0x50>)
   1407c:	429c      	cmp	r4, r3
   1407e:	d101      	bne.n	14084 <vfiscanf+0x30>
   14080:	68ac      	ldr	r4, [r5, #8]
   14082:	e003      	b.n	1408c <vfiscanf+0x38>
   14084:	4b08      	ldr	r3, [pc, #32]	; (140a8 <vfiscanf+0x54>)
   14086:	429c      	cmp	r4, r3
   14088:	bf08      	it	eq
   1408a:	68ec      	ldreq	r4, [r5, #12]
   1408c:	6830      	ldr	r0, [r6, #0]
   1408e:	4621      	mov	r1, r4
   14090:	4642      	mov	r2, r8
   14092:	463b      	mov	r3, r7
   14094:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   14098:	f7ff be8e 	b.w	13db8 <__svfiscanf_r>
   1409c:	100001d4 	.word	0x100001d4
   140a0:	0001c6e4 	.word	0x0001c6e4
   140a4:	0001c704 	.word	0x0001c704
   140a8:	0001c724 	.word	0x0001c724

000140ac <_scanf_chars>:
   140ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   140b0:	4615      	mov	r5, r2
   140b2:	688a      	ldr	r2, [r1, #8]
   140b4:	4680      	mov	r8, r0
   140b6:	460c      	mov	r4, r1
   140b8:	b932      	cbnz	r2, 140c8 <_scanf_chars+0x1c>
   140ba:	698a      	ldr	r2, [r1, #24]
   140bc:	2a00      	cmp	r2, #0
   140be:	bf0c      	ite	eq
   140c0:	2201      	moveq	r2, #1
   140c2:	f04f 32ff 	movne.w	r2, #4294967295
   140c6:	608a      	str	r2, [r1, #8]
   140c8:	6822      	ldr	r2, [r4, #0]
   140ca:	2600      	movs	r6, #0
   140cc:	06d1      	lsls	r1, r2, #27
   140ce:	bf5f      	itttt	pl
   140d0:	681a      	ldrpl	r2, [r3, #0]
   140d2:	1d11      	addpl	r1, r2, #4
   140d4:	6019      	strpl	r1, [r3, #0]
   140d6:	6817      	ldrpl	r7, [r2, #0]
   140d8:	69a0      	ldr	r0, [r4, #24]
   140da:	b9f8      	cbnz	r0, 1411c <_scanf_chars+0x70>
   140dc:	6823      	ldr	r3, [r4, #0]
   140de:	3601      	adds	r6, #1
   140e0:	06da      	lsls	r2, r3, #27
   140e2:	bf5e      	ittt	pl
   140e4:	682b      	ldrpl	r3, [r5, #0]
   140e6:	781b      	ldrbpl	r3, [r3, #0]
   140e8:	703b      	strbpl	r3, [r7, #0]
   140ea:	682a      	ldr	r2, [r5, #0]
   140ec:	686b      	ldr	r3, [r5, #4]
   140ee:	f102 0201 	add.w	r2, r2, #1
   140f2:	602a      	str	r2, [r5, #0]
   140f4:	68a2      	ldr	r2, [r4, #8]
   140f6:	f103 33ff 	add.w	r3, r3, #4294967295
   140fa:	f102 32ff 	add.w	r2, r2, #4294967295
   140fe:	606b      	str	r3, [r5, #4]
   14100:	bf58      	it	pl
   14102:	3701      	addpl	r7, #1
   14104:	60a2      	str	r2, [r4, #8]
   14106:	b1ea      	cbz	r2, 14144 <_scanf_chars+0x98>
   14108:	2b00      	cmp	r3, #0
   1410a:	dce5      	bgt.n	140d8 <_scanf_chars+0x2c>
   1410c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   14110:	4640      	mov	r0, r8
   14112:	4629      	mov	r1, r5
   14114:	4798      	blx	r3
   14116:	2800      	cmp	r0, #0
   14118:	d0de      	beq.n	140d8 <_scanf_chars+0x2c>
   1411a:	e013      	b.n	14144 <_scanf_chars+0x98>
   1411c:	2801      	cmp	r0, #1
   1411e:	d107      	bne.n	14130 <_scanf_chars+0x84>
   14120:	682b      	ldr	r3, [r5, #0]
   14122:	6962      	ldr	r2, [r4, #20]
   14124:	781b      	ldrb	r3, [r3, #0]
   14126:	5cd3      	ldrb	r3, [r2, r3]
   14128:	2b00      	cmp	r3, #0
   1412a:	d1d7      	bne.n	140dc <_scanf_chars+0x30>
   1412c:	b1c6      	cbz	r6, 14160 <_scanf_chars+0xb4>
   1412e:	e009      	b.n	14144 <_scanf_chars+0x98>
   14130:	2802      	cmp	r0, #2
   14132:	d107      	bne.n	14144 <_scanf_chars+0x98>
   14134:	682b      	ldr	r3, [r5, #0]
   14136:	4a0b      	ldr	r2, [pc, #44]	; (14164 <_scanf_chars+0xb8>)
   14138:	781b      	ldrb	r3, [r3, #0]
   1413a:	6812      	ldr	r2, [r2, #0]
   1413c:	4413      	add	r3, r2
   1413e:	785b      	ldrb	r3, [r3, #1]
   14140:	071b      	lsls	r3, r3, #28
   14142:	d5cb      	bpl.n	140dc <_scanf_chars+0x30>
   14144:	6823      	ldr	r3, [r4, #0]
   14146:	f013 0310 	ands.w	r3, r3, #16
   1414a:	d105      	bne.n	14158 <_scanf_chars+0xac>
   1414c:	68e2      	ldr	r2, [r4, #12]
   1414e:	3201      	adds	r2, #1
   14150:	60e2      	str	r2, [r4, #12]
   14152:	69a2      	ldr	r2, [r4, #24]
   14154:	b102      	cbz	r2, 14158 <_scanf_chars+0xac>
   14156:	703b      	strb	r3, [r7, #0]
   14158:	6923      	ldr	r3, [r4, #16]
   1415a:	2000      	movs	r0, #0
   1415c:	441e      	add	r6, r3
   1415e:	6126      	str	r6, [r4, #16]
   14160:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14164:	10000170 	.word	0x10000170

00014168 <_scanf_i>:
   14168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   1416c:	460c      	mov	r4, r1
   1416e:	469a      	mov	r10, r3
   14170:	4b72      	ldr	r3, [pc, #456]	; (1433c <_scanf_i+0x1d4>)
   14172:	b087      	sub	sp, #28
   14174:	4683      	mov	r11, r0
   14176:	4616      	mov	r6, r2
   14178:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
   1417c:	ab03      	add	r3, sp, #12
   1417e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
   14182:	4b6f      	ldr	r3, [pc, #444]	; (14340 <_scanf_i+0x1d8>)
   14184:	69a1      	ldr	r1, [r4, #24]
   14186:	4a6f      	ldr	r2, [pc, #444]	; (14344 <_scanf_i+0x1dc>)
   14188:	f104 091c 	add.w	r9, r4, #28
   1418c:	2903      	cmp	r1, #3
   1418e:	bf18      	it	ne
   14190:	461a      	movne	r2, r3
   14192:	68a3      	ldr	r3, [r4, #8]
   14194:	9200      	str	r2, [sp, #0]
   14196:	1e5a      	subs	r2, r3, #1
   14198:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
   1419c:	bf82      	ittt	hi
   1419e:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
   141a2:	eb03 0805 	addhi.w	r8, r3, r5
   141a6:	f240 135d 	movwhi	r3, #349	; 0x15d
   141aa:	464f      	mov	r7, r9
   141ac:	bf88      	it	hi
   141ae:	60a3      	strhi	r3, [r4, #8]
   141b0:	6823      	ldr	r3, [r4, #0]
   141b2:	bf98      	it	ls
   141b4:	f04f 0800 	movls.w	r8, #0
   141b8:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
   141bc:	6023      	str	r3, [r4, #0]
   141be:	2300      	movs	r3, #0
   141c0:	6832      	ldr	r2, [r6, #0]
   141c2:	a903      	add	r1, sp, #12
   141c4:	f851 0023 	ldr.w	r0, [r1, r3, lsl #2]
   141c8:	7811      	ldrb	r1, [r2, #0]
   141ca:	2202      	movs	r2, #2
   141cc:	9301      	str	r3, [sp, #4]
   141ce:	f7ff fa3f 	bl	13650 <memchr>
   141d2:	9b01      	ldr	r3, [sp, #4]
   141d4:	2800      	cmp	r0, #0
   141d6:	d035      	beq.n	14244 <_scanf_i+0xdc>
   141d8:	2b01      	cmp	r3, #1
   141da:	d10b      	bne.n	141f4 <_scanf_i+0x8c>
   141dc:	6862      	ldr	r2, [r4, #4]
   141de:	b92a      	cbnz	r2, 141ec <_scanf_i+0x84>
   141e0:	2208      	movs	r2, #8
   141e2:	6062      	str	r2, [r4, #4]
   141e4:	6822      	ldr	r2, [r4, #0]
   141e6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   141ea:	6022      	str	r2, [r4, #0]
   141ec:	6822      	ldr	r2, [r4, #0]
   141ee:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
   141f2:	e00b      	b.n	1420c <_scanf_i+0xa4>
   141f4:	2b02      	cmp	r3, #2
   141f6:	d10a      	bne.n	1420e <_scanf_i+0xa6>
   141f8:	6822      	ldr	r2, [r4, #0]
   141fa:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
   141fe:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   14202:	d11f      	bne.n	14244 <_scanf_i+0xdc>
   14204:	2110      	movs	r1, #16
   14206:	6061      	str	r1, [r4, #4]
   14208:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   1420c:	6022      	str	r2, [r4, #0]
   1420e:	68a2      	ldr	r2, [r4, #8]
   14210:	1e51      	subs	r1, r2, #1
   14212:	60a1      	str	r1, [r4, #8]
   14214:	b1b2      	cbz	r2, 14244 <_scanf_i+0xdc>
   14216:	6832      	ldr	r2, [r6, #0]
   14218:	1c7d      	adds	r5, r7, #1
   1421a:	1c51      	adds	r1, r2, #1
   1421c:	6031      	str	r1, [r6, #0]
   1421e:	7812      	ldrb	r2, [r2, #0]
   14220:	703a      	strb	r2, [r7, #0]
   14222:	6872      	ldr	r2, [r6, #4]
   14224:	3a01      	subs	r2, #1
   14226:	2a00      	cmp	r2, #0
   14228:	6072      	str	r2, [r6, #4]
   1422a:	dc0a      	bgt.n	14242 <_scanf_i+0xda>
   1422c:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
   14230:	4658      	mov	r0, r11
   14232:	4631      	mov	r1, r6
   14234:	9301      	str	r3, [sp, #4]
   14236:	4790      	blx	r2
   14238:	2800      	cmp	r0, #0
   1423a:	d141      	bne.n	142c0 <_scanf_i+0x158>
   1423c:	462f      	mov	r7, r5
   1423e:	9b01      	ldr	r3, [sp, #4]
   14240:	e000      	b.n	14244 <_scanf_i+0xdc>
   14242:	462f      	mov	r7, r5
   14244:	3301      	adds	r3, #1
   14246:	2b03      	cmp	r3, #3
   14248:	d1ba      	bne.n	141c0 <_scanf_i+0x58>
   1424a:	6863      	ldr	r3, [r4, #4]
   1424c:	b90b      	cbnz	r3, 14252 <_scanf_i+0xea>
   1424e:	230a      	movs	r3, #10
   14250:	6063      	str	r3, [r4, #4]
   14252:	6863      	ldr	r3, [r4, #4]
   14254:	493c      	ldr	r1, [pc, #240]	; (14348 <_scanf_i+0x1e0>)
   14256:	6960      	ldr	r0, [r4, #20]
   14258:	1ac9      	subs	r1, r1, r3
   1425a:	f000 f99d 	bl	14598 <__sccl>
   1425e:	463d      	mov	r5, r7
   14260:	2700      	movs	r7, #0
   14262:	68a3      	ldr	r3, [r4, #8]
   14264:	b36b      	cbz	r3, 142c2 <_scanf_i+0x15a>
   14266:	6831      	ldr	r1, [r6, #0]
   14268:	6960      	ldr	r0, [r4, #20]
   1426a:	780a      	ldrb	r2, [r1, #0]
   1426c:	5c80      	ldrb	r0, [r0, r2]
   1426e:	b340      	cbz	r0, 142c2 <_scanf_i+0x15a>
   14270:	2a30      	cmp	r2, #48	; 0x30
   14272:	6822      	ldr	r2, [r4, #0]
   14274:	d10a      	bne.n	1428c <_scanf_i+0x124>
   14276:	0510      	lsls	r0, r2, #20
   14278:	d508      	bpl.n	1428c <_scanf_i+0x124>
   1427a:	3701      	adds	r7, #1
   1427c:	f1b8 0f00 	cmp.w	r8, #0
   14280:	d00b      	beq.n	1429a <_scanf_i+0x132>
   14282:	3301      	adds	r3, #1
   14284:	f108 38ff 	add.w	r8, r8, #4294967295
   14288:	60a3      	str	r3, [r4, #8]
   1428a:	e006      	b.n	1429a <_scanf_i+0x132>
   1428c:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
   14290:	6022      	str	r2, [r4, #0]
   14292:	780b      	ldrb	r3, [r1, #0]
   14294:	3501      	adds	r5, #1
   14296:	f805 3c01 	strb.w	r3, [r5, #-1]
   1429a:	6873      	ldr	r3, [r6, #4]
   1429c:	3b01      	subs	r3, #1
   1429e:	2b00      	cmp	r3, #0
   142a0:	6073      	str	r3, [r6, #4]
   142a2:	dd03      	ble.n	142ac <_scanf_i+0x144>
   142a4:	6833      	ldr	r3, [r6, #0]
   142a6:	3301      	adds	r3, #1
   142a8:	6033      	str	r3, [r6, #0]
   142aa:	e005      	b.n	142b8 <_scanf_i+0x150>
   142ac:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
   142b0:	4658      	mov	r0, r11
   142b2:	4631      	mov	r1, r6
   142b4:	4798      	blx	r3
   142b6:	b920      	cbnz	r0, 142c2 <_scanf_i+0x15a>
   142b8:	68a3      	ldr	r3, [r4, #8]
   142ba:	3b01      	subs	r3, #1
   142bc:	60a3      	str	r3, [r4, #8]
   142be:	e7d0      	b.n	14262 <_scanf_i+0xfa>
   142c0:	2700      	movs	r7, #0
   142c2:	6823      	ldr	r3, [r4, #0]
   142c4:	05d9      	lsls	r1, r3, #23
   142c6:	d50d      	bpl.n	142e4 <_scanf_i+0x17c>
   142c8:	454d      	cmp	r5, r9
   142ca:	d909      	bls.n	142e0 <_scanf_i+0x178>
   142cc:	f815 1c01 	ldrb.w	r1, [r5, #-1]
   142d0:	f105 38ff 	add.w	r8, r5, #4294967295
   142d4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
   142d8:	4658      	mov	r0, r11
   142da:	4632      	mov	r2, r6
   142dc:	4798      	blx	r3
   142de:	4645      	mov	r5, r8
   142e0:	454d      	cmp	r5, r9
   142e2:	d027      	beq.n	14334 <_scanf_i+0x1cc>
   142e4:	6822      	ldr	r2, [r4, #0]
   142e6:	f012 0210 	ands.w	r2, r2, #16
   142ea:	d11b      	bne.n	14324 <_scanf_i+0x1bc>
   142ec:	702a      	strb	r2, [r5, #0]
   142ee:	6863      	ldr	r3, [r4, #4]
   142f0:	4658      	mov	r0, r11
   142f2:	4649      	mov	r1, r9
   142f4:	9e00      	ldr	r6, [sp, #0]
   142f6:	47b0      	blx	r6
   142f8:	6822      	ldr	r2, [r4, #0]
   142fa:	f8da 3000 	ldr.w	r3, [r10]
   142fe:	f012 0f20 	tst.w	r2, #32
   14302:	d107      	bne.n	14314 <_scanf_i+0x1ac>
   14304:	07d2      	lsls	r2, r2, #31
   14306:	d505      	bpl.n	14314 <_scanf_i+0x1ac>
   14308:	1d1a      	adds	r2, r3, #4
   1430a:	f8ca 2000 	str.w	r2, [r10]
   1430e:	681b      	ldr	r3, [r3, #0]
   14310:	8018      	strh	r0, [r3, #0]
   14312:	e004      	b.n	1431e <_scanf_i+0x1b6>
   14314:	1d1a      	adds	r2, r3, #4
   14316:	f8ca 2000 	str.w	r2, [r10]
   1431a:	681b      	ldr	r3, [r3, #0]
   1431c:	6018      	str	r0, [r3, #0]
   1431e:	68e3      	ldr	r3, [r4, #12]
   14320:	3301      	adds	r3, #1
   14322:	60e3      	str	r3, [r4, #12]
   14324:	ebc9 0505 	rsb	r5, r9, r5
   14328:	443d      	add	r5, r7
   1432a:	6927      	ldr	r7, [r4, #16]
   1432c:	2000      	movs	r0, #0
   1432e:	443d      	add	r5, r7
   14330:	6125      	str	r5, [r4, #16]
   14332:	e000      	b.n	14336 <_scanf_i+0x1ce>
   14334:	2001      	movs	r0, #1
   14336:	b007      	add	sp, #28
   14338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
   1433c:	0001c76c 	.word	0x0001c76c
   14340:	00015fd9 	.word	0x00015fd9
   14344:	00015ecd 	.word	0x00015ecd
   14348:	0001c788 	.word	0x0001c788

0001434c <_open_r>:
   1434c:	b538      	push	{r3, r4, r5, lr}
   1434e:	4c07      	ldr	r4, [pc, #28]	; (1436c <_open_r+0x20>)
   14350:	4605      	mov	r5, r0
   14352:	2000      	movs	r0, #0
   14354:	6020      	str	r0, [r4, #0]
   14356:	4608      	mov	r0, r1
   14358:	4611      	mov	r1, r2
   1435a:	461a      	mov	r2, r3
   1435c:	f7ed fe22 	bl	1fa4 <_open>
   14360:	1c43      	adds	r3, r0, #1
   14362:	d102      	bne.n	1436a <_open_r+0x1e>
   14364:	6823      	ldr	r3, [r4, #0]
   14366:	b103      	cbz	r3, 1436a <_open_r+0x1e>
   14368:	602b      	str	r3, [r5, #0]
   1436a:	bd38      	pop	{r3, r4, r5, pc}
   1436c:	10001b7c 	.word	0x10001b7c

00014370 <_putc_r>:
   14370:	b570      	push	{r4, r5, r6, lr}
   14372:	460e      	mov	r6, r1
   14374:	4614      	mov	r4, r2
   14376:	4605      	mov	r5, r0
   14378:	b118      	cbz	r0, 14382 <_putc_r+0x12>
   1437a:	6983      	ldr	r3, [r0, #24]
   1437c:	b90b      	cbnz	r3, 14382 <_putc_r+0x12>
   1437e:	f7fe fccd 	bl	12d1c <__sinit>
   14382:	4b16      	ldr	r3, [pc, #88]	; (143dc <_putc_r+0x6c>)
   14384:	429c      	cmp	r4, r3
   14386:	d101      	bne.n	1438c <_putc_r+0x1c>
   14388:	686c      	ldr	r4, [r5, #4]
   1438a:	e008      	b.n	1439e <_putc_r+0x2e>
   1438c:	4b14      	ldr	r3, [pc, #80]	; (143e0 <_putc_r+0x70>)
   1438e:	429c      	cmp	r4, r3
   14390:	d101      	bne.n	14396 <_putc_r+0x26>
   14392:	68ac      	ldr	r4, [r5, #8]
   14394:	e003      	b.n	1439e <_putc_r+0x2e>
   14396:	4b13      	ldr	r3, [pc, #76]	; (143e4 <_putc_r+0x74>)
   14398:	429c      	cmp	r4, r3
   1439a:	bf08      	it	eq
   1439c:	68ec      	ldreq	r4, [r5, #12]
   1439e:	68a3      	ldr	r3, [r4, #8]
   143a0:	3b01      	subs	r3, #1
   143a2:	2b00      	cmp	r3, #0
   143a4:	60a3      	str	r3, [r4, #8]
   143a6:	da11      	bge.n	143cc <_putc_r+0x5c>
   143a8:	69a2      	ldr	r2, [r4, #24]
   143aa:	4293      	cmp	r3, r2
   143ac:	db07      	blt.n	143be <_putc_r+0x4e>
   143ae:	6823      	ldr	r3, [r4, #0]
   143b0:	701e      	strb	r6, [r3, #0]
   143b2:	6823      	ldr	r3, [r4, #0]
   143b4:	7819      	ldrb	r1, [r3, #0]
   143b6:	290a      	cmp	r1, #10
   143b8:	d10b      	bne.n	143d2 <_putc_r+0x62>
   143ba:	4628      	mov	r0, r5
   143bc:	e001      	b.n	143c2 <_putc_r+0x52>
   143be:	4628      	mov	r0, r5
   143c0:	4631      	mov	r1, r6
   143c2:	4622      	mov	r2, r4
   143c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   143c8:	f001 bffc 	b.w	163c4 <__swbuf_r>
   143cc:	6823      	ldr	r3, [r4, #0]
   143ce:	701e      	strb	r6, [r3, #0]
   143d0:	6823      	ldr	r3, [r4, #0]
   143d2:	1c5a      	adds	r2, r3, #1
   143d4:	6022      	str	r2, [r4, #0]
   143d6:	7818      	ldrb	r0, [r3, #0]
   143d8:	bd70      	pop	{r4, r5, r6, pc}
   143da:	bf00      	nop
   143dc:	0001c6e4 	.word	0x0001c6e4
   143e0:	0001c704 	.word	0x0001c704
   143e4:	0001c724 	.word	0x0001c724

000143e8 <putc>:
   143e8:	4603      	mov	r3, r0
   143ea:	460a      	mov	r2, r1
   143ec:	4902      	ldr	r1, [pc, #8]	; (143f8 <putc+0x10>)
   143ee:	6808      	ldr	r0, [r1, #0]
   143f0:	4619      	mov	r1, r3
   143f2:	f7ff bfbd 	b.w	14370 <_putc_r>
   143f6:	bf00      	nop
   143f8:	100001d4 	.word	0x100001d4

000143fc <putwc>:
   143fc:	f003 b828 	b.w	17450 <fputwc>

00014400 <lflush>:
   14400:	8983      	ldrh	r3, [r0, #12]
   14402:	f003 0309 	and.w	r3, r3, #9
   14406:	2b09      	cmp	r3, #9
   14408:	d101      	bne.n	1440e <lflush+0xe>
   1440a:	f7fe bc35 	b.w	12c78 <fflush>
   1440e:	2000      	movs	r0, #0
   14410:	4770      	bx	lr
	...

00014414 <__srefill_r>:
   14414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   14416:	460c      	mov	r4, r1
   14418:	4605      	mov	r5, r0
   1441a:	b118      	cbz	r0, 14424 <__srefill_r+0x10>
   1441c:	6983      	ldr	r3, [r0, #24]
   1441e:	b90b      	cbnz	r3, 14424 <__srefill_r+0x10>
   14420:	f7fe fc7c 	bl	12d1c <__sinit>
   14424:	4b39      	ldr	r3, [pc, #228]	; (1450c <__srefill_r+0xf8>)
   14426:	429c      	cmp	r4, r3
   14428:	d101      	bne.n	1442e <__srefill_r+0x1a>
   1442a:	686c      	ldr	r4, [r5, #4]
   1442c:	e008      	b.n	14440 <__srefill_r+0x2c>
   1442e:	4b38      	ldr	r3, [pc, #224]	; (14510 <__srefill_r+0xfc>)
   14430:	429c      	cmp	r4, r3
   14432:	d101      	bne.n	14438 <__srefill_r+0x24>
   14434:	68ac      	ldr	r4, [r5, #8]
   14436:	e003      	b.n	14440 <__srefill_r+0x2c>
   14438:	4b36      	ldr	r3, [pc, #216]	; (14514 <__srefill_r+0x100>)
   1443a:	429c      	cmp	r4, r3
   1443c:	bf08      	it	eq
   1443e:	68ec      	ldreq	r4, [r5, #12]
   14440:	89a2      	ldrh	r2, [r4, #12]
   14442:	2300      	movs	r3, #0
   14444:	6063      	str	r3, [r4, #4]
   14446:	b293      	uxth	r3, r2
   14448:	069e      	lsls	r6, r3, #26
   1444a:	d45a      	bmi.n	14502 <__srefill_r+0xee>
   1444c:	0758      	lsls	r0, r3, #29
   1444e:	d41a      	bmi.n	14486 <__srefill_r+0x72>
   14450:	06d9      	lsls	r1, r3, #27
   14452:	d405      	bmi.n	14460 <__srefill_r+0x4c>
   14454:	2309      	movs	r3, #9
   14456:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   1445a:	602b      	str	r3, [r5, #0]
   1445c:	81a2      	strh	r2, [r4, #12]
   1445e:	e050      	b.n	14502 <__srefill_r+0xee>
   14460:	071a      	lsls	r2, r3, #28
   14462:	d50b      	bpl.n	1447c <__srefill_r+0x68>
   14464:	4628      	mov	r0, r5
   14466:	4621      	mov	r1, r4
   14468:	f7fe fbdc 	bl	12c24 <_fflush_r>
   1446c:	2800      	cmp	r0, #0
   1446e:	d148      	bne.n	14502 <__srefill_r+0xee>
   14470:	89a3      	ldrh	r3, [r4, #12]
   14472:	60a0      	str	r0, [r4, #8]
   14474:	f023 0308 	bic.w	r3, r3, #8
   14478:	81a3      	strh	r3, [r4, #12]
   1447a:	61a0      	str	r0, [r4, #24]
   1447c:	89a3      	ldrh	r3, [r4, #12]
   1447e:	f043 0304 	orr.w	r3, r3, #4
   14482:	81a3      	strh	r3, [r4, #12]
   14484:	e010      	b.n	144a8 <__srefill_r+0x94>
   14486:	6b61      	ldr	r1, [r4, #52]	; 0x34
   14488:	b171      	cbz	r1, 144a8 <__srefill_r+0x94>
   1448a:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1448e:	4299      	cmp	r1, r3
   14490:	d002      	beq.n	14498 <__srefill_r+0x84>
   14492:	4628      	mov	r0, r5
   14494:	f7ff f928 	bl	136e8 <_free_r>
   14498:	6c23      	ldr	r3, [r4, #64]	; 0x40
   1449a:	2000      	movs	r0, #0
   1449c:	6360      	str	r0, [r4, #52]	; 0x34
   1449e:	6063      	str	r3, [r4, #4]
   144a0:	b113      	cbz	r3, 144a8 <__srefill_r+0x94>
   144a2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   144a4:	6023      	str	r3, [r4, #0]
   144a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   144a8:	6923      	ldr	r3, [r4, #16]
   144aa:	b91b      	cbnz	r3, 144b4 <__srefill_r+0xa0>
   144ac:	4628      	mov	r0, r5
   144ae:	4621      	mov	r1, r4
   144b0:	f7ff f826 	bl	13500 <__smakebuf_r>
   144b4:	89a7      	ldrh	r7, [r4, #12]
   144b6:	b2be      	uxth	r6, r7
   144b8:	07b3      	lsls	r3, r6, #30
   144ba:	d00f      	beq.n	144dc <__srefill_r+0xc8>
   144bc:	2301      	movs	r3, #1
   144be:	81a3      	strh	r3, [r4, #12]
   144c0:	4b15      	ldr	r3, [pc, #84]	; (14518 <__srefill_r+0x104>)
   144c2:	4916      	ldr	r1, [pc, #88]	; (1451c <__srefill_r+0x108>)
   144c4:	6818      	ldr	r0, [r3, #0]
   144c6:	f006 0609 	and.w	r6, r6, #9
   144ca:	f7fe fe65 	bl	13198 <_fwalk>
   144ce:	2e09      	cmp	r6, #9
   144d0:	81a7      	strh	r7, [r4, #12]
   144d2:	d103      	bne.n	144dc <__srefill_r+0xc8>
   144d4:	4628      	mov	r0, r5
   144d6:	4621      	mov	r1, r4
   144d8:	f7fe fb20 	bl	12b1c <__sflush_r>
   144dc:	6922      	ldr	r2, [r4, #16]
   144de:	6a66      	ldr	r6, [r4, #36]	; 0x24
   144e0:	6022      	str	r2, [r4, #0]
   144e2:	4628      	mov	r0, r5
   144e4:	6a21      	ldr	r1, [r4, #32]
   144e6:	6963      	ldr	r3, [r4, #20]
   144e8:	47b0      	blx	r6
   144ea:	2800      	cmp	r0, #0
   144ec:	6060      	str	r0, [r4, #4]
   144ee:	dc0b      	bgt.n	14508 <__srefill_r+0xf4>
   144f0:	89a3      	ldrh	r3, [r4, #12]
   144f2:	bf17      	itett	ne
   144f4:	2200      	movne	r2, #0
   144f6:	f043 0320 	orreq.w	r3, r3, #32
   144fa:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
   144fe:	6062      	strne	r2, [r4, #4]
   14500:	81a3      	strh	r3, [r4, #12]
   14502:	f04f 30ff 	mov.w	r0, #4294967295
   14506:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   14508:	2000      	movs	r0, #0
   1450a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   1450c:	0001c6e4 	.word	0x0001c6e4
   14510:	0001c704 	.word	0x0001c704
   14514:	0001c724 	.word	0x0001c724
   14518:	0001c744 	.word	0x0001c744
   1451c:	00014401 	.word	0x00014401

00014520 <__srget_r>:
   14520:	b538      	push	{r3, r4, r5, lr}
   14522:	460c      	mov	r4, r1
   14524:	4605      	mov	r5, r0
   14526:	b118      	cbz	r0, 14530 <__srget_r+0x10>
   14528:	6983      	ldr	r3, [r0, #24]
   1452a:	b90b      	cbnz	r3, 14530 <__srget_r+0x10>
   1452c:	f7fe fbf6 	bl	12d1c <__sinit>
   14530:	4b0e      	ldr	r3, [pc, #56]	; (1456c <__srget_r+0x4c>)
   14532:	429c      	cmp	r4, r3
   14534:	d101      	bne.n	1453a <__srget_r+0x1a>
   14536:	686c      	ldr	r4, [r5, #4]
   14538:	e008      	b.n	1454c <__srget_r+0x2c>
   1453a:	4b0d      	ldr	r3, [pc, #52]	; (14570 <__srget_r+0x50>)
   1453c:	429c      	cmp	r4, r3
   1453e:	d101      	bne.n	14544 <__srget_r+0x24>
   14540:	68ac      	ldr	r4, [r5, #8]
   14542:	e003      	b.n	1454c <__srget_r+0x2c>
   14544:	4b0b      	ldr	r3, [pc, #44]	; (14574 <__srget_r+0x54>)
   14546:	429c      	cmp	r4, r3
   14548:	bf08      	it	eq
   1454a:	68ec      	ldreq	r4, [r5, #12]
   1454c:	4628      	mov	r0, r5
   1454e:	4621      	mov	r1, r4
   14550:	f7ff ff60 	bl	14414 <__srefill_r>
   14554:	b938      	cbnz	r0, 14566 <__srget_r+0x46>
   14556:	6863      	ldr	r3, [r4, #4]
   14558:	3b01      	subs	r3, #1
   1455a:	6063      	str	r3, [r4, #4]
   1455c:	6823      	ldr	r3, [r4, #0]
   1455e:	1c5a      	adds	r2, r3, #1
   14560:	6022      	str	r2, [r4, #0]
   14562:	7818      	ldrb	r0, [r3, #0]
   14564:	bd38      	pop	{r3, r4, r5, pc}
   14566:	f04f 30ff 	mov.w	r0, #4294967295
   1456a:	bd38      	pop	{r3, r4, r5, pc}
   1456c:	0001c6e4 	.word	0x0001c6e4
   14570:	0001c704 	.word	0x0001c704
   14574:	0001c724 	.word	0x0001c724

00014578 <_sbrk_r>:
   14578:	b538      	push	{r3, r4, r5, lr}
   1457a:	4c06      	ldr	r4, [pc, #24]	; (14594 <_sbrk_r+0x1c>)
   1457c:	2300      	movs	r3, #0
   1457e:	4605      	mov	r5, r0
   14580:	4608      	mov	r0, r1
   14582:	6023      	str	r3, [r4, #0]
   14584:	f7ed fe2c 	bl	21e0 <_sbrk>
   14588:	1c43      	adds	r3, r0, #1
   1458a:	d102      	bne.n	14592 <_sbrk_r+0x1a>
   1458c:	6823      	ldr	r3, [r4, #0]
   1458e:	b103      	cbz	r3, 14592 <_sbrk_r+0x1a>
   14590:	602b      	str	r3, [r5, #0]
   14592:	bd38      	pop	{r3, r4, r5, pc}
   14594:	10001b7c 	.word	0x10001b7c

00014598 <__sccl>:
   14598:	b5f0      	push	{r4, r5, r6, r7, lr}
   1459a:	780a      	ldrb	r2, [r1, #0]
   1459c:	1e44      	subs	r4, r0, #1
   1459e:	2a5e      	cmp	r2, #94	; 0x5e
   145a0:	bf13      	iteet	ne
   145a2:	1c4b      	addne	r3, r1, #1
   145a4:	1c8b      	addeq	r3, r1, #2
   145a6:	784a      	ldrbeq	r2, [r1, #1]
   145a8:	2100      	movne	r1, #0
   145aa:	bf08      	it	eq
   145ac:	2101      	moveq	r1, #1
   145ae:	f100 05ff 	add.w	r5, r0, #255	; 0xff
   145b2:	f804 1f01 	strb.w	r1, [r4, #1]!
   145b6:	42ac      	cmp	r4, r5
   145b8:	d1fb      	bne.n	145b2 <__sccl+0x1a>
   145ba:	b90a      	cbnz	r2, 145c0 <__sccl+0x28>
   145bc:	1e58      	subs	r0, r3, #1
   145be:	bdf0      	pop	{r4, r5, r6, r7, pc}
   145c0:	f1c1 0401 	rsb	r4, r1, #1
   145c4:	b2e7      	uxtb	r7, r4
   145c6:	5487      	strb	r7, [r0, r2]
   145c8:	7819      	ldrb	r1, [r3, #0]
   145ca:	1c5e      	adds	r6, r3, #1
   145cc:	292d      	cmp	r1, #45	; 0x2d
   145ce:	d005      	beq.n	145dc <__sccl+0x44>
   145d0:	295d      	cmp	r1, #93	; 0x5d
   145d2:	d00e      	beq.n	145f2 <__sccl+0x5a>
   145d4:	b179      	cbz	r1, 145f6 <__sccl+0x5e>
   145d6:	460a      	mov	r2, r1
   145d8:	4633      	mov	r3, r6
   145da:	e7f3      	b.n	145c4 <__sccl+0x2c>
   145dc:	785d      	ldrb	r5, [r3, #1]
   145de:	2d5d      	cmp	r5, #93	; 0x5d
   145e0:	d0f9      	beq.n	145d6 <__sccl+0x3e>
   145e2:	4295      	cmp	r5, r2
   145e4:	dbf7      	blt.n	145d6 <__sccl+0x3e>
   145e6:	3302      	adds	r3, #2
   145e8:	3201      	adds	r2, #1
   145ea:	42aa      	cmp	r2, r5
   145ec:	5487      	strb	r7, [r0, r2]
   145ee:	dbfb      	blt.n	145e8 <__sccl+0x50>
   145f0:	e7ea      	b.n	145c8 <__sccl+0x30>
   145f2:	4630      	mov	r0, r6
   145f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
   145f6:	4618      	mov	r0, r3
   145f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

000145fa <setbuf>:
   145fa:	2900      	cmp	r1, #0
   145fc:	bf0c      	ite	eq
   145fe:	2202      	moveq	r2, #2
   14600:	2200      	movne	r2, #0
   14602:	f44f 6380 	mov.w	r3, #1024	; 0x400
   14606:	f000 b801 	b.w	1460c <setvbuf>
	...

0001460c <setvbuf>:
   1460c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14610:	461d      	mov	r5, r3
   14612:	4b3d      	ldr	r3, [pc, #244]	; (14708 <setvbuf+0xfc>)
   14614:	4604      	mov	r4, r0
   14616:	681e      	ldr	r6, [r3, #0]
   14618:	460f      	mov	r7, r1
   1461a:	4690      	mov	r8, r2
   1461c:	b126      	cbz	r6, 14628 <setvbuf+0x1c>
   1461e:	69b3      	ldr	r3, [r6, #24]
   14620:	b913      	cbnz	r3, 14628 <setvbuf+0x1c>
   14622:	4630      	mov	r0, r6
   14624:	f7fe fb7a 	bl	12d1c <__sinit>
   14628:	4b38      	ldr	r3, [pc, #224]	; (1470c <setvbuf+0x100>)
   1462a:	429c      	cmp	r4, r3
   1462c:	d101      	bne.n	14632 <setvbuf+0x26>
   1462e:	6874      	ldr	r4, [r6, #4]
   14630:	e008      	b.n	14644 <setvbuf+0x38>
   14632:	4b37      	ldr	r3, [pc, #220]	; (14710 <setvbuf+0x104>)
   14634:	429c      	cmp	r4, r3
   14636:	d101      	bne.n	1463c <setvbuf+0x30>
   14638:	68b4      	ldr	r4, [r6, #8]
   1463a:	e003      	b.n	14644 <setvbuf+0x38>
   1463c:	4b35      	ldr	r3, [pc, #212]	; (14714 <setvbuf+0x108>)
   1463e:	429c      	cmp	r4, r3
   14640:	bf08      	it	eq
   14642:	68f4      	ldreq	r4, [r6, #12]
   14644:	f1b8 0f02 	cmp.w	r8, #2
   14648:	d85a      	bhi.n	14700 <setvbuf+0xf4>
   1464a:	2d00      	cmp	r5, #0
   1464c:	db58      	blt.n	14700 <setvbuf+0xf4>
   1464e:	4630      	mov	r0, r6
   14650:	4621      	mov	r1, r4
   14652:	f7fe fae7 	bl	12c24 <_fflush_r>
   14656:	2300      	movs	r3, #0
   14658:	6063      	str	r3, [r4, #4]
   1465a:	61a3      	str	r3, [r4, #24]
   1465c:	89a3      	ldrh	r3, [r4, #12]
   1465e:	061b      	lsls	r3, r3, #24
   14660:	d503      	bpl.n	1466a <setvbuf+0x5e>
   14662:	4630      	mov	r0, r6
   14664:	6921      	ldr	r1, [r4, #16]
   14666:	f7ff f83f 	bl	136e8 <_free_r>
   1466a:	89a3      	ldrh	r3, [r4, #12]
   1466c:	f1b8 0f02 	cmp.w	r8, #2
   14670:	f023 0383 	bic.w	r3, r3, #131	; 0x83
   14674:	81a3      	strh	r3, [r4, #12]
   14676:	d012      	beq.n	1469e <setvbuf+0x92>
   14678:	bb37      	cbnz	r7, 146c8 <setvbuf+0xbc>
   1467a:	2d00      	cmp	r5, #0
   1467c:	bf08      	it	eq
   1467e:	f44f 6580 	moveq.w	r5, #1024	; 0x400
   14682:	4628      	mov	r0, r5
   14684:	f7ec fa2c 	bl	ae0 <__wrap_malloc>
   14688:	4607      	mov	r7, r0
   1468a:	b9c8      	cbnz	r0, 146c0 <setvbuf+0xb4>
   1468c:	f44f 6080 	mov.w	r0, #1024	; 0x400
   14690:	f7ec fa26 	bl	ae0 <__wrap_malloc>
   14694:	4607      	mov	r7, r0
   14696:	b988      	cbnz	r0, 146bc <setvbuf+0xb0>
   14698:	f04f 30ff 	mov.w	r0, #4294967295
   1469c:	e000      	b.n	146a0 <setvbuf+0x94>
   1469e:	2000      	movs	r0, #0
   146a0:	89a3      	ldrh	r3, [r4, #12]
   146a2:	f043 0302 	orr.w	r3, r3, #2
   146a6:	81a3      	strh	r3, [r4, #12]
   146a8:	2300      	movs	r3, #0
   146aa:	60a3      	str	r3, [r4, #8]
   146ac:	f104 0347 	add.w	r3, r4, #71	; 0x47
   146b0:	6023      	str	r3, [r4, #0]
   146b2:	6123      	str	r3, [r4, #16]
   146b4:	2301      	movs	r3, #1
   146b6:	6163      	str	r3, [r4, #20]
   146b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   146bc:	f44f 6580 	mov.w	r5, #1024	; 0x400
   146c0:	89a3      	ldrh	r3, [r4, #12]
   146c2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   146c6:	81a3      	strh	r3, [r4, #12]
   146c8:	f1b8 0f01 	cmp.w	r8, #1
   146cc:	bf01      	itttt	eq
   146ce:	89a3      	ldrheq	r3, [r4, #12]
   146d0:	f043 0301 	orreq.w	r3, r3, #1
   146d4:	81a3      	strheq	r3, [r4, #12]
   146d6:	426b      	negeq	r3, r5
   146d8:	bf08      	it	eq
   146da:	61a3      	streq	r3, [r4, #24]
   146dc:	4b0e      	ldr	r3, [pc, #56]	; (14718 <setvbuf+0x10c>)
   146de:	62b3      	str	r3, [r6, #40]	; 0x28
   146e0:	89a3      	ldrh	r3, [r4, #12]
   146e2:	6027      	str	r7, [r4, #0]
   146e4:	f003 0008 	and.w	r0, r3, #8
   146e8:	b280      	uxth	r0, r0
   146ea:	6127      	str	r7, [r4, #16]
   146ec:	6165      	str	r5, [r4, #20]
   146ee:	b148      	cbz	r0, 14704 <setvbuf+0xf8>
   146f0:	f013 0f03 	tst.w	r3, #3
   146f4:	bf18      	it	ne
   146f6:	2500      	movne	r5, #0
   146f8:	60a5      	str	r5, [r4, #8]
   146fa:	2000      	movs	r0, #0
   146fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14700:	f04f 30ff 	mov.w	r0, #4294967295
   14704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14708:	100001d4 	.word	0x100001d4
   1470c:	0001c6e4 	.word	0x0001c6e4
   14710:	0001c704 	.word	0x0001c704
   14714:	0001c724 	.word	0x0001c724
   14718:	00012c9d 	.word	0x00012c9d

0001471c <siprintf>:
   1471c:	b40e      	push	{r1, r2, r3}
   1471e:	b500      	push	{lr}
   14720:	f44f 7102 	mov.w	r1, #520	; 0x208
   14724:	b09c      	sub	sp, #112	; 0x70
   14726:	f8ad 1014 	strh.w	r1, [sp, #20]
   1472a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   1472e:	9104      	str	r1, [sp, #16]
   14730:	9107      	str	r1, [sp, #28]
   14732:	f64f 71ff 	movw	r1, #65535	; 0xffff
   14736:	ab1d      	add	r3, sp, #116	; 0x74
   14738:	f8ad 1016 	strh.w	r1, [sp, #22]
   1473c:	4908      	ldr	r1, [pc, #32]	; (14760 <siprintf+0x44>)
   1473e:	f853 2b04 	ldr.w	r2, [r3], #4
   14742:	9002      	str	r0, [sp, #8]
   14744:	9006      	str	r0, [sp, #24]
   14746:	6808      	ldr	r0, [r1, #0]
   14748:	a902      	add	r1, sp, #8
   1474a:	9301      	str	r3, [sp, #4]
   1474c:	f003 febe 	bl	184cc <_svfiprintf_r>
   14750:	9b02      	ldr	r3, [sp, #8]
   14752:	2200      	movs	r2, #0
   14754:	701a      	strb	r2, [r3, #0]
   14756:	b01c      	add	sp, #112	; 0x70
   14758:	f85d eb04 	ldr.w	lr, [sp], #4
   1475c:	b003      	add	sp, #12
   1475e:	4770      	bx	lr
   14760:	100001d4 	.word	0x100001d4

00014764 <siscanf>:
   14764:	b40e      	push	{r1, r2, r3}
   14766:	b530      	push	{r4, r5, lr}
   14768:	b09c      	sub	sp, #112	; 0x70
   1476a:	ac1f      	add	r4, sp, #124	; 0x7c
   1476c:	f44f 7201 	mov.w	r2, #516	; 0x204
   14770:	f854 5b04 	ldr.w	r5, [r4], #4
   14774:	f8ad 2014 	strh.w	r2, [sp, #20]
   14778:	9002      	str	r0, [sp, #8]
   1477a:	9006      	str	r0, [sp, #24]
   1477c:	f000 fd0c 	bl	15198 <strlen>
   14780:	4b0b      	ldr	r3, [pc, #44]	; (147b0 <siscanf+0x4c>)
   14782:	9003      	str	r0, [sp, #12]
   14784:	930b      	str	r3, [sp, #44]	; 0x2c
   14786:	2300      	movs	r3, #0
   14788:	930f      	str	r3, [sp, #60]	; 0x3c
   1478a:	9314      	str	r3, [sp, #80]	; 0x50
   1478c:	f64f 73ff 	movw	r3, #65535	; 0xffff
   14790:	f8ad 3016 	strh.w	r3, [sp, #22]
   14794:	4b07      	ldr	r3, [pc, #28]	; (147b4 <siscanf+0x50>)
   14796:	9007      	str	r0, [sp, #28]
   14798:	a902      	add	r1, sp, #8
   1479a:	6818      	ldr	r0, [r3, #0]
   1479c:	462a      	mov	r2, r5
   1479e:	4623      	mov	r3, r4
   147a0:	9401      	str	r4, [sp, #4]
   147a2:	f003 ffdf 	bl	18764 <__ssvfiscanf_r>
   147a6:	b01c      	add	sp, #112	; 0x70
   147a8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   147ac:	b003      	add	sp, #12
   147ae:	4770      	bx	lr
   147b0:	000147db 	.word	0x000147db
   147b4:	100001d4 	.word	0x100001d4

000147b8 <__sread>:
   147b8:	b510      	push	{r4, lr}
   147ba:	460c      	mov	r4, r1
   147bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   147c0:	f004 f91e 	bl	18a00 <_read_r>
   147c4:	2800      	cmp	r0, #0
   147c6:	bfab      	itete	ge
   147c8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
   147ca:	89a3      	ldrhlt	r3, [r4, #12]
   147cc:	181b      	addge	r3, r3, r0
   147ce:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
   147d2:	bfac      	ite	ge
   147d4:	6563      	strge	r3, [r4, #84]	; 0x54
   147d6:	81a3      	strhlt	r3, [r4, #12]
   147d8:	bd10      	pop	{r4, pc}

000147da <__seofread>:
   147da:	2000      	movs	r0, #0
   147dc:	4770      	bx	lr

000147de <__swrite>:
   147de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   147e2:	461d      	mov	r5, r3
   147e4:	898b      	ldrh	r3, [r1, #12]
   147e6:	4607      	mov	r7, r0
   147e8:	05db      	lsls	r3, r3, #23
   147ea:	460c      	mov	r4, r1
   147ec:	4616      	mov	r6, r2
   147ee:	d505      	bpl.n	147fc <__swrite+0x1e>
   147f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   147f4:	2200      	movs	r2, #0
   147f6:	2302      	movs	r3, #2
   147f8:	f003 f9c6 	bl	17b88 <_lseek_r>
   147fc:	89a3      	ldrh	r3, [r4, #12]
   147fe:	4638      	mov	r0, r7
   14800:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   14804:	81a3      	strh	r3, [r4, #12]
   14806:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   1480a:	4632      	mov	r2, r6
   1480c:	462b      	mov	r3, r5
   1480e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   14812:	f002 bcd5 	b.w	171c0 <_write_r>

00014816 <__sseek>:
   14816:	b510      	push	{r4, lr}
   14818:	460c      	mov	r4, r1
   1481a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1481e:	f003 f9b3 	bl	17b88 <_lseek_r>
   14822:	1c43      	adds	r3, r0, #1
   14824:	89a3      	ldrh	r3, [r4, #12]
   14826:	bf15      	itete	ne
   14828:	6560      	strne	r0, [r4, #84]	; 0x54
   1482a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   1482e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   14832:	81a3      	strheq	r3, [r4, #12]
   14834:	bf18      	it	ne
   14836:	81a3      	strhne	r3, [r4, #12]
   14838:	bd10      	pop	{r4, pc}

0001483a <__sclose>:
   1483a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   1483e:	f002 bd41 	b.w	172c4 <_close_r>

00014842 <strcmp>:
   14842:	f810 2b01 	ldrb.w	r2, [r0], #1
   14846:	f811 3b01 	ldrb.w	r3, [r1], #1
   1484a:	2a01      	cmp	r2, #1
   1484c:	bf28      	it	cs
   1484e:	429a      	cmpcs	r2, r3
   14850:	d0f7      	beq.n	14842 <strcmp>
   14852:	1ad0      	subs	r0, r2, r3
   14854:	4770      	bx	lr

00014856 <strcoll>:
   14856:	f7ff bff4 	b.w	14842 <strcmp>

0001485a <iso_year_adjust>:
   1485a:	6942      	ldr	r2, [r0, #20]
   1485c:	b510      	push	{r4, lr}
   1485e:	0793      	lsls	r3, r2, #30
   14860:	d10c      	bne.n	1487c <iso_year_adjust+0x22>
   14862:	f240 716c 	movw	r1, #1900	; 0x76c
   14866:	2a00      	cmp	r2, #0
   14868:	bfa8      	it	ge
   1486a:	f06f 0163 	mvnge.w	r1, #99	; 0x63
   1486e:	4411      	add	r1, r2
   14870:	2464      	movs	r4, #100	; 0x64
   14872:	fb91 f3f4 	sdiv	r3, r1, r4
   14876:	fb04 1113 	mls	r1, r4, r3, r1
   1487a:	b981      	cbnz	r1, 1489e <iso_year_adjust+0x44>
   1487c:	f240 736c 	movw	r3, #1900	; 0x76c
   14880:	2a00      	cmp	r2, #0
   14882:	bfa8      	it	ge
   14884:	f06f 0363 	mvnge.w	r3, #99	; 0x63
   14888:	4413      	add	r3, r2
   1488a:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1488e:	fb93 f1f2 	sdiv	r1, r3, r2
   14892:	fb02 3311 	mls	r3, r2, r1, r3
   14896:	fab3 f283 	clz	r2, r3
   1489a:	0952      	lsrs	r2, r2, #5
   1489c:	e000      	b.n	148a0 <iso_year_adjust+0x46>
   1489e:	2201      	movs	r2, #1
   148a0:	6983      	ldr	r3, [r0, #24]
   148a2:	69c1      	ldr	r1, [r0, #28]
   148a4:	005b      	lsls	r3, r3, #1
   148a6:	eb03 1301 	add.w	r3, r3, r1, lsl #4
   148aa:	4413      	add	r3, r2
   148ac:	2b21      	cmp	r3, #33	; 0x21
   148ae:	dc0e      	bgt.n	148ce <iso_year_adjust+0x74>
   148b0:	2b20      	cmp	r3, #32
   148b2:	da2f      	bge.n	14914 <iso_year_adjust+0xba>
   148b4:	2b0d      	cmp	r3, #13
   148b6:	dc02      	bgt.n	148be <iso_year_adjust+0x64>
   148b8:	2b0a      	cmp	r3, #10
   148ba:	db05      	blt.n	148c8 <iso_year_adjust+0x6e>
   148bc:	e02a      	b.n	14914 <iso_year_adjust+0xba>
   148be:	2b10      	cmp	r3, #16
   148c0:	db26      	blt.n	14910 <iso_year_adjust+0xb6>
   148c2:	2b11      	cmp	r3, #17
   148c4:	dd26      	ble.n	14914 <iso_year_adjust+0xba>
   148c6:	3b1c      	subs	r3, #28
   148c8:	2b01      	cmp	r3, #1
   148ca:	d923      	bls.n	14914 <iso_year_adjust+0xba>
   148cc:	e020      	b.n	14910 <iso_year_adjust+0xb6>
   148ce:	f241 62c6 	movw	r2, #5830	; 0x16c6
   148d2:	4293      	cmp	r3, r2
   148d4:	dc0e      	bgt.n	148f4 <iso_year_adjust+0x9a>
   148d6:	f241 62c2 	movw	r2, #5826	; 0x16c2
   148da:	4293      	cmp	r3, r2
   148dc:	da16      	bge.n	1490c <iso_year_adjust+0xb2>
   148de:	f241 62a2 	movw	r2, #5794	; 0x16a2
   148e2:	4293      	cmp	r3, r2
   148e4:	d012      	beq.n	1490c <iso_year_adjust+0xb2>
   148e6:	db13      	blt.n	14910 <iso_year_adjust+0xb6>
   148e8:	f5a3 53b5 	sub.w	r3, r3, #5792	; 0x16a0
   148ec:	3b12      	subs	r3, #18
   148ee:	2b02      	cmp	r3, #2
   148f0:	d90c      	bls.n	1490c <iso_year_adjust+0xb2>
   148f2:	e00d      	b.n	14910 <iso_year_adjust+0xb6>
   148f4:	f241 62d5 	movw	r2, #5845	; 0x16d5
   148f8:	4293      	cmp	r3, r2
   148fa:	d007      	beq.n	1490c <iso_year_adjust+0xb2>
   148fc:	f241 62d7 	movw	r2, #5847	; 0x16d7
   14900:	4293      	cmp	r3, r2
   14902:	d003      	beq.n	1490c <iso_year_adjust+0xb2>
   14904:	f241 62d3 	movw	r2, #5843	; 0x16d3
   14908:	4293      	cmp	r3, r2
   1490a:	d101      	bne.n	14910 <iso_year_adjust+0xb6>
   1490c:	2001      	movs	r0, #1
   1490e:	bd10      	pop	{r4, pc}
   14910:	2000      	movs	r0, #0
   14912:	bd10      	pop	{r4, pc}
   14914:	f04f 30ff 	mov.w	r0, #4294967295
   14918:	bd10      	pop	{r4, pc}
	...

0001491c <strftime>:
   1491c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   14920:	b08f      	sub	sp, #60	; 0x3c
   14922:	4607      	mov	r7, r0
   14924:	460d      	mov	r5, r1
   14926:	4691      	mov	r9, r2
   14928:	461e      	mov	r6, r3
   1492a:	f001 fbf3 	bl	16114 <__get_current_time_locale>
   1492e:	4682      	mov	r10, r0
   14930:	2400      	movs	r4, #0
   14932:	f899 3000 	ldrb.w	r3, [r9]
   14936:	2b00      	cmp	r3, #0
   14938:	f000 8423 	beq.w	15182 <strftime+0x866>
   1493c:	2b25      	cmp	r3, #37	; 0x25
   1493e:	d008      	beq.n	14952 <strftime+0x36>
   14940:	1e6a      	subs	r2, r5, #1
   14942:	4294      	cmp	r4, r2
   14944:	f080 8421 	bcs.w	1518a <strftime+0x86e>
   14948:	553b      	strb	r3, [r7, r4]
   1494a:	f109 0901 	add.w	r9, r9, #1
   1494e:	3401      	adds	r4, #1
   14950:	e7ef      	b.n	14932 <strftime+0x16>
   14952:	f899 3001 	ldrb.w	r3, [r9, #1]
   14956:	2b30      	cmp	r3, #48	; 0x30
   14958:	d005      	beq.n	14966 <strftime+0x4a>
   1495a:	2b2b      	cmp	r3, #43	; 0x2b
   1495c:	d003      	beq.n	14966 <strftime+0x4a>
   1495e:	f109 0901 	add.w	r9, r9, #1
   14962:	2300      	movs	r3, #0
   14964:	e001      	b.n	1496a <strftime+0x4e>
   14966:	f109 0902 	add.w	r9, r9, #2
   1496a:	f899 2000 	ldrb.w	r2, [r9]
   1496e:	3a31      	subs	r2, #49	; 0x31
   14970:	2a08      	cmp	r2, #8
   14972:	d80a      	bhi.n	1498a <strftime+0x6e>
   14974:	4648      	mov	r0, r9
   14976:	a906      	add	r1, sp, #24
   14978:	220a      	movs	r2, #10
   1497a:	9302      	str	r3, [sp, #8]
   1497c:	f001 fba8 	bl	160d0 <strtoul>
   14980:	f8dd 9018 	ldr.w	r9, [sp, #24]
   14984:	4680      	mov	r8, r0
   14986:	9b02      	ldr	r3, [sp, #8]
   14988:	e001      	b.n	1498e <strftime+0x72>
   1498a:	f04f 0800 	mov.w	r8, #0
   1498e:	f899 2000 	ldrb.w	r2, [r9]
   14992:	2a45      	cmp	r2, #69	; 0x45
   14994:	d001      	beq.n	1499a <strftime+0x7e>
   14996:	2a4f      	cmp	r2, #79	; 0x4f
   14998:	d101      	bne.n	1499e <strftime+0x82>
   1499a:	f109 0901 	add.w	r9, r9, #1
   1499e:	f899 e000 	ldrb.w	lr, [r9]
   149a2:	f1ae 0225 	sub.w	r2, lr, #37	; 0x25
   149a6:	2a55      	cmp	r2, #85	; 0x55
   149a8:	f200 83ef 	bhi.w	1518a <strftime+0x86e>
   149ac:	e8df f012 	tbh	[pc, r2, lsl #1]
   149b0:	03ed03dc 	.word	0x03ed03dc
   149b4:	03ed03ed 	.word	0x03ed03ed
   149b8:	03ed03ed 	.word	0x03ed03ed
   149bc:	03ed03ed 	.word	0x03ed03ed
   149c0:	03ed03ed 	.word	0x03ed03ed
   149c4:	03ed03ed 	.word	0x03ed03ed
   149c8:	03ed03ed 	.word	0x03ed03ed
   149cc:	03ed03ed 	.word	0x03ed03ed
   149d0:	03ed03ed 	.word	0x03ed03ed
   149d4:	03ed03ed 	.word	0x03ed03ed
   149d8:	03ed03ed 	.word	0x03ed03ed
   149dc:	03ed03ed 	.word	0x03ed03ed
   149e0:	03ed03ed 	.word	0x03ed03ed
   149e4:	03ed03ed 	.word	0x03ed03ed
   149e8:	0098006c 	.word	0x0098006c
   149ec:	010d00c5 	.word	0x010d00c5
   149f0:	013403ed 	.word	0x013403ed
   149f4:	0227019b 	.word	0x0227019b
   149f8:	03ed024c 	.word	0x03ed024c
   149fc:	03ed03ed 	.word	0x03ed03ed
   14a00:	03ed026b 	.word	0x03ed026b
   14a04:	027603ed 	.word	0x027603ed
   14a08:	029d03ed 	.word	0x029d03ed
   14a0c:	02af02a4 	.word	0x02af02a4
   14a10:	02ca02c5 	.word	0x02ca02c5
   14a14:	00b70311 	.word	0x00b70311
   14a18:	039a0331 	.word	0x039a0331
   14a1c:	03ed03ed 	.word	0x03ed03ed
   14a20:	03ed03ed 	.word	0x03ed03ed
   14a24:	03ed03ed 	.word	0x03ed03ed
   14a28:	00830056 	.word	0x00830056
   14a2c:	00fe00ae 	.word	0x00fe00ae
   14a30:	03ed00fe 	.word	0x03ed00fe
   14a34:	00830164 	.word	0x00830164
   14a38:	026003ed 	.word	0x026003ed
   14a3c:	024c0227 	.word	0x024c0227
   14a40:	02700265 	.word	0x02700265
   14a44:	027603ed 	.word	0x027603ed
   14a48:	00b103ed 	.word	0x00b103ed
   14a4c:	02a903ed 	.word	0x02a903ed
   14a50:	03ed02b8 	.word	0x03ed02b8
   14a54:	00b4030a 	.word	0x00b4030a
   14a58:	03670321 	.word	0x03670321
   14a5c:	69b3      	ldr	r3, [r6, #24]
   14a5e:	3318      	adds	r3, #24
   14a60:	f85a 8023 	ldr.w	r8, [r10, r3, lsl #2]
   14a64:	4640      	mov	r0, r8
   14a66:	f000 fb97 	bl	15198 <strlen>
   14a6a:	f108 38ff 	add.w	r8, r8, #4294967295
   14a6e:	4420      	add	r0, r4
   14a70:	4284      	cmp	r4, r0
   14a72:	f000 837f 	beq.w	15174 <strftime+0x858>
   14a76:	1e6b      	subs	r3, r5, #1
   14a78:	429c      	cmp	r4, r3
   14a7a:	f080 8386 	bcs.w	1518a <strftime+0x86e>
   14a7e:	f818 3f01 	ldrb.w	r3, [r8, #1]!
   14a82:	553b      	strb	r3, [r7, r4]
   14a84:	3401      	adds	r4, #1
   14a86:	e7f3      	b.n	14a70 <strftime+0x154>
   14a88:	69b3      	ldr	r3, [r6, #24]
   14a8a:	eb0a 0383 	add.w	r3, r10, r3, lsl #2
   14a8e:	f8d3 807c 	ldr.w	r8, [r3, #124]	; 0x7c
   14a92:	4640      	mov	r0, r8
   14a94:	f000 fb80 	bl	15198 <strlen>
   14a98:	f108 38ff 	add.w	r8, r8, #4294967295
   14a9c:	4420      	add	r0, r4
   14a9e:	4284      	cmp	r4, r0
   14aa0:	f000 8368 	beq.w	15174 <strftime+0x858>
   14aa4:	1e6b      	subs	r3, r5, #1
   14aa6:	429c      	cmp	r4, r3
   14aa8:	f080 836f 	bcs.w	1518a <strftime+0x86e>
   14aac:	f818 3f01 	ldrb.w	r3, [r8, #1]!
   14ab0:	553b      	strb	r3, [r7, r4]
   14ab2:	3401      	adds	r4, #1
   14ab4:	e7f3      	b.n	14a9e <strftime+0x182>
   14ab6:	6933      	ldr	r3, [r6, #16]
   14ab8:	f85a 8023 	ldr.w	r8, [r10, r3, lsl #2]
   14abc:	4640      	mov	r0, r8
   14abe:	f000 fb6b 	bl	15198 <strlen>
   14ac2:	f108 38ff 	add.w	r8, r8, #4294967295
   14ac6:	4420      	add	r0, r4
   14ac8:	4284      	cmp	r4, r0
   14aca:	f000 8353 	beq.w	15174 <strftime+0x858>
   14ace:	1e6b      	subs	r3, r5, #1
   14ad0:	429c      	cmp	r4, r3
   14ad2:	f080 835a 	bcs.w	1518a <strftime+0x86e>
   14ad6:	f818 3f01 	ldrb.w	r3, [r8, #1]!
   14ada:	553b      	strb	r3, [r7, r4]
   14adc:	3401      	adds	r4, #1
   14ade:	e7f3      	b.n	14ac8 <strftime+0x1ac>
   14ae0:	6933      	ldr	r3, [r6, #16]
   14ae2:	330c      	adds	r3, #12
   14ae4:	f85a 8023 	ldr.w	r8, [r10, r3, lsl #2]
   14ae8:	4640      	mov	r0, r8
   14aea:	f000 fb55 	bl	15198 <strlen>
   14aee:	f108 38ff 	add.w	r8, r8, #4294967295
   14af2:	4420      	add	r0, r4
   14af4:	4284      	cmp	r4, r0
   14af6:	f000 833d 	beq.w	15174 <strftime+0x858>
   14afa:	1e6b      	subs	r3, r5, #1
   14afc:	429c      	cmp	r4, r3
   14afe:	f080 8344 	bcs.w	1518a <strftime+0x86e>
   14b02:	f818 3f01 	ldrb.w	r3, [r8, #1]!
   14b06:	553b      	strb	r3, [r7, r4]
   14b08:	3401      	adds	r4, #1
   14b0a:	e7f3      	b.n	14af4 <strftime+0x1d8>
   14b0c:	f8da 80a0 	ldr.w	r8, [r10, #160]	; 0xa0
   14b10:	e007      	b.n	14b22 <strftime+0x206>
   14b12:	f8da 80e4 	ldr.w	r8, [r10, #228]	; 0xe4
   14b16:	e004      	b.n	14b22 <strftime+0x206>
   14b18:	f8da 809c 	ldr.w	r8, [r10, #156]	; 0x9c
   14b1c:	e001      	b.n	14b22 <strftime+0x206>
   14b1e:	f8da 8098 	ldr.w	r8, [r10, #152]	; 0x98
   14b22:	4640      	mov	r0, r8
   14b24:	f000 fb38 	bl	15198 <strlen>
   14b28:	f898 3000 	ldrb.w	r3, [r8]
   14b2c:	2b00      	cmp	r3, #0
   14b2e:	f000 8321 	beq.w	15174 <strftime+0x858>
   14b32:	1938      	adds	r0, r7, r4
   14b34:	1b29      	subs	r1, r5, r4
   14b36:	4642      	mov	r2, r8
   14b38:	e096      	b.n	14c68 <strftime+0x34c>
   14b3a:	6970      	ldr	r0, [r6, #20]
   14b3c:	4ab5      	ldr	r2, [pc, #724]	; (14e14 <strftime+0x4f8>)
   14b3e:	4290      	cmp	r0, r2
   14b40:	bfac      	ite	ge
   14b42:	f04f 0b00 	movge.w	r11, #0
   14b46:	f04f 0b01 	movlt.w	r11, #1
   14b4a:	2800      	cmp	r0, #0
   14b4c:	db04      	blt.n	14b58 <strftime+0x23c>
   14b4e:	2264      	movs	r2, #100	; 0x64
   14b50:	fb90 f0f2 	sdiv	r0, r0, r2
   14b54:	3013      	adds	r0, #19
   14b56:	e008      	b.n	14b6a <strftime+0x24e>
   14b58:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   14b5c:	9302      	str	r3, [sp, #8]
   14b5e:	f002 fbad 	bl	172bc <abs>
   14b62:	2264      	movs	r2, #100	; 0x64
   14b64:	fb90 f0f2 	sdiv	r0, r0, r2
   14b68:	9b02      	ldr	r3, [sp, #8]
   14b6a:	b143      	cbz	r3, 14b7e <strftime+0x262>
   14b6c:	2863      	cmp	r0, #99	; 0x63
   14b6e:	dd09      	ble.n	14b84 <strftime+0x268>
   14b70:	4aa9      	ldr	r2, [pc, #676]	; (14e18 <strftime+0x4fc>)
   14b72:	49aa      	ldr	r1, [pc, #680]	; (14e1c <strftime+0x500>)
   14b74:	2b2b      	cmp	r3, #43	; 0x2b
   14b76:	bf14      	ite	ne
   14b78:	460b      	movne	r3, r1
   14b7a:	4613      	moveq	r3, r2
   14b7c:	e003      	b.n	14b86 <strftime+0x26a>
   14b7e:	4ba7      	ldr	r3, [pc, #668]	; (14e1c <strftime+0x500>)
   14b80:	4aa7      	ldr	r2, [pc, #668]	; (14e20 <strftime+0x504>)
   14b82:	e001      	b.n	14b88 <strftime+0x26c>
   14b84:	4ba5      	ldr	r3, [pc, #660]	; (14e1c <strftime+0x500>)
   14b86:	4aa7      	ldr	r2, [pc, #668]	; (14e24 <strftime+0x508>)
   14b88:	f1b8 0f01 	cmp.w	r8, #1
   14b8c:	bf98      	it	ls
   14b8e:	f04f 0802 	movls.w	r8, #2
   14b92:	f8df e2b0 	ldr.w	lr, [pc, #688]	; 14e44 <strftime+0x528>
   14b96:	ebcb 0108 	rsb	r1, r11, r8
   14b9a:	9100      	str	r1, [sp, #0]
   14b9c:	9001      	str	r0, [sp, #4]
   14b9e:	1b29      	subs	r1, r5, r4
   14ba0:	1938      	adds	r0, r7, r4
   14ba2:	f1bb 0f00 	cmp.w	r11, #0
   14ba6:	bf18      	it	ne
   14ba8:	4673      	movne	r3, lr
   14baa:	e032      	b.n	14c12 <strftime+0x2f6>
   14bac:	4b9e      	ldr	r3, [pc, #632]	; (14e28 <strftime+0x50c>)
   14bae:	4a9f      	ldr	r2, [pc, #636]	; (14e2c <strftime+0x510>)
   14bb0:	1938      	adds	r0, r7, r4
   14bb2:	f1be 0f64 	cmp.w	lr, #100	; 0x64
   14bb6:	bf18      	it	ne
   14bb8:	461a      	movne	r2, r3
   14bba:	68f3      	ldr	r3, [r6, #12]
   14bbc:	1b29      	subs	r1, r5, r4
   14bbe:	f003 ff5d 	bl	18a7c <sniprintf>
   14bc2:	2800      	cmp	r0, #0
   14bc4:	f280 828a 	bge.w	150dc <strftime+0x7c0>
   14bc8:	e2df      	b.n	1518a <strftime+0x86e>
   14bca:	6970      	ldr	r0, [r6, #20]
   14bcc:	6933      	ldr	r3, [r6, #16]
   14bce:	2800      	cmp	r0, #0
   14bd0:	f103 0801 	add.w	r8, r3, #1
   14bd4:	eb07 0104 	add.w	r1, r7, r4
   14bd8:	ebc4 0b05 	rsb	r11, r4, r5
   14bdc:	68f3      	ldr	r3, [r6, #12]
   14bde:	db05      	blt.n	14bec <strftime+0x2d0>
   14be0:	2264      	movs	r2, #100	; 0x64
   14be2:	fb90 fef2 	sdiv	lr, r0, r2
   14be6:	fb02 001e 	mls	r0, r2, lr, r0
   14bea:	e00c      	b.n	14c06 <strftime+0x2ea>
   14bec:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   14bf0:	9303      	str	r3, [sp, #12]
   14bf2:	9102      	str	r1, [sp, #8]
   14bf4:	f002 fb62 	bl	172bc <abs>
   14bf8:	2264      	movs	r2, #100	; 0x64
   14bfa:	fb90 fef2 	sdiv	lr, r0, r2
   14bfe:	fb0e 0012 	mls	r0, lr, r2, r0
   14c02:	9b03      	ldr	r3, [sp, #12]
   14c04:	9902      	ldr	r1, [sp, #8]
   14c06:	9300      	str	r3, [sp, #0]
   14c08:	9001      	str	r0, [sp, #4]
   14c0a:	4643      	mov	r3, r8
   14c0c:	4608      	mov	r0, r1
   14c0e:	4659      	mov	r1, r11
   14c10:	4a87      	ldr	r2, [pc, #540]	; (14e30 <strftime+0x514>)
   14c12:	f003 ff33 	bl	18a7c <sniprintf>
   14c16:	e7d4      	b.n	14bc2 <strftime+0x2a6>
   14c18:	2225      	movs	r2, #37	; 0x25
   14c1a:	f88d 2018 	strb.w	r2, [sp, #24]
   14c1e:	b13b      	cbz	r3, 14c30 <strftime+0x314>
   14c20:	f1b8 0f05 	cmp.w	r8, #5
   14c24:	f88d 3019 	strb.w	r3, [sp, #25]
   14c28:	bf98      	it	ls
   14c2a:	f04f 0806 	movls.w	r8, #6
   14c2e:	e004      	b.n	14c3a <strftime+0x31e>
   14c30:	232b      	movs	r3, #43	; 0x2b
   14c32:	f88d 3019 	strb.w	r3, [sp, #25]
   14c36:	f04f 080a 	mov.w	r8, #10
   14c3a:	f1b8 0306 	subs.w	r3, r8, #6
   14c3e:	d102      	bne.n	14c46 <strftime+0x32a>
   14c40:	f10d 001a 	add.w	r0, sp, #26
   14c44:	e00a      	b.n	14c5c <strftime+0x340>
   14c46:	f10d 001a 	add.w	r0, sp, #26
   14c4a:	211e      	movs	r1, #30
   14c4c:	4a79      	ldr	r2, [pc, #484]	; (14e34 <strftime+0x518>)
   14c4e:	f003 ff15 	bl	18a7c <sniprintf>
   14c52:	2800      	cmp	r0, #0
   14c54:	ddf4      	ble.n	14c40 <strftime+0x324>
   14c56:	f10d 031a 	add.w	r3, sp, #26
   14c5a:	4418      	add	r0, r3
   14c5c:	4976      	ldr	r1, [pc, #472]	; (14e38 <strftime+0x51c>)
   14c5e:	f003 ff3f 	bl	18ae0 <strcpy>
   14c62:	1938      	adds	r0, r7, r4
   14c64:	1b29      	subs	r1, r5, r4
   14c66:	aa06      	add	r2, sp, #24
   14c68:	4633      	mov	r3, r6
   14c6a:	f7ff fe57 	bl	1491c <strftime>
   14c6e:	2800      	cmp	r0, #0
   14c70:	f340 828b 	ble.w	1518a <strftime+0x86e>
   14c74:	4404      	add	r4, r0
   14c76:	e27d      	b.n	15174 <strftime+0x858>
   14c78:	4630      	mov	r0, r6
   14c7a:	f7ff fdee 	bl	1485a <iso_year_adjust>
   14c7e:	4680      	mov	r8, r0
   14c80:	6970      	ldr	r0, [r6, #20]
   14c82:	2800      	cmp	r0, #0
   14c84:	db05      	blt.n	14c92 <strftime+0x376>
   14c86:	2264      	movs	r2, #100	; 0x64
   14c88:	fb90 f1f2 	sdiv	r1, r0, r2
   14c8c:	fb02 0011 	mls	r0, r2, r1, r0
   14c90:	e008      	b.n	14ca4 <strftime+0x388>
   14c92:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   14c96:	f002 fb11 	bl	172bc <abs>
   14c9a:	2264      	movs	r2, #100	; 0x64
   14c9c:	fb90 f3f2 	sdiv	r3, r0, r2
   14ca0:	fb03 0012 	mls	r0, r3, r2, r0
   14ca4:	f1b8 0f00 	cmp.w	r8, #0
   14ca8:	da06      	bge.n	14cb8 <strftime+0x39c>
   14caa:	6972      	ldr	r2, [r6, #20]
   14cac:	4b63      	ldr	r3, [pc, #396]	; (14e3c <strftime+0x520>)
   14cae:	429a      	cmp	r2, r3
   14cb0:	bfb8      	it	lt
   14cb2:	f04f 0801 	movlt.w	r8, #1
   14cb6:	e006      	b.n	14cc6 <strftime+0x3aa>
   14cb8:	d005      	beq.n	14cc6 <strftime+0x3aa>
   14cba:	6972      	ldr	r2, [r6, #20]
   14cbc:	4b55      	ldr	r3, [pc, #340]	; (14e14 <strftime+0x4f8>)
   14cbe:	429a      	cmp	r2, r3
   14cc0:	bfb8      	it	lt
   14cc2:	f04f 38ff 	movlt.w	r8, #4294967295
   14cc6:	2364      	movs	r3, #100	; 0x64
   14cc8:	4440      	add	r0, r8
   14cca:	fb90 fef3 	sdiv	lr, r0, r3
   14cce:	fb03 001e 	mls	r0, r3, lr, r0
   14cd2:	eb00 0e03 	add.w	lr, r0, r3
   14cd6:	fb9e fcf3 	sdiv	r12, lr, r3
   14cda:	1938      	adds	r0, r7, r4
   14cdc:	1b29      	subs	r1, r5, r4
   14cde:	4a53      	ldr	r2, [pc, #332]	; (14e2c <strftime+0x510>)
   14ce0:	fb03 e31c 	mls	r3, r3, r12, lr
   14ce4:	e76b      	b.n	14bbe <strftime+0x2a2>
   14ce6:	6971      	ldr	r1, [r6, #20]
   14ce8:	4a4a      	ldr	r2, [pc, #296]	; (14e14 <strftime+0x4f8>)
   14cea:	9305      	str	r3, [sp, #20]
   14cec:	4291      	cmp	r1, r2
   14cee:	bfac      	ite	ge
   14cf0:	2300      	movge	r3, #0
   14cf2:	2301      	movlt	r3, #1
   14cf4:	4630      	mov	r0, r6
   14cf6:	9104      	str	r1, [sp, #16]
   14cf8:	9303      	str	r3, [sp, #12]
   14cfa:	9302      	str	r3, [sp, #8]
   14cfc:	f7ff fdad 	bl	1485a <iso_year_adjust>
   14d00:	9904      	ldr	r1, [sp, #16]
   14d02:	4683      	mov	r11, r0
   14d04:	2900      	cmp	r1, #0
   14d06:	9b05      	ldr	r3, [sp, #20]
   14d08:	db04      	blt.n	14d14 <strftime+0x3f8>
   14d0a:	2064      	movs	r0, #100	; 0x64
   14d0c:	fb91 f1f0 	sdiv	r1, r1, r0
   14d10:	3113      	adds	r1, #19
   14d12:	e008      	b.n	14d26 <strftime+0x40a>
   14d14:	f201 706c 	addw	r0, r1, #1900	; 0x76c
   14d18:	9304      	str	r3, [sp, #16]
   14d1a:	f002 facf 	bl	172bc <abs>
   14d1e:	2164      	movs	r1, #100	; 0x64
   14d20:	fb90 f1f1 	sdiv	r1, r0, r1
   14d24:	9b04      	ldr	r3, [sp, #16]
   14d26:	6970      	ldr	r0, [r6, #20]
   14d28:	2800      	cmp	r0, #0
   14d2a:	db06      	blt.n	14d3a <strftime+0x41e>
   14d2c:	f04f 0e64 	mov.w	lr, #100	; 0x64
   14d30:	fb90 fcfe 	sdiv	r12, r0, lr
   14d34:	fb0e 001c 	mls	r0, lr, r12, r0
   14d38:	e00d      	b.n	14d56 <strftime+0x43a>
   14d3a:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   14d3e:	9105      	str	r1, [sp, #20]
   14d40:	9304      	str	r3, [sp, #16]
   14d42:	f002 fabb 	bl	172bc <abs>
   14d46:	f04f 0e64 	mov.w	lr, #100	; 0x64
   14d4a:	fb90 fcfe 	sdiv	r12, r0, lr
   14d4e:	fb0c 001e 	mls	r0, r12, lr, r0
   14d52:	9905      	ldr	r1, [sp, #20]
   14d54:	9b04      	ldr	r3, [sp, #16]
   14d56:	f1bb 0f00 	cmp.w	r11, #0
   14d5a:	da09      	bge.n	14d70 <strftime+0x454>
   14d5c:	f8df e0dc 	ldr.w	lr, [pc, #220]	; 14e3c <strftime+0x520>
   14d60:	6972      	ldr	r2, [r6, #20]
   14d62:	4572      	cmp	r2, lr
   14d64:	da0e      	bge.n	14d84 <strftime+0x468>
   14d66:	f04f 0b01 	mov.w	r11, #1
   14d6a:	f8cd b008 	str.w	r11, [sp, #8]
   14d6e:	e009      	b.n	14d84 <strftime+0x468>
   14d70:	d008      	beq.n	14d84 <strftime+0x468>
   14d72:	9a03      	ldr	r2, [sp, #12]
   14d74:	2a00      	cmp	r2, #0
   14d76:	bf14      	ite	ne
   14d78:	2201      	movne	r2, #1
   14d7a:	2200      	moveq	r2, #0
   14d7c:	9202      	str	r2, [sp, #8]
   14d7e:	bf18      	it	ne
   14d80:	f04f 3bff 	movne.w	r11, #4294967295
   14d84:	eb00 020b 	add.w	r2, r0, r11
   14d88:	1c50      	adds	r0, r2, #1
   14d8a:	d102      	bne.n	14d92 <strftime+0x476>
   14d8c:	3901      	subs	r1, #1
   14d8e:	2263      	movs	r2, #99	; 0x63
   14d90:	e003      	b.n	14d9a <strftime+0x47e>
   14d92:	2a64      	cmp	r2, #100	; 0x64
   14d94:	bf04      	itt	eq
   14d96:	3101      	addeq	r1, #1
   14d98:	2200      	moveq	r2, #0
   14d9a:	f04f 0c64 	mov.w	r12, #100	; 0x64
   14d9e:	fb0c 2201 	mla	r2, r12, r1, r2
   14da2:	9902      	ldr	r1, [sp, #8]
   14da4:	b141      	cbz	r1, 14db8 <strftime+0x49c>
   14da6:	212d      	movs	r1, #45	; 0x2d
   14da8:	f88d 1018 	strb.w	r1, [sp, #24]
   14dac:	f1b8 0f00 	cmp.w	r8, #0
   14db0:	d012      	beq.n	14dd8 <strftime+0x4bc>
   14db2:	f108 38ff 	add.w	r8, r8, #4294967295
   14db6:	e00f      	b.n	14dd8 <strftime+0x4bc>
   14db8:	2b2b      	cmp	r3, #43	; 0x2b
   14dba:	d110      	bne.n	14dde <strftime+0x4c2>
   14dbc:	f242 710f 	movw	r1, #9999	; 0x270f
   14dc0:	428a      	cmp	r2, r1
   14dc2:	d90c      	bls.n	14dde <strftime+0x4c2>
   14dc4:	f88d 3018 	strb.w	r3, [sp, #24]
   14dc8:	f1b8 0f00 	cmp.w	r8, #0
   14dcc:	d1f1      	bne.n	14db2 <strftime+0x496>
   14dce:	a90e      	add	r1, sp, #56	; 0x38
   14dd0:	2325      	movs	r3, #37	; 0x25
   14dd2:	f801 3d1f 	strb.w	r3, [r1, #-31]!
   14dd6:	e008      	b.n	14dea <strftime+0x4ce>
   14dd8:	f10d 0119 	add.w	r1, sp, #25
   14ddc:	e000      	b.n	14de0 <strftime+0x4c4>
   14dde:	a906      	add	r1, sp, #24
   14de0:	2025      	movs	r0, #37	; 0x25
   14de2:	7008      	strb	r0, [r1, #0]
   14de4:	b90b      	cbnz	r3, 14dea <strftime+0x4ce>
   14de6:	1c48      	adds	r0, r1, #1
   14de8:	e002      	b.n	14df0 <strftime+0x4d4>
   14dea:	2330      	movs	r3, #48	; 0x30
   14dec:	1c88      	adds	r0, r1, #2
   14dee:	704b      	strb	r3, [r1, #1]
   14df0:	4913      	ldr	r1, [pc, #76]	; (14e40 <strftime+0x524>)
   14df2:	9202      	str	r2, [sp, #8]
   14df4:	f003 fe74 	bl	18ae0 <strcpy>
   14df8:	9a02      	ldr	r2, [sp, #8]
   14dfa:	9200      	str	r2, [sp, #0]
   14dfc:	e13a      	b.n	15074 <strftime+0x758>
   14dfe:	4b0b      	ldr	r3, [pc, #44]	; (14e2c <strftime+0x510>)
   14e00:	4a09      	ldr	r2, [pc, #36]	; (14e28 <strftime+0x50c>)
   14e02:	1938      	adds	r0, r7, r4
   14e04:	f1be 0f6b 	cmp.w	lr, #107	; 0x6b
   14e08:	bf18      	it	ne
   14e0a:	461a      	movne	r2, r3
   14e0c:	1b29      	subs	r1, r5, r4
   14e0e:	68b3      	ldr	r3, [r6, #8]
   14e10:	e6d5      	b.n	14bbe <strftime+0x2a2>
   14e12:	bf00      	nop
   14e14:	fffff894 	.word	0xfffff894
   14e18:	0001c7a2 	.word	0x0001c7a2
   14e1c:	0001c156 	.word	0x0001c156
   14e20:	0001c793 	.word	0x0001c793
   14e24:	0001c79a 	.word	0x0001c79a
   14e28:	0001c7a4 	.word	0x0001c7a4
   14e2c:	0001c7b2 	.word	0x0001c7b2
   14e30:	0001c7a8 	.word	0x0001c7a8
   14e34:	0001c7b7 	.word	0x0001c7b7
   14e38:	0001c7bb 	.word	0x0001c7bb
   14e3c:	fffff895 	.word	0xfffff895
   14e40:	0001c7c3 	.word	0x0001c7c3
   14e44:	0001c78b 	.word	0x0001c78b
   14e48:	68b1      	ldr	r1, [r6, #8]
   14e4a:	230c      	movs	r3, #12
   14e4c:	b131      	cbz	r1, 14e5c <strftime+0x540>
   14e4e:	4299      	cmp	r1, r3
   14e50:	bf16      	itet	ne
   14e52:	fb91 f2f3 	sdivne	r2, r1, r3
   14e56:	460b      	moveq	r3, r1
   14e58:	fb03 1312 	mlsne	r3, r3, r2, r1
   14e5c:	4ab8      	ldr	r2, [pc, #736]	; (15140 <strftime+0x824>)
   14e5e:	f8df c2e8 	ldr.w	r12, [pc, #744]	; 15148 <strftime+0x82c>
   14e62:	1938      	adds	r0, r7, r4
   14e64:	1b29      	subs	r1, r5, r4
   14e66:	f1be 0f49 	cmp.w	lr, #73	; 0x49
   14e6a:	bf08      	it	eq
   14e6c:	4662      	moveq	r2, r12
   14e6e:	e6a6      	b.n	14bbe <strftime+0x2a2>
   14e70:	69f3      	ldr	r3, [r6, #28]
   14e72:	1938      	adds	r0, r7, r4
   14e74:	1b29      	subs	r1, r5, r4
   14e76:	4ab3      	ldr	r2, [pc, #716]	; (15144 <strftime+0x828>)
   14e78:	e003      	b.n	14e82 <strftime+0x566>
   14e7a:	6933      	ldr	r3, [r6, #16]
   14e7c:	4ab2      	ldr	r2, [pc, #712]	; (15148 <strftime+0x82c>)
   14e7e:	1938      	adds	r0, r7, r4
   14e80:	1b29      	subs	r1, r5, r4
   14e82:	3301      	adds	r3, #1
   14e84:	e69b      	b.n	14bbe <strftime+0x2a2>
   14e86:	1938      	adds	r0, r7, r4
   14e88:	1b29      	subs	r1, r5, r4
   14e8a:	4aaf      	ldr	r2, [pc, #700]	; (15148 <strftime+0x82c>)
   14e8c:	6873      	ldr	r3, [r6, #4]
   14e8e:	e696      	b.n	14bbe <strftime+0x2a2>
   14e90:	1e6b      	subs	r3, r5, #1
   14e92:	429c      	cmp	r4, r3
   14e94:	f080 8179 	bcs.w	1518a <strftime+0x86e>
   14e98:	230a      	movs	r3, #10
   14e9a:	e169      	b.n	15170 <strftime+0x854>
   14e9c:	68b3      	ldr	r3, [r6, #8]
   14e9e:	2b0b      	cmp	r3, #11
   14ea0:	bfcc      	ite	gt
   14ea2:	23a4      	movgt	r3, #164	; 0xa4
   14ea4:	23a0      	movle	r3, #160	; 0xa0
   14ea6:	4453      	add	r3, r10
   14ea8:	f8d3 8004 	ldr.w	r8, [r3, #4]
   14eac:	4640      	mov	r0, r8
   14eae:	f000 f973 	bl	15198 <strlen>
   14eb2:	4642      	mov	r2, r8
   14eb4:	4420      	add	r0, r4
   14eb6:	4284      	cmp	r4, r0
   14eb8:	f000 815c 	beq.w	15174 <strftime+0x858>
   14ebc:	1e6b      	subs	r3, r5, #1
   14ebe:	429c      	cmp	r4, r3
   14ec0:	f080 8163 	bcs.w	1518a <strftime+0x86e>
   14ec4:	f899 3000 	ldrb.w	r3, [r9]
   14ec8:	2b50      	cmp	r3, #80	; 0x50
   14eca:	7813      	ldrb	r3, [r2, #0]
   14ecc:	d109      	bne.n	14ee2 <strftime+0x5c6>
   14ece:	499f      	ldr	r1, [pc, #636]	; (1514c <strftime+0x830>)
   14ed0:	6809      	ldr	r1, [r1, #0]
   14ed2:	4419      	add	r1, r3
   14ed4:	7849      	ldrb	r1, [r1, #1]
   14ed6:	f001 0103 	and.w	r1, r1, #3
   14eda:	2901      	cmp	r1, #1
   14edc:	bf08      	it	eq
   14ede:	3320      	addeq	r3, #32
   14ee0:	b2db      	uxtb	r3, r3
   14ee2:	553b      	strb	r3, [r7, r4]
   14ee4:	3201      	adds	r2, #1
   14ee6:	3401      	adds	r4, #1
   14ee8:	e7e5      	b.n	14eb6 <strftime+0x59a>
   14eea:	6873      	ldr	r3, [r6, #4]
   14eec:	1938      	adds	r0, r7, r4
   14eee:	9300      	str	r3, [sp, #0]
   14ef0:	1b29      	subs	r1, r5, r4
   14ef2:	4a97      	ldr	r2, [pc, #604]	; (15150 <strftime+0x834>)
   14ef4:	68b3      	ldr	r3, [r6, #8]
   14ef6:	e0ee      	b.n	150d6 <strftime+0x7ba>
   14ef8:	1938      	adds	r0, r7, r4
   14efa:	1b29      	subs	r1, r5, r4
   14efc:	4a92      	ldr	r2, [pc, #584]	; (15148 <strftime+0x82c>)
   14efe:	6833      	ldr	r3, [r6, #0]
   14f00:	e65d      	b.n	14bbe <strftime+0x2a2>
   14f02:	1e6b      	subs	r3, r5, #1
   14f04:	429c      	cmp	r4, r3
   14f06:	f080 8140 	bcs.w	1518a <strftime+0x86e>
   14f0a:	2309      	movs	r3, #9
   14f0c:	e130      	b.n	15170 <strftime+0x854>
   14f0e:	6873      	ldr	r3, [r6, #4]
   14f10:	1938      	adds	r0, r7, r4
   14f12:	9300      	str	r3, [sp, #0]
   14f14:	6833      	ldr	r3, [r6, #0]
   14f16:	1b29      	subs	r1, r5, r4
   14f18:	9301      	str	r3, [sp, #4]
   14f1a:	4a8e      	ldr	r2, [pc, #568]	; (15154 <strftime+0x838>)
   14f1c:	68b3      	ldr	r3, [r6, #8]
   14f1e:	e678      	b.n	14c12 <strftime+0x2f6>
   14f20:	1e6b      	subs	r3, r5, #1
   14f22:	429c      	cmp	r4, r3
   14f24:	f080 8131 	bcs.w	1518a <strftime+0x86e>
   14f28:	69b3      	ldr	r3, [r6, #24]
   14f2a:	1c62      	adds	r2, r4, #1
   14f2c:	b90b      	cbnz	r3, 14f32 <strftime+0x616>
   14f2e:	2337      	movs	r3, #55	; 0x37
   14f30:	e000      	b.n	14f34 <strftime+0x618>
   14f32:	3330      	adds	r3, #48	; 0x30
   14f34:	553b      	strb	r3, [r7, r4]
   14f36:	4614      	mov	r4, r2
   14f38:	e11c      	b.n	15174 <strftime+0x858>
   14f3a:	69f3      	ldr	r3, [r6, #28]
   14f3c:	69b2      	ldr	r2, [r6, #24]
   14f3e:	3307      	adds	r3, #7
   14f40:	1a9b      	subs	r3, r3, r2
   14f42:	e04e      	b.n	14fe2 <strftime+0x6c6>
   14f44:	4630      	mov	r0, r6
   14f46:	f7ff fc88 	bl	1485a <iso_year_adjust>
   14f4a:	69b2      	ldr	r2, [r6, #24]
   14f4c:	b10a      	cbz	r2, 14f52 <strftime+0x636>
   14f4e:	1e53      	subs	r3, r2, #1
   14f50:	e000      	b.n	14f54 <strftime+0x638>
   14f52:	2306      	movs	r3, #6
   14f54:	2800      	cmp	r0, #0
   14f56:	69f2      	ldr	r2, [r6, #28]
   14f58:	dc32      	bgt.n	14fc0 <strftime+0x6a4>
   14f5a:	d105      	bne.n	14f68 <strftime+0x64c>
   14f5c:	320a      	adds	r2, #10
   14f5e:	1ad2      	subs	r2, r2, r3
   14f60:	2307      	movs	r3, #7
   14f62:	fb92 f3f3 	sdiv	r3, r2, r3
   14f66:	e050      	b.n	1500a <strftime+0x6ee>
   14f68:	f240 716b 	movw	r1, #1899	; 0x76b
   14f6c:	6970      	ldr	r0, [r6, #20]
   14f6e:	1a9a      	subs	r2, r3, r2
   14f70:	2800      	cmp	r0, #0
   14f72:	bfb4      	ite	lt
   14f74:	460b      	movlt	r3, r1
   14f76:	f06f 0364 	mvnge.w	r3, #100	; 0x64
   14f7a:	4403      	add	r3, r0
   14f7c:	0799      	lsls	r1, r3, #30
   14f7e:	d107      	bne.n	14f90 <strftime+0x674>
   14f80:	f04f 0e64 	mov.w	lr, #100	; 0x64
   14f84:	4619      	mov	r1, r3
   14f86:	fb93 f3fe 	sdiv	r3, r3, lr
   14f8a:	fb0e 1113 	mls	r1, lr, r3, r1
   14f8e:	b981      	cbnz	r1, 14fb2 <strftime+0x696>
   14f90:	f240 736b 	movw	r3, #1899	; 0x76b
   14f94:	2800      	cmp	r0, #0
   14f96:	bfa8      	it	ge
   14f98:	f06f 0364 	mvnge.w	r3, #100	; 0x64
   14f9c:	4403      	add	r3, r0
   14f9e:	f44f 70c8 	mov.w	r0, #400	; 0x190
   14fa2:	fb93 f1f0 	sdiv	r1, r3, r0
   14fa6:	fb00 3311 	mls	r3, r0, r1, r3
   14faa:	fab3 f383 	clz	r3, r3
   14fae:	095b      	lsrs	r3, r3, #5
   14fb0:	e000      	b.n	14fb4 <strftime+0x698>
   14fb2:	2301      	movs	r3, #1
   14fb4:	1ad2      	subs	r2, r2, r3
   14fb6:	2a05      	cmp	r2, #5
   14fb8:	bfb4      	ite	lt
   14fba:	2335      	movlt	r3, #53	; 0x35
   14fbc:	2334      	movge	r3, #52	; 0x34
   14fbe:	e024      	b.n	1500a <strftime+0x6ee>
   14fc0:	2301      	movs	r3, #1
   14fc2:	e022      	b.n	1500a <strftime+0x6ee>
   14fc4:	1e6b      	subs	r3, r5, #1
   14fc6:	429c      	cmp	r4, r3
   14fc8:	f080 80df 	bcs.w	1518a <strftime+0x86e>
   14fcc:	69b3      	ldr	r3, [r6, #24]
   14fce:	3330      	adds	r3, #48	; 0x30
   14fd0:	e0ce      	b.n	15170 <strftime+0x854>
   14fd2:	69b3      	ldr	r3, [r6, #24]
   14fd4:	b10b      	cbz	r3, 14fda <strftime+0x6be>
   14fd6:	3b01      	subs	r3, #1
   14fd8:	e000      	b.n	14fdc <strftime+0x6c0>
   14fda:	2306      	movs	r3, #6
   14fdc:	69f2      	ldr	r2, [r6, #28]
   14fde:	3207      	adds	r2, #7
   14fe0:	1ad3      	subs	r3, r2, r3
   14fe2:	f04f 0e07 	mov.w	lr, #7
   14fe6:	1938      	adds	r0, r7, r4
   14fe8:	1b29      	subs	r1, r5, r4
   14fea:	4a57      	ldr	r2, [pc, #348]	; (15148 <strftime+0x82c>)
   14fec:	fb93 f3fe 	sdiv	r3, r3, lr
   14ff0:	e5e5      	b.n	14bbe <strftime+0x2a2>
   14ff2:	6970      	ldr	r0, [r6, #20]
   14ff4:	2800      	cmp	r0, #0
   14ff6:	da03      	bge.n	15000 <strftime+0x6e4>
   14ff8:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   14ffc:	f002 f95e 	bl	172bc <abs>
   15000:	2364      	movs	r3, #100	; 0x64
   15002:	fb90 f2f3 	sdiv	r2, r0, r3
   15006:	fb02 0313 	mls	r3, r2, r3, r0
   1500a:	1938      	adds	r0, r7, r4
   1500c:	1b29      	subs	r1, r5, r4
   1500e:	4a4e      	ldr	r2, [pc, #312]	; (15148 <strftime+0x82c>)
   15010:	e5d5      	b.n	14bbe <strftime+0x2a2>
   15012:	6972      	ldr	r2, [r6, #20]
   15014:	4950      	ldr	r1, [pc, #320]	; (15158 <strftime+0x83c>)
   15016:	f202 7b6c 	addw	r11, r2, #1900	; 0x76c
   1501a:	428a      	cmp	r2, r1
   1501c:	da08      	bge.n	15030 <strftime+0x714>
   1501e:	222d      	movs	r2, #45	; 0x2d
   15020:	f88d 2018 	strb.w	r2, [sp, #24]
   15024:	f1cb 0b00 	rsb	r11, r11, #0
   15028:	f1b8 0f00 	cmp.w	r8, #0
   1502c:	d10b      	bne.n	15046 <strftime+0x72a>
   1502e:	e00c      	b.n	1504a <strftime+0x72e>
   15030:	2b2b      	cmp	r3, #43	; 0x2b
   15032:	d10d      	bne.n	15050 <strftime+0x734>
   15034:	f242 720f 	movw	r2, #9999	; 0x270f
   15038:	4593      	cmp	r11, r2
   1503a:	d909      	bls.n	15050 <strftime+0x734>
   1503c:	f88d 3018 	strb.w	r3, [sp, #24]
   15040:	f1b8 0f00 	cmp.w	r8, #0
   15044:	d00a      	beq.n	1505c <strftime+0x740>
   15046:	f108 38ff 	add.w	r8, r8, #4294967295
   1504a:	f10d 0219 	add.w	r2, sp, #25
   1504e:	e000      	b.n	15052 <strftime+0x736>
   15050:	aa06      	add	r2, sp, #24
   15052:	2125      	movs	r1, #37	; 0x25
   15054:	7011      	strb	r1, [r2, #0]
   15056:	b92b      	cbnz	r3, 15064 <strftime+0x748>
   15058:	1c50      	adds	r0, r2, #1
   1505a:	e006      	b.n	1506a <strftime+0x74e>
   1505c:	aa0e      	add	r2, sp, #56	; 0x38
   1505e:	2325      	movs	r3, #37	; 0x25
   15060:	f802 3d1f 	strb.w	r3, [r2, #-31]!
   15064:	2330      	movs	r3, #48	; 0x30
   15066:	1c90      	adds	r0, r2, #2
   15068:	7053      	strb	r3, [r2, #1]
   1506a:	493c      	ldr	r1, [pc, #240]	; (1515c <strftime+0x840>)
   1506c:	f003 fd38 	bl	18ae0 <strcpy>
   15070:	f8cd b000 	str.w	r11, [sp]
   15074:	1938      	adds	r0, r7, r4
   15076:	1b29      	subs	r1, r5, r4
   15078:	aa06      	add	r2, sp, #24
   1507a:	4643      	mov	r3, r8
   1507c:	e02b      	b.n	150d6 <strftime+0x7ba>
   1507e:	6a33      	ldr	r3, [r6, #32]
   15080:	2b00      	cmp	r3, #0
   15082:	db77      	blt.n	15174 <strftime+0x858>
   15084:	f002 fd2a 	bl	17adc <__gettzinfo>
   15088:	4680      	mov	r8, r0
   1508a:	f001 f86f 	bl	1616c <__tz_lock>
   1508e:	6a33      	ldr	r3, [r6, #32]
   15090:	201c      	movs	r0, #28
   15092:	2b00      	cmp	r3, #0
   15094:	bfd4      	ite	le
   15096:	2300      	movle	r3, #0
   15098:	2301      	movgt	r3, #1
   1509a:	fb00 8003 	mla	r0, r0, r3, r8
   1509e:	6a03      	ldr	r3, [r0, #32]
   150a0:	f04f 083c 	mov.w	r8, #60	; 0x3c
   150a4:	f1c3 0b00 	rsb	r11, r3, #0
   150a8:	f001 f861 	bl	1616e <__tz_unlock>
   150ac:	193a      	adds	r2, r7, r4
   150ae:	1b29      	subs	r1, r5, r4
   150b0:	fb9b f0f8 	sdiv	r0, r11, r8
   150b4:	9203      	str	r2, [sp, #12]
   150b6:	9102      	str	r1, [sp, #8]
   150b8:	f002 fd62 	bl	17b80 <labs>
   150bc:	fb90 f3f8 	sdiv	r3, r0, r8
   150c0:	fb03 0018 	mls	r0, r3, r8, r0
   150c4:	f44f 6361 	mov.w	r3, #3600	; 0xe10
   150c8:	fb9b f3f3 	sdiv	r3, r11, r3
   150cc:	9a03      	ldr	r2, [sp, #12]
   150ce:	9000      	str	r0, [sp, #0]
   150d0:	9902      	ldr	r1, [sp, #8]
   150d2:	4610      	mov	r0, r2
   150d4:	4a22      	ldr	r2, [pc, #136]	; (15160 <strftime+0x844>)
   150d6:	f003 fcd1 	bl	18a7c <sniprintf>
   150da:	e572      	b.n	14bc2 <strftime+0x2a6>
   150dc:	4404      	add	r4, r0
   150de:	42ac      	cmp	r4, r5
   150e0:	d348      	bcc.n	15174 <strftime+0x858>
   150e2:	e052      	b.n	1518a <strftime+0x86e>
   150e4:	6a33      	ldr	r3, [r6, #32]
   150e6:	2b00      	cmp	r3, #0
   150e8:	db44      	blt.n	15174 <strftime+0x858>
   150ea:	f001 f83f 	bl	1616c <__tz_lock>
   150ee:	6a33      	ldr	r3, [r6, #32]
   150f0:	f8df 8070 	ldr.w	r8, [pc, #112]	; 15164 <strftime+0x848>
   150f4:	2b00      	cmp	r3, #0
   150f6:	bfd4      	ite	le
   150f8:	2300      	movle	r3, #0
   150fa:	2301      	movgt	r3, #1
   150fc:	f858 0023 	ldr.w	r0, [r8, r3, lsl #2]
   15100:	f000 f84a 	bl	15198 <strlen>
   15104:	4641      	mov	r1, r8
   15106:	2300      	movs	r3, #0
   15108:	4283      	cmp	r3, r0
   1510a:	eb03 0804 	add.w	r8, r3, r4
   1510e:	d013      	beq.n	15138 <strftime+0x81c>
   15110:	1e6a      	subs	r2, r5, #1
   15112:	4590      	cmp	r8, r2
   15114:	d20d      	bcs.n	15132 <strftime+0x816>
   15116:	6a32      	ldr	r2, [r6, #32]
   15118:	2a00      	cmp	r2, #0
   1511a:	bfd4      	ite	le
   1511c:	2200      	movle	r2, #0
   1511e:	2201      	movgt	r2, #1
   15120:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
   15124:	f812 e003 	ldrb.w	lr, [r2, r3]
   15128:	193a      	adds	r2, r7, r4
   1512a:	f802 e003 	strb.w	lr, [r2, r3]
   1512e:	3301      	adds	r3, #1
   15130:	e7ea      	b.n	15108 <strftime+0x7ec>
   15132:	f001 f81c 	bl	1616e <__tz_unlock>
   15136:	e028      	b.n	1518a <strftime+0x86e>
   15138:	f001 f819 	bl	1616e <__tz_unlock>
   1513c:	4644      	mov	r4, r8
   1513e:	e019      	b.n	15174 <strftime+0x858>
   15140:	0001c7a4 	.word	0x0001c7a4
   15144:	0001c7c7 	.word	0x0001c7c7
   15148:	0001c7b2 	.word	0x0001c7b2
   1514c:	10000170 	.word	0x10000170
   15150:	0001c7d1 	.word	0x0001c7d1
   15154:	0001c7cc 	.word	0x0001c7cc
   15158:	fffff894 	.word	0xfffff894
   1515c:	0001c7c3 	.word	0x0001c7c3
   15160:	0001c7db 	.word	0x0001c7db
   15164:	10000238 	.word	0x10000238
   15168:	1e6b      	subs	r3, r5, #1
   1516a:	429c      	cmp	r4, r3
   1516c:	d20d      	bcs.n	1518a <strftime+0x86e>
   1516e:	2325      	movs	r3, #37	; 0x25
   15170:	553b      	strb	r3, [r7, r4]
   15172:	3401      	adds	r4, #1
   15174:	f899 3000 	ldrb.w	r3, [r9]
   15178:	b11b      	cbz	r3, 15182 <strftime+0x866>
   1517a:	f109 0901 	add.w	r9, r9, #1
   1517e:	f7ff bbd8 	b.w	14932 <strftime+0x16>
   15182:	b125      	cbz	r5, 1518e <strftime+0x872>
   15184:	2300      	movs	r3, #0
   15186:	553b      	strb	r3, [r7, r4]
   15188:	e001      	b.n	1518e <strftime+0x872>
   1518a:	2000      	movs	r0, #0
   1518c:	e000      	b.n	15190 <strftime+0x874>
   1518e:	4620      	mov	r0, r4
   15190:	b00f      	add	sp, #60	; 0x3c
   15192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
   15196:	bf00      	nop

00015198 <strlen>:
   15198:	4603      	mov	r3, r0
   1519a:	f813 2b01 	ldrb.w	r2, [r3], #1
   1519e:	2a00      	cmp	r2, #0
   151a0:	d1fb      	bne.n	1519a <strlen+0x2>
   151a2:	1a18      	subs	r0, r3, r0
   151a4:	3801      	subs	r0, #1
   151a6:	4770      	bx	lr

000151a8 <strncmp>:
   151a8:	b570      	push	{r4, r5, r6, lr}
   151aa:	b1a2      	cbz	r2, 151d6 <strncmp+0x2e>
   151ac:	1e45      	subs	r5, r0, #1
   151ae:	3901      	subs	r1, #1
   151b0:	786b      	ldrb	r3, [r5, #1]
   151b2:	f811 4f01 	ldrb.w	r4, [r1, #1]!
   151b6:	1c6e      	adds	r6, r5, #1
   151b8:	42a3      	cmp	r3, r4
   151ba:	d106      	bne.n	151ca <strncmp+0x22>
   151bc:	f06f 0401 	mvn.w	r4, #1
   151c0:	1b64      	subs	r4, r4, r5
   151c2:	4414      	add	r4, r2
   151c4:	42e0      	cmn	r0, r4
   151c6:	d102      	bne.n	151ce <strncmp+0x26>
   151c8:	461c      	mov	r4, r3
   151ca:	1b18      	subs	r0, r3, r4
   151cc:	bd70      	pop	{r4, r5, r6, pc}
   151ce:	4635      	mov	r5, r6
   151d0:	2b00      	cmp	r3, #0
   151d2:	d1ed      	bne.n	151b0 <strncmp+0x8>
   151d4:	e7f8      	b.n	151c8 <strncmp+0x20>
   151d6:	4610      	mov	r0, r2
   151d8:	bd70      	pop	{r4, r5, r6, pc}

000151da <match>:
   151da:	b530      	push	{r4, r5, lr}
   151dc:	6803      	ldr	r3, [r0, #0]
   151de:	f811 4b01 	ldrb.w	r4, [r1], #1
   151e2:	3301      	adds	r3, #1
   151e4:	b14c      	cbz	r4, 151fa <match+0x20>
   151e6:	781a      	ldrb	r2, [r3, #0]
   151e8:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
   151ec:	2d19      	cmp	r5, #25
   151ee:	bf98      	it	ls
   151f0:	3220      	addls	r2, #32
   151f2:	42a2      	cmp	r2, r4
   151f4:	d0f3      	beq.n	151de <match+0x4>
   151f6:	2000      	movs	r0, #0
   151f8:	bd30      	pop	{r4, r5, pc}
   151fa:	6003      	str	r3, [r0, #0]
   151fc:	2001      	movs	r0, #1
   151fe:	bd30      	pop	{r4, r5, pc}

00015200 <sulp>:
   15200:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15204:	460f      	mov	r7, r1
   15206:	4690      	mov	r8, r2
   15208:	f002 ffaa 	bl	18160 <__ulp>
   1520c:	4604      	mov	r4, r0
   1520e:	460d      	mov	r5, r1
   15210:	f1b8 0f00 	cmp.w	r8, #0
   15214:	d011      	beq.n	1523a <sulp+0x3a>
   15216:	f3c7 530a 	ubfx	r3, r7, #20, #11
   1521a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   1521e:	2b00      	cmp	r3, #0
   15220:	dd0b      	ble.n	1523a <sulp+0x3a>
   15222:	051b      	lsls	r3, r3, #20
   15224:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
   15228:	2400      	movs	r4, #0
   1522a:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
   1522e:	4622      	mov	r2, r4
   15230:	462b      	mov	r3, r5
   15232:	f7fc faf3 	bl	1181c <__aeabi_dmul>
   15236:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1523a:	4620      	mov	r0, r4
   1523c:	4629      	mov	r1, r5
   1523e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15242:	0000      	movs	r0, r0
   15244:	0000      	movs	r0, r0
	...

00015248 <_strtod_r>:
   15248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   1524c:	2300      	movs	r3, #0
   1524e:	b09f      	sub	sp, #124	; 0x7c
   15250:	931a      	str	r3, [sp, #104]	; 0x68
   15252:	4682      	mov	r10, r0
   15254:	460b      	mov	r3, r1
   15256:	9103      	str	r1, [sp, #12]
   15258:	9215      	str	r2, [sp, #84]	; 0x54
   1525a:	f04f 0800 	mov.w	r8, #0
   1525e:	f04f 0900 	mov.w	r9, #0
   15262:	9319      	str	r3, [sp, #100]	; 0x64
   15264:	9b19      	ldr	r3, [sp, #100]	; 0x64
   15266:	781a      	ldrb	r2, [r3, #0]
   15268:	2a0d      	cmp	r2, #13
   1526a:	d805      	bhi.n	15278 <_strtod_r+0x30>
   1526c:	2a09      	cmp	r2, #9
   1526e:	d213      	bcs.n	15298 <_strtod_r+0x50>
   15270:	2a00      	cmp	r2, #0
   15272:	f000 81b7 	beq.w	155e4 <_strtod_r+0x39c>
   15276:	e011      	b.n	1529c <_strtod_r+0x54>
   15278:	2a2b      	cmp	r2, #43	; 0x2b
   1527a:	d006      	beq.n	1528a <_strtod_r+0x42>
   1527c:	2a2d      	cmp	r2, #45	; 0x2d
   1527e:	d002      	beq.n	15286 <_strtod_r+0x3e>
   15280:	2a20      	cmp	r2, #32
   15282:	d10b      	bne.n	1529c <_strtod_r+0x54>
   15284:	e008      	b.n	15298 <_strtod_r+0x50>
   15286:	2201      	movs	r2, #1
   15288:	e000      	b.n	1528c <_strtod_r+0x44>
   1528a:	2200      	movs	r2, #0
   1528c:	9209      	str	r2, [sp, #36]	; 0x24
   1528e:	1c5a      	adds	r2, r3, #1
   15290:	9219      	str	r2, [sp, #100]	; 0x64
   15292:	785b      	ldrb	r3, [r3, #1]
   15294:	b923      	cbnz	r3, 152a0 <_strtod_r+0x58>
   15296:	e1a5      	b.n	155e4 <_strtod_r+0x39c>
   15298:	3301      	adds	r3, #1
   1529a:	e7e2      	b.n	15262 <_strtod_r+0x1a>
   1529c:	2300      	movs	r3, #0
   1529e:	9309      	str	r3, [sp, #36]	; 0x24
   152a0:	9c19      	ldr	r4, [sp, #100]	; 0x64
   152a2:	7823      	ldrb	r3, [r4, #0]
   152a4:	2b30      	cmp	r3, #48	; 0x30
   152a6:	d15c      	bne.n	15362 <_strtod_r+0x11a>
   152a8:	7863      	ldrb	r3, [r4, #1]
   152aa:	2b58      	cmp	r3, #88	; 0x58
   152ac:	d001      	beq.n	152b2 <_strtod_r+0x6a>
   152ae:	2b78      	cmp	r3, #120	; 0x78
   152b0:	d14c      	bne.n	1534c <_strtod_r+0x104>
   152b2:	ab1a      	add	r3, sp, #104	; 0x68
   152b4:	9300      	str	r3, [sp, #0]
   152b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   152b8:	4650      	mov	r0, r10
   152ba:	9301      	str	r3, [sp, #4]
   152bc:	a919      	add	r1, sp, #100	; 0x64
   152be:	4aae      	ldr	r2, [pc, #696]	; (15578 <_strtod_r+0x330>)
   152c0:	ab1b      	add	r3, sp, #108	; 0x6c
   152c2:	f002 f94a 	bl	1755a <__gethex>
   152c6:	f010 0607 	ands.w	r6, r0, #7
   152ca:	4605      	mov	r5, r0
   152cc:	f000 85a5 	beq.w	15e1a <_strtod_r+0xbd2>
   152d0:	2e06      	cmp	r6, #6
   152d2:	d105      	bne.n	152e0 <_strtod_r+0x98>
   152d4:	3401      	adds	r4, #1
   152d6:	2300      	movs	r3, #0
   152d8:	9419      	str	r4, [sp, #100]	; 0x64
   152da:	9309      	str	r3, [sp, #36]	; 0x24
   152dc:	f000 bd9d 	b.w	15e1a <_strtod_r+0xbd2>
   152e0:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   152e2:	b13a      	cbz	r2, 152f4 <_strtod_r+0xac>
   152e4:	a81c      	add	r0, sp, #112	; 0x70
   152e6:	2135      	movs	r1, #53	; 0x35
   152e8:	f003 f827 	bl	1833a <__copybits>
   152ec:	4650      	mov	r0, r10
   152ee:	991a      	ldr	r1, [sp, #104]	; 0x68
   152f0:	f002 fc9f 	bl	17c32 <_Bfree>
   152f4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   152f6:	2e06      	cmp	r6, #6
   152f8:	d821      	bhi.n	1533e <_strtod_r+0xf6>
   152fa:	e8df f006 	tbb	[pc, r6]
   152fe:	0d04      	.short	0x0d04
   15300:	0d1c1708 	.word	0x0d1c1708
   15304:	04          	.byte	0x04
   15305:	00          	.byte	0x00
   15306:	f04f 0900 	mov.w	r9, #0
   1530a:	46c8      	mov	r8, r9
   1530c:	e017      	b.n	1533e <_strtod_r+0xf6>
   1530e:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
   15312:	f8dd 9074 	ldr.w	r9, [sp, #116]	; 0x74
   15316:	e012      	b.n	1533e <_strtod_r+0xf6>
   15318:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   1531a:	f202 4233 	addw	r2, r2, #1075	; 0x433
   1531e:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   15322:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
   15326:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
   1532a:	e008      	b.n	1533e <_strtod_r+0xf6>
   1532c:	f8df 924c 	ldr.w	r9, [pc, #588]	; 1557c <_strtod_r+0x334>
   15330:	f04f 0800 	mov.w	r8, #0
   15334:	e003      	b.n	1533e <_strtod_r+0xf6>
   15336:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
   1533a:	f04f 38ff 	mov.w	r8, #4294967295
   1533e:	0729      	lsls	r1, r5, #28
   15340:	f140 856b 	bpl.w	15e1a <_strtod_r+0xbd2>
   15344:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
   15348:	f000 bd67 	b.w	15e1a <_strtod_r+0xbd2>
   1534c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1534e:	1c5a      	adds	r2, r3, #1
   15350:	9219      	str	r2, [sp, #100]	; 0x64
   15352:	785b      	ldrb	r3, [r3, #1]
   15354:	2b30      	cmp	r3, #48	; 0x30
   15356:	d0f9      	beq.n	1534c <_strtod_r+0x104>
   15358:	2b00      	cmp	r3, #0
   1535a:	f000 855e 	beq.w	15e1a <_strtod_r+0xbd2>
   1535e:	2301      	movs	r3, #1
   15360:	e000      	b.n	15364 <_strtod_r+0x11c>
   15362:	2300      	movs	r3, #0
   15364:	2600      	movs	r6, #0
   15366:	46b3      	mov	r11, r6
   15368:	4635      	mov	r5, r6
   1536a:	9304      	str	r3, [sp, #16]
   1536c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1536e:	9307      	str	r3, [sp, #28]
   15370:	9c19      	ldr	r4, [sp, #100]	; 0x64
   15372:	7827      	ldrb	r7, [r4, #0]
   15374:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
   15378:	b2da      	uxtb	r2, r3
   1537a:	2a09      	cmp	r2, #9
   1537c:	d80c      	bhi.n	15398 <_strtod_r+0x150>
   1537e:	2d08      	cmp	r5, #8
   15380:	f04f 020a 	mov.w	r2, #10
   15384:	f104 0401 	add.w	r4, r4, #1
   15388:	bfd4      	ite	le
   1538a:	fb02 3b0b 	mlale	r11, r2, r11, r3
   1538e:	fb02 3606 	mlagt	r6, r2, r6, r3
   15392:	3501      	adds	r5, #1
   15394:	9419      	str	r4, [sp, #100]	; 0x64
   15396:	e7eb      	b.n	15370 <_strtod_r+0x128>
   15398:	4650      	mov	r0, r10
   1539a:	f7fe f8a3 	bl	134e4 <_localeconv_r>
   1539e:	6801      	ldr	r1, [r0, #0]
   153a0:	4650      	mov	r0, r10
   153a2:	9105      	str	r1, [sp, #20]
   153a4:	f7fe f89e 	bl	134e4 <_localeconv_r>
   153a8:	6800      	ldr	r0, [r0, #0]
   153aa:	f7ff fef5 	bl	15198 <strlen>
   153ae:	9905      	ldr	r1, [sp, #20]
   153b0:	4602      	mov	r2, r0
   153b2:	4620      	mov	r0, r4
   153b4:	f7ff fef8 	bl	151a8 <strncmp>
   153b8:	b128      	cbz	r0, 153c6 <_strtod_r+0x17e>
   153ba:	2000      	movs	r0, #0
   153bc:	463b      	mov	r3, r7
   153be:	462c      	mov	r4, r5
   153c0:	4602      	mov	r2, r0
   153c2:	4607      	mov	r7, r0
   153c4:	e057      	b.n	15476 <_strtod_r+0x22e>
   153c6:	9005      	str	r0, [sp, #20]
   153c8:	4650      	mov	r0, r10
   153ca:	f7fe f88b 	bl	134e4 <_localeconv_r>
   153ce:	6800      	ldr	r0, [r0, #0]
   153d0:	f7ff fee2 	bl	15198 <strlen>
   153d4:	9b19      	ldr	r3, [sp, #100]	; 0x64
   153d6:	9905      	ldr	r1, [sp, #20]
   153d8:	181a      	adds	r2, r3, r0
   153da:	9219      	str	r2, [sp, #100]	; 0x64
   153dc:	5c1b      	ldrb	r3, [r3, r0]
   153de:	2d00      	cmp	r5, #0
   153e0:	d141      	bne.n	15466 <_strtod_r+0x21e>
   153e2:	4628      	mov	r0, r5
   153e4:	2b30      	cmp	r3, #48	; 0x30
   153e6:	d105      	bne.n	153f4 <_strtod_r+0x1ac>
   153e8:	9b19      	ldr	r3, [sp, #100]	; 0x64
   153ea:	3001      	adds	r0, #1
   153ec:	1c5a      	adds	r2, r3, #1
   153ee:	9219      	str	r2, [sp, #100]	; 0x64
   153f0:	785b      	ldrb	r3, [r3, #1]
   153f2:	e7f7      	b.n	153e4 <_strtod_r+0x19c>
   153f4:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
   153f8:	2a08      	cmp	r2, #8
   153fa:	d842      	bhi.n	15482 <_strtod_r+0x23a>
   153fc:	9a19      	ldr	r2, [sp, #100]	; 0x64
   153fe:	9207      	str	r2, [sp, #28]
   15400:	4602      	mov	r2, r0
   15402:	2000      	movs	r0, #0
   15404:	4604      	mov	r4, r0
   15406:	3b30      	subs	r3, #48	; 0x30
   15408:	f100 0101 	add.w	r1, r0, #1
   1540c:	d025      	beq.n	1545a <_strtod_r+0x212>
   1540e:	440a      	add	r2, r1
   15410:	4621      	mov	r1, r4
   15412:	1907      	adds	r7, r0, r4
   15414:	42b9      	cmp	r1, r7
   15416:	d011      	beq.n	1543c <_strtod_r+0x1f4>
   15418:	3101      	adds	r1, #1
   1541a:	f101 3eff 	add.w	lr, r1, #4294967295
   1541e:	f1be 0f08 	cmp.w	lr, #8
   15422:	dc04      	bgt.n	1542e <_strtod_r+0x1e6>
   15424:	f04f 0e0a 	mov.w	lr, #10
   15428:	fb0e fb0b 	mul.w	r11, lr, r11
   1542c:	e7f2      	b.n	15414 <_strtod_r+0x1cc>
   1542e:	2910      	cmp	r1, #16
   15430:	bfdc      	itt	le
   15432:	f04f 0e0a 	movle.w	lr, #10
   15436:	fb0e f606 	mulle.w	r6, lr, r6
   1543a:	e7eb      	b.n	15414 <_strtod_r+0x1cc>
   1543c:	4420      	add	r0, r4
   1543e:	2808      	cmp	r0, #8
   15440:	f100 0401 	add.w	r4, r0, #1
   15444:	dc03      	bgt.n	1544e <_strtod_r+0x206>
   15446:	210a      	movs	r1, #10
   15448:	fb01 3b0b 	mla	r11, r1, r11, r3
   1544c:	e004      	b.n	15458 <_strtod_r+0x210>
   1544e:	2c10      	cmp	r4, #16
   15450:	bfdc      	itt	le
   15452:	210a      	movle	r1, #10
   15454:	fb01 3606 	mlale	r6, r1, r6, r3
   15458:	2100      	movs	r1, #0
   1545a:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1545c:	1c58      	adds	r0, r3, #1
   1545e:	9019      	str	r0, [sp, #100]	; 0x64
   15460:	785b      	ldrb	r3, [r3, #1]
   15462:	4608      	mov	r0, r1
   15464:	e002      	b.n	1546c <_strtod_r+0x224>
   15466:	462c      	mov	r4, r5
   15468:	4608      	mov	r0, r1
   1546a:	460a      	mov	r2, r1
   1546c:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
   15470:	2909      	cmp	r1, #9
   15472:	d9c8      	bls.n	15406 <_strtod_r+0x1be>
   15474:	2701      	movs	r7, #1
   15476:	2b65      	cmp	r3, #101	; 0x65
   15478:	d001      	beq.n	1547e <_strtod_r+0x236>
   1547a:	2b45      	cmp	r3, #69	; 0x45
   1547c:	d164      	bne.n	15548 <_strtod_r+0x300>
   1547e:	b96c      	cbnz	r4, 1549c <_strtod_r+0x254>
   15480:	e004      	b.n	1548c <_strtod_r+0x244>
   15482:	2b65      	cmp	r3, #101	; 0x65
   15484:	f040 84d7 	bne.w	15e36 <_strtod_r+0xbee>
   15488:	2200      	movs	r2, #0
   1548a:	2701      	movs	r7, #1
   1548c:	b928      	cbnz	r0, 1549a <_strtod_r+0x252>
   1548e:	9b04      	ldr	r3, [sp, #16]
   15490:	2b00      	cmp	r3, #0
   15492:	f000 80a7 	beq.w	155e4 <_strtod_r+0x39c>
   15496:	4604      	mov	r4, r0
   15498:	e000      	b.n	1549c <_strtod_r+0x254>
   1549a:	2400      	movs	r4, #0
   1549c:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1549e:	9303      	str	r3, [sp, #12]
   154a0:	3301      	adds	r3, #1
   154a2:	9319      	str	r3, [sp, #100]	; 0x64
   154a4:	9b03      	ldr	r3, [sp, #12]
   154a6:	785b      	ldrb	r3, [r3, #1]
   154a8:	2b2b      	cmp	r3, #43	; 0x2b
   154aa:	d007      	beq.n	154bc <_strtod_r+0x274>
   154ac:	2b2d      	cmp	r3, #45	; 0x2d
   154ae:	d002      	beq.n	154b6 <_strtod_r+0x26e>
   154b0:	f04f 0c00 	mov.w	r12, #0
   154b4:	e009      	b.n	154ca <_strtod_r+0x282>
   154b6:	f04f 0c01 	mov.w	r12, #1
   154ba:	e001      	b.n	154c0 <_strtod_r+0x278>
   154bc:	f04f 0c00 	mov.w	r12, #0
   154c0:	9b03      	ldr	r3, [sp, #12]
   154c2:	3302      	adds	r3, #2
   154c4:	9319      	str	r3, [sp, #100]	; 0x64
   154c6:	9b03      	ldr	r3, [sp, #12]
   154c8:	789b      	ldrb	r3, [r3, #2]
   154ca:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
   154ce:	2909      	cmp	r1, #9
   154d0:	d838      	bhi.n	15544 <_strtod_r+0x2fc>
   154d2:	4619      	mov	r1, r3
   154d4:	2930      	cmp	r1, #48	; 0x30
   154d6:	d104      	bne.n	154e2 <_strtod_r+0x29a>
   154d8:	9b19      	ldr	r3, [sp, #100]	; 0x64
   154da:	1c59      	adds	r1, r3, #1
   154dc:	9119      	str	r1, [sp, #100]	; 0x64
   154de:	7859      	ldrb	r1, [r3, #1]
   154e0:	e7f8      	b.n	154d4 <_strtod_r+0x28c>
   154e2:	f1a1 0e31 	sub.w	lr, r1, #49	; 0x31
   154e6:	f1be 0f08 	cmp.w	lr, #8
   154ea:	460b      	mov	r3, r1
   154ec:	d82c      	bhi.n	15548 <_strtod_r+0x300>
   154ee:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
   154f2:	9305      	str	r3, [sp, #20]
   154f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
   154f6:	9306      	str	r3, [sp, #24]
   154f8:	9b19      	ldr	r3, [sp, #100]	; 0x64
   154fa:	f103 0e01 	add.w	lr, r3, #1
   154fe:	f8cd e064 	str.w	lr, [sp, #100]	; 0x64
   15502:	785b      	ldrb	r3, [r3, #1]
   15504:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
   15508:	2909      	cmp	r1, #9
   1550a:	d808      	bhi.n	1551e <_strtod_r+0x2d6>
   1550c:	9905      	ldr	r1, [sp, #20]
   1550e:	f04f 0e0a 	mov.w	lr, #10
   15512:	fb0e 3101 	mla	r1, lr, r1, r3
   15516:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
   1551a:	9305      	str	r3, [sp, #20]
   1551c:	e7ec      	b.n	154f8 <_strtod_r+0x2b0>
   1551e:	9906      	ldr	r1, [sp, #24]
   15520:	ebc1 0e0e 	rsb	lr, r1, lr
   15524:	f1be 0f08 	cmp.w	lr, #8
   15528:	f644 6e1f 	movw	lr, #19999	; 0x4e1f
   1552c:	dc04      	bgt.n	15538 <_strtod_r+0x2f0>
   1552e:	9905      	ldr	r1, [sp, #20]
   15530:	4571      	cmp	r1, lr
   15532:	bfa8      	it	ge
   15534:	4671      	movge	r1, lr
   15536:	e000      	b.n	1553a <_strtod_r+0x2f2>
   15538:	4671      	mov	r1, lr
   1553a:	f1bc 0f00 	cmp.w	r12, #0
   1553e:	d004      	beq.n	1554a <_strtod_r+0x302>
   15540:	4249      	negs	r1, r1
   15542:	e002      	b.n	1554a <_strtod_r+0x302>
   15544:	9903      	ldr	r1, [sp, #12]
   15546:	9119      	str	r1, [sp, #100]	; 0x64
   15548:	2100      	movs	r1, #0
   1554a:	2c00      	cmp	r4, #0
   1554c:	d154      	bne.n	155f8 <_strtod_r+0x3b0>
   1554e:	2800      	cmp	r0, #0
   15550:	f040 8463 	bne.w	15e1a <_strtod_r+0xbd2>
   15554:	9a04      	ldr	r2, [sp, #16]
   15556:	2a00      	cmp	r2, #0
   15558:	f040 845f 	bne.w	15e1a <_strtod_r+0xbd2>
   1555c:	2f00      	cmp	r7, #0
   1555e:	d141      	bne.n	155e4 <_strtod_r+0x39c>
   15560:	2b4e      	cmp	r3, #78	; 0x4e
   15562:	d020      	beq.n	155a6 <_strtod_r+0x35e>
   15564:	dc02      	bgt.n	1556c <_strtod_r+0x324>
   15566:	2b49      	cmp	r3, #73	; 0x49
   15568:	d00a      	beq.n	15580 <_strtod_r+0x338>
   1556a:	e03b      	b.n	155e4 <_strtod_r+0x39c>
   1556c:	2b69      	cmp	r3, #105	; 0x69
   1556e:	d007      	beq.n	15580 <_strtod_r+0x338>
   15570:	2b6e      	cmp	r3, #110	; 0x6e
   15572:	d018      	beq.n	155a6 <_strtod_r+0x35e>
   15574:	e036      	b.n	155e4 <_strtod_r+0x39c>
   15576:	bf00      	nop
   15578:	0001c7e8 	.word	0x0001c7e8
   1557c:	7ff00000 	.word	0x7ff00000
   15580:	a819      	add	r0, sp, #100	; 0x64
   15582:	49aa      	ldr	r1, [pc, #680]	; (1582c <_strtod_r+0x5e4>)
   15584:	f7ff fe29 	bl	151da <match>
   15588:	b360      	cbz	r0, 155e4 <_strtod_r+0x39c>
   1558a:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1558c:	a819      	add	r0, sp, #100	; 0x64
   1558e:	3b01      	subs	r3, #1
   15590:	49a7      	ldr	r1, [pc, #668]	; (15830 <_strtod_r+0x5e8>)
   15592:	9319      	str	r3, [sp, #100]	; 0x64
   15594:	f7ff fe21 	bl	151da <match>
   15598:	b910      	cbnz	r0, 155a0 <_strtod_r+0x358>
   1559a:	9b19      	ldr	r3, [sp, #100]	; 0x64
   1559c:	3301      	adds	r3, #1
   1559e:	9319      	str	r3, [sp, #100]	; 0x64
   155a0:	f8df 92a4 	ldr.w	r9, [pc, #676]	; 15848 <_strtod_r+0x600>
   155a4:	e01a      	b.n	155dc <_strtod_r+0x394>
   155a6:	a819      	add	r0, sp, #100	; 0x64
   155a8:	49a2      	ldr	r1, [pc, #648]	; (15834 <_strtod_r+0x5ec>)
   155aa:	f7ff fe16 	bl	151da <match>
   155ae:	b1c8      	cbz	r0, 155e4 <_strtod_r+0x39c>
   155b0:	9b19      	ldr	r3, [sp, #100]	; 0x64
   155b2:	781b      	ldrb	r3, [r3, #0]
   155b4:	2b28      	cmp	r3, #40	; 0x28
   155b6:	d10f      	bne.n	155d8 <_strtod_r+0x390>
   155b8:	a819      	add	r0, sp, #100	; 0x64
   155ba:	499f      	ldr	r1, [pc, #636]	; (15838 <_strtod_r+0x5f0>)
   155bc:	aa1c      	add	r2, sp, #112	; 0x70
   155be:	f002 fa03 	bl	179c8 <__hexnan>
   155c2:	2805      	cmp	r0, #5
   155c4:	d108      	bne.n	155d8 <_strtod_r+0x390>
   155c6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   155c8:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
   155cc:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
   155d0:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
   155d4:	f000 bc21 	b.w	15e1a <_strtod_r+0xbd2>
   155d8:	f8df 9270 	ldr.w	r9, [pc, #624]	; 1584c <_strtod_r+0x604>
   155dc:	f04f 0800 	mov.w	r8, #0
   155e0:	f000 bc1b 	b.w	15e1a <_strtod_r+0xbd2>
   155e4:	9b03      	ldr	r3, [sp, #12]
   155e6:	9319      	str	r3, [sp, #100]	; 0x64
   155e8:	9b15      	ldr	r3, [sp, #84]	; 0x54
   155ea:	2b00      	cmp	r3, #0
   155ec:	f000 8420 	beq.w	15e30 <_strtod_r+0xbe8>
   155f0:	2300      	movs	r3, #0
   155f2:	9309      	str	r3, [sp, #36]	; 0x24
   155f4:	f000 bc13 	b.w	15e1e <_strtod_r+0xbd6>
   155f8:	1a8b      	subs	r3, r1, r2
   155fa:	9306      	str	r3, [sp, #24]
   155fc:	462b      	mov	r3, r5
   155fe:	2d00      	cmp	r5, #0
   15600:	bf08      	it	eq
   15602:	4623      	moveq	r3, r4
   15604:	4658      	mov	r0, r11
   15606:	2c10      	cmp	r4, #16
   15608:	4625      	mov	r5, r4
   1560a:	9303      	str	r3, [sp, #12]
   1560c:	bfa8      	it	ge
   1560e:	2510      	movge	r5, #16
   15610:	f7fc f88e 	bl	11730 <__aeabi_ui2d>
   15614:	2d09      	cmp	r5, #9
   15616:	4680      	mov	r8, r0
   15618:	4689      	mov	r9, r1
   1561a:	dd13      	ble.n	15644 <_strtod_r+0x3fc>
   1561c:	4b87      	ldr	r3, [pc, #540]	; (1583c <_strtod_r+0x5f4>)
   1561e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
   15622:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
   15626:	f7fc f8f9 	bl	1181c <__aeabi_dmul>
   1562a:	4680      	mov	r8, r0
   1562c:	4630      	mov	r0, r6
   1562e:	4689      	mov	r9, r1
   15630:	f7fc f87e 	bl	11730 <__aeabi_ui2d>
   15634:	4602      	mov	r2, r0
   15636:	460b      	mov	r3, r1
   15638:	4640      	mov	r0, r8
   1563a:	4649      	mov	r1, r9
   1563c:	f7fb ff3c 	bl	114b8 <__adddf3>
   15640:	4680      	mov	r8, r0
   15642:	4689      	mov	r9, r1
   15644:	2c0f      	cmp	r4, #15
   15646:	dc36      	bgt.n	156b6 <_strtod_r+0x46e>
   15648:	9b06      	ldr	r3, [sp, #24]
   1564a:	2b00      	cmp	r3, #0
   1564c:	f000 83e5 	beq.w	15e1a <_strtod_r+0xbd2>
   15650:	dd24      	ble.n	1569c <_strtod_r+0x454>
   15652:	2b16      	cmp	r3, #22
   15654:	dc07      	bgt.n	15666 <_strtod_r+0x41e>
   15656:	4a79      	ldr	r2, [pc, #484]	; (1583c <_strtod_r+0x5f4>)
   15658:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
   1565c:	e9d2 0100 	ldrd	r0, r1, [r2]
   15660:	464b      	mov	r3, r9
   15662:	4642      	mov	r2, r8
   15664:	e015      	b.n	15692 <_strtod_r+0x44a>
   15666:	9a06      	ldr	r2, [sp, #24]
   15668:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
   1566c:	429a      	cmp	r2, r3
   1566e:	dc22      	bgt.n	156b6 <_strtod_r+0x46e>
   15670:	4d72      	ldr	r5, [pc, #456]	; (1583c <_strtod_r+0x5f4>)
   15672:	f1c4 040f 	rsb	r4, r4, #15
   15676:	eb05 03c4 	add.w	r3, r5, r4, lsl #3
   1567a:	e9d3 0100 	ldrd	r0, r1, [r3]
   1567e:	4642      	mov	r2, r8
   15680:	464b      	mov	r3, r9
   15682:	f7fc f8cb 	bl	1181c <__aeabi_dmul>
   15686:	9b06      	ldr	r3, [sp, #24]
   15688:	1b1c      	subs	r4, r3, r4
   1568a:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
   1568e:	e9d5 2300 	ldrd	r2, r3, [r5]
   15692:	f7fc f8c3 	bl	1181c <__aeabi_dmul>
   15696:	4680      	mov	r8, r0
   15698:	4689      	mov	r9, r1
   1569a:	e3be      	b.n	15e1a <_strtod_r+0xbd2>
   1569c:	9b06      	ldr	r3, [sp, #24]
   1569e:	f113 0f16 	cmn.w	r3, #22
   156a2:	db08      	blt.n	156b6 <_strtod_r+0x46e>
   156a4:	4a65      	ldr	r2, [pc, #404]	; (1583c <_strtod_r+0x5f4>)
   156a6:	4640      	mov	r0, r8
   156a8:	eba2 02c3 	sub.w	r2, r2, r3, lsl #3
   156ac:	4649      	mov	r1, r9
   156ae:	ca0c      	ldmia	r2, {r2, r3}
   156b0:	f7fc f9de 	bl	11a70 <__aeabi_ddiv>
   156b4:	e7ef      	b.n	15696 <_strtod_r+0x44e>
   156b6:	9b06      	ldr	r3, [sp, #24]
   156b8:	1b65      	subs	r5, r4, r5
   156ba:	441d      	add	r5, r3
   156bc:	2d00      	cmp	r5, #0
   156be:	dd58      	ble.n	15772 <_strtod_r+0x52a>
   156c0:	f015 020f 	ands.w	r2, r5, #15
   156c4:	d00a      	beq.n	156dc <_strtod_r+0x494>
   156c6:	4b5d      	ldr	r3, [pc, #372]	; (1583c <_strtod_r+0x5f4>)
   156c8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   156cc:	e9d3 0100 	ldrd	r0, r1, [r3]
   156d0:	4642      	mov	r2, r8
   156d2:	464b      	mov	r3, r9
   156d4:	f7fc f8a2 	bl	1181c <__aeabi_dmul>
   156d8:	4680      	mov	r8, r0
   156da:	4689      	mov	r9, r1
   156dc:	f035 050f 	bics.w	r5, r5, #15
   156e0:	f000 80ba 	beq.w	15858 <_strtod_r+0x610>
   156e4:	f5b5 7f9a 	cmp.w	r5, #308	; 0x134
   156e8:	dd0f      	ble.n	1570a <_strtod_r+0x4c2>
   156ea:	f04f 0b00 	mov.w	r11, #0
   156ee:	f8cd b00c 	str.w	r11, [sp, #12]
   156f2:	f8cd b01c 	str.w	r11, [sp, #28]
   156f6:	f8cd b014 	str.w	r11, [sp, #20]
   156fa:	2322      	movs	r3, #34	; 0x22
   156fc:	f8ca 3000 	str.w	r3, [r10]
   15700:	f8df 9144 	ldr.w	r9, [pc, #324]	; 15848 <_strtod_r+0x600>
   15704:	f04f 0800 	mov.w	r8, #0
   15708:	e183      	b.n	15a12 <_strtod_r+0x7ca>
   1570a:	4649      	mov	r1, r9
   1570c:	f8df 9140 	ldr.w	r9, [pc, #320]	; 15850 <_strtod_r+0x608>
   15710:	4640      	mov	r0, r8
   15712:	464e      	mov	r6, r9
   15714:	112d      	asrs	r5, r5, #4
   15716:	2700      	movs	r7, #0
   15718:	2d01      	cmp	r5, #1
   1571a:	dd0a      	ble.n	15732 <_strtod_r+0x4ea>
   1571c:	07ea      	lsls	r2, r5, #31
   1571e:	d503      	bpl.n	15728 <_strtod_r+0x4e0>
   15720:	e9d9 2300 	ldrd	r2, r3, [r9]
   15724:	f7fc f87a 	bl	1181c <__aeabi_dmul>
   15728:	3701      	adds	r7, #1
   1572a:	106d      	asrs	r5, r5, #1
   1572c:	f109 0908 	add.w	r9, r9, #8
   15730:	e7f2      	b.n	15718 <_strtod_r+0x4d0>
   15732:	4680      	mov	r8, r0
   15734:	f1a1 7954 	sub.w	r9, r1, #55574528	; 0x3500000
   15738:	eb06 06c7 	add.w	r6, r6, r7, lsl #3
   1573c:	4642      	mov	r2, r8
   1573e:	e9d6 0100 	ldrd	r0, r1, [r6]
   15742:	464b      	mov	r3, r9
   15744:	f7fc f86a 	bl	1181c <__aeabi_dmul>
   15748:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   1574c:	4689      	mov	r9, r1
   1574e:	460a      	mov	r2, r1
   15750:	0d1b      	lsrs	r3, r3, #20
   15752:	493b      	ldr	r1, [pc, #236]	; (15840 <_strtod_r+0x5f8>)
   15754:	051b      	lsls	r3, r3, #20
   15756:	428b      	cmp	r3, r1
   15758:	4680      	mov	r8, r0
   1575a:	d8c6      	bhi.n	156ea <_strtod_r+0x4a2>
   1575c:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
   15760:	428b      	cmp	r3, r1
   15762:	bf86      	itte	hi
   15764:	f8df 90ec 	ldrhi.w	r9, [pc, #236]	; 15854 <_strtod_r+0x60c>
   15768:	f04f 38ff 	movhi.w	r8, #4294967295
   1576c:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
   15770:	e072      	b.n	15858 <_strtod_r+0x610>
   15772:	d071      	beq.n	15858 <_strtod_r+0x610>
   15774:	426d      	negs	r5, r5
   15776:	f015 020f 	ands.w	r2, r5, #15
   1577a:	d00a      	beq.n	15792 <_strtod_r+0x54a>
   1577c:	4b2f      	ldr	r3, [pc, #188]	; (1583c <_strtod_r+0x5f4>)
   1577e:	4640      	mov	r0, r8
   15780:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   15784:	4649      	mov	r1, r9
   15786:	e9d3 2300 	ldrd	r2, r3, [r3]
   1578a:	f7fc f971 	bl	11a70 <__aeabi_ddiv>
   1578e:	4680      	mov	r8, r0
   15790:	4689      	mov	r9, r1
   15792:	112d      	asrs	r5, r5, #4
   15794:	d060      	beq.n	15858 <_strtod_r+0x610>
   15796:	2d1f      	cmp	r5, #31
   15798:	dd08      	ble.n	157ac <_strtod_r+0x564>
   1579a:	f04f 0b00 	mov.w	r11, #0
   1579e:	f8cd b00c 	str.w	r11, [sp, #12]
   157a2:	f8cd b01c 	str.w	r11, [sp, #28]
   157a6:	f8cd b014 	str.w	r11, [sp, #20]
   157aa:	e12b      	b.n	15a04 <_strtod_r+0x7bc>
   157ac:	4640      	mov	r0, r8
   157ae:	4649      	mov	r1, r9
   157b0:	f015 0f10 	tst.w	r5, #16
   157b4:	bf0c      	ite	eq
   157b6:	2300      	moveq	r3, #0
   157b8:	236a      	movne	r3, #106	; 0x6a
   157ba:	4e22      	ldr	r6, [pc, #136]	; (15844 <_strtod_r+0x5fc>)
   157bc:	9304      	str	r3, [sp, #16]
   157be:	2d00      	cmp	r5, #0
   157c0:	dd08      	ble.n	157d4 <_strtod_r+0x58c>
   157c2:	07eb      	lsls	r3, r5, #31
   157c4:	d503      	bpl.n	157ce <_strtod_r+0x586>
   157c6:	e9d6 2300 	ldrd	r2, r3, [r6]
   157ca:	f7fc f827 	bl	1181c <__aeabi_dmul>
   157ce:	106d      	asrs	r5, r5, #1
   157d0:	3608      	adds	r6, #8
   157d2:	e7f4      	b.n	157be <_strtod_r+0x576>
   157d4:	9b04      	ldr	r3, [sp, #16]
   157d6:	4680      	mov	r8, r0
   157d8:	4689      	mov	r9, r1
   157da:	b1eb      	cbz	r3, 15818 <_strtod_r+0x5d0>
   157dc:	f3c1 530a 	ubfx	r3, r1, #20, #11
   157e0:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   157e4:	2b00      	cmp	r3, #0
   157e6:	460a      	mov	r2, r1
   157e8:	dd16      	ble.n	15818 <_strtod_r+0x5d0>
   157ea:	2b1f      	cmp	r3, #31
   157ec:	dd0e      	ble.n	1580c <_strtod_r+0x5c4>
   157ee:	2b34      	cmp	r3, #52	; 0x34
   157f0:	bfde      	ittt	le
   157f2:	3b20      	suble	r3, #32
   157f4:	f04f 31ff 	movle.w	r1, #4294967295
   157f8:	fa01 f303 	lslle.w	r3, r1, r3
   157fc:	f04f 0800 	mov.w	r8, #0
   15800:	bfcc      	ite	gt
   15802:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
   15806:	ea03 0902 	andle.w	r9, r3, r2
   1580a:	e005      	b.n	15818 <_strtod_r+0x5d0>
   1580c:	f04f 32ff 	mov.w	r2, #4294967295
   15810:	fa02 f303 	lsl.w	r3, r2, r3
   15814:	ea03 0800 	and.w	r8, r3, r0
   15818:	4640      	mov	r0, r8
   1581a:	4649      	mov	r1, r9
   1581c:	2200      	movs	r2, #0
   1581e:	2300      	movs	r3, #0
   15820:	f7fc fa64 	bl	11cec <__aeabi_dcmpeq>
   15824:	2800      	cmp	r0, #0
   15826:	d1b8      	bne.n	1579a <_strtod_r+0x552>
   15828:	e018      	b.n	1585c <_strtod_r+0x614>
   1582a:	bf00      	nop
   1582c:	0001c7fc 	.word	0x0001c7fc
   15830:	0001cd17 	.word	0x0001cd17
   15834:	0001b268 	.word	0x0001b268
   15838:	0001c828 	.word	0x0001c828
   1583c:	0001cac8 	.word	0x0001cac8
   15840:	7ca00000 	.word	0x7ca00000
   15844:	0001c800 	.word	0x0001c800
   15848:	7ff00000 	.word	0x7ff00000
   1584c:	fff80000 	.word	0xfff80000
   15850:	0001cb90 	.word	0x0001cb90
   15854:	7fefffff 	.word	0x7fefffff
   15858:	2300      	movs	r3, #0
   1585a:	9304      	str	r3, [sp, #16]
   1585c:	f8cd b000 	str.w	r11, [sp]
   15860:	4650      	mov	r0, r10
   15862:	9907      	ldr	r1, [sp, #28]
   15864:	9a03      	ldr	r2, [sp, #12]
   15866:	4623      	mov	r3, r4
   15868:	f002 fa38 	bl	17cdc <__s2b>
   1586c:	9007      	str	r0, [sp, #28]
   1586e:	2800      	cmp	r0, #0
   15870:	f43f af3b 	beq.w	156ea <_strtod_r+0x4a2>
   15874:	9a06      	ldr	r2, [sp, #24]
   15876:	9b06      	ldr	r3, [sp, #24]
   15878:	2a00      	cmp	r2, #0
   1587a:	f1c3 0300 	rsb	r3, r3, #0
   1587e:	f04f 0b00 	mov.w	r11, #0
   15882:	bfa8      	it	ge
   15884:	2300      	movge	r3, #0
   15886:	930e      	str	r3, [sp, #56]	; 0x38
   15888:	f8cd b00c 	str.w	r11, [sp, #12]
   1588c:	9b07      	ldr	r3, [sp, #28]
   1588e:	4650      	mov	r0, r10
   15890:	6859      	ldr	r1, [r3, #4]
   15892:	f002 f999 	bl	17bc8 <_Balloc>
   15896:	9005      	str	r0, [sp, #20]
   15898:	2800      	cmp	r0, #0
   1589a:	f43f af2e 	beq.w	156fa <_strtod_r+0x4b2>
   1589e:	9b07      	ldr	r3, [sp, #28]
   158a0:	300c      	adds	r0, #12
   158a2:	691a      	ldr	r2, [r3, #16]
   158a4:	9b07      	ldr	r3, [sp, #28]
   158a6:	3202      	adds	r2, #2
   158a8:	f103 010c 	add.w	r1, r3, #12
   158ac:	0092      	lsls	r2, r2, #2
   158ae:	f7fd feed 	bl	1368c <memcpy>
   158b2:	ab1b      	add	r3, sp, #108	; 0x6c
   158b4:	9300      	str	r3, [sp, #0]
   158b6:	ab1c      	add	r3, sp, #112	; 0x70
   158b8:	9301      	str	r3, [sp, #4]
   158ba:	4650      	mov	r0, r10
   158bc:	4642      	mov	r2, r8
   158be:	464b      	mov	r3, r9
   158c0:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
   158c4:	f002 fcbf 	bl	18246 <__d2b>
   158c8:	901a      	str	r0, [sp, #104]	; 0x68
   158ca:	2800      	cmp	r0, #0
   158cc:	f43f af15 	beq.w	156fa <_strtod_r+0x4b2>
   158d0:	4650      	mov	r0, r10
   158d2:	2101      	movs	r1, #1
   158d4:	f002 fa8f 	bl	17df6 <__i2b>
   158d8:	9003      	str	r0, [sp, #12]
   158da:	2800      	cmp	r0, #0
   158dc:	f43f af0d 	beq.w	156fa <_strtod_r+0x4b2>
   158e0:	9b06      	ldr	r3, [sp, #24]
   158e2:	9904      	ldr	r1, [sp, #16]
   158e4:	ea23 77e3 	bic.w	r7, r3, r3, asr #31
   158e8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   158ea:	9c1c      	ldr	r4, [sp, #112]	; 0x70
   158ec:	2b00      	cmp	r3, #0
   158ee:	bfaa      	itet	ge
   158f0:	9a0e      	ldrge	r2, [sp, #56]	; 0x38
   158f2:	1afa      	sublt	r2, r7, r3
   158f4:	18d6      	addge	r6, r2, r3
   158f6:	eba3 0301 	sub.w	r3, r3, r1
   158fa:	4423      	add	r3, r4
   158fc:	f46f 717f 	mvn.w	r1, #1020	; 0x3fc
   15900:	bfac      	ite	ge
   15902:	463a      	movge	r2, r7
   15904:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
   15906:	428b      	cmp	r3, r1
   15908:	f1c4 0436 	rsb	r4, r4, #54	; 0x36
   1590c:	f280 8086 	bge.w	15a1c <_strtod_r+0x7d4>
   15910:	1ac9      	subs	r1, r1, r3
   15912:	291f      	cmp	r1, #31
   15914:	eba4 0401 	sub.w	r4, r4, r1
   15918:	bfc8      	it	gt
   1591a:	49b3      	ldrgt	r1, [pc, #716]	; (15be8 <_strtod_r+0x9a0>)
   1591c:	f04f 0001 	mov.w	r0, #1
   15920:	bfd5      	itete	le
   15922:	fa00 f301 	lslle.w	r3, r0, r1
   15926:	1ac9      	subgt	r1, r1, r3
   15928:	9314      	strle	r3, [sp, #80]	; 0x50
   1592a:	fa00 f301 	lslgt.w	r3, r0, r1
   1592e:	bfd9      	ittee	le
   15930:	2300      	movle	r3, #0
   15932:	930f      	strle	r3, [sp, #60]	; 0x3c
   15934:	930f      	strgt	r3, [sp, #60]	; 0x3c
   15936:	9014      	strgt	r0, [sp, #80]	; 0x50
   15938:	1935      	adds	r5, r6, r4
   1593a:	9b04      	ldr	r3, [sp, #16]
   1593c:	42b5      	cmp	r5, r6
   1593e:	4414      	add	r4, r2
   15940:	441c      	add	r4, r3
   15942:	462b      	mov	r3, r5
   15944:	bfa8      	it	ge
   15946:	4633      	movge	r3, r6
   15948:	42a3      	cmp	r3, r4
   1594a:	bfa8      	it	ge
   1594c:	4623      	movge	r3, r4
   1594e:	2b00      	cmp	r3, #0
   15950:	bfc2      	ittt	gt
   15952:	1aed      	subgt	r5, r5, r3
   15954:	1ae4      	subgt	r4, r4, r3
   15956:	1af6      	subgt	r6, r6, r3
   15958:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   1595a:	2b00      	cmp	r3, #0
   1595c:	d163      	bne.n	15a26 <_strtod_r+0x7de>
   1595e:	2d00      	cmp	r5, #0
   15960:	dc7b      	bgt.n	15a5a <_strtod_r+0x812>
   15962:	2f00      	cmp	r7, #0
   15964:	f040 8083 	bne.w	15a6e <_strtod_r+0x826>
   15968:	2c00      	cmp	r4, #0
   1596a:	f300 808a 	bgt.w	15a82 <_strtod_r+0x83a>
   1596e:	2e00      	cmp	r6, #0
   15970:	f300 8091 	bgt.w	15a96 <_strtod_r+0x84e>
   15974:	4650      	mov	r0, r10
   15976:	991a      	ldr	r1, [sp, #104]	; 0x68
   15978:	9a05      	ldr	r2, [sp, #20]
   1597a:	f002 fb92 	bl	180a2 <__mdiff>
   1597e:	4683      	mov	r11, r0
   15980:	2800      	cmp	r0, #0
   15982:	f43f aeba 	beq.w	156fa <_strtod_r+0x4b2>
   15986:	68c3      	ldr	r3, [r0, #12]
   15988:	2400      	movs	r4, #0
   1598a:	60c4      	str	r4, [r0, #12]
   1598c:	9903      	ldr	r1, [sp, #12]
   1598e:	9308      	str	r3, [sp, #32]
   15990:	f002 fb6b 	bl	1806a <__mcmp>
   15994:	42a0      	cmp	r0, r4
   15996:	f280 808d 	bge.w	15ab4 <_strtod_r+0x86c>
   1599a:	9b08      	ldr	r3, [sp, #32]
   1599c:	2b00      	cmp	r3, #0
   1599e:	f040 8215 	bne.w	15dcc <_strtod_r+0xb84>
   159a2:	f1b8 0f00 	cmp.w	r8, #0
   159a6:	f040 8211 	bne.w	15dcc <_strtod_r+0xb84>
   159aa:	f3c9 0313 	ubfx	r3, r9, #0, #20
   159ae:	2b00      	cmp	r3, #0
   159b0:	f040 820c 	bne.w	15dcc <_strtod_r+0xb84>
   159b4:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   159b8:	0d1b      	lsrs	r3, r3, #20
   159ba:	051b      	lsls	r3, r3, #20
   159bc:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   159c0:	f240 8204 	bls.w	15dcc <_strtod_r+0xb84>
   159c4:	f8db 3014 	ldr.w	r3, [r11, #20]
   159c8:	2b00      	cmp	r3, #0
   159ca:	d06e      	beq.n	15aaa <_strtod_r+0x862>
   159cc:	4659      	mov	r1, r11
   159ce:	2201      	movs	r2, #1
   159d0:	4650      	mov	r0, r10
   159d2:	f002 faf7 	bl	17fc4 <__lshift>
   159d6:	9903      	ldr	r1, [sp, #12]
   159d8:	4683      	mov	r11, r0
   159da:	f002 fb46 	bl	1806a <__mcmp>
   159de:	2800      	cmp	r0, #0
   159e0:	f340 81f4 	ble.w	15dcc <_strtod_r+0xb84>
   159e4:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   159e8:	9a04      	ldr	r2, [sp, #16]
   159ea:	0d1b      	lsrs	r3, r3, #20
   159ec:	051b      	lsls	r3, r3, #20
   159ee:	2a00      	cmp	r2, #0
   159f0:	f000 808f 	beq.w	15b12 <_strtod_r+0x8ca>
   159f4:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
   159f8:	f300 808b 	bgt.w	15b12 <_strtod_r+0x8ca>
   159fc:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
   15a00:	f300 81e6 	bgt.w	15dd0 <_strtod_r+0xb88>
   15a04:	2322      	movs	r3, #34	; 0x22
   15a06:	f04f 0800 	mov.w	r8, #0
   15a0a:	f04f 0900 	mov.w	r9, #0
   15a0e:	f8ca 3000 	str.w	r3, [r10]
   15a12:	9b07      	ldr	r3, [sp, #28]
   15a14:	2b00      	cmp	r3, #0
   15a16:	f040 81ec 	bne.w	15df2 <_strtod_r+0xbaa>
   15a1a:	e1fe      	b.n	15e1a <_strtod_r+0xbd2>
   15a1c:	2300      	movs	r3, #0
   15a1e:	930f      	str	r3, [sp, #60]	; 0x3c
   15a20:	2301      	movs	r3, #1
   15a22:	9314      	str	r3, [sp, #80]	; 0x50
   15a24:	e788      	b.n	15938 <_strtod_r+0x6f0>
   15a26:	461a      	mov	r2, r3
   15a28:	4650      	mov	r0, r10
   15a2a:	9903      	ldr	r1, [sp, #12]
   15a2c:	f002 fa7c 	bl	17f28 <__pow5mult>
   15a30:	9003      	str	r0, [sp, #12]
   15a32:	4603      	mov	r3, r0
   15a34:	2800      	cmp	r0, #0
   15a36:	f43f ae60 	beq.w	156fa <_strtod_r+0x4b2>
   15a3a:	4650      	mov	r0, r10
   15a3c:	4619      	mov	r1, r3
   15a3e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   15a40:	f002 f9e2 	bl	17e08 <__multiply>
   15a44:	9008      	str	r0, [sp, #32]
   15a46:	2800      	cmp	r0, #0
   15a48:	f43f ae57 	beq.w	156fa <_strtod_r+0x4b2>
   15a4c:	4650      	mov	r0, r10
   15a4e:	991a      	ldr	r1, [sp, #104]	; 0x68
   15a50:	f002 f8ef 	bl	17c32 <_Bfree>
   15a54:	9b08      	ldr	r3, [sp, #32]
   15a56:	931a      	str	r3, [sp, #104]	; 0x68
   15a58:	e781      	b.n	1595e <_strtod_r+0x716>
   15a5a:	4650      	mov	r0, r10
   15a5c:	991a      	ldr	r1, [sp, #104]	; 0x68
   15a5e:	462a      	mov	r2, r5
   15a60:	f002 fab0 	bl	17fc4 <__lshift>
   15a64:	901a      	str	r0, [sp, #104]	; 0x68
   15a66:	2800      	cmp	r0, #0
   15a68:	f47f af7b 	bne.w	15962 <_strtod_r+0x71a>
   15a6c:	e645      	b.n	156fa <_strtod_r+0x4b2>
   15a6e:	4650      	mov	r0, r10
   15a70:	9905      	ldr	r1, [sp, #20]
   15a72:	463a      	mov	r2, r7
   15a74:	f002 fa58 	bl	17f28 <__pow5mult>
   15a78:	9005      	str	r0, [sp, #20]
   15a7a:	2800      	cmp	r0, #0
   15a7c:	f47f af74 	bne.w	15968 <_strtod_r+0x720>
   15a80:	e63b      	b.n	156fa <_strtod_r+0x4b2>
   15a82:	4650      	mov	r0, r10
   15a84:	9905      	ldr	r1, [sp, #20]
   15a86:	4622      	mov	r2, r4
   15a88:	f002 fa9c 	bl	17fc4 <__lshift>
   15a8c:	9005      	str	r0, [sp, #20]
   15a8e:	2800      	cmp	r0, #0
   15a90:	f47f af6d 	bne.w	1596e <_strtod_r+0x726>
   15a94:	e631      	b.n	156fa <_strtod_r+0x4b2>
   15a96:	4650      	mov	r0, r10
   15a98:	9903      	ldr	r1, [sp, #12]
   15a9a:	4632      	mov	r2, r6
   15a9c:	f002 fa92 	bl	17fc4 <__lshift>
   15aa0:	9003      	str	r0, [sp, #12]
   15aa2:	2800      	cmp	r0, #0
   15aa4:	f47f af66 	bne.w	15974 <_strtod_r+0x72c>
   15aa8:	e627      	b.n	156fa <_strtod_r+0x4b2>
   15aaa:	f8db 3010 	ldr.w	r3, [r11, #16]
   15aae:	2b01      	cmp	r3, #1
   15ab0:	dc8c      	bgt.n	159cc <_strtod_r+0x784>
   15ab2:	e18b      	b.n	15dcc <_strtod_r+0xb84>
   15ab4:	d162      	bne.n	15b7c <_strtod_r+0x934>
   15ab6:	9a08      	ldr	r2, [sp, #32]
   15ab8:	f3c9 0313 	ubfx	r3, r9, #0, #20
   15abc:	b322      	cbz	r2, 15b08 <_strtod_r+0x8c0>
   15abe:	494b      	ldr	r1, [pc, #300]	; (15bec <_strtod_r+0x9a4>)
   15ac0:	464a      	mov	r2, r9
   15ac2:	428b      	cmp	r3, r1
   15ac4:	d12e      	bne.n	15b24 <_strtod_r+0x8dc>
   15ac6:	9b04      	ldr	r3, [sp, #16]
   15ac8:	4641      	mov	r1, r8
   15aca:	b163      	cbz	r3, 15ae6 <_strtod_r+0x89e>
   15acc:	4b48      	ldr	r3, [pc, #288]	; (15bf0 <_strtod_r+0x9a8>)
   15ace:	4013      	ands	r3, r2
   15ad0:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
   15ad4:	d807      	bhi.n	15ae6 <_strtod_r+0x89e>
   15ad6:	0d1b      	lsrs	r3, r3, #20
   15ad8:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
   15adc:	f04f 30ff 	mov.w	r0, #4294967295
   15ae0:	fa00 f303 	lsl.w	r3, r0, r3
   15ae4:	e001      	b.n	15aea <_strtod_r+0x8a2>
   15ae6:	f04f 33ff 	mov.w	r3, #4294967295
   15aea:	4299      	cmp	r1, r3
   15aec:	d11a      	bne.n	15b24 <_strtod_r+0x8dc>
   15aee:	4b41      	ldr	r3, [pc, #260]	; (15bf4 <_strtod_r+0x9ac>)
   15af0:	429a      	cmp	r2, r3
   15af2:	d102      	bne.n	15afa <_strtod_r+0x8b2>
   15af4:	3101      	adds	r1, #1
   15af6:	f43f ae00 	beq.w	156fa <_strtod_r+0x4b2>
   15afa:	4b3d      	ldr	r3, [pc, #244]	; (15bf0 <_strtod_r+0x9a8>)
   15afc:	f04f 0800 	mov.w	r8, #0
   15b00:	4013      	ands	r3, r2
   15b02:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
   15b06:	e161      	b.n	15dcc <_strtod_r+0xb84>
   15b08:	b963      	cbnz	r3, 15b24 <_strtod_r+0x8dc>
   15b0a:	f1b8 0f00 	cmp.w	r8, #0
   15b0e:	d109      	bne.n	15b24 <_strtod_r+0x8dc>
   15b10:	e768      	b.n	159e4 <_strtod_r+0x79c>
   15b12:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
   15b16:	ea6f 5913 	mvn.w	r9, r3, lsr #20
   15b1a:	f04f 38ff 	mov.w	r8, #4294967295
   15b1e:	ea6f 5909 	mvn.w	r9, r9, lsl #20
   15b22:	e153      	b.n	15dcc <_strtod_r+0xb84>
   15b24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   15b26:	b113      	cbz	r3, 15b2e <_strtod_r+0x8e6>
   15b28:	ea13 0f09 	tst.w	r3, r9
   15b2c:	e002      	b.n	15b34 <_strtod_r+0x8ec>
   15b2e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   15b30:	ea13 0f08 	tst.w	r3, r8
   15b34:	f000 814a 	beq.w	15dcc <_strtod_r+0xb84>
   15b38:	9b08      	ldr	r3, [sp, #32]
   15b3a:	4640      	mov	r0, r8
   15b3c:	4649      	mov	r1, r9
   15b3e:	9a04      	ldr	r2, [sp, #16]
   15b40:	b153      	cbz	r3, 15b58 <_strtod_r+0x910>
   15b42:	f7ff fb5d 	bl	15200 <sulp>
   15b46:	4602      	mov	r2, r0
   15b48:	460b      	mov	r3, r1
   15b4a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   15b4e:	f7fb fcb3 	bl	114b8 <__adddf3>
   15b52:	4680      	mov	r8, r0
   15b54:	4689      	mov	r9, r1
   15b56:	e139      	b.n	15dcc <_strtod_r+0xb84>
   15b58:	f7ff fb52 	bl	15200 <sulp>
   15b5c:	4602      	mov	r2, r0
   15b5e:	460b      	mov	r3, r1
   15b60:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   15b64:	f7fb fca6 	bl	114b4 <__aeabi_dsub>
   15b68:	2200      	movs	r2, #0
   15b6a:	2300      	movs	r3, #0
   15b6c:	4680      	mov	r8, r0
   15b6e:	4689      	mov	r9, r1
   15b70:	f7fc f8bc 	bl	11cec <__aeabi_dcmpeq>
   15b74:	2800      	cmp	r0, #0
   15b76:	f47f af45 	bne.w	15a04 <_strtod_r+0x7bc>
   15b7a:	e127      	b.n	15dcc <_strtod_r+0xb84>
   15b7c:	4658      	mov	r0, r11
   15b7e:	9903      	ldr	r1, [sp, #12]
   15b80:	f002 fbb3 	bl	182ea <__ratio>
   15b84:	2200      	movs	r2, #0
   15b86:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   15b8a:	4606      	mov	r6, r0
   15b8c:	460f      	mov	r7, r1
   15b8e:	f7fc f8c1 	bl	11d14 <__aeabi_dcmple>
   15b92:	2800      	cmp	r0, #0
   15b94:	d03f      	beq.n	15c16 <_strtod_r+0x9ce>
   15b96:	9b08      	ldr	r3, [sp, #32]
   15b98:	b113      	cbz	r3, 15ba0 <_strtod_r+0x958>
   15b9a:	2600      	movs	r6, #0
   15b9c:	4f16      	ldr	r7, [pc, #88]	; (15bf8 <_strtod_r+0x9b0>)
   15b9e:	e010      	b.n	15bc2 <_strtod_r+0x97a>
   15ba0:	f1b8 0f00 	cmp.w	r8, #0
   15ba4:	d103      	bne.n	15bae <_strtod_r+0x966>
   15ba6:	f3c9 0313 	ubfx	r3, r9, #0, #20
   15baa:	b93b      	cbnz	r3, 15bbc <_strtod_r+0x974>
   15bac:	e00b      	b.n	15bc6 <_strtod_r+0x97e>
   15bae:	f1b8 0f01 	cmp.w	r8, #1
   15bb2:	d103      	bne.n	15bbc <_strtod_r+0x974>
   15bb4:	f1b9 0f00 	cmp.w	r9, #0
   15bb8:	f43f af24 	beq.w	15a04 <_strtod_r+0x7bc>
   15bbc:	4f0f      	ldr	r7, [pc, #60]	; (15bfc <_strtod_r+0x9b4>)
   15bbe:	2600      	movs	r6, #0
   15bc0:	2400      	movs	r4, #0
   15bc2:	4d0d      	ldr	r5, [pc, #52]	; (15bf8 <_strtod_r+0x9b0>)
   15bc4:	e03c      	b.n	15c40 <_strtod_r+0x9f8>
   15bc6:	4630      	mov	r0, r6
   15bc8:	4639      	mov	r1, r7
   15bca:	2200      	movs	r2, #0
   15bcc:	4b0a      	ldr	r3, [pc, #40]	; (15bf8 <_strtod_r+0x9b0>)
   15bce:	f7fc f897 	bl	11d00 <__aeabi_dcmplt>
   15bd2:	b9b8      	cbnz	r0, 15c04 <_strtod_r+0x9bc>
   15bd4:	4630      	mov	r0, r6
   15bd6:	4639      	mov	r1, r7
   15bd8:	2200      	movs	r2, #0
   15bda:	4b09      	ldr	r3, [pc, #36]	; (15c00 <_strtod_r+0x9b8>)
   15bdc:	f7fb fe1e 	bl	1181c <__aeabi_dmul>
   15be0:	4604      	mov	r4, r0
   15be2:	460d      	mov	r5, r1
   15be4:	e010      	b.n	15c08 <_strtod_r+0x9c0>
   15be6:	bf00      	nop
   15be8:	fffffbe3 	.word	0xfffffbe3
   15bec:	000fffff 	.word	0x000fffff
   15bf0:	7ff00000 	.word	0x7ff00000
   15bf4:	7fefffff 	.word	0x7fefffff
   15bf8:	3ff00000 	.word	0x3ff00000
   15bfc:	bff00000 	.word	0xbff00000
   15c00:	3fe00000 	.word	0x3fe00000
   15c04:	9c08      	ldr	r4, [sp, #32]
   15c06:	4d9a      	ldr	r5, [pc, #616]	; (15e70 <_strtod_r+0xc28>)
   15c08:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   15c0c:	9416      	str	r4, [sp, #88]	; 0x58
   15c0e:	9317      	str	r3, [sp, #92]	; 0x5c
   15c10:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
   15c14:	e014      	b.n	15c40 <_strtod_r+0x9f8>
   15c16:	4b96      	ldr	r3, [pc, #600]	; (15e70 <_strtod_r+0xc28>)
   15c18:	4630      	mov	r0, r6
   15c1a:	4639      	mov	r1, r7
   15c1c:	2200      	movs	r2, #0
   15c1e:	f7fb fdfd 	bl	1181c <__aeabi_dmul>
   15c22:	9b08      	ldr	r3, [sp, #32]
   15c24:	4604      	mov	r4, r0
   15c26:	460d      	mov	r5, r1
   15c28:	b923      	cbnz	r3, 15c34 <_strtod_r+0x9ec>
   15c2a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   15c2e:	9010      	str	r0, [sp, #64]	; 0x40
   15c30:	9311      	str	r3, [sp, #68]	; 0x44
   15c32:	e003      	b.n	15c3c <_strtod_r+0x9f4>
   15c34:	4602      	mov	r2, r0
   15c36:	460b      	mov	r3, r1
   15c38:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   15c3c:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   15c40:	f029 4c00 	bic.w	r12, r9, #2147483648	; 0x80000000
   15c44:	ea4f 5c1c 	mov.w	r12, r12, lsr #20
   15c48:	4b8a      	ldr	r3, [pc, #552]	; (15e74 <_strtod_r+0xc2c>)
   15c4a:	ea4f 5c0c 	mov.w	r12, r12, lsl #20
   15c4e:	459c      	cmp	r12, r3
   15c50:	d131      	bne.n	15cb6 <_strtod_r+0xa6e>
   15c52:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   15c56:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
   15c5a:	4640      	mov	r0, r8
   15c5c:	4649      	mov	r1, r9
   15c5e:	f8cd c03c 	str.w	r12, [sp, #60]	; 0x3c
   15c62:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
   15c66:	f002 fa7b 	bl	18160 <__ulp>
   15c6a:	4602      	mov	r2, r0
   15c6c:	460b      	mov	r3, r1
   15c6e:	4630      	mov	r0, r6
   15c70:	4639      	mov	r1, r7
   15c72:	f7fb fdd3 	bl	1181c <__aeabi_dmul>
   15c76:	4602      	mov	r2, r0
   15c78:	460b      	mov	r3, r1
   15c7a:	4640      	mov	r0, r8
   15c7c:	4649      	mov	r1, r9
   15c7e:	f7fb fc1b 	bl	114b8 <__adddf3>
   15c82:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   15c86:	0d1b      	lsrs	r3, r3, #20
   15c88:	4a7b      	ldr	r2, [pc, #492]	; (15e78 <_strtod_r+0xc30>)
   15c8a:	051b      	lsls	r3, r3, #20
   15c8c:	4293      	cmp	r3, r2
   15c8e:	4680      	mov	r8, r0
   15c90:	f8dd c03c 	ldr.w	r12, [sp, #60]	; 0x3c
   15c94:	d90c      	bls.n	15cb0 <_strtod_r+0xa68>
   15c96:	4b79      	ldr	r3, [pc, #484]	; (15e7c <_strtod_r+0xc34>)
   15c98:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   15c9a:	429a      	cmp	r2, r3
   15c9c:	d103      	bne.n	15ca6 <_strtod_r+0xa5e>
   15c9e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   15ca0:	3301      	adds	r3, #1
   15ca2:	f43f ad2a 	beq.w	156fa <_strtod_r+0x4b2>
   15ca6:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 15e7c <_strtod_r+0xc34>
   15caa:	f04f 38ff 	mov.w	r8, #4294967295
   15cae:	e07c      	b.n	15daa <_strtod_r+0xb62>
   15cb0:	f101 7954 	add.w	r9, r1, #55574528	; 0x3500000
   15cb4:	e044      	b.n	15d40 <_strtod_r+0xaf8>
   15cb6:	9b04      	ldr	r3, [sp, #16]
   15cb8:	b363      	cbz	r3, 15d14 <_strtod_r+0xacc>
   15cba:	f1bc 6fd4 	cmp.w	r12, #111149056	; 0x6a00000
   15cbe:	d829      	bhi.n	15d14 <_strtod_r+0xacc>
   15cc0:	a363      	add	r3, pc, #396	; (adr r3, 15e50 <_strtod_r+0xc08>)
   15cc2:	e9d3 2300 	ldrd	r2, r3, [r3]
   15cc6:	4620      	mov	r0, r4
   15cc8:	4629      	mov	r1, r5
   15cca:	f8cd c03c 	str.w	r12, [sp, #60]	; 0x3c
   15cce:	f7fc f821 	bl	11d14 <__aeabi_dcmple>
   15cd2:	f8dd c03c 	ldr.w	r12, [sp, #60]	; 0x3c
   15cd6:	b1c8      	cbz	r0, 15d0c <_strtod_r+0xac4>
   15cd8:	4629      	mov	r1, r5
   15cda:	4620      	mov	r0, r4
   15cdc:	f004 fba8 	bl	1a430 <__aeabi_d2uiz>
   15ce0:	2800      	cmp	r0, #0
   15ce2:	bf08      	it	eq
   15ce4:	2001      	moveq	r0, #1
   15ce6:	f7fb fd23 	bl	11730 <__aeabi_ui2d>
   15cea:	9b08      	ldr	r3, [sp, #32]
   15cec:	4604      	mov	r4, r0
   15cee:	460d      	mov	r5, r1
   15cf0:	f8dd c03c 	ldr.w	r12, [sp, #60]	; 0x3c
   15cf4:	b923      	cbnz	r3, 15d00 <_strtod_r+0xab8>
   15cf6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   15cfa:	9012      	str	r0, [sp, #72]	; 0x48
   15cfc:	9313      	str	r3, [sp, #76]	; 0x4c
   15cfe:	e003      	b.n	15d08 <_strtod_r+0xac0>
   15d00:	4602      	mov	r2, r0
   15d02:	460b      	mov	r3, r1
   15d04:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   15d08:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
   15d0c:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
   15d10:	ebcc 0703 	rsb	r7, r12, r3
   15d14:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   15d18:	f8cd c03c 	str.w	r12, [sp, #60]	; 0x3c
   15d1c:	f002 fa20 	bl	18160 <__ulp>
   15d20:	4602      	mov	r2, r0
   15d22:	460b      	mov	r3, r1
   15d24:	4630      	mov	r0, r6
   15d26:	4639      	mov	r1, r7
   15d28:	f7fb fd78 	bl	1181c <__aeabi_dmul>
   15d2c:	4602      	mov	r2, r0
   15d2e:	460b      	mov	r3, r1
   15d30:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   15d34:	f7fb fbc0 	bl	114b8 <__adddf3>
   15d38:	4680      	mov	r8, r0
   15d3a:	4689      	mov	r9, r1
   15d3c:	f8dd c03c 	ldr.w	r12, [sp, #60]	; 0x3c
   15d40:	9b04      	ldr	r3, [sp, #16]
   15d42:	464e      	mov	r6, r9
   15d44:	bb8b      	cbnz	r3, 15daa <_strtod_r+0xb62>
   15d46:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
   15d4a:	0d1b      	lsrs	r3, r3, #20
   15d4c:	051b      	lsls	r3, r3, #20
   15d4e:	459c      	cmp	r12, r3
   15d50:	d12b      	bne.n	15daa <_strtod_r+0xb62>
   15d52:	4629      	mov	r1, r5
   15d54:	4620      	mov	r0, r4
   15d56:	f7fb fffb 	bl	11d50 <__aeabi_d2iz>
   15d5a:	f7fb fcf9 	bl	11750 <__aeabi_i2d>
   15d5e:	460b      	mov	r3, r1
   15d60:	4602      	mov	r2, r0
   15d62:	4629      	mov	r1, r5
   15d64:	4620      	mov	r0, r4
   15d66:	f7fb fba5 	bl	114b4 <__aeabi_dsub>
   15d6a:	9b08      	ldr	r3, [sp, #32]
   15d6c:	4604      	mov	r4, r0
   15d6e:	460d      	mov	r5, r1
   15d70:	b92b      	cbnz	r3, 15d7e <_strtod_r+0xb36>
   15d72:	f1b8 0f00 	cmp.w	r8, #0
   15d76:	d102      	bne.n	15d7e <_strtod_r+0xb36>
   15d78:	f3c9 0613 	ubfx	r6, r9, #0, #20
   15d7c:	b17e      	cbz	r6, 15d9e <_strtod_r+0xb56>
   15d7e:	a336      	add	r3, pc, #216	; (adr r3, 15e58 <_strtod_r+0xc10>)
   15d80:	e9d3 2300 	ldrd	r2, r3, [r3]
   15d84:	4620      	mov	r0, r4
   15d86:	4629      	mov	r1, r5
   15d88:	f7fb ffba 	bl	11d00 <__aeabi_dcmplt>
   15d8c:	bb88      	cbnz	r0, 15df2 <_strtod_r+0xbaa>
   15d8e:	a334      	add	r3, pc, #208	; (adr r3, 15e60 <_strtod_r+0xc18>)
   15d90:	e9d3 2300 	ldrd	r2, r3, [r3]
   15d94:	4620      	mov	r0, r4
   15d96:	4629      	mov	r1, r5
   15d98:	f7fb ffd0 	bl	11d3c <__aeabi_dcmpgt>
   15d9c:	e004      	b.n	15da8 <_strtod_r+0xb60>
   15d9e:	a332      	add	r3, pc, #200	; (adr r3, 15e68 <_strtod_r+0xc20>)
   15da0:	e9d3 2300 	ldrd	r2, r3, [r3]
   15da4:	f7fb ffac 	bl	11d00 <__aeabi_dcmplt>
   15da8:	bb18      	cbnz	r0, 15df2 <_strtod_r+0xbaa>
   15daa:	4650      	mov	r0, r10
   15dac:	991a      	ldr	r1, [sp, #104]	; 0x68
   15dae:	f001 ff40 	bl	17c32 <_Bfree>
   15db2:	4650      	mov	r0, r10
   15db4:	9905      	ldr	r1, [sp, #20]
   15db6:	f001 ff3c 	bl	17c32 <_Bfree>
   15dba:	4650      	mov	r0, r10
   15dbc:	9903      	ldr	r1, [sp, #12]
   15dbe:	f001 ff38 	bl	17c32 <_Bfree>
   15dc2:	4650      	mov	r0, r10
   15dc4:	4659      	mov	r1, r11
   15dc6:	f001 ff34 	bl	17c32 <_Bfree>
   15dca:	e55f      	b.n	1588c <_strtod_r+0x644>
   15dcc:	9b04      	ldr	r3, [sp, #16]
   15dce:	b183      	cbz	r3, 15df2 <_strtod_r+0xbaa>
   15dd0:	4b2b      	ldr	r3, [pc, #172]	; (15e80 <_strtod_r+0xc38>)
   15dd2:	4640      	mov	r0, r8
   15dd4:	930d      	str	r3, [sp, #52]	; 0x34
   15dd6:	2300      	movs	r3, #0
   15dd8:	930c      	str	r3, [sp, #48]	; 0x30
   15dda:	4649      	mov	r1, r9
   15ddc:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   15de0:	f7fb fd1c 	bl	1181c <__aeabi_dmul>
   15de4:	4680      	mov	r8, r0
   15de6:	4689      	mov	r9, r1
   15de8:	b919      	cbnz	r1, 15df2 <_strtod_r+0xbaa>
   15dea:	b910      	cbnz	r0, 15df2 <_strtod_r+0xbaa>
   15dec:	2322      	movs	r3, #34	; 0x22
   15dee:	f8ca 3000 	str.w	r3, [r10]
   15df2:	4650      	mov	r0, r10
   15df4:	991a      	ldr	r1, [sp, #104]	; 0x68
   15df6:	f001 ff1c 	bl	17c32 <_Bfree>
   15dfa:	4650      	mov	r0, r10
   15dfc:	9905      	ldr	r1, [sp, #20]
   15dfe:	f001 ff18 	bl	17c32 <_Bfree>
   15e02:	4650      	mov	r0, r10
   15e04:	9903      	ldr	r1, [sp, #12]
   15e06:	f001 ff14 	bl	17c32 <_Bfree>
   15e0a:	4650      	mov	r0, r10
   15e0c:	9907      	ldr	r1, [sp, #28]
   15e0e:	f001 ff10 	bl	17c32 <_Bfree>
   15e12:	4650      	mov	r0, r10
   15e14:	4659      	mov	r1, r11
   15e16:	f001 ff0c 	bl	17c32 <_Bfree>
   15e1a:	9b15      	ldr	r3, [sp, #84]	; 0x54
   15e1c:	b113      	cbz	r3, 15e24 <_strtod_r+0xbdc>
   15e1e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   15e20:	9a15      	ldr	r2, [sp, #84]	; 0x54
   15e22:	6013      	str	r3, [r2, #0]
   15e24:	9b09      	ldr	r3, [sp, #36]	; 0x24
   15e26:	b11b      	cbz	r3, 15e30 <_strtod_r+0xbe8>
   15e28:	4642      	mov	r2, r8
   15e2a:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
   15e2e:	e007      	b.n	15e40 <_strtod_r+0xbf8>
   15e30:	4642      	mov	r2, r8
   15e32:	464b      	mov	r3, r9
   15e34:	e004      	b.n	15e40 <_strtod_r+0xbf8>
   15e36:	2400      	movs	r4, #0
   15e38:	4622      	mov	r2, r4
   15e3a:	2701      	movs	r7, #1
   15e3c:	f7ff bb1d 	b.w	1547a <_strtod_r+0x232>
   15e40:	4610      	mov	r0, r2
   15e42:	4619      	mov	r1, r3
   15e44:	b01f      	add	sp, #124	; 0x7c
   15e46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
   15e4a:	bf00      	nop
   15e4c:	f3af 8000 	nop.w
   15e50:	ffc00000 	.word	0xffc00000
   15e54:	41dfffff 	.word	0x41dfffff
   15e58:	94a03595 	.word	0x94a03595
   15e5c:	3fdfffff 	.word	0x3fdfffff
   15e60:	35afe535 	.word	0x35afe535
   15e64:	3fe00000 	.word	0x3fe00000
   15e68:	94a03595 	.word	0x94a03595
   15e6c:	3fcfffff 	.word	0x3fcfffff
   15e70:	3fe00000 	.word	0x3fe00000
   15e74:	7fe00000 	.word	0x7fe00000
   15e78:	7c9fffff 	.word	0x7c9fffff
   15e7c:	7fefffff 	.word	0x7fefffff
   15e80:	39500000 	.word	0x39500000
   15e84:	f3af 8000 	nop.w

00015e88 <strtod>:
   15e88:	4603      	mov	r3, r0
   15e8a:	460a      	mov	r2, r1
   15e8c:	4902      	ldr	r1, [pc, #8]	; (15e98 <strtod+0x10>)
   15e8e:	6808      	ldr	r0, [r1, #0]
   15e90:	4619      	mov	r1, r3
   15e92:	f7ff b9d9 	b.w	15248 <_strtod_r>
   15e96:	bf00      	nop
   15e98:	100001d4 	.word	0x100001d4

00015e9c <strtof>:
   15e9c:	b538      	push	{r3, r4, r5, lr}
   15e9e:	4603      	mov	r3, r0
   15ea0:	460a      	mov	r2, r1
   15ea2:	4909      	ldr	r1, [pc, #36]	; (15ec8 <strtof+0x2c>)
   15ea4:	6808      	ldr	r0, [r1, #0]
   15ea6:	4619      	mov	r1, r3
   15ea8:	f7ff f9ce 	bl	15248 <_strtod_r>
   15eac:	4604      	mov	r4, r0
   15eae:	460d      	mov	r5, r1
   15eb0:	f002 fdb8 	bl	18a24 <__fpclassifyd>
   15eb4:	b918      	cbnz	r0, 15ebe <strtof+0x22>
   15eb6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   15eba:	f002 bddb 	b.w	18a74 <nanf>
   15ebe:	4620      	mov	r0, r4
   15ec0:	4629      	mov	r1, r5
   15ec2:	f004 fad5 	bl	1a470 <__aeabi_d2f>
   15ec6:	bd38      	pop	{r3, r4, r5, pc}
   15ec8:	100001d4 	.word	0x100001d4

00015ecc <_strtol_r>:
   15ecc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
   15ed0:	460f      	mov	r7, r1
   15ed2:	4c40      	ldr	r4, [pc, #256]	; (15fd4 <_strtol_r+0x108>)
   15ed4:	f8d4 9000 	ldr.w	r9, [r4]
   15ed8:	463d      	mov	r5, r7
   15eda:	f815 eb01 	ldrb.w	lr, [r5], #1
   15ede:	eb09 040e 	add.w	r4, r9, lr
   15ee2:	7866      	ldrb	r6, [r4, #1]
   15ee4:	f006 0408 	and.w	r4, r6, #8
   15ee8:	f004 06ff 	and.w	r6, r4, #255	; 0xff
   15eec:	b10c      	cbz	r4, 15ef2 <_strtol_r+0x26>
   15eee:	462f      	mov	r7, r5
   15ef0:	e7f2      	b.n	15ed8 <_strtol_r+0xc>
   15ef2:	4674      	mov	r4, lr
   15ef4:	2c2d      	cmp	r4, #45	; 0x2d
   15ef6:	d103      	bne.n	15f00 <_strtol_r+0x34>
   15ef8:	1cbd      	adds	r5, r7, #2
   15efa:	787c      	ldrb	r4, [r7, #1]
   15efc:	2601      	movs	r6, #1
   15efe:	e003      	b.n	15f08 <_strtol_r+0x3c>
   15f00:	2c2b      	cmp	r4, #43	; 0x2b
   15f02:	bf04      	itt	eq
   15f04:	787c      	ldrbeq	r4, [r7, #1]
   15f06:	1cbd      	addeq	r5, r7, #2
   15f08:	b113      	cbz	r3, 15f10 <_strtol_r+0x44>
   15f0a:	2b10      	cmp	r3, #16
   15f0c:	d10a      	bne.n	15f24 <_strtol_r+0x58>
   15f0e:	e05a      	b.n	15fc6 <_strtol_r+0xfa>
   15f10:	2c30      	cmp	r4, #48	; 0x30
   15f12:	d156      	bne.n	15fc2 <_strtol_r+0xf6>
   15f14:	782c      	ldrb	r4, [r5, #0]
   15f16:	f004 04df 	and.w	r4, r4, #223	; 0xdf
   15f1a:	2c58      	cmp	r4, #88	; 0x58
   15f1c:	d14c      	bne.n	15fb8 <_strtol_r+0xec>
   15f1e:	786c      	ldrb	r4, [r5, #1]
   15f20:	2310      	movs	r3, #16
   15f22:	3502      	adds	r5, #2
   15f24:	2e00      	cmp	r6, #0
   15f26:	bf14      	ite	ne
   15f28:	f04f 4800 	movne.w	r8, #2147483648	; 0x80000000
   15f2c:	f06f 4800 	mvneq.w	r8, #2147483648	; 0x80000000
   15f30:	fbb8 faf3 	udiv	r10, r8, r3
   15f34:	2700      	movs	r7, #0
   15f36:	46be      	mov	lr, r7
   15f38:	fb03 881a 	mls	r8, r3, r10, r8
   15f3c:	eb09 0c04 	add.w	r12, r9, r4
   15f40:	f89c c001 	ldrb.w	r12, [r12, #1]
   15f44:	f01c 0f04 	tst.w	r12, #4
   15f48:	d001      	beq.n	15f4e <_strtol_r+0x82>
   15f4a:	3c30      	subs	r4, #48	; 0x30
   15f4c:	e00b      	b.n	15f66 <_strtol_r+0x9a>
   15f4e:	f01c 0c03 	ands.w	r12, r12, #3
   15f52:	d01b      	beq.n	15f8c <_strtol_r+0xc0>
   15f54:	f1bc 0f01 	cmp.w	r12, #1
   15f58:	bf0c      	ite	eq
   15f5a:	f04f 0c37 	moveq.w	r12, #55	; 0x37
   15f5e:	f04f 0c57 	movne.w	r12, #87	; 0x57
   15f62:	ebcc 0404 	rsb	r4, r12, r4
   15f66:	429c      	cmp	r4, r3
   15f68:	da10      	bge.n	15f8c <_strtol_r+0xc0>
   15f6a:	f1b7 3fff 	cmp.w	r7, #4294967295
   15f6e:	d00a      	beq.n	15f86 <_strtol_r+0xba>
   15f70:	45d6      	cmp	lr, r10
   15f72:	d806      	bhi.n	15f82 <_strtol_r+0xb6>
   15f74:	d101      	bne.n	15f7a <_strtol_r+0xae>
   15f76:	4544      	cmp	r4, r8
   15f78:	dc03      	bgt.n	15f82 <_strtol_r+0xb6>
   15f7a:	fb03 4e0e 	mla	lr, r3, lr, r4
   15f7e:	2701      	movs	r7, #1
   15f80:	e001      	b.n	15f86 <_strtol_r+0xba>
   15f82:	f04f 37ff 	mov.w	r7, #4294967295
   15f86:	f815 4b01 	ldrb.w	r4, [r5], #1
   15f8a:	e7d7      	b.n	15f3c <_strtol_r+0x70>
   15f8c:	1c7c      	adds	r4, r7, #1
   15f8e:	4673      	mov	r3, lr
   15f90:	d10a      	bne.n	15fa8 <_strtol_r+0xdc>
   15f92:	2e00      	cmp	r6, #0
   15f94:	f04f 0122 	mov.w	r1, #34	; 0x22
   15f98:	bf14      	ite	ne
   15f9a:	f04f 4300 	movne.w	r3, #2147483648	; 0x80000000
   15f9e:	f06f 4300 	mvneq.w	r3, #2147483648	; 0x80000000
   15fa2:	6001      	str	r1, [r0, #0]
   15fa4:	b92a      	cbnz	r2, 15fb2 <_strtol_r+0xe6>
   15fa6:	e011      	b.n	15fcc <_strtol_r+0x100>
   15fa8:	b10e      	cbz	r6, 15fae <_strtol_r+0xe2>
   15faa:	f1ce 0300 	rsb	r3, lr, #0
   15fae:	b16a      	cbz	r2, 15fcc <_strtol_r+0x100>
   15fb0:	b107      	cbz	r7, 15fb4 <_strtol_r+0xe8>
   15fb2:	1e69      	subs	r1, r5, #1
   15fb4:	6011      	str	r1, [r2, #0]
   15fb6:	e009      	b.n	15fcc <_strtol_r+0x100>
   15fb8:	2430      	movs	r4, #48	; 0x30
   15fba:	2b00      	cmp	r3, #0
   15fbc:	d1b2      	bne.n	15f24 <_strtol_r+0x58>
   15fbe:	2308      	movs	r3, #8
   15fc0:	e7b0      	b.n	15f24 <_strtol_r+0x58>
   15fc2:	230a      	movs	r3, #10
   15fc4:	e7ae      	b.n	15f24 <_strtol_r+0x58>
   15fc6:	2c30      	cmp	r4, #48	; 0x30
   15fc8:	d1ac      	bne.n	15f24 <_strtol_r+0x58>
   15fca:	e7a3      	b.n	15f14 <_strtol_r+0x48>
   15fcc:	4618      	mov	r0, r3
   15fce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
   15fd2:	bf00      	nop
   15fd4:	10000170 	.word	0x10000170

00015fd8 <_strtoul_r>:
   15fd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
   15fdc:	460e      	mov	r6, r1
   15fde:	4c3b      	ldr	r4, [pc, #236]	; (160cc <_strtoul_r+0xf4>)
   15fe0:	f8d4 9000 	ldr.w	r9, [r4]
   15fe4:	4635      	mov	r5, r6
   15fe6:	f815 eb01 	ldrb.w	lr, [r5], #1
   15fea:	eb09 040e 	add.w	r4, r9, lr
   15fee:	7867      	ldrb	r7, [r4, #1]
   15ff0:	f007 0408 	and.w	r4, r7, #8
   15ff4:	f004 07ff 	and.w	r7, r4, #255	; 0xff
   15ff8:	b10c      	cbz	r4, 15ffe <_strtoul_r+0x26>
   15ffa:	462e      	mov	r6, r5
   15ffc:	e7f2      	b.n	15fe4 <_strtoul_r+0xc>
   15ffe:	4674      	mov	r4, lr
   16000:	2c2d      	cmp	r4, #45	; 0x2d
   16002:	d103      	bne.n	1600c <_strtoul_r+0x34>
   16004:	1cb5      	adds	r5, r6, #2
   16006:	7874      	ldrb	r4, [r6, #1]
   16008:	2701      	movs	r7, #1
   1600a:	e003      	b.n	16014 <_strtoul_r+0x3c>
   1600c:	2c2b      	cmp	r4, #43	; 0x2b
   1600e:	bf04      	itt	eq
   16010:	7874      	ldrbeq	r4, [r6, #1]
   16012:	1cb5      	addeq	r5, r6, #2
   16014:	b113      	cbz	r3, 1601c <_strtoul_r+0x44>
   16016:	2b10      	cmp	r3, #16
   16018:	d10a      	bne.n	16030 <_strtoul_r+0x58>
   1601a:	e051      	b.n	160c0 <_strtoul_r+0xe8>
   1601c:	2c30      	cmp	r4, #48	; 0x30
   1601e:	d14d      	bne.n	160bc <_strtoul_r+0xe4>
   16020:	782c      	ldrb	r4, [r5, #0]
   16022:	f004 04df 	and.w	r4, r4, #223	; 0xdf
   16026:	2c58      	cmp	r4, #88	; 0x58
   16028:	d143      	bne.n	160b2 <_strtoul_r+0xda>
   1602a:	786c      	ldrb	r4, [r5, #1]
   1602c:	2310      	movs	r3, #16
   1602e:	3502      	adds	r5, #2
   16030:	f04f 38ff 	mov.w	r8, #4294967295
   16034:	fbb8 f8f3 	udiv	r8, r8, r3
   16038:	fb03 fa08 	mul.w	r10, r3, r8
   1603c:	2600      	movs	r6, #0
   1603e:	ea6f 0a0a 	mvn.w	r10, r10
   16042:	46b6      	mov	lr, r6
   16044:	eb09 0c04 	add.w	r12, r9, r4
   16048:	f89c c001 	ldrb.w	r12, [r12, #1]
   1604c:	f01c 0f04 	tst.w	r12, #4
   16050:	d001      	beq.n	16056 <_strtoul_r+0x7e>
   16052:	3c30      	subs	r4, #48	; 0x30
   16054:	e00b      	b.n	1606e <_strtoul_r+0x96>
   16056:	f01c 0c03 	ands.w	r12, r12, #3
   1605a:	d01b      	beq.n	16094 <_strtoul_r+0xbc>
   1605c:	f1bc 0f01 	cmp.w	r12, #1
   16060:	bf0c      	ite	eq
   16062:	f04f 0c37 	moveq.w	r12, #55	; 0x37
   16066:	f04f 0c57 	movne.w	r12, #87	; 0x57
   1606a:	ebcc 0404 	rsb	r4, r12, r4
   1606e:	429c      	cmp	r4, r3
   16070:	da10      	bge.n	16094 <_strtoul_r+0xbc>
   16072:	f1b6 3fff 	cmp.w	r6, #4294967295
   16076:	d00a      	beq.n	1608e <_strtoul_r+0xb6>
   16078:	45c6      	cmp	lr, r8
   1607a:	d806      	bhi.n	1608a <_strtoul_r+0xb2>
   1607c:	d101      	bne.n	16082 <_strtoul_r+0xaa>
   1607e:	4554      	cmp	r4, r10
   16080:	dc03      	bgt.n	1608a <_strtoul_r+0xb2>
   16082:	fb03 4e0e 	mla	lr, r3, lr, r4
   16086:	2601      	movs	r6, #1
   16088:	e001      	b.n	1608e <_strtoul_r+0xb6>
   1608a:	f04f 36ff 	mov.w	r6, #4294967295
   1608e:	f815 4b01 	ldrb.w	r4, [r5], #1
   16092:	e7d7      	b.n	16044 <_strtoul_r+0x6c>
   16094:	1c74      	adds	r4, r6, #1
   16096:	4673      	mov	r3, lr
   16098:	d103      	bne.n	160a2 <_strtoul_r+0xca>
   1609a:	2322      	movs	r3, #34	; 0x22
   1609c:	6003      	str	r3, [r0, #0]
   1609e:	4633      	mov	r3, r6
   160a0:	e002      	b.n	160a8 <_strtoul_r+0xd0>
   160a2:	b10f      	cbz	r7, 160a8 <_strtoul_r+0xd0>
   160a4:	f1ce 0300 	rsb	r3, lr, #0
   160a8:	b16a      	cbz	r2, 160c6 <_strtoul_r+0xee>
   160aa:	b106      	cbz	r6, 160ae <_strtoul_r+0xd6>
   160ac:	1e69      	subs	r1, r5, #1
   160ae:	6011      	str	r1, [r2, #0]
   160b0:	e009      	b.n	160c6 <_strtoul_r+0xee>
   160b2:	2430      	movs	r4, #48	; 0x30
   160b4:	2b00      	cmp	r3, #0
   160b6:	d1bb      	bne.n	16030 <_strtoul_r+0x58>
   160b8:	2308      	movs	r3, #8
   160ba:	e7b9      	b.n	16030 <_strtoul_r+0x58>
   160bc:	230a      	movs	r3, #10
   160be:	e7b7      	b.n	16030 <_strtoul_r+0x58>
   160c0:	2c30      	cmp	r4, #48	; 0x30
   160c2:	d1b5      	bne.n	16030 <_strtoul_r+0x58>
   160c4:	e7ac      	b.n	16020 <_strtoul_r+0x48>
   160c6:	4618      	mov	r0, r3
   160c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
   160cc:	10000170 	.word	0x10000170

000160d0 <strtoul>:
   160d0:	b530      	push	{r4, r5, lr}
   160d2:	4605      	mov	r5, r0
   160d4:	460c      	mov	r4, r1
   160d6:	4613      	mov	r3, r2
   160d8:	4a03      	ldr	r2, [pc, #12]	; (160e8 <strtoul+0x18>)
   160da:	4629      	mov	r1, r5
   160dc:	6810      	ldr	r0, [r2, #0]
   160de:	4622      	mov	r2, r4
   160e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   160e4:	f7ff bf78 	b.w	15fd8 <_strtoul_r>
   160e8:	100001d4 	.word	0x100001d4

000160ec <strxfrm>:
   160ec:	b510      	push	{r4, lr}
   160ee:	2300      	movs	r3, #0
   160f0:	4293      	cmp	r3, r2
   160f2:	d005      	beq.n	16100 <strxfrm+0x14>
   160f4:	f811 4b01 	ldrb.w	r4, [r1], #1
   160f8:	54c4      	strb	r4, [r0, r3]
   160fa:	b144      	cbz	r4, 1610e <strxfrm+0x22>
   160fc:	3301      	adds	r3, #1
   160fe:	e7f7      	b.n	160f0 <strxfrm+0x4>
   16100:	4608      	mov	r0, r1
   16102:	1a53      	subs	r3, r2, r1
   16104:	4403      	add	r3, r0
   16106:	f810 4b01 	ldrb.w	r4, [r0], #1
   1610a:	2c00      	cmp	r4, #0
   1610c:	d1f9      	bne.n	16102 <strxfrm+0x16>
   1610e:	4618      	mov	r0, r3
   16110:	bd10      	pop	{r4, pc}
	...

00016114 <__get_current_time_locale>:
   16114:	4b04      	ldr	r3, [pc, #16]	; (16128 <__get_current_time_locale+0x14>)
   16116:	4a05      	ldr	r2, [pc, #20]	; (1612c <__get_current_time_locale+0x18>)
   16118:	6818      	ldr	r0, [r3, #0]
   1611a:	4b05      	ldr	r3, [pc, #20]	; (16130 <__get_current_time_locale+0x1c>)
   1611c:	2800      	cmp	r0, #0
   1611e:	bf14      	ite	ne
   16120:	4610      	movne	r0, r2
   16122:	4618      	moveq	r0, r3
   16124:	4770      	bx	lr
   16126:	bf00      	nop
   16128:	10001a74 	.word	0x10001a74
   1612c:	10001a78 	.word	0x10001a78
   16130:	0001c878 	.word	0x0001c878

00016134 <towlower>:
   16134:	28fe      	cmp	r0, #254	; 0xfe
   16136:	d808      	bhi.n	1614a <towlower+0x16>
   16138:	4b04      	ldr	r3, [pc, #16]	; (1614c <towlower+0x18>)
   1613a:	681b      	ldr	r3, [r3, #0]
   1613c:	4403      	add	r3, r0
   1613e:	785b      	ldrb	r3, [r3, #1]
   16140:	f003 0303 	and.w	r3, r3, #3
   16144:	2b01      	cmp	r3, #1
   16146:	bf08      	it	eq
   16148:	3020      	addeq	r0, #32
   1614a:	4770      	bx	lr
   1614c:	10000170 	.word	0x10000170

00016150 <towupper>:
   16150:	28fe      	cmp	r0, #254	; 0xfe
   16152:	d808      	bhi.n	16166 <towupper+0x16>
   16154:	4b04      	ldr	r3, [pc, #16]	; (16168 <towupper+0x18>)
   16156:	681b      	ldr	r3, [r3, #0]
   16158:	4403      	add	r3, r0
   1615a:	785b      	ldrb	r3, [r3, #1]
   1615c:	f003 0303 	and.w	r3, r3, #3
   16160:	2b02      	cmp	r3, #2
   16162:	bf08      	it	eq
   16164:	3820      	subeq	r0, #32
   16166:	4770      	bx	lr
   16168:	10000170 	.word	0x10000170

0001616c <__tz_lock>:
   1616c:	4770      	bx	lr

0001616e <__tz_unlock>:
   1616e:	4770      	bx	lr

00016170 <__submore>:
   16170:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16174:	460c      	mov	r4, r1
   16176:	6b49      	ldr	r1, [r1, #52]	; 0x34
   16178:	f104 0344 	add.w	r3, r4, #68	; 0x44
   1617c:	4299      	cmp	r1, r3
   1617e:	d11a      	bne.n	161b6 <__submore+0x46>
   16180:	f44f 6180 	mov.w	r1, #1024	; 0x400
   16184:	f7fd faf4 	bl	13770 <_malloc_r>
   16188:	b918      	cbnz	r0, 16192 <__submore+0x22>
   1618a:	f04f 30ff 	mov.w	r0, #4294967295
   1618e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16192:	f44f 6380 	mov.w	r3, #1024	; 0x400
   16196:	63a3      	str	r3, [r4, #56]	; 0x38
   16198:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
   1619c:	6360      	str	r0, [r4, #52]	; 0x34
   1619e:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
   161a2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
   161a6:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
   161aa:	7043      	strb	r3, [r0, #1]
   161ac:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
   161b0:	7003      	strb	r3, [r0, #0]
   161b2:	6020      	str	r0, [r4, #0]
   161b4:	e012      	b.n	161dc <__submore+0x6c>
   161b6:	6ba6      	ldr	r6, [r4, #56]	; 0x38
   161b8:	0077      	lsls	r7, r6, #1
   161ba:	463a      	mov	r2, r7
   161bc:	f002 f907 	bl	183ce <_realloc_r>
   161c0:	4605      	mov	r5, r0
   161c2:	2800      	cmp	r0, #0
   161c4:	d0e1      	beq.n	1618a <__submore+0x1a>
   161c6:	eb00 0806 	add.w	r8, r0, r6
   161ca:	4640      	mov	r0, r8
   161cc:	4629      	mov	r1, r5
   161ce:	4632      	mov	r2, r6
   161d0:	f7fd fa5c 	bl	1368c <memcpy>
   161d4:	f8c4 8000 	str.w	r8, [r4]
   161d8:	6365      	str	r5, [r4, #52]	; 0x34
   161da:	63a7      	str	r7, [r4, #56]	; 0x38
   161dc:	2000      	movs	r0, #0
   161de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

000161e4 <_ungetc_r>:
   161e4:	1c4b      	adds	r3, r1, #1
   161e6:	b570      	push	{r4, r5, r6, lr}
   161e8:	4605      	mov	r5, r0
   161ea:	460e      	mov	r6, r1
   161ec:	4614      	mov	r4, r2
   161ee:	d102      	bne.n	161f6 <_ungetc_r+0x12>
   161f0:	f04f 30ff 	mov.w	r0, #4294967295
   161f4:	bd70      	pop	{r4, r5, r6, pc}
   161f6:	b118      	cbz	r0, 16200 <_ungetc_r+0x1c>
   161f8:	6983      	ldr	r3, [r0, #24]
   161fa:	b90b      	cbnz	r3, 16200 <_ungetc_r+0x1c>
   161fc:	f7fc fd8e 	bl	12d1c <__sinit>
   16200:	4b2e      	ldr	r3, [pc, #184]	; (162bc <_ungetc_r+0xd8>)
   16202:	429c      	cmp	r4, r3
   16204:	d101      	bne.n	1620a <_ungetc_r+0x26>
   16206:	686c      	ldr	r4, [r5, #4]
   16208:	e008      	b.n	1621c <_ungetc_r+0x38>
   1620a:	4b2d      	ldr	r3, [pc, #180]	; (162c0 <_ungetc_r+0xdc>)
   1620c:	429c      	cmp	r4, r3
   1620e:	d101      	bne.n	16214 <_ungetc_r+0x30>
   16210:	68ac      	ldr	r4, [r5, #8]
   16212:	e003      	b.n	1621c <_ungetc_r+0x38>
   16214:	4b2b      	ldr	r3, [pc, #172]	; (162c4 <_ungetc_r+0xe0>)
   16216:	429c      	cmp	r4, r3
   16218:	bf08      	it	eq
   1621a:	68ec      	ldreq	r4, [r5, #12]
   1621c:	89a3      	ldrh	r3, [r4, #12]
   1621e:	f023 0320 	bic.w	r3, r3, #32
   16222:	b29b      	uxth	r3, r3
   16224:	81a3      	strh	r3, [r4, #12]
   16226:	b29b      	uxth	r3, r3
   16228:	0759      	lsls	r1, r3, #29
   1622a:	d413      	bmi.n	16254 <_ungetc_r+0x70>
   1622c:	06da      	lsls	r2, r3, #27
   1622e:	d5df      	bpl.n	161f0 <_ungetc_r+0xc>
   16230:	071b      	lsls	r3, r3, #28
   16232:	d50b      	bpl.n	1624c <_ungetc_r+0x68>
   16234:	4628      	mov	r0, r5
   16236:	4621      	mov	r1, r4
   16238:	f7fc fcf4 	bl	12c24 <_fflush_r>
   1623c:	2800      	cmp	r0, #0
   1623e:	d1d7      	bne.n	161f0 <_ungetc_r+0xc>
   16240:	89a3      	ldrh	r3, [r4, #12]
   16242:	60a0      	str	r0, [r4, #8]
   16244:	f023 0308 	bic.w	r3, r3, #8
   16248:	81a3      	strh	r3, [r4, #12]
   1624a:	61a0      	str	r0, [r4, #24]
   1624c:	89a3      	ldrh	r3, [r4, #12]
   1624e:	f043 0304 	orr.w	r3, r3, #4
   16252:	81a3      	strh	r3, [r4, #12]
   16254:	6b63      	ldr	r3, [r4, #52]	; 0x34
   16256:	b2f6      	uxtb	r6, r6
   16258:	6862      	ldr	r2, [r4, #4]
   1625a:	b18b      	cbz	r3, 16280 <_ungetc_r+0x9c>
   1625c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   1625e:	429a      	cmp	r2, r3
   16260:	da07      	bge.n	16272 <_ungetc_r+0x8e>
   16262:	6823      	ldr	r3, [r4, #0]
   16264:	1e5a      	subs	r2, r3, #1
   16266:	6022      	str	r2, [r4, #0]
   16268:	f803 6c01 	strb.w	r6, [r3, #-1]
   1626c:	6863      	ldr	r3, [r4, #4]
   1626e:	3301      	adds	r3, #1
   16270:	e020      	b.n	162b4 <_ungetc_r+0xd0>
   16272:	4628      	mov	r0, r5
   16274:	4621      	mov	r1, r4
   16276:	f7ff ff7b 	bl	16170 <__submore>
   1627a:	2800      	cmp	r0, #0
   1627c:	d0f1      	beq.n	16262 <_ungetc_r+0x7e>
   1627e:	e7b7      	b.n	161f0 <_ungetc_r+0xc>
   16280:	6921      	ldr	r1, [r4, #16]
   16282:	6823      	ldr	r3, [r4, #0]
   16284:	b151      	cbz	r1, 1629c <_ungetc_r+0xb8>
   16286:	428b      	cmp	r3, r1
   16288:	d908      	bls.n	1629c <_ungetc_r+0xb8>
   1628a:	f813 0c01 	ldrb.w	r0, [r3, #-1]
   1628e:	42b0      	cmp	r0, r6
   16290:	d104      	bne.n	1629c <_ungetc_r+0xb8>
   16292:	3b01      	subs	r3, #1
   16294:	3201      	adds	r2, #1
   16296:	6023      	str	r3, [r4, #0]
   16298:	6062      	str	r2, [r4, #4]
   1629a:	bd70      	pop	{r4, r5, r6, pc}
   1629c:	63e3      	str	r3, [r4, #60]	; 0x3c
   1629e:	f104 0344 	add.w	r3, r4, #68	; 0x44
   162a2:	6363      	str	r3, [r4, #52]	; 0x34
   162a4:	2303      	movs	r3, #3
   162a6:	63a3      	str	r3, [r4, #56]	; 0x38
   162a8:	4623      	mov	r3, r4
   162aa:	6422      	str	r2, [r4, #64]	; 0x40
   162ac:	f803 6f46 	strb.w	r6, [r3, #70]!
   162b0:	6023      	str	r3, [r4, #0]
   162b2:	2301      	movs	r3, #1
   162b4:	6063      	str	r3, [r4, #4]
   162b6:	4630      	mov	r0, r6
   162b8:	bd70      	pop	{r4, r5, r6, pc}
   162ba:	bf00      	nop
   162bc:	0001c6e4 	.word	0x0001c6e4
   162c0:	0001c704 	.word	0x0001c704
   162c4:	0001c724 	.word	0x0001c724

000162c8 <ungetc>:
   162c8:	4603      	mov	r3, r0
   162ca:	460a      	mov	r2, r1
   162cc:	4902      	ldr	r1, [pc, #8]	; (162d8 <ungetc+0x10>)
   162ce:	6808      	ldr	r0, [r1, #0]
   162d0:	4619      	mov	r1, r3
   162d2:	f7ff bf87 	b.w	161e4 <_ungetc_r>
   162d6:	bf00      	nop
   162d8:	100001d4 	.word	0x100001d4

000162dc <_ungetwc_r>:
   162dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   162e0:	460d      	mov	r5, r1
   162e2:	3101      	adds	r1, #1
   162e4:	4680      	mov	r8, r0
   162e6:	4616      	mov	r6, r2
   162e8:	d01a      	beq.n	16320 <_ungetwc_r+0x44>
   162ea:	af01      	add	r7, sp, #4
   162ec:	462a      	mov	r2, r5
   162ee:	4639      	mov	r1, r7
   162f0:	f106 035c 	add.w	r3, r6, #92	; 0x5c
   162f4:	f000 f8ba 	bl	1646c <_wcrtomb_r>
   162f8:	1c42      	adds	r2, r0, #1
   162fa:	4604      	mov	r4, r0
   162fc:	d105      	bne.n	1630a <_ungetwc_r+0x2e>
   162fe:	89b3      	ldrh	r3, [r6, #12]
   16300:	4605      	mov	r5, r0
   16302:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   16306:	81b3      	strh	r3, [r6, #12]
   16308:	e00a      	b.n	16320 <_ungetwc_r+0x44>
   1630a:	f114 34ff 	adds.w	r4, r4, #4294967295
   1630e:	d307      	bcc.n	16320 <_ungetwc_r+0x44>
   16310:	4640      	mov	r0, r8
   16312:	5d39      	ldrb	r1, [r7, r4]
   16314:	4632      	mov	r2, r6
   16316:	f7ff ff65 	bl	161e4 <_ungetc_r>
   1631a:	1c43      	adds	r3, r0, #1
   1631c:	d1f5      	bne.n	1630a <_ungetwc_r+0x2e>
   1631e:	4605      	mov	r5, r0
   16320:	4628      	mov	r0, r5
   16322:	b002      	add	sp, #8
   16324:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00016328 <ungetwc>:
   16328:	4b0f      	ldr	r3, [pc, #60]	; (16368 <ungetwc+0x40>)
   1632a:	b570      	push	{r4, r5, r6, lr}
   1632c:	681d      	ldr	r5, [r3, #0]
   1632e:	4606      	mov	r6, r0
   16330:	460c      	mov	r4, r1
   16332:	b125      	cbz	r5, 1633e <ungetwc+0x16>
   16334:	69ab      	ldr	r3, [r5, #24]
   16336:	b913      	cbnz	r3, 1633e <ungetwc+0x16>
   16338:	4628      	mov	r0, r5
   1633a:	f7fc fcef 	bl	12d1c <__sinit>
   1633e:	4b0b      	ldr	r3, [pc, #44]	; (1636c <ungetwc+0x44>)
   16340:	429c      	cmp	r4, r3
   16342:	d101      	bne.n	16348 <ungetwc+0x20>
   16344:	686c      	ldr	r4, [r5, #4]
   16346:	e008      	b.n	1635a <ungetwc+0x32>
   16348:	4b09      	ldr	r3, [pc, #36]	; (16370 <ungetwc+0x48>)
   1634a:	429c      	cmp	r4, r3
   1634c:	d101      	bne.n	16352 <ungetwc+0x2a>
   1634e:	68ac      	ldr	r4, [r5, #8]
   16350:	e003      	b.n	1635a <ungetwc+0x32>
   16352:	4b08      	ldr	r3, [pc, #32]	; (16374 <ungetwc+0x4c>)
   16354:	429c      	cmp	r4, r3
   16356:	bf08      	it	eq
   16358:	68ec      	ldreq	r4, [r5, #12]
   1635a:	4628      	mov	r0, r5
   1635c:	4631      	mov	r1, r6
   1635e:	4622      	mov	r2, r4
   16360:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   16364:	f7ff bfba 	b.w	162dc <_ungetwc_r>
   16368:	100001d4 	.word	0x100001d4
   1636c:	0001c6e4 	.word	0x0001c6e4
   16370:	0001c704 	.word	0x0001c704
   16374:	0001c724 	.word	0x0001c724

00016378 <_vsiprintf_r>:
   16378:	b510      	push	{r4, lr}
   1637a:	b09a      	sub	sp, #104	; 0x68
   1637c:	9100      	str	r1, [sp, #0]
   1637e:	9104      	str	r1, [sp, #16]
   16380:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   16384:	9102      	str	r1, [sp, #8]
   16386:	9105      	str	r1, [sp, #20]
   16388:	f64f 71ff 	movw	r1, #65535	; 0xffff
   1638c:	f44f 7402 	mov.w	r4, #520	; 0x208
   16390:	f8ad 100e 	strh.w	r1, [sp, #14]
   16394:	4669      	mov	r1, sp
   16396:	f8ad 400c 	strh.w	r4, [sp, #12]
   1639a:	f002 f897 	bl	184cc <_svfiprintf_r>
   1639e:	9b00      	ldr	r3, [sp, #0]
   163a0:	2200      	movs	r2, #0
   163a2:	701a      	strb	r2, [r3, #0]
   163a4:	b01a      	add	sp, #104	; 0x68
   163a6:	bd10      	pop	{r4, pc}

000163a8 <vsiprintf>:
   163a8:	b530      	push	{r4, r5, lr}
   163aa:	4605      	mov	r5, r0
   163ac:	460c      	mov	r4, r1
   163ae:	4613      	mov	r3, r2
   163b0:	4a03      	ldr	r2, [pc, #12]	; (163c0 <vsiprintf+0x18>)
   163b2:	4629      	mov	r1, r5
   163b4:	6810      	ldr	r0, [r2, #0]
   163b6:	4622      	mov	r2, r4
   163b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   163bc:	f7ff bfdc 	b.w	16378 <_vsiprintf_r>
   163c0:	100001d4 	.word	0x100001d4

000163c4 <__swbuf_r>:
   163c4:	b570      	push	{r4, r5, r6, lr}
   163c6:	460d      	mov	r5, r1
   163c8:	4614      	mov	r4, r2
   163ca:	4606      	mov	r6, r0
   163cc:	b118      	cbz	r0, 163d6 <__swbuf_r+0x12>
   163ce:	6983      	ldr	r3, [r0, #24]
   163d0:	b90b      	cbnz	r3, 163d6 <__swbuf_r+0x12>
   163d2:	f7fc fca3 	bl	12d1c <__sinit>
   163d6:	4b22      	ldr	r3, [pc, #136]	; (16460 <__swbuf_r+0x9c>)
   163d8:	429c      	cmp	r4, r3
   163da:	d101      	bne.n	163e0 <__swbuf_r+0x1c>
   163dc:	6874      	ldr	r4, [r6, #4]
   163de:	e008      	b.n	163f2 <__swbuf_r+0x2e>
   163e0:	4b20      	ldr	r3, [pc, #128]	; (16464 <__swbuf_r+0xa0>)
   163e2:	429c      	cmp	r4, r3
   163e4:	d101      	bne.n	163ea <__swbuf_r+0x26>
   163e6:	68b4      	ldr	r4, [r6, #8]
   163e8:	e003      	b.n	163f2 <__swbuf_r+0x2e>
   163ea:	4b1f      	ldr	r3, [pc, #124]	; (16468 <__swbuf_r+0xa4>)
   163ec:	429c      	cmp	r4, r3
   163ee:	bf08      	it	eq
   163f0:	68f4      	ldreq	r4, [r6, #12]
   163f2:	69a3      	ldr	r3, [r4, #24]
   163f4:	60a3      	str	r3, [r4, #8]
   163f6:	89a3      	ldrh	r3, [r4, #12]
   163f8:	071a      	lsls	r2, r3, #28
   163fa:	d509      	bpl.n	16410 <__swbuf_r+0x4c>
   163fc:	6923      	ldr	r3, [r4, #16]
   163fe:	b13b      	cbz	r3, 16410 <__swbuf_r+0x4c>
   16400:	6823      	ldr	r3, [r4, #0]
   16402:	6920      	ldr	r0, [r4, #16]
   16404:	b2ed      	uxtb	r5, r5
   16406:	1a18      	subs	r0, r3, r0
   16408:	6963      	ldr	r3, [r4, #20]
   1640a:	4298      	cmp	r0, r3
   1640c:	db0f      	blt.n	1642e <__swbuf_r+0x6a>
   1640e:	e008      	b.n	16422 <__swbuf_r+0x5e>
   16410:	4630      	mov	r0, r6
   16412:	4621      	mov	r1, r4
   16414:	f000 fee6 	bl	171e4 <__swsetup_r>
   16418:	2800      	cmp	r0, #0
   1641a:	d0f1      	beq.n	16400 <__swbuf_r+0x3c>
   1641c:	f04f 30ff 	mov.w	r0, #4294967295
   16420:	bd70      	pop	{r4, r5, r6, pc}
   16422:	4630      	mov	r0, r6
   16424:	4621      	mov	r1, r4
   16426:	f7fc fbfd 	bl	12c24 <_fflush_r>
   1642a:	2800      	cmp	r0, #0
   1642c:	d1f6      	bne.n	1641c <__swbuf_r+0x58>
   1642e:	68a3      	ldr	r3, [r4, #8]
   16430:	3001      	adds	r0, #1
   16432:	3b01      	subs	r3, #1
   16434:	60a3      	str	r3, [r4, #8]
   16436:	6823      	ldr	r3, [r4, #0]
   16438:	1c5a      	adds	r2, r3, #1
   1643a:	6022      	str	r2, [r4, #0]
   1643c:	701d      	strb	r5, [r3, #0]
   1643e:	6963      	ldr	r3, [r4, #20]
   16440:	4298      	cmp	r0, r3
   16442:	d004      	beq.n	1644e <__swbuf_r+0x8a>
   16444:	89a3      	ldrh	r3, [r4, #12]
   16446:	07db      	lsls	r3, r3, #31
   16448:	d507      	bpl.n	1645a <__swbuf_r+0x96>
   1644a:	2d0a      	cmp	r5, #10
   1644c:	d105      	bne.n	1645a <__swbuf_r+0x96>
   1644e:	4630      	mov	r0, r6
   16450:	4621      	mov	r1, r4
   16452:	f7fc fbe7 	bl	12c24 <_fflush_r>
   16456:	2800      	cmp	r0, #0
   16458:	d1e0      	bne.n	1641c <__swbuf_r+0x58>
   1645a:	4628      	mov	r0, r5
   1645c:	bd70      	pop	{r4, r5, r6, pc}
   1645e:	bf00      	nop
   16460:	0001c6e4 	.word	0x0001c6e4
   16464:	0001c704 	.word	0x0001c704
   16468:	0001c724 	.word	0x0001c724

0001646c <_wcrtomb_r>:
   1646c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16470:	461d      	mov	r5, r3
   16472:	4b10      	ldr	r3, [pc, #64]	; (164b4 <_wcrtomb_r+0x48>)
   16474:	b086      	sub	sp, #24
   16476:	4604      	mov	r4, r0
   16478:	4690      	mov	r8, r2
   1647a:	460e      	mov	r6, r1
   1647c:	681f      	ldr	r7, [r3, #0]
   1647e:	b939      	cbnz	r1, 16490 <_wcrtomb_r+0x24>
   16480:	f7fd f826 	bl	134d0 <__locale_charset>
   16484:	9500      	str	r5, [sp, #0]
   16486:	4603      	mov	r3, r0
   16488:	a903      	add	r1, sp, #12
   1648a:	4620      	mov	r0, r4
   1648c:	4632      	mov	r2, r6
   1648e:	e006      	b.n	1649e <_wcrtomb_r+0x32>
   16490:	f7fd f81e 	bl	134d0 <__locale_charset>
   16494:	4631      	mov	r1, r6
   16496:	4603      	mov	r3, r0
   16498:	4642      	mov	r2, r8
   1649a:	4620      	mov	r0, r4
   1649c:	9500      	str	r5, [sp, #0]
   1649e:	47b8      	blx	r7
   164a0:	1c43      	adds	r3, r0, #1
   164a2:	bf01      	itttt	eq
   164a4:	2300      	moveq	r3, #0
   164a6:	602b      	streq	r3, [r5, #0]
   164a8:	238a      	moveq	r3, #138	; 0x8a
   164aa:	6023      	streq	r3, [r4, #0]
   164ac:	b006      	add	sp, #24
   164ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   164b2:	bf00      	nop
   164b4:	10000240 	.word	0x10000240

000164b8 <wcrtomb>:
   164b8:	b530      	push	{r4, r5, lr}
   164ba:	4605      	mov	r5, r0
   164bc:	460c      	mov	r4, r1
   164be:	4613      	mov	r3, r2
   164c0:	4a03      	ldr	r2, [pc, #12]	; (164d0 <wcrtomb+0x18>)
   164c2:	4629      	mov	r1, r5
   164c4:	6810      	ldr	r0, [r2, #0]
   164c6:	4622      	mov	r2, r4
   164c8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   164cc:	f7ff bfce 	b.w	1646c <_wcrtomb_r>
   164d0:	100001d4 	.word	0x100001d4

000164d4 <wcscoll>:
   164d4:	f002 bb40 	b.w	18b58 <wcscmp>

000164d8 <iso_year_adjust>:
   164d8:	6942      	ldr	r2, [r0, #20]
   164da:	b510      	push	{r4, lr}
   164dc:	0793      	lsls	r3, r2, #30
   164de:	d10c      	bne.n	164fa <iso_year_adjust+0x22>
   164e0:	f240 716c 	movw	r1, #1900	; 0x76c
   164e4:	2a00      	cmp	r2, #0
   164e6:	bfa8      	it	ge
   164e8:	f06f 0163 	mvnge.w	r1, #99	; 0x63
   164ec:	4411      	add	r1, r2
   164ee:	2464      	movs	r4, #100	; 0x64
   164f0:	fb91 f3f4 	sdiv	r3, r1, r4
   164f4:	fb04 1113 	mls	r1, r4, r3, r1
   164f8:	b981      	cbnz	r1, 1651c <iso_year_adjust+0x44>
   164fa:	f240 736c 	movw	r3, #1900	; 0x76c
   164fe:	2a00      	cmp	r2, #0
   16500:	bfa8      	it	ge
   16502:	f06f 0363 	mvnge.w	r3, #99	; 0x63
   16506:	4413      	add	r3, r2
   16508:	f44f 72c8 	mov.w	r2, #400	; 0x190
   1650c:	fb93 f1f2 	sdiv	r1, r3, r2
   16510:	fb02 3311 	mls	r3, r2, r1, r3
   16514:	fab3 f283 	clz	r2, r3
   16518:	0952      	lsrs	r2, r2, #5
   1651a:	e000      	b.n	1651e <iso_year_adjust+0x46>
   1651c:	2201      	movs	r2, #1
   1651e:	6983      	ldr	r3, [r0, #24]
   16520:	69c1      	ldr	r1, [r0, #28]
   16522:	005b      	lsls	r3, r3, #1
   16524:	eb03 1301 	add.w	r3, r3, r1, lsl #4
   16528:	4413      	add	r3, r2
   1652a:	2b21      	cmp	r3, #33	; 0x21
   1652c:	dc0e      	bgt.n	1654c <iso_year_adjust+0x74>
   1652e:	2b20      	cmp	r3, #32
   16530:	da2f      	bge.n	16592 <iso_year_adjust+0xba>
   16532:	2b0d      	cmp	r3, #13
   16534:	dc02      	bgt.n	1653c <iso_year_adjust+0x64>
   16536:	2b0a      	cmp	r3, #10
   16538:	db05      	blt.n	16546 <iso_year_adjust+0x6e>
   1653a:	e02a      	b.n	16592 <iso_year_adjust+0xba>
   1653c:	2b10      	cmp	r3, #16
   1653e:	db26      	blt.n	1658e <iso_year_adjust+0xb6>
   16540:	2b11      	cmp	r3, #17
   16542:	dd26      	ble.n	16592 <iso_year_adjust+0xba>
   16544:	3b1c      	subs	r3, #28
   16546:	2b01      	cmp	r3, #1
   16548:	d923      	bls.n	16592 <iso_year_adjust+0xba>
   1654a:	e020      	b.n	1658e <iso_year_adjust+0xb6>
   1654c:	f241 62c6 	movw	r2, #5830	; 0x16c6
   16550:	4293      	cmp	r3, r2
   16552:	dc0e      	bgt.n	16572 <iso_year_adjust+0x9a>
   16554:	f241 62c2 	movw	r2, #5826	; 0x16c2
   16558:	4293      	cmp	r3, r2
   1655a:	da16      	bge.n	1658a <iso_year_adjust+0xb2>
   1655c:	f241 62a2 	movw	r2, #5794	; 0x16a2
   16560:	4293      	cmp	r3, r2
   16562:	d012      	beq.n	1658a <iso_year_adjust+0xb2>
   16564:	db13      	blt.n	1658e <iso_year_adjust+0xb6>
   16566:	f5a3 53b5 	sub.w	r3, r3, #5792	; 0x16a0
   1656a:	3b12      	subs	r3, #18
   1656c:	2b02      	cmp	r3, #2
   1656e:	d90c      	bls.n	1658a <iso_year_adjust+0xb2>
   16570:	e00d      	b.n	1658e <iso_year_adjust+0xb6>
   16572:	f241 62d5 	movw	r2, #5845	; 0x16d5
   16576:	4293      	cmp	r3, r2
   16578:	d007      	beq.n	1658a <iso_year_adjust+0xb2>
   1657a:	f241 62d7 	movw	r2, #5847	; 0x16d7
   1657e:	4293      	cmp	r3, r2
   16580:	d003      	beq.n	1658a <iso_year_adjust+0xb2>
   16582:	f241 62d3 	movw	r2, #5843	; 0x16d3
   16586:	4293      	cmp	r3, r2
   16588:	d101      	bne.n	1658e <iso_year_adjust+0xb6>
   1658a:	2001      	movs	r0, #1
   1658c:	bd10      	pop	{r4, pc}
   1658e:	2000      	movs	r0, #0
   16590:	bd10      	pop	{r4, pc}
   16592:	f04f 30ff 	mov.w	r0, #4294967295
   16596:	bd10      	pop	{r4, pc}

00016598 <__ctloc>:
   16598:	b538      	push	{r3, r4, r5, lr}
   1659a:	2300      	movs	r3, #0
   1659c:	4615      	mov	r5, r2
   1659e:	f8c0 33fc 	str.w	r3, [r0, #1020]	; 0x3fc
   165a2:	22ff      	movs	r2, #255	; 0xff
   165a4:	4604      	mov	r4, r0
   165a6:	f001 fb01 	bl	17bac <mbstowcs>
   165aa:	f1b0 3fff 	cmp.w	r0, #4294967295
   165ae:	bf08      	it	eq
   165b0:	2000      	moveq	r0, #0
   165b2:	6028      	str	r0, [r5, #0]
   165b4:	4620      	mov	r0, r4
   165b6:	bd38      	pop	{r3, r4, r5, pc}

000165b8 <wcsftime>:
   165b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   165bc:	f2ad 4da4 	subw	sp, sp, #1188	; 0x4a4
   165c0:	4607      	mov	r7, r0
   165c2:	460d      	mov	r5, r1
   165c4:	4691      	mov	r9, r2
   165c6:	461e      	mov	r6, r3
   165c8:	f7ff fda4 	bl	16114 <__get_current_time_locale>
   165cc:	4682      	mov	r10, r0
   165ce:	2400      	movs	r4, #0
   165d0:	f8d9 3000 	ldr.w	r3, [r9]
   165d4:	2b00      	cmp	r3, #0
   165d6:	f000 8437 	beq.w	16e48 <wcsftime+0x890>
   165da:	2b25      	cmp	r3, #37	; 0x25
   165dc:	d009      	beq.n	165f2 <wcsftime+0x3a>
   165de:	1e6a      	subs	r2, r5, #1
   165e0:	4294      	cmp	r4, r2
   165e2:	f080 8436 	bcs.w	16e52 <wcsftime+0x89a>
   165e6:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
   165ea:	f109 0904 	add.w	r9, r9, #4
   165ee:	3401      	adds	r4, #1
   165f0:	e7ee      	b.n	165d0 <wcsftime+0x18>
   165f2:	f8d9 3004 	ldr.w	r3, [r9, #4]
   165f6:	2b30      	cmp	r3, #48	; 0x30
   165f8:	d005      	beq.n	16606 <wcsftime+0x4e>
   165fa:	2b2b      	cmp	r3, #43	; 0x2b
   165fc:	d003      	beq.n	16606 <wcsftime+0x4e>
   165fe:	f109 0904 	add.w	r9, r9, #4
   16602:	2300      	movs	r3, #0
   16604:	e001      	b.n	1660a <wcsftime+0x52>
   16606:	f109 0908 	add.w	r9, r9, #8
   1660a:	f8d9 2000 	ldr.w	r2, [r9]
   1660e:	3a31      	subs	r2, #49	; 0x31
   16610:	2a08      	cmp	r2, #8
   16612:	d80a      	bhi.n	1662a <wcsftime+0x72>
   16614:	4648      	mov	r0, r9
   16616:	a908      	add	r1, sp, #32
   16618:	220a      	movs	r2, #10
   1661a:	9302      	str	r3, [sp, #8]
   1661c:	f000 fcb2 	bl	16f84 <wcstoul>
   16620:	f8dd 9020 	ldr.w	r9, [sp, #32]
   16624:	4680      	mov	r8, r0
   16626:	9b02      	ldr	r3, [sp, #8]
   16628:	e001      	b.n	1662e <wcsftime+0x76>
   1662a:	f04f 0800 	mov.w	r8, #0
   1662e:	f8d9 2000 	ldr.w	r2, [r9]
   16632:	2a45      	cmp	r2, #69	; 0x45
   16634:	d001      	beq.n	1663a <wcsftime+0x82>
   16636:	2a4f      	cmp	r2, #79	; 0x4f
   16638:	d101      	bne.n	1663e <wcsftime+0x86>
   1663a:	f109 0904 	add.w	r9, r9, #4
   1663e:	f8d9 2000 	ldr.w	r2, [r9]
   16642:	f1a2 0125 	sub.w	r1, r2, #37	; 0x25
   16646:	2955      	cmp	r1, #85	; 0x55
   16648:	f200 8403 	bhi.w	16e52 <wcsftime+0x89a>
   1664c:	e8df f011 	tbh	[pc, r1, lsl #1]
   16650:	040103ee 	.word	0x040103ee
   16654:	04010401 	.word	0x04010401
   16658:	04010401 	.word	0x04010401
   1665c:	04010401 	.word	0x04010401
   16660:	04010401 	.word	0x04010401
   16664:	04010401 	.word	0x04010401
   16668:	04010401 	.word	0x04010401
   1666c:	04010401 	.word	0x04010401
   16670:	04010401 	.word	0x04010401
   16674:	04010401 	.word	0x04010401
   16678:	04010401 	.word	0x04010401
   1667c:	04010401 	.word	0x04010401
   16680:	04010401 	.word	0x04010401
   16684:	04010401 	.word	0x04010401
   16688:	00a0006f 	.word	0x00a0006f
   1668c:	011f00d4 	.word	0x011f00d4
   16690:	01460401 	.word	0x01460401
   16694:	024e01aa 	.word	0x024e01aa
   16698:	0401025a 	.word	0x0401025a
   1669c:	04010401 	.word	0x04010401
   166a0:	0401027d 	.word	0x0401027d
   166a4:	02890401 	.word	0x02890401
   166a8:	02ae0401 	.word	0x02ae0401
   166ac:	02c202b6 	.word	0x02c202b6
   166b0:	02df02da 	.word	0x02df02da
   166b4:	00c50326 	.word	0x00c50326
   166b8:	03c00348 	.word	0x03c00348
   166bc:	04010401 	.word	0x04010401
   166c0:	04010401 	.word	0x04010401
   166c4:	04010401 	.word	0x04010401
   166c8:	00880056 	.word	0x00880056
   166cc:	010e00b9 	.word	0x010e00b9
   166d0:	0401010e 	.word	0x0401010e
   166d4:	00880172 	.word	0x00880172
   166d8:	02700401 	.word	0x02700401
   166dc:	025a024e 	.word	0x025a024e
   166e0:	02830276 	.word	0x02830276
   166e4:	02890401 	.word	0x02890401
   166e8:	00bd0401 	.word	0x00bd0401
   166ec:	02bc0401 	.word	0x02bc0401
   166f0:	040102cc 	.word	0x040102cc
   166f4:	00c1031f 	.word	0x00c1031f
   166f8:	037c0337 	.word	0x037c0337
   166fc:	69b3      	ldr	r3, [r6, #24]
   166fe:	a828      	add	r0, sp, #160	; 0xa0
   16700:	3318      	adds	r3, #24
   16702:	f85a 1023 	ldr.w	r1, [r10, r3, lsl #2]
   16706:	aa07      	add	r2, sp, #28
   16708:	f7ff ff46 	bl	16598 <__ctloc>
   1670c:	9b07      	ldr	r3, [sp, #28]
   1670e:	eba0 0084 	sub.w	r0, r0, r4, lsl #2
   16712:	4423      	add	r3, r4
   16714:	429c      	cmp	r4, r3
   16716:	f000 8390 	beq.w	16e3a <wcsftime+0x882>
   1671a:	1e6a      	subs	r2, r5, #1
   1671c:	4294      	cmp	r4, r2
   1671e:	f080 8398 	bcs.w	16e52 <wcsftime+0x89a>
   16722:	f850 2024 	ldr.w	r2, [r0, r4, lsl #2]
   16726:	f847 2024 	str.w	r2, [r7, r4, lsl #2]
   1672a:	3401      	adds	r4, #1
   1672c:	e7f2      	b.n	16714 <wcsftime+0x15c>
   1672e:	69b3      	ldr	r3, [r6, #24]
   16730:	a828      	add	r0, sp, #160	; 0xa0
   16732:	eb0a 0383 	add.w	r3, r10, r3, lsl #2
   16736:	6fd9      	ldr	r1, [r3, #124]	; 0x7c
   16738:	aa07      	add	r2, sp, #28
   1673a:	f7ff ff2d 	bl	16598 <__ctloc>
   1673e:	9b07      	ldr	r3, [sp, #28]
   16740:	eba0 0084 	sub.w	r0, r0, r4, lsl #2
   16744:	4423      	add	r3, r4
   16746:	429c      	cmp	r4, r3
   16748:	f000 8377 	beq.w	16e3a <wcsftime+0x882>
   1674c:	1e6a      	subs	r2, r5, #1
   1674e:	4294      	cmp	r4, r2
   16750:	f080 837f 	bcs.w	16e52 <wcsftime+0x89a>
   16754:	f850 2024 	ldr.w	r2, [r0, r4, lsl #2]
   16758:	f847 2024 	str.w	r2, [r7, r4, lsl #2]
   1675c:	3401      	adds	r4, #1
   1675e:	e7f2      	b.n	16746 <wcsftime+0x18e>
   16760:	6933      	ldr	r3, [r6, #16]
   16762:	a828      	add	r0, sp, #160	; 0xa0
   16764:	f85a 1023 	ldr.w	r1, [r10, r3, lsl #2]
   16768:	aa07      	add	r2, sp, #28
   1676a:	f7ff ff15 	bl	16598 <__ctloc>
   1676e:	9b07      	ldr	r3, [sp, #28]
   16770:	eba0 0084 	sub.w	r0, r0, r4, lsl #2
   16774:	4423      	add	r3, r4
   16776:	429c      	cmp	r4, r3
   16778:	f000 835f 	beq.w	16e3a <wcsftime+0x882>
   1677c:	1e6a      	subs	r2, r5, #1
   1677e:	4294      	cmp	r4, r2
   16780:	f080 8367 	bcs.w	16e52 <wcsftime+0x89a>
   16784:	f850 2024 	ldr.w	r2, [r0, r4, lsl #2]
   16788:	f847 2024 	str.w	r2, [r7, r4, lsl #2]
   1678c:	3401      	adds	r4, #1
   1678e:	e7f2      	b.n	16776 <wcsftime+0x1be>
   16790:	6933      	ldr	r3, [r6, #16]
   16792:	a828      	add	r0, sp, #160	; 0xa0
   16794:	330c      	adds	r3, #12
   16796:	f85a 1023 	ldr.w	r1, [r10, r3, lsl #2]
   1679a:	aa07      	add	r2, sp, #28
   1679c:	f7ff fefc 	bl	16598 <__ctloc>
   167a0:	9b07      	ldr	r3, [sp, #28]
   167a2:	eba0 0084 	sub.w	r0, r0, r4, lsl #2
   167a6:	4423      	add	r3, r4
   167a8:	429c      	cmp	r4, r3
   167aa:	f000 8346 	beq.w	16e3a <wcsftime+0x882>
   167ae:	1e6a      	subs	r2, r5, #1
   167b0:	4294      	cmp	r4, r2
   167b2:	f080 834e 	bcs.w	16e52 <wcsftime+0x89a>
   167b6:	f850 2024 	ldr.w	r2, [r0, r4, lsl #2]
   167ba:	f847 2024 	str.w	r2, [r7, r4, lsl #2]
   167be:	3401      	adds	r4, #1
   167c0:	e7f2      	b.n	167a8 <wcsftime+0x1f0>
   167c2:	a828      	add	r0, sp, #160	; 0xa0
   167c4:	f8da 10a0 	ldr.w	r1, [r10, #160]	; 0xa0
   167c8:	e00a      	b.n	167e0 <wcsftime+0x228>
   167ca:	a828      	add	r0, sp, #160	; 0xa0
   167cc:	f8da 10e4 	ldr.w	r1, [r10, #228]	; 0xe4
   167d0:	e006      	b.n	167e0 <wcsftime+0x228>
   167d2:	a828      	add	r0, sp, #160	; 0xa0
   167d4:	f8da 109c 	ldr.w	r1, [r10, #156]	; 0x9c
   167d8:	e002      	b.n	167e0 <wcsftime+0x228>
   167da:	f8da 1098 	ldr.w	r1, [r10, #152]	; 0x98
   167de:	a828      	add	r0, sp, #160	; 0xa0
   167e0:	aa07      	add	r2, sp, #28
   167e2:	f7ff fed9 	bl	16598 <__ctloc>
   167e6:	6803      	ldr	r3, [r0, #0]
   167e8:	4602      	mov	r2, r0
   167ea:	2b00      	cmp	r3, #0
   167ec:	f000 8325 	beq.w	16e3a <wcsftime+0x882>
   167f0:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   167f4:	1b29      	subs	r1, r5, r4
   167f6:	e095      	b.n	16924 <wcsftime+0x36c>
   167f8:	6970      	ldr	r0, [r6, #20]
   167fa:	4aaf      	ldr	r2, [pc, #700]	; (16ab8 <wcsftime+0x500>)
   167fc:	4290      	cmp	r0, r2
   167fe:	bfac      	ite	ge
   16800:	f04f 0b00 	movge.w	r11, #0
   16804:	f04f 0b01 	movlt.w	r11, #1
   16808:	2800      	cmp	r0, #0
   1680a:	db04      	blt.n	16816 <wcsftime+0x25e>
   1680c:	2264      	movs	r2, #100	; 0x64
   1680e:	fb90 f0f2 	sdiv	r0, r0, r2
   16812:	3013      	adds	r0, #19
   16814:	e008      	b.n	16828 <wcsftime+0x270>
   16816:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   1681a:	9302      	str	r3, [sp, #8]
   1681c:	f000 fd4e 	bl	172bc <abs>
   16820:	2264      	movs	r2, #100	; 0x64
   16822:	fb90 f0f2 	sdiv	r0, r0, r2
   16826:	9b02      	ldr	r3, [sp, #8]
   16828:	b143      	cbz	r3, 1683c <wcsftime+0x284>
   1682a:	2863      	cmp	r0, #99	; 0x63
   1682c:	dd09      	ble.n	16842 <wcsftime+0x28a>
   1682e:	4aa3      	ldr	r2, [pc, #652]	; (16abc <wcsftime+0x504>)
   16830:	49a3      	ldr	r1, [pc, #652]	; (16ac0 <wcsftime+0x508>)
   16832:	2b2b      	cmp	r3, #43	; 0x2b
   16834:	bf14      	ite	ne
   16836:	460b      	movne	r3, r1
   16838:	4613      	moveq	r3, r2
   1683a:	e003      	b.n	16844 <wcsftime+0x28c>
   1683c:	4ba0      	ldr	r3, [pc, #640]	; (16ac0 <wcsftime+0x508>)
   1683e:	4aa1      	ldr	r2, [pc, #644]	; (16ac4 <wcsftime+0x50c>)
   16840:	e001      	b.n	16846 <wcsftime+0x28e>
   16842:	4b9f      	ldr	r3, [pc, #636]	; (16ac0 <wcsftime+0x508>)
   16844:	4aa0      	ldr	r2, [pc, #640]	; (16ac8 <wcsftime+0x510>)
   16846:	f1b8 0f01 	cmp.w	r8, #1
   1684a:	bf98      	it	ls
   1684c:	f04f 0802 	movls.w	r8, #2
   16850:	f8df e294 	ldr.w	lr, [pc, #660]	; 16ae8 <wcsftime+0x530>
   16854:	ebcb 0108 	rsb	r1, r11, r8
   16858:	9100      	str	r1, [sp, #0]
   1685a:	9001      	str	r0, [sp, #4]
   1685c:	1b29      	subs	r1, r5, r4
   1685e:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16862:	f1bb 0f00 	cmp.w	r11, #0
   16866:	bf18      	it	ne
   16868:	4673      	movne	r3, lr
   1686a:	e034      	b.n	168d6 <wcsftime+0x31e>
   1686c:	4b97      	ldr	r3, [pc, #604]	; (16acc <wcsftime+0x514>)
   1686e:	f8df e270 	ldr.w	lr, [pc, #624]	; 16ae0 <wcsftime+0x528>
   16872:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16876:	2a64      	cmp	r2, #100	; 0x64
   16878:	bf0c      	ite	eq
   1687a:	4672      	moveq	r2, lr
   1687c:	461a      	movne	r2, r3
   1687e:	68f3      	ldr	r3, [r6, #12]
   16880:	1b29      	subs	r1, r5, r4
   16882:	f002 f935 	bl	18af0 <swprintf>
   16886:	2800      	cmp	r0, #0
   16888:	f280 828e 	bge.w	16da8 <wcsftime+0x7f0>
   1688c:	e2e1      	b.n	16e52 <wcsftime+0x89a>
   1688e:	6970      	ldr	r0, [r6, #20]
   16890:	6933      	ldr	r3, [r6, #16]
   16892:	2800      	cmp	r0, #0
   16894:	f103 0801 	add.w	r8, r3, #1
   16898:	eb07 0184 	add.w	r1, r7, r4, lsl #2
   1689c:	ebc4 0b05 	rsb	r11, r4, r5
   168a0:	68f3      	ldr	r3, [r6, #12]
   168a2:	db05      	blt.n	168b0 <wcsftime+0x2f8>
   168a4:	2264      	movs	r2, #100	; 0x64
   168a6:	fb90 fef2 	sdiv	lr, r0, r2
   168aa:	fb02 001e 	mls	r0, r2, lr, r0
   168ae:	e00c      	b.n	168ca <wcsftime+0x312>
   168b0:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   168b4:	9303      	str	r3, [sp, #12]
   168b6:	9102      	str	r1, [sp, #8]
   168b8:	f000 fd00 	bl	172bc <abs>
   168bc:	2264      	movs	r2, #100	; 0x64
   168be:	fb90 fef2 	sdiv	lr, r0, r2
   168c2:	fb0e 0012 	mls	r0, lr, r2, r0
   168c6:	9b03      	ldr	r3, [sp, #12]
   168c8:	9902      	ldr	r1, [sp, #8]
   168ca:	9300      	str	r3, [sp, #0]
   168cc:	9001      	str	r0, [sp, #4]
   168ce:	4643      	mov	r3, r8
   168d0:	4608      	mov	r0, r1
   168d2:	4659      	mov	r1, r11
   168d4:	4a7e      	ldr	r2, [pc, #504]	; (16ad0 <wcsftime+0x518>)
   168d6:	f002 f90b 	bl	18af0 <swprintf>
   168da:	e7d4      	b.n	16886 <wcsftime+0x2ce>
   168dc:	2225      	movs	r2, #37	; 0x25
   168de:	9208      	str	r2, [sp, #32]
   168e0:	b133      	cbz	r3, 168f0 <wcsftime+0x338>
   168e2:	f1b8 0f05 	cmp.w	r8, #5
   168e6:	9309      	str	r3, [sp, #36]	; 0x24
   168e8:	bf98      	it	ls
   168ea:	f04f 0806 	movls.w	r8, #6
   168ee:	e003      	b.n	168f8 <wcsftime+0x340>
   168f0:	232b      	movs	r3, #43	; 0x2b
   168f2:	9309      	str	r3, [sp, #36]	; 0x24
   168f4:	f04f 080a 	mov.w	r8, #10
   168f8:	f1b8 0306 	subs.w	r3, r8, #6
   168fc:	d101      	bne.n	16902 <wcsftime+0x34a>
   168fe:	a80a      	add	r0, sp, #40	; 0x28
   16900:	e009      	b.n	16916 <wcsftime+0x35e>
   16902:	a80a      	add	r0, sp, #40	; 0x28
   16904:	211e      	movs	r1, #30
   16906:	4a73      	ldr	r2, [pc, #460]	; (16ad4 <wcsftime+0x51c>)
   16908:	f002 f8f2 	bl	18af0 <swprintf>
   1690c:	2800      	cmp	r0, #0
   1690e:	ddf6      	ble.n	168fe <wcsftime+0x346>
   16910:	ab0a      	add	r3, sp, #40	; 0x28
   16912:	eb03 0080 	add.w	r0, r3, r0, lsl #2
   16916:	4970      	ldr	r1, [pc, #448]	; (16ad8 <wcsftime+0x520>)
   16918:	f002 f92a 	bl	18b70 <wcscpy>
   1691c:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16920:	1b29      	subs	r1, r5, r4
   16922:	aa08      	add	r2, sp, #32
   16924:	4633      	mov	r3, r6
   16926:	f7ff fe47 	bl	165b8 <wcsftime>
   1692a:	2800      	cmp	r0, #0
   1692c:	f340 8291 	ble.w	16e52 <wcsftime+0x89a>
   16930:	4404      	add	r4, r0
   16932:	e282      	b.n	16e3a <wcsftime+0x882>
   16934:	4630      	mov	r0, r6
   16936:	f7ff fdcf 	bl	164d8 <iso_year_adjust>
   1693a:	4680      	mov	r8, r0
   1693c:	6970      	ldr	r0, [r6, #20]
   1693e:	2800      	cmp	r0, #0
   16940:	db05      	blt.n	1694e <wcsftime+0x396>
   16942:	2264      	movs	r2, #100	; 0x64
   16944:	fb90 f1f2 	sdiv	r1, r0, r2
   16948:	fb02 0011 	mls	r0, r2, r1, r0
   1694c:	e008      	b.n	16960 <wcsftime+0x3a8>
   1694e:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   16952:	f000 fcb3 	bl	172bc <abs>
   16956:	2264      	movs	r2, #100	; 0x64
   16958:	fb90 f3f2 	sdiv	r3, r0, r2
   1695c:	fb03 0012 	mls	r0, r3, r2, r0
   16960:	f1b8 0f00 	cmp.w	r8, #0
   16964:	da06      	bge.n	16974 <wcsftime+0x3bc>
   16966:	6972      	ldr	r2, [r6, #20]
   16968:	4b5c      	ldr	r3, [pc, #368]	; (16adc <wcsftime+0x524>)
   1696a:	429a      	cmp	r2, r3
   1696c:	bfb8      	it	lt
   1696e:	f04f 0801 	movlt.w	r8, #1
   16972:	e006      	b.n	16982 <wcsftime+0x3ca>
   16974:	d005      	beq.n	16982 <wcsftime+0x3ca>
   16976:	6972      	ldr	r2, [r6, #20]
   16978:	4b4f      	ldr	r3, [pc, #316]	; (16ab8 <wcsftime+0x500>)
   1697a:	429a      	cmp	r2, r3
   1697c:	bfb8      	it	lt
   1697e:	f04f 38ff 	movlt.w	r8, #4294967295
   16982:	2364      	movs	r3, #100	; 0x64
   16984:	4440      	add	r0, r8
   16986:	fb90 fef3 	sdiv	lr, r0, r3
   1698a:	fb03 001e 	mls	r0, r3, lr, r0
   1698e:	eb00 0e03 	add.w	lr, r0, r3
   16992:	fb9e fcf3 	sdiv	r12, lr, r3
   16996:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   1699a:	1b29      	subs	r1, r5, r4
   1699c:	4a50      	ldr	r2, [pc, #320]	; (16ae0 <wcsftime+0x528>)
   1699e:	fb03 e31c 	mls	r3, r3, r12, lr
   169a2:	e76e      	b.n	16882 <wcsftime+0x2ca>
   169a4:	6971      	ldr	r1, [r6, #20]
   169a6:	4a44      	ldr	r2, [pc, #272]	; (16ab8 <wcsftime+0x500>)
   169a8:	9305      	str	r3, [sp, #20]
   169aa:	4291      	cmp	r1, r2
   169ac:	bfac      	ite	ge
   169ae:	2300      	movge	r3, #0
   169b0:	2301      	movlt	r3, #1
   169b2:	4630      	mov	r0, r6
   169b4:	9104      	str	r1, [sp, #16]
   169b6:	9303      	str	r3, [sp, #12]
   169b8:	9302      	str	r3, [sp, #8]
   169ba:	f7ff fd8d 	bl	164d8 <iso_year_adjust>
   169be:	9904      	ldr	r1, [sp, #16]
   169c0:	4683      	mov	r11, r0
   169c2:	2900      	cmp	r1, #0
   169c4:	9b05      	ldr	r3, [sp, #20]
   169c6:	db04      	blt.n	169d2 <wcsftime+0x41a>
   169c8:	2064      	movs	r0, #100	; 0x64
   169ca:	fb91 f1f0 	sdiv	r1, r1, r0
   169ce:	3113      	adds	r1, #19
   169d0:	e008      	b.n	169e4 <wcsftime+0x42c>
   169d2:	f201 706c 	addw	r0, r1, #1900	; 0x76c
   169d6:	9304      	str	r3, [sp, #16]
   169d8:	f000 fc70 	bl	172bc <abs>
   169dc:	2164      	movs	r1, #100	; 0x64
   169de:	fb90 f1f1 	sdiv	r1, r0, r1
   169e2:	9b04      	ldr	r3, [sp, #16]
   169e4:	6970      	ldr	r0, [r6, #20]
   169e6:	2800      	cmp	r0, #0
   169e8:	db06      	blt.n	169f8 <wcsftime+0x440>
   169ea:	f04f 0e64 	mov.w	lr, #100	; 0x64
   169ee:	fb90 fcfe 	sdiv	r12, r0, lr
   169f2:	fb0e 001c 	mls	r0, lr, r12, r0
   169f6:	e00d      	b.n	16a14 <wcsftime+0x45c>
   169f8:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   169fc:	9105      	str	r1, [sp, #20]
   169fe:	9304      	str	r3, [sp, #16]
   16a00:	f000 fc5c 	bl	172bc <abs>
   16a04:	f04f 0e64 	mov.w	lr, #100	; 0x64
   16a08:	fb90 fcfe 	sdiv	r12, r0, lr
   16a0c:	fb0c 001e 	mls	r0, r12, lr, r0
   16a10:	9905      	ldr	r1, [sp, #20]
   16a12:	9b04      	ldr	r3, [sp, #16]
   16a14:	f1bb 0f00 	cmp.w	r11, #0
   16a18:	da09      	bge.n	16a2e <wcsftime+0x476>
   16a1a:	f8df e0c0 	ldr.w	lr, [pc, #192]	; 16adc <wcsftime+0x524>
   16a1e:	6972      	ldr	r2, [r6, #20]
   16a20:	4572      	cmp	r2, lr
   16a22:	da0e      	bge.n	16a42 <wcsftime+0x48a>
   16a24:	f04f 0b01 	mov.w	r11, #1
   16a28:	f8cd b008 	str.w	r11, [sp, #8]
   16a2c:	e009      	b.n	16a42 <wcsftime+0x48a>
   16a2e:	d008      	beq.n	16a42 <wcsftime+0x48a>
   16a30:	9a03      	ldr	r2, [sp, #12]
   16a32:	2a00      	cmp	r2, #0
   16a34:	bf14      	ite	ne
   16a36:	2201      	movne	r2, #1
   16a38:	2200      	moveq	r2, #0
   16a3a:	9202      	str	r2, [sp, #8]
   16a3c:	bf18      	it	ne
   16a3e:	f04f 3bff 	movne.w	r11, #4294967295
   16a42:	eb00 020b 	add.w	r2, r0, r11
   16a46:	1c50      	adds	r0, r2, #1
   16a48:	d102      	bne.n	16a50 <wcsftime+0x498>
   16a4a:	3901      	subs	r1, #1
   16a4c:	2263      	movs	r2, #99	; 0x63
   16a4e:	e003      	b.n	16a58 <wcsftime+0x4a0>
   16a50:	2a64      	cmp	r2, #100	; 0x64
   16a52:	bf04      	itt	eq
   16a54:	3101      	addeq	r1, #1
   16a56:	2200      	moveq	r2, #0
   16a58:	f04f 0c64 	mov.w	r12, #100	; 0x64
   16a5c:	fb0c 2201 	mla	r2, r12, r1, r2
   16a60:	9902      	ldr	r1, [sp, #8]
   16a62:	b139      	cbz	r1, 16a74 <wcsftime+0x4bc>
   16a64:	212d      	movs	r1, #45	; 0x2d
   16a66:	9108      	str	r1, [sp, #32]
   16a68:	f1b8 0f00 	cmp.w	r8, #0
   16a6c:	d010      	beq.n	16a90 <wcsftime+0x4d8>
   16a6e:	f108 38ff 	add.w	r8, r8, #4294967295
   16a72:	e00d      	b.n	16a90 <wcsftime+0x4d8>
   16a74:	2b2b      	cmp	r3, #43	; 0x2b
   16a76:	d10d      	bne.n	16a94 <wcsftime+0x4dc>
   16a78:	f242 710f 	movw	r1, #9999	; 0x270f
   16a7c:	428a      	cmp	r2, r1
   16a7e:	d909      	bls.n	16a94 <wcsftime+0x4dc>
   16a80:	9308      	str	r3, [sp, #32]
   16a82:	f1b8 0f00 	cmp.w	r8, #0
   16a86:	d1f2      	bne.n	16a6e <wcsftime+0x4b6>
   16a88:	2325      	movs	r3, #37	; 0x25
   16a8a:	9309      	str	r3, [sp, #36]	; 0x24
   16a8c:	a909      	add	r1, sp, #36	; 0x24
   16a8e:	e007      	b.n	16aa0 <wcsftime+0x4e8>
   16a90:	a909      	add	r1, sp, #36	; 0x24
   16a92:	e000      	b.n	16a96 <wcsftime+0x4de>
   16a94:	a908      	add	r1, sp, #32
   16a96:	2025      	movs	r0, #37	; 0x25
   16a98:	6008      	str	r0, [r1, #0]
   16a9a:	b90b      	cbnz	r3, 16aa0 <wcsftime+0x4e8>
   16a9c:	1d08      	adds	r0, r1, #4
   16a9e:	e003      	b.n	16aa8 <wcsftime+0x4f0>
   16aa0:	2330      	movs	r3, #48	; 0x30
   16aa2:	f101 0008 	add.w	r0, r1, #8
   16aa6:	604b      	str	r3, [r1, #4]
   16aa8:	490e      	ldr	r1, [pc, #56]	; (16ae4 <wcsftime+0x52c>)
   16aaa:	9202      	str	r2, [sp, #8]
   16aac:	f002 f860 	bl	18b70 <wcscpy>
   16ab0:	9a02      	ldr	r2, [sp, #8]
   16ab2:	9200      	str	r2, [sp, #0]
   16ab4:	e142      	b.n	16d3c <wcsftime+0x784>
   16ab6:	bf00      	nop
   16ab8:	fffff894 	.word	0xfffff894
   16abc:	0001c7a2 	.word	0x0001c7a2
   16ac0:	0001c156 	.word	0x0001c156
   16ac4:	0001c974 	.word	0x0001c974
   16ac8:	0001c990 	.word	0x0001c990
   16acc:	0001c9b0 	.word	0x0001c9b0
   16ad0:	0001c9c0 	.word	0x0001c9c0
   16ad4:	0001c9fc 	.word	0x0001c9fc
   16ad8:	0001ca0c 	.word	0x0001ca0c
   16adc:	fffff895 	.word	0xfffff895
   16ae0:	0001c9e8 	.word	0x0001c9e8
   16ae4:	0001ca2c 	.word	0x0001ca2c
   16ae8:	0001c78b 	.word	0x0001c78b
   16aec:	4bb0      	ldr	r3, [pc, #704]	; (16db0 <wcsftime+0x7f8>)
   16aee:	f8df e2dc 	ldr.w	lr, [pc, #732]	; 16dcc <wcsftime+0x814>
   16af2:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16af6:	2a6b      	cmp	r2, #107	; 0x6b
   16af8:	bf0c      	ite	eq
   16afa:	4672      	moveq	r2, lr
   16afc:	461a      	movne	r2, r3
   16afe:	1b29      	subs	r1, r5, r4
   16b00:	68b3      	ldr	r3, [r6, #8]
   16b02:	e6be      	b.n	16882 <wcsftime+0x2ca>
   16b04:	68b1      	ldr	r1, [r6, #8]
   16b06:	230c      	movs	r3, #12
   16b08:	b131      	cbz	r1, 16b18 <wcsftime+0x560>
   16b0a:	4299      	cmp	r1, r3
   16b0c:	bf16      	itet	ne
   16b0e:	fb91 f0f3 	sdivne	r0, r1, r3
   16b12:	460b      	moveq	r3, r1
   16b14:	fb03 1310 	mlsne	r3, r3, r0, r1
   16b18:	f8df e2b0 	ldr.w	lr, [pc, #688]	; 16dcc <wcsftime+0x814>
   16b1c:	f8df c290 	ldr.w	r12, [pc, #656]	; 16db0 <wcsftime+0x7f8>
   16b20:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16b24:	1b29      	subs	r1, r5, r4
   16b26:	2a49      	cmp	r2, #73	; 0x49
   16b28:	bf0c      	ite	eq
   16b2a:	4662      	moveq	r2, r12
   16b2c:	4672      	movne	r2, lr
   16b2e:	e6a8      	b.n	16882 <wcsftime+0x2ca>
   16b30:	69f3      	ldr	r3, [r6, #28]
   16b32:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16b36:	1b29      	subs	r1, r5, r4
   16b38:	4a9e      	ldr	r2, [pc, #632]	; (16db4 <wcsftime+0x7fc>)
   16b3a:	e004      	b.n	16b46 <wcsftime+0x58e>
   16b3c:	6933      	ldr	r3, [r6, #16]
   16b3e:	4a9c      	ldr	r2, [pc, #624]	; (16db0 <wcsftime+0x7f8>)
   16b40:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16b44:	1b29      	subs	r1, r5, r4
   16b46:	3301      	adds	r3, #1
   16b48:	e69b      	b.n	16882 <wcsftime+0x2ca>
   16b4a:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16b4e:	1b29      	subs	r1, r5, r4
   16b50:	4a97      	ldr	r2, [pc, #604]	; (16db0 <wcsftime+0x7f8>)
   16b52:	6873      	ldr	r3, [r6, #4]
   16b54:	e695      	b.n	16882 <wcsftime+0x2ca>
   16b56:	1e6b      	subs	r3, r5, #1
   16b58:	429c      	cmp	r4, r3
   16b5a:	f080 817a 	bcs.w	16e52 <wcsftime+0x89a>
   16b5e:	230a      	movs	r3, #10
   16b60:	e168      	b.n	16e34 <wcsftime+0x87c>
   16b62:	68b3      	ldr	r3, [r6, #8]
   16b64:	a828      	add	r0, sp, #160	; 0xa0
   16b66:	2b0b      	cmp	r3, #11
   16b68:	bfcc      	ite	gt
   16b6a:	23a4      	movgt	r3, #164	; 0xa4
   16b6c:	23a0      	movle	r3, #160	; 0xa0
   16b6e:	4453      	add	r3, r10
   16b70:	6859      	ldr	r1, [r3, #4]
   16b72:	aa07      	add	r2, sp, #28
   16b74:	f7ff fd10 	bl	16598 <__ctloc>
   16b78:	46a0      	mov	r8, r4
   16b7a:	eba0 0b84 	sub.w	r11, r0, r4, lsl #2
   16b7e:	9a07      	ldr	r2, [sp, #28]
   16b80:	ebc4 0308 	rsb	r3, r4, r8
   16b84:	4293      	cmp	r3, r2
   16b86:	f080 814f 	bcs.w	16e28 <wcsftime+0x870>
   16b8a:	1e6b      	subs	r3, r5, #1
   16b8c:	4598      	cmp	r8, r3
   16b8e:	f080 8160 	bcs.w	16e52 <wcsftime+0x89a>
   16b92:	f8d9 3000 	ldr.w	r3, [r9]
   16b96:	f85b 0028 	ldr.w	r0, [r11, r8, lsl #2]
   16b9a:	2b50      	cmp	r3, #80	; 0x50
   16b9c:	d101      	bne.n	16ba2 <wcsftime+0x5ea>
   16b9e:	f7ff fac9 	bl	16134 <towlower>
   16ba2:	f847 0028 	str.w	r0, [r7, r8, lsl #2]
   16ba6:	f108 0801 	add.w	r8, r8, #1
   16baa:	e7e8      	b.n	16b7e <wcsftime+0x5c6>
   16bac:	6873      	ldr	r3, [r6, #4]
   16bae:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16bb2:	9300      	str	r3, [sp, #0]
   16bb4:	1b29      	subs	r1, r5, r4
   16bb6:	4a80      	ldr	r2, [pc, #512]	; (16db8 <wcsftime+0x800>)
   16bb8:	68b3      	ldr	r3, [r6, #8]
   16bba:	e0f2      	b.n	16da2 <wcsftime+0x7ea>
   16bbc:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16bc0:	1b29      	subs	r1, r5, r4
   16bc2:	4a7b      	ldr	r2, [pc, #492]	; (16db0 <wcsftime+0x7f8>)
   16bc4:	6833      	ldr	r3, [r6, #0]
   16bc6:	e65c      	b.n	16882 <wcsftime+0x2ca>
   16bc8:	1e6b      	subs	r3, r5, #1
   16bca:	429c      	cmp	r4, r3
   16bcc:	f080 8141 	bcs.w	16e52 <wcsftime+0x89a>
   16bd0:	2309      	movs	r3, #9
   16bd2:	e12f      	b.n	16e34 <wcsftime+0x87c>
   16bd4:	6873      	ldr	r3, [r6, #4]
   16bd6:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16bda:	9300      	str	r3, [sp, #0]
   16bdc:	6833      	ldr	r3, [r6, #0]
   16bde:	1b29      	subs	r1, r5, r4
   16be0:	9301      	str	r3, [sp, #4]
   16be2:	4a76      	ldr	r2, [pc, #472]	; (16dbc <wcsftime+0x804>)
   16be4:	68b3      	ldr	r3, [r6, #8]
   16be6:	e676      	b.n	168d6 <wcsftime+0x31e>
   16be8:	1e6b      	subs	r3, r5, #1
   16bea:	429c      	cmp	r4, r3
   16bec:	f080 8131 	bcs.w	16e52 <wcsftime+0x89a>
   16bf0:	69b3      	ldr	r3, [r6, #24]
   16bf2:	1c62      	adds	r2, r4, #1
   16bf4:	b90b      	cbnz	r3, 16bfa <wcsftime+0x642>
   16bf6:	2337      	movs	r3, #55	; 0x37
   16bf8:	e000      	b.n	16bfc <wcsftime+0x644>
   16bfa:	3330      	adds	r3, #48	; 0x30
   16bfc:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
   16c00:	4614      	mov	r4, r2
   16c02:	e11a      	b.n	16e3a <wcsftime+0x882>
   16c04:	69f3      	ldr	r3, [r6, #28]
   16c06:	69b2      	ldr	r2, [r6, #24]
   16c08:	3307      	adds	r3, #7
   16c0a:	1a9b      	subs	r3, r3, r2
   16c0c:	e04e      	b.n	16cac <wcsftime+0x6f4>
   16c0e:	4630      	mov	r0, r6
   16c10:	f7ff fc62 	bl	164d8 <iso_year_adjust>
   16c14:	69b2      	ldr	r2, [r6, #24]
   16c16:	b10a      	cbz	r2, 16c1c <wcsftime+0x664>
   16c18:	1e53      	subs	r3, r2, #1
   16c1a:	e000      	b.n	16c1e <wcsftime+0x666>
   16c1c:	2306      	movs	r3, #6
   16c1e:	2800      	cmp	r0, #0
   16c20:	69f2      	ldr	r2, [r6, #28]
   16c22:	dc32      	bgt.n	16c8a <wcsftime+0x6d2>
   16c24:	d105      	bne.n	16c32 <wcsftime+0x67a>
   16c26:	320a      	adds	r2, #10
   16c28:	1ad2      	subs	r2, r2, r3
   16c2a:	2307      	movs	r3, #7
   16c2c:	fb92 f3f3 	sdiv	r3, r2, r3
   16c30:	e051      	b.n	16cd6 <wcsftime+0x71e>
   16c32:	f240 716b 	movw	r1, #1899	; 0x76b
   16c36:	6970      	ldr	r0, [r6, #20]
   16c38:	1a9a      	subs	r2, r3, r2
   16c3a:	2800      	cmp	r0, #0
   16c3c:	bfb4      	ite	lt
   16c3e:	460b      	movlt	r3, r1
   16c40:	f06f 0364 	mvnge.w	r3, #100	; 0x64
   16c44:	4403      	add	r3, r0
   16c46:	0799      	lsls	r1, r3, #30
   16c48:	d107      	bne.n	16c5a <wcsftime+0x6a2>
   16c4a:	f04f 0e64 	mov.w	lr, #100	; 0x64
   16c4e:	4619      	mov	r1, r3
   16c50:	fb93 f3fe 	sdiv	r3, r3, lr
   16c54:	fb0e 1113 	mls	r1, lr, r3, r1
   16c58:	b981      	cbnz	r1, 16c7c <wcsftime+0x6c4>
   16c5a:	f240 736b 	movw	r3, #1899	; 0x76b
   16c5e:	2800      	cmp	r0, #0
   16c60:	bfa8      	it	ge
   16c62:	f06f 0364 	mvnge.w	r3, #100	; 0x64
   16c66:	4403      	add	r3, r0
   16c68:	f44f 70c8 	mov.w	r0, #400	; 0x190
   16c6c:	fb93 f1f0 	sdiv	r1, r3, r0
   16c70:	fb00 3311 	mls	r3, r0, r1, r3
   16c74:	fab3 f383 	clz	r3, r3
   16c78:	095b      	lsrs	r3, r3, #5
   16c7a:	e000      	b.n	16c7e <wcsftime+0x6c6>
   16c7c:	2301      	movs	r3, #1
   16c7e:	1ad2      	subs	r2, r2, r3
   16c80:	2a05      	cmp	r2, #5
   16c82:	bfb4      	ite	lt
   16c84:	2335      	movlt	r3, #53	; 0x35
   16c86:	2334      	movge	r3, #52	; 0x34
   16c88:	e025      	b.n	16cd6 <wcsftime+0x71e>
   16c8a:	2301      	movs	r3, #1
   16c8c:	e023      	b.n	16cd6 <wcsftime+0x71e>
   16c8e:	1e6b      	subs	r3, r5, #1
   16c90:	429c      	cmp	r4, r3
   16c92:	f080 80de 	bcs.w	16e52 <wcsftime+0x89a>
   16c96:	69b3      	ldr	r3, [r6, #24]
   16c98:	3330      	adds	r3, #48	; 0x30
   16c9a:	e0cb      	b.n	16e34 <wcsftime+0x87c>
   16c9c:	69b3      	ldr	r3, [r6, #24]
   16c9e:	b10b      	cbz	r3, 16ca4 <wcsftime+0x6ec>
   16ca0:	3b01      	subs	r3, #1
   16ca2:	e000      	b.n	16ca6 <wcsftime+0x6ee>
   16ca4:	2306      	movs	r3, #6
   16ca6:	69f2      	ldr	r2, [r6, #28]
   16ca8:	3207      	adds	r2, #7
   16caa:	1ad3      	subs	r3, r2, r3
   16cac:	f04f 0e07 	mov.w	lr, #7
   16cb0:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16cb4:	1b29      	subs	r1, r5, r4
   16cb6:	4a3e      	ldr	r2, [pc, #248]	; (16db0 <wcsftime+0x7f8>)
   16cb8:	fb93 f3fe 	sdiv	r3, r3, lr
   16cbc:	e5e1      	b.n	16882 <wcsftime+0x2ca>
   16cbe:	6970      	ldr	r0, [r6, #20]
   16cc0:	2800      	cmp	r0, #0
   16cc2:	da03      	bge.n	16ccc <wcsftime+0x714>
   16cc4:	f200 706c 	addw	r0, r0, #1900	; 0x76c
   16cc8:	f000 faf8 	bl	172bc <abs>
   16ccc:	2364      	movs	r3, #100	; 0x64
   16cce:	fb90 f2f3 	sdiv	r2, r0, r3
   16cd2:	fb02 0313 	mls	r3, r2, r3, r0
   16cd6:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16cda:	1b29      	subs	r1, r5, r4
   16cdc:	4a34      	ldr	r2, [pc, #208]	; (16db0 <wcsftime+0x7f8>)
   16cde:	e5d0      	b.n	16882 <wcsftime+0x2ca>
   16ce0:	6972      	ldr	r2, [r6, #20]
   16ce2:	4937      	ldr	r1, [pc, #220]	; (16dc0 <wcsftime+0x808>)
   16ce4:	f202 7b6c 	addw	r11, r2, #1900	; 0x76c
   16ce8:	428a      	cmp	r2, r1
   16cea:	da07      	bge.n	16cfc <wcsftime+0x744>
   16cec:	222d      	movs	r2, #45	; 0x2d
   16cee:	9208      	str	r2, [sp, #32]
   16cf0:	f1cb 0b00 	rsb	r11, r11, #0
   16cf4:	f1b8 0f00 	cmp.w	r8, #0
   16cf8:	d10a      	bne.n	16d10 <wcsftime+0x758>
   16cfa:	e00b      	b.n	16d14 <wcsftime+0x75c>
   16cfc:	2b2b      	cmp	r3, #43	; 0x2b
   16cfe:	d10b      	bne.n	16d18 <wcsftime+0x760>
   16d00:	f242 720f 	movw	r2, #9999	; 0x270f
   16d04:	4593      	cmp	r11, r2
   16d06:	d907      	bls.n	16d18 <wcsftime+0x760>
   16d08:	9308      	str	r3, [sp, #32]
   16d0a:	f1b8 0f00 	cmp.w	r8, #0
   16d0e:	d009      	beq.n	16d24 <wcsftime+0x76c>
   16d10:	f108 38ff 	add.w	r8, r8, #4294967295
   16d14:	aa09      	add	r2, sp, #36	; 0x24
   16d16:	e000      	b.n	16d1a <wcsftime+0x762>
   16d18:	aa08      	add	r2, sp, #32
   16d1a:	2125      	movs	r1, #37	; 0x25
   16d1c:	6011      	str	r1, [r2, #0]
   16d1e:	b923      	cbnz	r3, 16d2a <wcsftime+0x772>
   16d20:	1d10      	adds	r0, r2, #4
   16d22:	e006      	b.n	16d32 <wcsftime+0x77a>
   16d24:	2325      	movs	r3, #37	; 0x25
   16d26:	9309      	str	r3, [sp, #36]	; 0x24
   16d28:	aa09      	add	r2, sp, #36	; 0x24
   16d2a:	2330      	movs	r3, #48	; 0x30
   16d2c:	f102 0008 	add.w	r0, r2, #8
   16d30:	6053      	str	r3, [r2, #4]
   16d32:	4924      	ldr	r1, [pc, #144]	; (16dc4 <wcsftime+0x80c>)
   16d34:	f001 ff1c 	bl	18b70 <wcscpy>
   16d38:	f8cd b000 	str.w	r11, [sp]
   16d3c:	eb07 0084 	add.w	r0, r7, r4, lsl #2
   16d40:	1b29      	subs	r1, r5, r4
   16d42:	aa08      	add	r2, sp, #32
   16d44:	4643      	mov	r3, r8
   16d46:	e02c      	b.n	16da2 <wcsftime+0x7ea>
   16d48:	6a33      	ldr	r3, [r6, #32]
   16d4a:	2b00      	cmp	r3, #0
   16d4c:	db75      	blt.n	16e3a <wcsftime+0x882>
   16d4e:	f000 fec5 	bl	17adc <__gettzinfo>
   16d52:	4680      	mov	r8, r0
   16d54:	f7ff fa0a 	bl	1616c <__tz_lock>
   16d58:	6a33      	ldr	r3, [r6, #32]
   16d5a:	201c      	movs	r0, #28
   16d5c:	2b00      	cmp	r3, #0
   16d5e:	bfd4      	ite	le
   16d60:	2300      	movle	r3, #0
   16d62:	2301      	movgt	r3, #1
   16d64:	fb00 8003 	mla	r0, r0, r3, r8
   16d68:	6a03      	ldr	r3, [r0, #32]
   16d6a:	f04f 083c 	mov.w	r8, #60	; 0x3c
   16d6e:	f1c3 0b00 	rsb	r11, r3, #0
   16d72:	f7ff f9fc 	bl	1616e <__tz_unlock>
   16d76:	eb07 0284 	add.w	r2, r7, r4, lsl #2
   16d7a:	1b29      	subs	r1, r5, r4
   16d7c:	fb9b f0f8 	sdiv	r0, r11, r8
   16d80:	9203      	str	r2, [sp, #12]
   16d82:	9102      	str	r1, [sp, #8]
   16d84:	f000 fefc 	bl	17b80 <labs>
   16d88:	fb90 f3f8 	sdiv	r3, r0, r8
   16d8c:	fb03 0018 	mls	r0, r3, r8, r0
   16d90:	f44f 6361 	mov.w	r3, #3600	; 0xe10
   16d94:	fb9b f3f3 	sdiv	r3, r11, r3
   16d98:	9a03      	ldr	r2, [sp, #12]
   16d9a:	9000      	str	r0, [sp, #0]
   16d9c:	9902      	ldr	r1, [sp, #8]
   16d9e:	4610      	mov	r0, r2
   16da0:	4a09      	ldr	r2, [pc, #36]	; (16dc8 <wcsftime+0x810>)
   16da2:	f001 fea5 	bl	18af0 <swprintf>
   16da6:	e56e      	b.n	16886 <wcsftime+0x2ce>
   16da8:	4404      	add	r4, r0
   16daa:	42ac      	cmp	r4, r5
   16dac:	d345      	bcc.n	16e3a <wcsftime+0x882>
   16dae:	e050      	b.n	16e52 <wcsftime+0x89a>
   16db0:	0001c9e8 	.word	0x0001c9e8
   16db4:	0001ca3c 	.word	0x0001ca3c
   16db8:	0001ca64 	.word	0x0001ca64
   16dbc:	0001ca50 	.word	0x0001ca50
   16dc0:	fffff894 	.word	0xfffff894
   16dc4:	0001ca2c 	.word	0x0001ca2c
   16dc8:	0001ca8c 	.word	0x0001ca8c
   16dcc:	0001c9b0 	.word	0x0001c9b0
   16dd0:	6a33      	ldr	r3, [r6, #32]
   16dd2:	2b00      	cmp	r3, #0
   16dd4:	db31      	blt.n	16e3a <wcsftime+0x882>
   16dd6:	f7ff f9c9 	bl	1616c <__tz_lock>
   16dda:	6a33      	ldr	r3, [r6, #32]
   16ddc:	f8df 8080 	ldr.w	r8, [pc, #128]	; 16e60 <wcsftime+0x8a8>
   16de0:	2b00      	cmp	r3, #0
   16de2:	bfd4      	ite	le
   16de4:	2300      	movle	r3, #0
   16de6:	2301      	movgt	r3, #1
   16de8:	f858 0023 	ldr.w	r0, [r8, r3, lsl #2]
   16dec:	f7fe f9d4 	bl	15198 <strlen>
   16df0:	4641      	mov	r1, r8
   16df2:	eb07 0e84 	add.w	lr, r7, r4, lsl #2
   16df6:	2300      	movs	r3, #0
   16df8:	4283      	cmp	r3, r0
   16dfa:	eb03 0804 	add.w	r8, r3, r4
   16dfe:	d011      	beq.n	16e24 <wcsftime+0x86c>
   16e00:	1e6a      	subs	r2, r5, #1
   16e02:	4590      	cmp	r8, r2
   16e04:	d20b      	bcs.n	16e1e <wcsftime+0x866>
   16e06:	6a32      	ldr	r2, [r6, #32]
   16e08:	2a00      	cmp	r2, #0
   16e0a:	bfd4      	ite	le
   16e0c:	2200      	movle	r2, #0
   16e0e:	2201      	movgt	r2, #1
   16e10:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
   16e14:	5cd2      	ldrb	r2, [r2, r3]
   16e16:	f84e 2023 	str.w	r2, [lr, r3, lsl #2]
   16e1a:	3301      	adds	r3, #1
   16e1c:	e7ec      	b.n	16df8 <wcsftime+0x840>
   16e1e:	f7ff f9a6 	bl	1616e <__tz_unlock>
   16e22:	e016      	b.n	16e52 <wcsftime+0x89a>
   16e24:	f7ff f9a3 	bl	1616e <__tz_unlock>
   16e28:	4644      	mov	r4, r8
   16e2a:	e006      	b.n	16e3a <wcsftime+0x882>
   16e2c:	1e6b      	subs	r3, r5, #1
   16e2e:	429c      	cmp	r4, r3
   16e30:	d20f      	bcs.n	16e52 <wcsftime+0x89a>
   16e32:	2325      	movs	r3, #37	; 0x25
   16e34:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
   16e38:	3401      	adds	r4, #1
   16e3a:	f8d9 3000 	ldr.w	r3, [r9]
   16e3e:	b11b      	cbz	r3, 16e48 <wcsftime+0x890>
   16e40:	f109 0904 	add.w	r9, r9, #4
   16e44:	f7ff bbc4 	b.w	165d0 <wcsftime+0x18>
   16e48:	b12d      	cbz	r5, 16e56 <wcsftime+0x89e>
   16e4a:	2300      	movs	r3, #0
   16e4c:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
   16e50:	e001      	b.n	16e56 <wcsftime+0x89e>
   16e52:	2000      	movs	r0, #0
   16e54:	e000      	b.n	16e58 <wcsftime+0x8a0>
   16e56:	4620      	mov	r0, r4
   16e58:	f20d 4da4 	addw	sp, sp, #1188	; 0x4a4
   16e5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
   16e60:	10000238 	.word	0x10000238

00016e64 <wcslen>:
   16e64:	4602      	mov	r2, r0
   16e66:	4613      	mov	r3, r2
   16e68:	6819      	ldr	r1, [r3, #0]
   16e6a:	3204      	adds	r2, #4
   16e6c:	2900      	cmp	r1, #0
   16e6e:	d1fa      	bne.n	16e66 <wcslen+0x2>
   16e70:	1a18      	subs	r0, r3, r0
   16e72:	1080      	asrs	r0, r0, #2
   16e74:	4770      	bx	lr

00016e76 <_wcstoul_r>:
   16e76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   16e7a:	4689      	mov	r9, r1
   16e7c:	469b      	mov	r11, r3
   16e7e:	460f      	mov	r7, r1
   16e80:	b085      	sub	sp, #20
   16e82:	9003      	str	r0, [sp, #12]
   16e84:	9201      	str	r2, [sp, #4]
   16e86:	463d      	mov	r5, r7
   16e88:	f855 4b04 	ldr.w	r4, [r5], #4
   16e8c:	4620      	mov	r0, r4
   16e8e:	f7fc fadb 	bl	13448 <iswspace>
   16e92:	b108      	cbz	r0, 16e98 <_wcstoul_r+0x22>
   16e94:	462f      	mov	r7, r5
   16e96:	e7f6      	b.n	16e86 <_wcstoul_r+0x10>
   16e98:	2c2d      	cmp	r4, #45	; 0x2d
   16e9a:	d104      	bne.n	16ea6 <_wcstoul_r+0x30>
   16e9c:	f107 0508 	add.w	r5, r7, #8
   16ea0:	687c      	ldr	r4, [r7, #4]
   16ea2:	2601      	movs	r6, #1
   16ea4:	e005      	b.n	16eb2 <_wcstoul_r+0x3c>
   16ea6:	4606      	mov	r6, r0
   16ea8:	2c2b      	cmp	r4, #43	; 0x2b
   16eaa:	bf04      	itt	eq
   16eac:	687c      	ldreq	r4, [r7, #4]
   16eae:	f107 0508 	addeq.w	r5, r7, #8
   16eb2:	f1bb 0f00 	cmp.w	r11, #0
   16eb6:	d003      	beq.n	16ec0 <_wcstoul_r+0x4a>
   16eb8:	f1bb 0f10 	cmp.w	r11, #16
   16ebc:	d10b      	bne.n	16ed6 <_wcstoul_r+0x60>
   16ebe:	e059      	b.n	16f74 <_wcstoul_r+0xfe>
   16ec0:	2c30      	cmp	r4, #48	; 0x30
   16ec2:	d154      	bne.n	16f6e <_wcstoul_r+0xf8>
   16ec4:	682a      	ldr	r2, [r5, #0]
   16ec6:	f022 0220 	bic.w	r2, r2, #32
   16eca:	2a58      	cmp	r2, #88	; 0x58
   16ecc:	d146      	bne.n	16f5c <_wcstoul_r+0xe6>
   16ece:	686c      	ldr	r4, [r5, #4]
   16ed0:	f04f 0b10 	mov.w	r11, #16
   16ed4:	3508      	adds	r5, #8
   16ed6:	f04f 37ff 	mov.w	r7, #4294967295
   16eda:	fbb7 fafb 	udiv	r10, r7, r11
   16ede:	fb0b f80a 	mul.w	r8, r11, r10
   16ee2:	2700      	movs	r7, #0
   16ee4:	ea6f 0308 	mvn.w	r3, r8
   16ee8:	46b8      	mov	r8, r7
   16eea:	9302      	str	r3, [sp, #8]
   16eec:	4620      	mov	r0, r4
   16eee:	f7fc fa74 	bl	133da <iswdigit>
   16ef2:	b108      	cbz	r0, 16ef8 <_wcstoul_r+0x82>
   16ef4:	3c30      	subs	r4, #48	; 0x30
   16ef6:	e00b      	b.n	16f10 <_wcstoul_r+0x9a>
   16ef8:	4620      	mov	r0, r4
   16efa:	f000 fe11 	bl	17b20 <iswalpha>
   16efe:	b1d0      	cbz	r0, 16f36 <_wcstoul_r+0xc0>
   16f00:	4620      	mov	r0, r4
   16f02:	f7fc faaf 	bl	13464 <iswupper>
   16f06:	2800      	cmp	r0, #0
   16f08:	bf14      	ite	ne
   16f0a:	2037      	movne	r0, #55	; 0x37
   16f0c:	2057      	moveq	r0, #87	; 0x57
   16f0e:	1a24      	subs	r4, r4, r0
   16f10:	455c      	cmp	r4, r11
   16f12:	da10      	bge.n	16f36 <_wcstoul_r+0xc0>
   16f14:	1c7a      	adds	r2, r7, #1
   16f16:	d00b      	beq.n	16f30 <_wcstoul_r+0xba>
   16f18:	45d0      	cmp	r8, r10
   16f1a:	d807      	bhi.n	16f2c <_wcstoul_r+0xb6>
   16f1c:	d102      	bne.n	16f24 <_wcstoul_r+0xae>
   16f1e:	9b02      	ldr	r3, [sp, #8]
   16f20:	429c      	cmp	r4, r3
   16f22:	dc03      	bgt.n	16f2c <_wcstoul_r+0xb6>
   16f24:	fb0b 4808 	mla	r8, r11, r8, r4
   16f28:	2701      	movs	r7, #1
   16f2a:	e001      	b.n	16f30 <_wcstoul_r+0xba>
   16f2c:	f04f 37ff 	mov.w	r7, #4294967295
   16f30:	f855 4b04 	ldr.w	r4, [r5], #4
   16f34:	e7da      	b.n	16eec <_wcstoul_r+0x76>
   16f36:	1c7b      	adds	r3, r7, #1
   16f38:	d104      	bne.n	16f44 <_wcstoul_r+0xce>
   16f3a:	9a03      	ldr	r2, [sp, #12]
   16f3c:	2322      	movs	r3, #34	; 0x22
   16f3e:	6013      	str	r3, [r2, #0]
   16f40:	46b8      	mov	r8, r7
   16f42:	e002      	b.n	16f4a <_wcstoul_r+0xd4>
   16f44:	b10e      	cbz	r6, 16f4a <_wcstoul_r+0xd4>
   16f46:	f1c8 0800 	rsb	r8, r8, #0
   16f4a:	9b01      	ldr	r3, [sp, #4]
   16f4c:	b1ab      	cbz	r3, 16f7a <_wcstoul_r+0x104>
   16f4e:	b10f      	cbz	r7, 16f54 <_wcstoul_r+0xde>
   16f50:	3d04      	subs	r5, #4
   16f52:	e000      	b.n	16f56 <_wcstoul_r+0xe0>
   16f54:	464d      	mov	r5, r9
   16f56:	9b01      	ldr	r3, [sp, #4]
   16f58:	601d      	str	r5, [r3, #0]
   16f5a:	e00e      	b.n	16f7a <_wcstoul_r+0x104>
   16f5c:	f1bb 0f00 	cmp.w	r11, #0
   16f60:	d001      	beq.n	16f66 <_wcstoul_r+0xf0>
   16f62:	2430      	movs	r4, #48	; 0x30
   16f64:	e7b7      	b.n	16ed6 <_wcstoul_r+0x60>
   16f66:	2430      	movs	r4, #48	; 0x30
   16f68:	f04f 0b08 	mov.w	r11, #8
   16f6c:	e7b3      	b.n	16ed6 <_wcstoul_r+0x60>
   16f6e:	f04f 0b0a 	mov.w	r11, #10
   16f72:	e7b0      	b.n	16ed6 <_wcstoul_r+0x60>
   16f74:	2c30      	cmp	r4, #48	; 0x30
   16f76:	d1ae      	bne.n	16ed6 <_wcstoul_r+0x60>
   16f78:	e7a4      	b.n	16ec4 <_wcstoul_r+0x4e>
   16f7a:	4640      	mov	r0, r8
   16f7c:	b005      	add	sp, #20
   16f7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
	...

00016f84 <wcstoul>:
   16f84:	b530      	push	{r4, r5, lr}
   16f86:	4605      	mov	r5, r0
   16f88:	460c      	mov	r4, r1
   16f8a:	4613      	mov	r3, r2
   16f8c:	4a03      	ldr	r2, [pc, #12]	; (16f9c <wcstoul+0x18>)
   16f8e:	4629      	mov	r1, r5
   16f90:	6810      	ldr	r0, [r2, #0]
   16f92:	4622      	mov	r2, r4
   16f94:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   16f98:	f7ff bf6d 	b.w	16e76 <_wcstoul_r>
   16f9c:	100001d4 	.word	0x100001d4

00016fa0 <wcsxfrm>:
   16fa0:	f001 bdf2 	b.w	18b88 <wcslcpy>

00016fa4 <wctob>:
   16fa4:	b5f0      	push	{r4, r5, r6, r7, lr}
   16fa6:	1c43      	adds	r3, r0, #1
   16fa8:	b087      	sub	sp, #28
   16faa:	4606      	mov	r6, r0
   16fac:	d102      	bne.n	16fb4 <wctob+0x10>
   16fae:	f04f 30ff 	mov.w	r0, #4294967295
   16fb2:	e037      	b.n	17024 <wctob+0x80>
   16fb4:	af04      	add	r7, sp, #16
   16fb6:	4638      	mov	r0, r7
   16fb8:	2100      	movs	r1, #0
   16fba:	2208      	movs	r2, #8
   16fbc:	f7fc fb8c 	bl	136d8 <memset>
   16fc0:	4b19      	ldr	r3, [pc, #100]	; (17028 <wctob+0x84>)
   16fc2:	681d      	ldr	r5, [r3, #0]
   16fc4:	6dac      	ldr	r4, [r5, #88]	; 0x58
   16fc6:	b9fc      	cbnz	r4, 17008 <wctob+0x64>
   16fc8:	2050      	movs	r0, #80	; 0x50
   16fca:	f7e9 fd89 	bl	ae0 <__wrap_malloc>
   16fce:	65a8      	str	r0, [r5, #88]	; 0x58
   16fd0:	6084      	str	r4, [r0, #8]
   16fd2:	6dab      	ldr	r3, [r5, #88]	; 0x58
   16fd4:	6004      	str	r4, [r0, #0]
   16fd6:	6044      	str	r4, [r0, #4]
   16fd8:	611c      	str	r4, [r3, #16]
   16fda:	60dc      	str	r4, [r3, #12]
   16fdc:	6dab      	ldr	r3, [r5, #88]	; 0x58
   16fde:	619c      	str	r4, [r3, #24]
   16fe0:	615c      	str	r4, [r3, #20]
   16fe2:	6dab      	ldr	r3, [r5, #88]	; 0x58
   16fe4:	62dc      	str	r4, [r3, #44]	; 0x2c
   16fe6:	629c      	str	r4, [r3, #40]	; 0x28
   16fe8:	6dab      	ldr	r3, [r5, #88]	; 0x58
   16fea:	635c      	str	r4, [r3, #52]	; 0x34
   16fec:	631c      	str	r4, [r3, #48]	; 0x30
   16fee:	6dab      	ldr	r3, [r5, #88]	; 0x58
   16ff0:	63dc      	str	r4, [r3, #60]	; 0x3c
   16ff2:	639c      	str	r4, [r3, #56]	; 0x38
   16ff4:	6dab      	ldr	r3, [r5, #88]	; 0x58
   16ff6:	645c      	str	r4, [r3, #68]	; 0x44
   16ff8:	641c      	str	r4, [r3, #64]	; 0x40
   16ffa:	6dab      	ldr	r3, [r5, #88]	; 0x58
   16ffc:	64dc      	str	r4, [r3, #76]	; 0x4c
   16ffe:	649c      	str	r4, [r3, #72]	; 0x48
   17000:	6dab      	ldr	r3, [r5, #88]	; 0x58
   17002:	771c      	strb	r4, [r3, #28]
   17004:	6dab      	ldr	r3, [r5, #88]	; 0x58
   17006:	625c      	str	r4, [r3, #36]	; 0x24
   17008:	4b08      	ldr	r3, [pc, #32]	; (1702c <wctob+0x88>)
   1700a:	681c      	ldr	r4, [r3, #0]
   1700c:	f7fc fa60 	bl	134d0 <__locale_charset>
   17010:	9700      	str	r7, [sp, #0]
   17012:	4603      	mov	r3, r0
   17014:	a903      	add	r1, sp, #12
   17016:	4628      	mov	r0, r5
   17018:	4632      	mov	r2, r6
   1701a:	47a0      	blx	r4
   1701c:	2801      	cmp	r0, #1
   1701e:	d1c6      	bne.n	16fae <wctob+0xa>
   17020:	f89d 000c 	ldrb.w	r0, [sp, #12]
   17024:	b007      	add	sp, #28
   17026:	bdf0      	pop	{r4, r5, r6, r7, pc}
   17028:	100001d4 	.word	0x100001d4
   1702c:	10000240 	.word	0x10000240

00017030 <__ascii_wctomb>:
   17030:	b149      	cbz	r1, 17046 <__ascii_wctomb+0x16>
   17032:	2aff      	cmp	r2, #255	; 0xff
   17034:	bf85      	ittet	hi
   17036:	238a      	movhi	r3, #138	; 0x8a
   17038:	6003      	strhi	r3, [r0, #0]
   1703a:	700a      	strbls	r2, [r1, #0]
   1703c:	f04f 30ff 	movhi.w	r0, #4294967295
   17040:	bf98      	it	ls
   17042:	2001      	movls	r0, #1
   17044:	4770      	bx	lr
   17046:	4608      	mov	r0, r1
   17048:	4770      	bx	lr
	...

0001704c <_wctype_r>:
   1704c:	b538      	push	{r3, r4, r5, lr}
   1704e:	780b      	ldrb	r3, [r1, #0]
   17050:	4605      	mov	r5, r0
   17052:	3b61      	subs	r3, #97	; 0x61
   17054:	460c      	mov	r4, r1
   17056:	2b17      	cmp	r3, #23
   17058:	d857      	bhi.n	1710a <_wctype_r+0xbe>
   1705a:	e8df f003 	tbb	[pc, r3]
   1705e:	190c      	.short	0x190c
   17060:	56562720 	.word	0x56562720
   17064:	5656562e 	.word	0x5656562e
   17068:	56563456 	.word	0x56563456
   1706c:	56563a56 	.word	0x56563a56
   17070:	564b5645 	.word	0x564b5645
   17074:	5156      	.short	0x5156
   17076:	4608      	mov	r0, r1
   17078:	4932      	ldr	r1, [pc, #200]	; (17144 <_wctype_r+0xf8>)
   1707a:	f7fd fbe2 	bl	14842 <strcmp>
   1707e:	2800      	cmp	r0, #0
   17080:	d047      	beq.n	17112 <_wctype_r+0xc6>
   17082:	4620      	mov	r0, r4
   17084:	4930      	ldr	r1, [pc, #192]	; (17148 <_wctype_r+0xfc>)
   17086:	f7fd fbdc 	bl	14842 <strcmp>
   1708a:	2800      	cmp	r0, #0
   1708c:	d043      	beq.n	17116 <_wctype_r+0xca>
   1708e:	e03c      	b.n	1710a <_wctype_r+0xbe>
   17090:	4608      	mov	r0, r1
   17092:	492e      	ldr	r1, [pc, #184]	; (1714c <_wctype_r+0x100>)
   17094:	f7fd fbd5 	bl	14842 <strcmp>
   17098:	2800      	cmp	r0, #0
   1709a:	d03e      	beq.n	1711a <_wctype_r+0xce>
   1709c:	e035      	b.n	1710a <_wctype_r+0xbe>
   1709e:	4608      	mov	r0, r1
   170a0:	492b      	ldr	r1, [pc, #172]	; (17150 <_wctype_r+0x104>)
   170a2:	f7fd fbce 	bl	14842 <strcmp>
   170a6:	2800      	cmp	r0, #0
   170a8:	d039      	beq.n	1711e <_wctype_r+0xd2>
   170aa:	e02e      	b.n	1710a <_wctype_r+0xbe>
   170ac:	4608      	mov	r0, r1
   170ae:	4929      	ldr	r1, [pc, #164]	; (17154 <_wctype_r+0x108>)
   170b0:	f7fd fbc7 	bl	14842 <strcmp>
   170b4:	2800      	cmp	r0, #0
   170b6:	d034      	beq.n	17122 <_wctype_r+0xd6>
   170b8:	e027      	b.n	1710a <_wctype_r+0xbe>
   170ba:	4608      	mov	r0, r1
   170bc:	4926      	ldr	r1, [pc, #152]	; (17158 <_wctype_r+0x10c>)
   170be:	f7fd fbc0 	bl	14842 <strcmp>
   170c2:	b380      	cbz	r0, 17126 <_wctype_r+0xda>
   170c4:	e021      	b.n	1710a <_wctype_r+0xbe>
   170c6:	4608      	mov	r0, r1
   170c8:	4924      	ldr	r1, [pc, #144]	; (1715c <_wctype_r+0x110>)
   170ca:	f7fd fbba 	bl	14842 <strcmp>
   170ce:	b360      	cbz	r0, 1712a <_wctype_r+0xde>
   170d0:	e01b      	b.n	1710a <_wctype_r+0xbe>
   170d2:	4608      	mov	r0, r1
   170d4:	4922      	ldr	r1, [pc, #136]	; (17160 <_wctype_r+0x114>)
   170d6:	f7fd fbb4 	bl	14842 <strcmp>
   170da:	b340      	cbz	r0, 1712e <_wctype_r+0xe2>
   170dc:	4620      	mov	r0, r4
   170de:	4921      	ldr	r1, [pc, #132]	; (17164 <_wctype_r+0x118>)
   170e0:	f7fd fbaf 	bl	14842 <strcmp>
   170e4:	b328      	cbz	r0, 17132 <_wctype_r+0xe6>
   170e6:	e010      	b.n	1710a <_wctype_r+0xbe>
   170e8:	4608      	mov	r0, r1
   170ea:	491f      	ldr	r1, [pc, #124]	; (17168 <_wctype_r+0x11c>)
   170ec:	f7fd fba9 	bl	14842 <strcmp>
   170f0:	b308      	cbz	r0, 17136 <_wctype_r+0xea>
   170f2:	e00a      	b.n	1710a <_wctype_r+0xbe>
   170f4:	4608      	mov	r0, r1
   170f6:	491d      	ldr	r1, [pc, #116]	; (1716c <_wctype_r+0x120>)
   170f8:	f7fd fba3 	bl	14842 <strcmp>
   170fc:	b1e8      	cbz	r0, 1713a <_wctype_r+0xee>
   170fe:	e004      	b.n	1710a <_wctype_r+0xbe>
   17100:	4608      	mov	r0, r1
   17102:	491b      	ldr	r1, [pc, #108]	; (17170 <_wctype_r+0x124>)
   17104:	f7fd fb9d 	bl	14842 <strcmp>
   17108:	b1c8      	cbz	r0, 1713e <_wctype_r+0xf2>
   1710a:	2316      	movs	r3, #22
   1710c:	602b      	str	r3, [r5, #0]
   1710e:	2000      	movs	r0, #0
   17110:	bd38      	pop	{r3, r4, r5, pc}
   17112:	2001      	movs	r0, #1
   17114:	bd38      	pop	{r3, r4, r5, pc}
   17116:	2002      	movs	r0, #2
   17118:	bd38      	pop	{r3, r4, r5, pc}
   1711a:	2003      	movs	r0, #3
   1711c:	bd38      	pop	{r3, r4, r5, pc}
   1711e:	2004      	movs	r0, #4
   17120:	bd38      	pop	{r3, r4, r5, pc}
   17122:	2005      	movs	r0, #5
   17124:	bd38      	pop	{r3, r4, r5, pc}
   17126:	2006      	movs	r0, #6
   17128:	bd38      	pop	{r3, r4, r5, pc}
   1712a:	2007      	movs	r0, #7
   1712c:	bd38      	pop	{r3, r4, r5, pc}
   1712e:	2008      	movs	r0, #8
   17130:	bd38      	pop	{r3, r4, r5, pc}
   17132:	2009      	movs	r0, #9
   17134:	bd38      	pop	{r3, r4, r5, pc}
   17136:	200a      	movs	r0, #10
   17138:	bd38      	pop	{r3, r4, r5, pc}
   1713a:	200b      	movs	r0, #11
   1713c:	bd38      	pop	{r3, r4, r5, pc}
   1713e:	200c      	movs	r0, #12
   17140:	bd38      	pop	{r3, r4, r5, pc}
   17142:	bf00      	nop
   17144:	0001c5d6 	.word	0x0001c5d6
   17148:	0001c5c3 	.word	0x0001c5c3
   1714c:	0001cabc 	.word	0x0001cabc
   17150:	0001c5b1 	.word	0x0001c5b1
   17154:	0001c5d0 	.word	0x0001c5d0
   17158:	0001c5dc 	.word	0x0001c5dc
   1715c:	0001c5bd 	.word	0x0001c5bd
   17160:	0001c5ab 	.word	0x0001c5ab
   17164:	0001c5c9 	.word	0x0001c5c9
   17168:	0001c5a5 	.word	0x0001c5a5
   1716c:	0001c5b7 	.word	0x0001c5b7
   17170:	0001c5cf 	.word	0x0001c5cf

00017174 <wctype>:
   17174:	4b02      	ldr	r3, [pc, #8]	; (17180 <wctype+0xc>)
   17176:	4601      	mov	r1, r0
   17178:	6818      	ldr	r0, [r3, #0]
   1717a:	f7ff bf67 	b.w	1704c <_wctype_r>
   1717e:	bf00      	nop
   17180:	100001d4 	.word	0x100001d4

00017184 <wmemchr>:
   17184:	b530      	push	{r4, r5, lr}
   17186:	2400      	movs	r4, #0
   17188:	4294      	cmp	r4, r2
   1718a:	4603      	mov	r3, r0
   1718c:	d005      	beq.n	1719a <wmemchr+0x16>
   1718e:	681d      	ldr	r5, [r3, #0]
   17190:	3004      	adds	r0, #4
   17192:	428d      	cmp	r5, r1
   17194:	d003      	beq.n	1719e <wmemchr+0x1a>
   17196:	3401      	adds	r4, #1
   17198:	e7f6      	b.n	17188 <wmemchr+0x4>
   1719a:	2000      	movs	r0, #0
   1719c:	bd30      	pop	{r4, r5, pc}
   1719e:	4618      	mov	r0, r3
   171a0:	bd30      	pop	{r4, r5, pc}

000171a2 <wmemcpy>:
   171a2:	0092      	lsls	r2, r2, #2
   171a4:	f7fc ba72 	b.w	1368c <memcpy>

000171a8 <wmemmove>:
   171a8:	0092      	lsls	r2, r2, #2
   171aa:	f7fc ba7a 	b.w	136a2 <memmove>

000171ae <wmemset>:
   171ae:	2300      	movs	r3, #0
   171b0:	4293      	cmp	r3, r2
   171b2:	d003      	beq.n	171bc <wmemset+0xe>
   171b4:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
   171b8:	3301      	adds	r3, #1
   171ba:	e7f9      	b.n	171b0 <wmemset+0x2>
   171bc:	4770      	bx	lr
	...

000171c0 <_write_r>:
   171c0:	b538      	push	{r3, r4, r5, lr}
   171c2:	4c07      	ldr	r4, [pc, #28]	; (171e0 <_write_r+0x20>)
   171c4:	4605      	mov	r5, r0
   171c6:	2000      	movs	r0, #0
   171c8:	6020      	str	r0, [r4, #0]
   171ca:	4608      	mov	r0, r1
   171cc:	4611      	mov	r1, r2
   171ce:	461a      	mov	r2, r3
   171d0:	f7ea ff7c 	bl	20cc <_write>
   171d4:	1c43      	adds	r3, r0, #1
   171d6:	d102      	bne.n	171de <_write_r+0x1e>
   171d8:	6823      	ldr	r3, [r4, #0]
   171da:	b103      	cbz	r3, 171de <_write_r+0x1e>
   171dc:	602b      	str	r3, [r5, #0]
   171de:	bd38      	pop	{r3, r4, r5, pc}
   171e0:	10001b7c 	.word	0x10001b7c

000171e4 <__swsetup_r>:
   171e4:	4b31      	ldr	r3, [pc, #196]	; (172ac <__swsetup_r+0xc8>)
   171e6:	b570      	push	{r4, r5, r6, lr}
   171e8:	681d      	ldr	r5, [r3, #0]
   171ea:	4606      	mov	r6, r0
   171ec:	460c      	mov	r4, r1
   171ee:	b125      	cbz	r5, 171fa <__swsetup_r+0x16>
   171f0:	69ab      	ldr	r3, [r5, #24]
   171f2:	b913      	cbnz	r3, 171fa <__swsetup_r+0x16>
   171f4:	4628      	mov	r0, r5
   171f6:	f7fb fd91 	bl	12d1c <__sinit>
   171fa:	4b2d      	ldr	r3, [pc, #180]	; (172b0 <__swsetup_r+0xcc>)
   171fc:	429c      	cmp	r4, r3
   171fe:	d101      	bne.n	17204 <__swsetup_r+0x20>
   17200:	686c      	ldr	r4, [r5, #4]
   17202:	e008      	b.n	17216 <__swsetup_r+0x32>
   17204:	4b2b      	ldr	r3, [pc, #172]	; (172b4 <__swsetup_r+0xd0>)
   17206:	429c      	cmp	r4, r3
   17208:	d101      	bne.n	1720e <__swsetup_r+0x2a>
   1720a:	68ac      	ldr	r4, [r5, #8]
   1720c:	e003      	b.n	17216 <__swsetup_r+0x32>
   1720e:	4b2a      	ldr	r3, [pc, #168]	; (172b8 <__swsetup_r+0xd4>)
   17210:	429c      	cmp	r4, r3
   17212:	bf08      	it	eq
   17214:	68ec      	ldreq	r4, [r5, #12]
   17216:	89a3      	ldrh	r3, [r4, #12]
   17218:	b29a      	uxth	r2, r3
   1721a:	0711      	lsls	r1, r2, #28
   1721c:	d41d      	bmi.n	1725a <__swsetup_r+0x76>
   1721e:	06d5      	lsls	r5, r2, #27
   17220:	d402      	bmi.n	17228 <__swsetup_r+0x44>
   17222:	2209      	movs	r2, #9
   17224:	6032      	str	r2, [r6, #0]
   17226:	e038      	b.n	1729a <__swsetup_r+0xb6>
   17228:	0750      	lsls	r0, r2, #29
   1722a:	d512      	bpl.n	17252 <__swsetup_r+0x6e>
   1722c:	6b61      	ldr	r1, [r4, #52]	; 0x34
   1722e:	b141      	cbz	r1, 17242 <__swsetup_r+0x5e>
   17230:	f104 0344 	add.w	r3, r4, #68	; 0x44
   17234:	4299      	cmp	r1, r3
   17236:	d002      	beq.n	1723e <__swsetup_r+0x5a>
   17238:	4630      	mov	r0, r6
   1723a:	f7fc fa55 	bl	136e8 <_free_r>
   1723e:	2300      	movs	r3, #0
   17240:	6363      	str	r3, [r4, #52]	; 0x34
   17242:	89a3      	ldrh	r3, [r4, #12]
   17244:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   17248:	81a3      	strh	r3, [r4, #12]
   1724a:	2300      	movs	r3, #0
   1724c:	6063      	str	r3, [r4, #4]
   1724e:	6923      	ldr	r3, [r4, #16]
   17250:	6023      	str	r3, [r4, #0]
   17252:	89a3      	ldrh	r3, [r4, #12]
   17254:	f043 0308 	orr.w	r3, r3, #8
   17258:	81a3      	strh	r3, [r4, #12]
   1725a:	6923      	ldr	r3, [r4, #16]
   1725c:	b94b      	cbnz	r3, 17272 <__swsetup_r+0x8e>
   1725e:	89a3      	ldrh	r3, [r4, #12]
   17260:	f403 7320 	and.w	r3, r3, #640	; 0x280
   17264:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   17268:	d003      	beq.n	17272 <__swsetup_r+0x8e>
   1726a:	4630      	mov	r0, r6
   1726c:	4621      	mov	r1, r4
   1726e:	f7fc f947 	bl	13500 <__smakebuf_r>
   17272:	89a3      	ldrh	r3, [r4, #12]
   17274:	f013 0201 	ands.w	r2, r3, #1
   17278:	d005      	beq.n	17286 <__swsetup_r+0xa2>
   1727a:	2200      	movs	r2, #0
   1727c:	60a2      	str	r2, [r4, #8]
   1727e:	6962      	ldr	r2, [r4, #20]
   17280:	4252      	negs	r2, r2
   17282:	61a2      	str	r2, [r4, #24]
   17284:	e003      	b.n	1728e <__swsetup_r+0xaa>
   17286:	0799      	lsls	r1, r3, #30
   17288:	bf58      	it	pl
   1728a:	6962      	ldrpl	r2, [r4, #20]
   1728c:	60a2      	str	r2, [r4, #8]
   1728e:	6922      	ldr	r2, [r4, #16]
   17290:	b94a      	cbnz	r2, 172a6 <__swsetup_r+0xc2>
   17292:	f003 0080 	and.w	r0, r3, #128	; 0x80
   17296:	b280      	uxth	r0, r0
   17298:	b130      	cbz	r0, 172a8 <__swsetup_r+0xc4>
   1729a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1729e:	81a3      	strh	r3, [r4, #12]
   172a0:	f04f 30ff 	mov.w	r0, #4294967295
   172a4:	bd70      	pop	{r4, r5, r6, pc}
   172a6:	2000      	movs	r0, #0
   172a8:	bd70      	pop	{r4, r5, r6, pc}
   172aa:	bf00      	nop
   172ac:	100001d4 	.word	0x100001d4
   172b0:	0001c6e4 	.word	0x0001c6e4
   172b4:	0001c704 	.word	0x0001c704
   172b8:	0001c724 	.word	0x0001c724

000172bc <abs>:
   172bc:	2800      	cmp	r0, #0
   172be:	bfb8      	it	lt
   172c0:	4240      	neglt	r0, r0
   172c2:	4770      	bx	lr

000172c4 <_close_r>:
   172c4:	b538      	push	{r3, r4, r5, lr}
   172c6:	4c06      	ldr	r4, [pc, #24]	; (172e0 <_close_r+0x1c>)
   172c8:	2300      	movs	r3, #0
   172ca:	4605      	mov	r5, r0
   172cc:	4608      	mov	r0, r1
   172ce:	6023      	str	r3, [r4, #0]
   172d0:	f7ea fee8 	bl	20a4 <_close>
   172d4:	1c43      	adds	r3, r0, #1
   172d6:	d102      	bne.n	172de <_close_r+0x1a>
   172d8:	6823      	ldr	r3, [r4, #0]
   172da:	b103      	cbz	r3, 172de <_close_r+0x1a>
   172dc:	602b      	str	r3, [r5, #0]
   172de:	bd38      	pop	{r3, r4, r5, pc}
   172e0:	10001b7c 	.word	0x10001b7c

000172e4 <__fgetwc>:
   172e4:	b530      	push	{r4, r5, lr}
   172e6:	684b      	ldr	r3, [r1, #4]
   172e8:	b085      	sub	sp, #20
   172ea:	2b00      	cmp	r3, #0
   172ec:	4605      	mov	r5, r0
   172ee:	460c      	mov	r4, r1
   172f0:	dd09      	ble.n	17306 <__fgetwc+0x22>
   172f2:	f7fc f8f1 	bl	134d8 <__locale_mb_cur_max>
   172f6:	2801      	cmp	r0, #1
   172f8:	d110      	bne.n	1731c <__fgetwc+0x38>
   172fa:	6823      	ldr	r3, [r4, #0]
   172fc:	1c5a      	adds	r2, r3, #1
   172fe:	6022      	str	r2, [r4, #0]
   17300:	7818      	ldrb	r0, [r3, #0]
   17302:	6863      	ldr	r3, [r4, #4]
   17304:	e01b      	b.n	1733e <__fgetwc+0x5a>
   17306:	f7fd f885 	bl	14414 <__srefill_r>
   1730a:	bb48      	cbnz	r0, 17360 <__fgetwc+0x7c>
   1730c:	e7f1      	b.n	172f2 <__fgetwc+0xe>
   1730e:	1c83      	adds	r3, r0, #2
   17310:	d110      	bne.n	17334 <__fgetwc+0x50>
   17312:	4628      	mov	r0, r5
   17314:	4621      	mov	r1, r4
   17316:	f7fd f87d 	bl	14414 <__srefill_r>
   1731a:	b9c8      	cbnz	r0, 17350 <__fgetwc+0x6c>
   1731c:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   17320:	9300      	str	r3, [sp, #0]
   17322:	4628      	mov	r0, r5
   17324:	e894 000c 	ldmia.w	r4, {r2, r3}
   17328:	a903      	add	r1, sp, #12
   1732a:	f7fc f945 	bl	135b8 <_mbrtowc_r>
   1732e:	1c42      	adds	r2, r0, #1
   17330:	d1ed      	bne.n	1730e <__fgetwc+0x2a>
   17332:	e00d      	b.n	17350 <__fgetwc+0x6c>
   17334:	e894 000c 	ldmia.w	r4, {r2, r3}
   17338:	b920      	cbnz	r0, 17344 <__fgetwc+0x60>
   1733a:	3201      	adds	r2, #1
   1733c:	6022      	str	r2, [r4, #0]
   1733e:	3b01      	subs	r3, #1
   17340:	6063      	str	r3, [r4, #4]
   17342:	e00f      	b.n	17364 <__fgetwc+0x80>
   17344:	4402      	add	r2, r0
   17346:	1a18      	subs	r0, r3, r0
   17348:	6060      	str	r0, [r4, #4]
   1734a:	6022      	str	r2, [r4, #0]
   1734c:	9803      	ldr	r0, [sp, #12]
   1734e:	e009      	b.n	17364 <__fgetwc+0x80>
   17350:	89a3      	ldrh	r3, [r4, #12]
   17352:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   17356:	81a3      	strh	r3, [r4, #12]
   17358:	f7fb fb6c 	bl	12a34 <__errno>
   1735c:	238a      	movs	r3, #138	; 0x8a
   1735e:	6003      	str	r3, [r0, #0]
   17360:	f04f 30ff 	mov.w	r0, #4294967295
   17364:	b005      	add	sp, #20
   17366:	bd30      	pop	{r4, r5, pc}

00017368 <fgetwc>:
   17368:	b538      	push	{r3, r4, r5, lr}
   1736a:	4b0e      	ldr	r3, [pc, #56]	; (173a4 <fgetwc+0x3c>)
   1736c:	4604      	mov	r4, r0
   1736e:	681d      	ldr	r5, [r3, #0]
   17370:	b125      	cbz	r5, 1737c <fgetwc+0x14>
   17372:	69ab      	ldr	r3, [r5, #24]
   17374:	b913      	cbnz	r3, 1737c <fgetwc+0x14>
   17376:	4628      	mov	r0, r5
   17378:	f7fb fcd0 	bl	12d1c <__sinit>
   1737c:	4b0a      	ldr	r3, [pc, #40]	; (173a8 <fgetwc+0x40>)
   1737e:	429c      	cmp	r4, r3
   17380:	d101      	bne.n	17386 <fgetwc+0x1e>
   17382:	686c      	ldr	r4, [r5, #4]
   17384:	e008      	b.n	17398 <fgetwc+0x30>
   17386:	4b09      	ldr	r3, [pc, #36]	; (173ac <fgetwc+0x44>)
   17388:	429c      	cmp	r4, r3
   1738a:	d101      	bne.n	17390 <fgetwc+0x28>
   1738c:	68ac      	ldr	r4, [r5, #8]
   1738e:	e003      	b.n	17398 <fgetwc+0x30>
   17390:	4b07      	ldr	r3, [pc, #28]	; (173b0 <fgetwc+0x48>)
   17392:	429c      	cmp	r4, r3
   17394:	bf08      	it	eq
   17396:	68ec      	ldreq	r4, [r5, #12]
   17398:	4628      	mov	r0, r5
   1739a:	4621      	mov	r1, r4
   1739c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   173a0:	f7ff bfa0 	b.w	172e4 <__fgetwc>
   173a4:	100001d4 	.word	0x100001d4
   173a8:	0001c6e4 	.word	0x0001c6e4
   173ac:	0001c704 	.word	0x0001c704
   173b0:	0001c724 	.word	0x0001c724

000173b4 <__fputwc>:
   173b4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   173b8:	4680      	mov	r8, r0
   173ba:	460d      	mov	r5, r1
   173bc:	4614      	mov	r4, r2
   173be:	f7fc f88b 	bl	134d8 <__locale_mb_cur_max>
   173c2:	2801      	cmp	r0, #1
   173c4:	d106      	bne.n	173d4 <__fputwc+0x20>
   173c6:	1e6b      	subs	r3, r5, #1
   173c8:	2bfe      	cmp	r3, #254	; 0xfe
   173ca:	d803      	bhi.n	173d4 <__fputwc+0x20>
   173cc:	f88d 5004 	strb.w	r5, [sp, #4]
   173d0:	4606      	mov	r6, r0
   173d2:	e00e      	b.n	173f2 <__fputwc+0x3e>
   173d4:	462a      	mov	r2, r5
   173d6:	4640      	mov	r0, r8
   173d8:	a901      	add	r1, sp, #4
   173da:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   173de:	f7ff f845 	bl	1646c <_wcrtomb_r>
   173e2:	1c42      	adds	r2, r0, #1
   173e4:	4606      	mov	r6, r0
   173e6:	d104      	bne.n	173f2 <__fputwc+0x3e>
   173e8:	89a3      	ldrh	r3, [r4, #12]
   173ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   173ee:	81a3      	strh	r3, [r4, #12]
   173f0:	e02a      	b.n	17448 <__fputwc+0x94>
   173f2:	2700      	movs	r7, #0
   173f4:	42b7      	cmp	r7, r6
   173f6:	d023      	beq.n	17440 <__fputwc+0x8c>
   173f8:	68a3      	ldr	r3, [r4, #8]
   173fa:	aa01      	add	r2, sp, #4
   173fc:	3b01      	subs	r3, #1
   173fe:	2b00      	cmp	r3, #0
   17400:	60a3      	str	r3, [r4, #8]
   17402:	da15      	bge.n	17430 <__fputwc+0x7c>
   17404:	69a1      	ldr	r1, [r4, #24]
   17406:	428b      	cmp	r3, r1
   17408:	db08      	blt.n	1741c <__fputwc+0x68>
   1740a:	6823      	ldr	r3, [r4, #0]
   1740c:	5dd2      	ldrb	r2, [r2, r7]
   1740e:	701a      	strb	r2, [r3, #0]
   17410:	6823      	ldr	r3, [r4, #0]
   17412:	7819      	ldrb	r1, [r3, #0]
   17414:	290a      	cmp	r1, #10
   17416:	d10f      	bne.n	17438 <__fputwc+0x84>
   17418:	4640      	mov	r0, r8
   1741a:	e001      	b.n	17420 <__fputwc+0x6c>
   1741c:	4640      	mov	r0, r8
   1741e:	5dd1      	ldrb	r1, [r2, r7]
   17420:	4622      	mov	r2, r4
   17422:	f7fe ffcf 	bl	163c4 <__swbuf_r>
   17426:	1c43      	adds	r3, r0, #1
   17428:	4258      	negs	r0, r3
   1742a:	4158      	adcs	r0, r3
   1742c:	b130      	cbz	r0, 1743c <__fputwc+0x88>
   1742e:	e009      	b.n	17444 <__fputwc+0x90>
   17430:	6823      	ldr	r3, [r4, #0]
   17432:	5dd2      	ldrb	r2, [r2, r7]
   17434:	701a      	strb	r2, [r3, #0]
   17436:	6823      	ldr	r3, [r4, #0]
   17438:	3301      	adds	r3, #1
   1743a:	6023      	str	r3, [r4, #0]
   1743c:	3701      	adds	r7, #1
   1743e:	e7d9      	b.n	173f4 <__fputwc+0x40>
   17440:	4628      	mov	r0, r5
   17442:	e001      	b.n	17448 <__fputwc+0x94>
   17444:	f04f 30ff 	mov.w	r0, #4294967295
   17448:	b002      	add	sp, #8
   1744a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

00017450 <fputwc>:
   17450:	4b0f      	ldr	r3, [pc, #60]	; (17490 <fputwc+0x40>)
   17452:	b570      	push	{r4, r5, r6, lr}
   17454:	681d      	ldr	r5, [r3, #0]
   17456:	4606      	mov	r6, r0
   17458:	460c      	mov	r4, r1
   1745a:	b125      	cbz	r5, 17466 <fputwc+0x16>
   1745c:	69ab      	ldr	r3, [r5, #24]
   1745e:	b913      	cbnz	r3, 17466 <fputwc+0x16>
   17460:	4628      	mov	r0, r5
   17462:	f7fb fc5b 	bl	12d1c <__sinit>
   17466:	4b0b      	ldr	r3, [pc, #44]	; (17494 <fputwc+0x44>)
   17468:	429c      	cmp	r4, r3
   1746a:	d101      	bne.n	17470 <fputwc+0x20>
   1746c:	686c      	ldr	r4, [r5, #4]
   1746e:	e008      	b.n	17482 <fputwc+0x32>
   17470:	4b09      	ldr	r3, [pc, #36]	; (17498 <fputwc+0x48>)
   17472:	429c      	cmp	r4, r3
   17474:	d101      	bne.n	1747a <fputwc+0x2a>
   17476:	68ac      	ldr	r4, [r5, #8]
   17478:	e003      	b.n	17482 <fputwc+0x32>
   1747a:	4b08      	ldr	r3, [pc, #32]	; (1749c <fputwc+0x4c>)
   1747c:	429c      	cmp	r4, r3
   1747e:	bf08      	it	eq
   17480:	68ec      	ldreq	r4, [r5, #12]
   17482:	4628      	mov	r0, r5
   17484:	4631      	mov	r1, r6
   17486:	4622      	mov	r2, r4
   17488:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   1748c:	f7ff bf92 	b.w	173b4 <__fputwc>
   17490:	100001d4 	.word	0x100001d4
   17494:	0001c6e4 	.word	0x0001c6e4
   17498:	0001c704 	.word	0x0001c704
   1749c:	0001c724 	.word	0x0001c724

000174a0 <_fstat_r>:
   174a0:	b538      	push	{r3, r4, r5, lr}
   174a2:	4c07      	ldr	r4, [pc, #28]	; (174c0 <_fstat_r+0x20>)
   174a4:	2300      	movs	r3, #0
   174a6:	4605      	mov	r5, r0
   174a8:	4608      	mov	r0, r1
   174aa:	4611      	mov	r1, r2
   174ac:	6023      	str	r3, [r4, #0]
   174ae:	f7ea fe79 	bl	21a4 <_fstat>
   174b2:	1c43      	adds	r3, r0, #1
   174b4:	d102      	bne.n	174bc <_fstat_r+0x1c>
   174b6:	6823      	ldr	r3, [r4, #0]
   174b8:	b103      	cbz	r3, 174bc <_fstat_r+0x1c>
   174ba:	602b      	str	r3, [r5, #0]
   174bc:	bd38      	pop	{r3, r4, r5, pc}
   174be:	bf00      	nop
   174c0:	10001b7c 	.word	0x10001b7c

000174c4 <rshift>:
   174c4:	b5f0      	push	{r4, r5, r6, r7, lr}
   174c6:	6906      	ldr	r6, [r0, #16]
   174c8:	114b      	asrs	r3, r1, #5
   174ca:	42b3      	cmp	r3, r6
   174cc:	f100 0514 	add.w	r5, r0, #20
   174d0:	da27      	bge.n	17522 <rshift+0x5e>
   174d2:	f011 011f 	ands.w	r1, r1, #31
   174d6:	eb05 0686 	add.w	r6, r5, r6, lsl #2
   174da:	eb05 0283 	add.w	r2, r5, r3, lsl #2
   174de:	d101      	bne.n	174e4 <rshift+0x20>
   174e0:	4629      	mov	r1, r5
   174e2:	e016      	b.n	17512 <rshift+0x4e>
   174e4:	1d14      	adds	r4, r2, #4
   174e6:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
   174ea:	462b      	mov	r3, r5
   174ec:	f1c1 0e20 	rsb	lr, r1, #32
   174f0:	40ca      	lsrs	r2, r1
   174f2:	42b4      	cmp	r4, r6
   174f4:	d209      	bcs.n	1750a <rshift+0x46>
   174f6:	6827      	ldr	r7, [r4, #0]
   174f8:	fa07 f70e 	lsl.w	r7, r7, lr
   174fc:	433a      	orrs	r2, r7
   174fe:	f843 2b04 	str.w	r2, [r3], #4
   17502:	f854 2b04 	ldr.w	r2, [r4], #4
   17506:	40ca      	lsrs	r2, r1
   17508:	e7f3      	b.n	174f2 <rshift+0x2e>
   1750a:	601a      	str	r2, [r3, #0]
   1750c:	b152      	cbz	r2, 17524 <rshift+0x60>
   1750e:	3304      	adds	r3, #4
   17510:	e008      	b.n	17524 <rshift+0x60>
   17512:	42b2      	cmp	r2, r6
   17514:	460b      	mov	r3, r1
   17516:	d205      	bcs.n	17524 <rshift+0x60>
   17518:	f852 3b04 	ldr.w	r3, [r2], #4
   1751c:	f841 3b04 	str.w	r3, [r1], #4
   17520:	e7f7      	b.n	17512 <rshift+0x4e>
   17522:	462b      	mov	r3, r5
   17524:	1b5b      	subs	r3, r3, r5
   17526:	109b      	asrs	r3, r3, #2
   17528:	6103      	str	r3, [r0, #16]
   1752a:	b903      	cbnz	r3, 1752e <rshift+0x6a>
   1752c:	6143      	str	r3, [r0, #20]
   1752e:	bdf0      	pop	{r4, r5, r6, r7, pc}

00017530 <__hexdig_fun>:
   17530:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   17534:	2b09      	cmp	r3, #9
   17536:	d801      	bhi.n	1753c <__hexdig_fun+0xc>
   17538:	3820      	subs	r0, #32
   1753a:	e00a      	b.n	17552 <__hexdig_fun+0x22>
   1753c:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   17540:	2b05      	cmp	r3, #5
   17542:	d801      	bhi.n	17548 <__hexdig_fun+0x18>
   17544:	3847      	subs	r0, #71	; 0x47
   17546:	e004      	b.n	17552 <__hexdig_fun+0x22>
   17548:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   1754c:	2b05      	cmp	r3, #5
   1754e:	d802      	bhi.n	17556 <__hexdig_fun+0x26>
   17550:	3827      	subs	r0, #39	; 0x27
   17552:	b2c0      	uxtb	r0, r0
   17554:	4770      	bx	lr
   17556:	2000      	movs	r0, #0
   17558:	4770      	bx	lr

0001755a <__gethex>:
   1755a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   1755e:	b089      	sub	sp, #36	; 0x24
   17560:	468a      	mov	r10, r1
   17562:	4691      	mov	r9, r2
   17564:	9304      	str	r3, [sp, #16]
   17566:	9001      	str	r0, [sp, #4]
   17568:	f7fb ffbc 	bl	134e4 <_localeconv_r>
   1756c:	6803      	ldr	r3, [r0, #0]
   1756e:	2600      	movs	r6, #0
   17570:	4618      	mov	r0, r3
   17572:	9302      	str	r3, [sp, #8]
   17574:	f7fd fe10 	bl	15198 <strlen>
   17578:	9b02      	ldr	r3, [sp, #8]
   1757a:	9000      	str	r0, [sp, #0]
   1757c:	4403      	add	r3, r0
   1757e:	f813 3c01 	ldrb.w	r3, [r3, #-1]
   17582:	9305      	str	r3, [sp, #20]
   17584:	f8da 3000 	ldr.w	r3, [r10]
   17588:	3302      	adds	r3, #2
   1758a:	4698      	mov	r8, r3
   1758c:	f813 0b01 	ldrb.w	r0, [r3], #1
   17590:	2830      	cmp	r0, #48	; 0x30
   17592:	d101      	bne.n	17598 <__gethex+0x3e>
   17594:	3601      	adds	r6, #1
   17596:	e7f8      	b.n	1758a <__gethex+0x30>
   17598:	f7ff ffca 	bl	17530 <__hexdig_fun>
   1759c:	4604      	mov	r4, r0
   1759e:	b9e8      	cbnz	r0, 175dc <__gethex+0x82>
   175a0:	4640      	mov	r0, r8
   175a2:	9902      	ldr	r1, [sp, #8]
   175a4:	9a00      	ldr	r2, [sp, #0]
   175a6:	f7fd fdff 	bl	151a8 <strncmp>
   175aa:	2800      	cmp	r0, #0
   175ac:	d137      	bne.n	1761e <__gethex+0xc4>
   175ae:	9b00      	ldr	r3, [sp, #0]
   175b0:	f818 0003 	ldrb.w	r0, [r8, r3]
   175b4:	eb08 0703 	add.w	r7, r8, r3
   175b8:	f7ff ffba 	bl	17530 <__hexdig_fun>
   175bc:	b388      	cbz	r0, 17622 <__gethex+0xc8>
   175be:	463b      	mov	r3, r7
   175c0:	7818      	ldrb	r0, [r3, #0]
   175c2:	4698      	mov	r8, r3
   175c4:	2830      	cmp	r0, #48	; 0x30
   175c6:	f103 0301 	add.w	r3, r3, #1
   175ca:	d0f9      	beq.n	175c0 <__gethex+0x66>
   175cc:	f7ff ffb0 	bl	17530 <__hexdig_fun>
   175d0:	fab0 f580 	clz	r5, r0
   175d4:	463c      	mov	r4, r7
   175d6:	096d      	lsrs	r5, r5, #5
   175d8:	2601      	movs	r6, #1
   175da:	e001      	b.n	175e0 <__gethex+0x86>
   175dc:	2500      	movs	r5, #0
   175de:	462c      	mov	r4, r5
   175e0:	46c3      	mov	r11, r8
   175e2:	465f      	mov	r7, r11
   175e4:	7838      	ldrb	r0, [r7, #0]
   175e6:	f10b 0b01 	add.w	r11, r11, #1
   175ea:	f7ff ffa1 	bl	17530 <__hexdig_fun>
   175ee:	2800      	cmp	r0, #0
   175f0:	d1f7      	bne.n	175e2 <__gethex+0x88>
   175f2:	4638      	mov	r0, r7
   175f4:	9902      	ldr	r1, [sp, #8]
   175f6:	9a00      	ldr	r2, [sp, #0]
   175f8:	f7fd fdd6 	bl	151a8 <strncmp>
   175fc:	b958      	cbnz	r0, 17616 <__gethex+0xbc>
   175fe:	b95c      	cbnz	r4, 17618 <__gethex+0xbe>
   17600:	9b00      	ldr	r3, [sp, #0]
   17602:	18fc      	adds	r4, r7, r3
   17604:	46a3      	mov	r11, r4
   17606:	465f      	mov	r7, r11
   17608:	7838      	ldrb	r0, [r7, #0]
   1760a:	f10b 0b01 	add.w	r11, r11, #1
   1760e:	f7ff ff8f 	bl	17530 <__hexdig_fun>
   17612:	2800      	cmp	r0, #0
   17614:	d1f7      	bne.n	17606 <__gethex+0xac>
   17616:	b134      	cbz	r4, 17626 <__gethex+0xcc>
   17618:	1be4      	subs	r4, r4, r7
   1761a:	00a4      	lsls	r4, r4, #2
   1761c:	e003      	b.n	17626 <__gethex+0xcc>
   1761e:	4647      	mov	r7, r8
   17620:	e000      	b.n	17624 <__gethex+0xca>
   17622:	4604      	mov	r4, r0
   17624:	2501      	movs	r5, #1
   17626:	783b      	ldrb	r3, [r7, #0]
   17628:	2b50      	cmp	r3, #80	; 0x50
   1762a:	d001      	beq.n	17630 <__gethex+0xd6>
   1762c:	2b70      	cmp	r3, #112	; 0x70
   1762e:	d130      	bne.n	17692 <__gethex+0x138>
   17630:	787b      	ldrb	r3, [r7, #1]
   17632:	2b2b      	cmp	r3, #43	; 0x2b
   17634:	d006      	beq.n	17644 <__gethex+0xea>
   17636:	2b2d      	cmp	r3, #45	; 0x2d
   17638:	d002      	beq.n	17640 <__gethex+0xe6>
   1763a:	1c7a      	adds	r2, r7, #1
   1763c:	2300      	movs	r3, #0
   1763e:	e003      	b.n	17648 <__gethex+0xee>
   17640:	2301      	movs	r3, #1
   17642:	e000      	b.n	17646 <__gethex+0xec>
   17644:	2300      	movs	r3, #0
   17646:	1cba      	adds	r2, r7, #2
   17648:	7810      	ldrb	r0, [r2, #0]
   1764a:	9306      	str	r3, [sp, #24]
   1764c:	9203      	str	r2, [sp, #12]
   1764e:	f7ff ff6f 	bl	17530 <__hexdig_fun>
   17652:	1e41      	subs	r1, r0, #1
   17654:	b2c9      	uxtb	r1, r1
   17656:	2918      	cmp	r1, #24
   17658:	9a03      	ldr	r2, [sp, #12]
   1765a:	9b06      	ldr	r3, [sp, #24]
   1765c:	d819      	bhi.n	17692 <__gethex+0x138>
   1765e:	f1a0 0b10 	sub.w	r11, r0, #16
   17662:	f812 0f01 	ldrb.w	r0, [r2, #1]!
   17666:	9306      	str	r3, [sp, #24]
   17668:	9203      	str	r2, [sp, #12]
   1766a:	9207      	str	r2, [sp, #28]
   1766c:	f7ff ff60 	bl	17530 <__hexdig_fun>
   17670:	1e41      	subs	r1, r0, #1
   17672:	b2c9      	uxtb	r1, r1
   17674:	2918      	cmp	r1, #24
   17676:	9a03      	ldr	r2, [sp, #12]
   17678:	9b06      	ldr	r3, [sp, #24]
   1767a:	d805      	bhi.n	17688 <__gethex+0x12e>
   1767c:	210a      	movs	r1, #10
   1767e:	fb01 0b0b 	mla	r11, r1, r11, r0
   17682:	f1ab 0b10 	sub.w	r11, r11, #16
   17686:	e7ec      	b.n	17662 <__gethex+0x108>
   17688:	b10b      	cbz	r3, 1768e <__gethex+0x134>
   1768a:	f1cb 0b00 	rsb	r11, r11, #0
   1768e:	445c      	add	r4, r11
   17690:	e000      	b.n	17694 <__gethex+0x13a>
   17692:	463a      	mov	r2, r7
   17694:	f8ca 2000 	str.w	r2, [r10]
   17698:	b125      	cbz	r5, 176a4 <__gethex+0x14a>
   1769a:	2e00      	cmp	r6, #0
   1769c:	bf14      	ite	ne
   1769e:	2000      	movne	r0, #0
   176a0:	2006      	moveq	r0, #6
   176a2:	e17c      	b.n	1799e <__gethex+0x444>
   176a4:	4629      	mov	r1, r5
   176a6:	ebc8 0307 	rsb	r3, r8, r7
   176aa:	3b01      	subs	r3, #1
   176ac:	2b07      	cmp	r3, #7
   176ae:	dd02      	ble.n	176b6 <__gethex+0x15c>
   176b0:	3101      	adds	r1, #1
   176b2:	105b      	asrs	r3, r3, #1
   176b4:	e7fa      	b.n	176ac <__gethex+0x152>
   176b6:	9801      	ldr	r0, [sp, #4]
   176b8:	f000 fa86 	bl	17bc8 <_Balloc>
   176bc:	f04f 0a00 	mov.w	r10, #0
   176c0:	f100 0b14 	add.w	r11, r0, #20
   176c4:	4605      	mov	r5, r0
   176c6:	465e      	mov	r6, r11
   176c8:	46d4      	mov	r12, r10
   176ca:	4547      	cmp	r7, r8
   176cc:	d937      	bls.n	1773e <__gethex+0x1e4>
   176ce:	1e7b      	subs	r3, r7, #1
   176d0:	9303      	str	r3, [sp, #12]
   176d2:	9a05      	ldr	r2, [sp, #20]
   176d4:	f817 3c01 	ldrb.w	r3, [r7, #-1]
   176d8:	4293      	cmp	r3, r2
   176da:	d009      	beq.n	176f0 <__gethex+0x196>
   176dc:	f1bc 0f20 	cmp.w	r12, #32
   176e0:	d11a      	bne.n	17718 <__gethex+0x1be>
   176e2:	f8c6 a000 	str.w	r10, [r6]
   176e6:	f04f 0a00 	mov.w	r10, #0
   176ea:	3604      	adds	r6, #4
   176ec:	46d4      	mov	r12, r10
   176ee:	e013      	b.n	17718 <__gethex+0x1be>
   176f0:	9b00      	ldr	r3, [sp, #0]
   176f2:	9a03      	ldr	r2, [sp, #12]
   176f4:	f1c3 0301 	rsb	r3, r3, #1
   176f8:	4413      	add	r3, r2
   176fa:	4543      	cmp	r3, r8
   176fc:	d3ee      	bcc.n	176dc <__gethex+0x182>
   176fe:	4618      	mov	r0, r3
   17700:	9902      	ldr	r1, [sp, #8]
   17702:	9a00      	ldr	r2, [sp, #0]
   17704:	f8cd c01c 	str.w	r12, [sp, #28]
   17708:	9306      	str	r3, [sp, #24]
   1770a:	f7fd fd4d 	bl	151a8 <strncmp>
   1770e:	9b06      	ldr	r3, [sp, #24]
   17710:	f8dd c01c 	ldr.w	r12, [sp, #28]
   17714:	b188      	cbz	r0, 1773a <__gethex+0x1e0>
   17716:	e7e1      	b.n	176dc <__gethex+0x182>
   17718:	f817 0c01 	ldrb.w	r0, [r7, #-1]
   1771c:	f8cd c018 	str.w	r12, [sp, #24]
   17720:	f7ff ff06 	bl	17530 <__hexdig_fun>
   17724:	f8dd c018 	ldr.w	r12, [sp, #24]
   17728:	f000 000f 	and.w	r0, r0, #15
   1772c:	fa00 f00c 	lsl.w	r0, r0, r12
   17730:	9b03      	ldr	r3, [sp, #12]
   17732:	ea4a 0a00 	orr.w	r10, r10, r0
   17736:	f10c 0c04 	add.w	r12, r12, #4
   1773a:	461f      	mov	r7, r3
   1773c:	e7c5      	b.n	176ca <__gethex+0x170>
   1773e:	f846 ab04 	str.w	r10, [r6], #4
   17742:	ebcb 0606 	rsb	r6, r11, r6
   17746:	10b0      	asrs	r0, r6, #2
   17748:	6128      	str	r0, [r5, #16]
   1774a:	0147      	lsls	r7, r0, #5
   1774c:	4650      	mov	r0, r10
   1774e:	f000 fb05 	bl	17d5c <__hi0bits>
   17752:	f8d9 6000 	ldr.w	r6, [r9]
   17756:	1a38      	subs	r0, r7, r0
   17758:	42b0      	cmp	r0, r6
   1775a:	dd26      	ble.n	177aa <__gethex+0x250>
   1775c:	1b87      	subs	r7, r0, r6
   1775e:	4639      	mov	r1, r7
   17760:	4628      	mov	r0, r5
   17762:	f000 fe04 	bl	1836e <__any_on>
   17766:	b1c8      	cbz	r0, 1779c <__gethex+0x242>
   17768:	1e7b      	subs	r3, r7, #1
   1776a:	115a      	asrs	r2, r3, #5
   1776c:	f003 011f 	and.w	r1, r3, #31
   17770:	f04f 0801 	mov.w	r8, #1
   17774:	f85b 2022 	ldr.w	r2, [r11, r2, lsl #2]
   17778:	fa08 f101 	lsl.w	r1, r8, r1
   1777c:	4211      	tst	r1, r2
   1777e:	d00e      	beq.n	1779e <__gethex+0x244>
   17780:	4543      	cmp	r3, r8
   17782:	dc02      	bgt.n	1778a <__gethex+0x230>
   17784:	f04f 0802 	mov.w	r8, #2
   17788:	e009      	b.n	1779e <__gethex+0x244>
   1778a:	4628      	mov	r0, r5
   1778c:	1eb9      	subs	r1, r7, #2
   1778e:	f000 fdee 	bl	1836e <__any_on>
   17792:	2800      	cmp	r0, #0
   17794:	d0f6      	beq.n	17784 <__gethex+0x22a>
   17796:	f04f 0803 	mov.w	r8, #3
   1779a:	e000      	b.n	1779e <__gethex+0x244>
   1779c:	4680      	mov	r8, r0
   1779e:	4628      	mov	r0, r5
   177a0:	4639      	mov	r1, r7
   177a2:	f7ff fe8f 	bl	174c4 <rshift>
   177a6:	443c      	add	r4, r7
   177a8:	e00c      	b.n	177c4 <__gethex+0x26a>
   177aa:	da09      	bge.n	177c0 <__gethex+0x266>
   177ac:	1a37      	subs	r7, r6, r0
   177ae:	4629      	mov	r1, r5
   177b0:	9801      	ldr	r0, [sp, #4]
   177b2:	463a      	mov	r2, r7
   177b4:	f000 fc06 	bl	17fc4 <__lshift>
   177b8:	4605      	mov	r5, r0
   177ba:	1be4      	subs	r4, r4, r7
   177bc:	f100 0b14 	add.w	r11, r0, #20
   177c0:	f04f 0800 	mov.w	r8, #0
   177c4:	f8d9 3008 	ldr.w	r3, [r9, #8]
   177c8:	429c      	cmp	r4, r3
   177ca:	dd08      	ble.n	177de <__gethex+0x284>
   177cc:	9801      	ldr	r0, [sp, #4]
   177ce:	4629      	mov	r1, r5
   177d0:	f000 fa2f 	bl	17c32 <_Bfree>
   177d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
   177d6:	2300      	movs	r3, #0
   177d8:	6013      	str	r3, [r2, #0]
   177da:	20a3      	movs	r0, #163	; 0xa3
   177dc:	e0df      	b.n	1799e <__gethex+0x444>
   177de:	f8d9 0004 	ldr.w	r0, [r9, #4]
   177e2:	4284      	cmp	r4, r0
   177e4:	da53      	bge.n	1788e <__gethex+0x334>
   177e6:	1b04      	subs	r4, r0, r4
   177e8:	42b4      	cmp	r4, r6
   177ea:	db2e      	blt.n	1784a <__gethex+0x2f0>
   177ec:	f8d9 300c 	ldr.w	r3, [r9, #12]
   177f0:	2b02      	cmp	r3, #2
   177f2:	d01a      	beq.n	1782a <__gethex+0x2d0>
   177f4:	2b03      	cmp	r3, #3
   177f6:	d01c      	beq.n	17832 <__gethex+0x2d8>
   177f8:	2b01      	cmp	r3, #1
   177fa:	d11d      	bne.n	17838 <__gethex+0x2de>
   177fc:	42b4      	cmp	r4, r6
   177fe:	d11b      	bne.n	17838 <__gethex+0x2de>
   17800:	2e01      	cmp	r6, #1
   17802:	dc0b      	bgt.n	1781c <__gethex+0x2c2>
   17804:	f8d9 3004 	ldr.w	r3, [r9, #4]
   17808:	9a04      	ldr	r2, [sp, #16]
   1780a:	2062      	movs	r0, #98	; 0x62
   1780c:	6013      	str	r3, [r2, #0]
   1780e:	2301      	movs	r3, #1
   17810:	612b      	str	r3, [r5, #16]
   17812:	f8cb 3000 	str.w	r3, [r11]
   17816:	9b12      	ldr	r3, [sp, #72]	; 0x48
   17818:	601d      	str	r5, [r3, #0]
   1781a:	e0c0      	b.n	1799e <__gethex+0x444>
   1781c:	4628      	mov	r0, r5
   1781e:	1e71      	subs	r1, r6, #1
   17820:	f000 fda5 	bl	1836e <__any_on>
   17824:	2800      	cmp	r0, #0
   17826:	d1ed      	bne.n	17804 <__gethex+0x2aa>
   17828:	e006      	b.n	17838 <__gethex+0x2de>
   1782a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1782c:	2b00      	cmp	r3, #0
   1782e:	d0e9      	beq.n	17804 <__gethex+0x2aa>
   17830:	e002      	b.n	17838 <__gethex+0x2de>
   17832:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   17834:	2b00      	cmp	r3, #0
   17836:	d1e5      	bne.n	17804 <__gethex+0x2aa>
   17838:	9801      	ldr	r0, [sp, #4]
   1783a:	4629      	mov	r1, r5
   1783c:	f000 f9f9 	bl	17c32 <_Bfree>
   17840:	9a12      	ldr	r2, [sp, #72]	; 0x48
   17842:	2300      	movs	r3, #0
   17844:	6013      	str	r3, [r2, #0]
   17846:	2050      	movs	r0, #80	; 0x50
   17848:	e0a9      	b.n	1799e <__gethex+0x444>
   1784a:	1e67      	subs	r7, r4, #1
   1784c:	f1b8 0f00 	cmp.w	r8, #0
   17850:	d107      	bne.n	17862 <__gethex+0x308>
   17852:	2f00      	cmp	r7, #0
   17854:	dd07      	ble.n	17866 <__gethex+0x30c>
   17856:	4628      	mov	r0, r5
   17858:	4639      	mov	r1, r7
   1785a:	f000 fd88 	bl	1836e <__any_on>
   1785e:	4680      	mov	r8, r0
   17860:	e001      	b.n	17866 <__gethex+0x30c>
   17862:	f04f 0801 	mov.w	r8, #1
   17866:	117a      	asrs	r2, r7, #5
   17868:	f85b 2022 	ldr.w	r2, [r11, r2, lsl #2]
   1786c:	f007 071f 	and.w	r7, r7, #31
   17870:	2301      	movs	r3, #1
   17872:	40bb      	lsls	r3, r7
   17874:	4213      	tst	r3, r2
   17876:	4621      	mov	r1, r4
   17878:	4628      	mov	r0, r5
   1787a:	bf18      	it	ne
   1787c:	f048 0802 	orrne.w	r8, r8, #2
   17880:	1b36      	subs	r6, r6, r4
   17882:	f7ff fe1f 	bl	174c4 <rshift>
   17886:	2702      	movs	r7, #2
   17888:	f8d9 4004 	ldr.w	r4, [r9, #4]
   1788c:	e000      	b.n	17890 <__gethex+0x336>
   1788e:	2701      	movs	r7, #1
   17890:	f1b8 0f00 	cmp.w	r8, #0
   17894:	d07e      	beq.n	17994 <__gethex+0x43a>
   17896:	f8d9 300c 	ldr.w	r3, [r9, #12]
   1789a:	2b02      	cmp	r3, #2
   1789c:	d00e      	beq.n	178bc <__gethex+0x362>
   1789e:	2b03      	cmp	r3, #3
   178a0:	d010      	beq.n	178c4 <__gethex+0x36a>
   178a2:	2b01      	cmp	r3, #1
   178a4:	d174      	bne.n	17990 <__gethex+0x436>
   178a6:	f018 0f02 	tst.w	r8, #2
   178aa:	d071      	beq.n	17990 <__gethex+0x436>
   178ac:	f8db 0000 	ldr.w	r0, [r11]
   178b0:	ea48 0800 	orr.w	r8, r8, r0
   178b4:	f018 0f01 	tst.w	r8, #1
   178b8:	d107      	bne.n	178ca <__gethex+0x370>
   178ba:	e069      	b.n	17990 <__gethex+0x436>
   178bc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   178be:	f1c3 0301 	rsb	r3, r3, #1
   178c2:	9313      	str	r3, [sp, #76]	; 0x4c
   178c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   178c6:	2b00      	cmp	r3, #0
   178c8:	d062      	beq.n	17990 <__gethex+0x436>
   178ca:	f8d5 a010 	ldr.w	r10, [r5, #16]
   178ce:	f105 0314 	add.w	r3, r5, #20
   178d2:	ea4f 088a 	mov.w	r8, r10, lsl #2
   178d6:	eb03 0108 	add.w	r1, r3, r8
   178da:	681a      	ldr	r2, [r3, #0]
   178dc:	1c50      	adds	r0, r2, #1
   178de:	d002      	beq.n	178e6 <__gethex+0x38c>
   178e0:	3201      	adds	r2, #1
   178e2:	601a      	str	r2, [r3, #0]
   178e4:	e021      	b.n	1792a <__gethex+0x3d0>
   178e6:	2200      	movs	r2, #0
   178e8:	f843 2b04 	str.w	r2, [r3], #4
   178ec:	428b      	cmp	r3, r1
   178ee:	d3f4      	bcc.n	178da <__gethex+0x380>
   178f0:	68ab      	ldr	r3, [r5, #8]
   178f2:	459a      	cmp	r10, r3
   178f4:	db12      	blt.n	1791c <__gethex+0x3c2>
   178f6:	6869      	ldr	r1, [r5, #4]
   178f8:	9801      	ldr	r0, [sp, #4]
   178fa:	3101      	adds	r1, #1
   178fc:	f000 f964 	bl	17bc8 <_Balloc>
   17900:	4683      	mov	r11, r0
   17902:	692a      	ldr	r2, [r5, #16]
   17904:	f105 010c 	add.w	r1, r5, #12
   17908:	3202      	adds	r2, #2
   1790a:	0092      	lsls	r2, r2, #2
   1790c:	300c      	adds	r0, #12
   1790e:	f7fb febd 	bl	1368c <memcpy>
   17912:	4629      	mov	r1, r5
   17914:	9801      	ldr	r0, [sp, #4]
   17916:	f000 f98c 	bl	17c32 <_Bfree>
   1791a:	465d      	mov	r5, r11
   1791c:	692b      	ldr	r3, [r5, #16]
   1791e:	1c5a      	adds	r2, r3, #1
   17920:	612a      	str	r2, [r5, #16]
   17922:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   17926:	2201      	movs	r2, #1
   17928:	615a      	str	r2, [r3, #20]
   1792a:	2f02      	cmp	r7, #2
   1792c:	f105 0214 	add.w	r2, r5, #20
   17930:	d110      	bne.n	17954 <__gethex+0x3fa>
   17932:	f8d9 3000 	ldr.w	r3, [r9]
   17936:	3b01      	subs	r3, #1
   17938:	429e      	cmp	r6, r3
   1793a:	d126      	bne.n	1798a <__gethex+0x430>
   1793c:	1171      	asrs	r1, r6, #5
   1793e:	2301      	movs	r3, #1
   17940:	f006 061f 	and.w	r6, r6, #31
   17944:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
   17948:	40b3      	lsls	r3, r6
   1794a:	4213      	tst	r3, r2
   1794c:	bf0c      	ite	eq
   1794e:	2702      	moveq	r7, #2
   17950:	2701      	movne	r7, #1
   17952:	e01a      	b.n	1798a <__gethex+0x430>
   17954:	692b      	ldr	r3, [r5, #16]
   17956:	4553      	cmp	r3, r10
   17958:	dd0a      	ble.n	17970 <__gethex+0x416>
   1795a:	4628      	mov	r0, r5
   1795c:	2101      	movs	r1, #1
   1795e:	f7ff fdb1 	bl	174c4 <rshift>
   17962:	f8d9 3008 	ldr.w	r3, [r9, #8]
   17966:	3401      	adds	r4, #1
   17968:	429c      	cmp	r4, r3
   1796a:	f73f af2f 	bgt.w	177cc <__gethex+0x272>
   1796e:	e00b      	b.n	17988 <__gethex+0x42e>
   17970:	f016 061f 	ands.w	r6, r6, #31
   17974:	d008      	beq.n	17988 <__gethex+0x42e>
   17976:	4490      	add	r8, r2
   17978:	f858 0c04 	ldr.w	r0, [r8, #-4]
   1797c:	f000 f9ee 	bl	17d5c <__hi0bits>
   17980:	f1c6 0620 	rsb	r6, r6, #32
   17984:	42b0      	cmp	r0, r6
   17986:	dbe8      	blt.n	1795a <__gethex+0x400>
   17988:	2701      	movs	r7, #1
   1798a:	f047 0720 	orr.w	r7, r7, #32
   1798e:	e001      	b.n	17994 <__gethex+0x43a>
   17990:	f047 0710 	orr.w	r7, r7, #16
   17994:	4638      	mov	r0, r7
   17996:	9b12      	ldr	r3, [sp, #72]	; 0x48
   17998:	601d      	str	r5, [r3, #0]
   1799a:	9b04      	ldr	r3, [sp, #16]
   1799c:	601c      	str	r4, [r3, #0]
   1799e:	b009      	add	sp, #36	; 0x24
   179a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

000179a4 <L_shift>:
   179a4:	f1c2 0208 	rsb	r2, r2, #8
   179a8:	0092      	lsls	r2, r2, #2
   179aa:	b570      	push	{r4, r5, r6, lr}
   179ac:	f1c2 0620 	rsb	r6, r2, #32
   179b0:	6843      	ldr	r3, [r0, #4]
   179b2:	6805      	ldr	r5, [r0, #0]
   179b4:	fa03 f406 	lsl.w	r4, r3, r6
   179b8:	432c      	orrs	r4, r5
   179ba:	40d3      	lsrs	r3, r2
   179bc:	6004      	str	r4, [r0, #0]
   179be:	f840 3f04 	str.w	r3, [r0, #4]!
   179c2:	4288      	cmp	r0, r1
   179c4:	d3f4      	bcc.n	179b0 <L_shift+0xc>
   179c6:	bd70      	pop	{r4, r5, r6, pc}

000179c8 <__hexnan>:
   179c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   179cc:	680e      	ldr	r6, [r1, #0]
   179ce:	4617      	mov	r7, r2
   179d0:	1175      	asrs	r5, r6, #5
   179d2:	eb02 0585 	add.w	r5, r2, r5, lsl #2
   179d6:	f016 031f 	ands.w	r3, r6, #31
   179da:	bf18      	it	ne
   179dc:	3504      	addne	r5, #4
   179de:	2200      	movs	r2, #0
   179e0:	f1a5 0904 	sub.w	r9, r5, #4
   179e4:	4683      	mov	r11, r0
   179e6:	46c8      	mov	r8, r9
   179e8:	464c      	mov	r4, r9
   179ea:	4616      	mov	r6, r2
   179ec:	b085      	sub	sp, #20
   179ee:	f8d0 a000 	ldr.w	r10, [r0]
   179f2:	9301      	str	r3, [sp, #4]
   179f4:	f845 2c04 	str.w	r2, [r5, #-4]
   179f8:	9200      	str	r2, [sp, #0]
   179fa:	f81a 1f01 	ldrb.w	r1, [r10, #1]!
   179fe:	2900      	cmp	r1, #0
   17a00:	d03a      	beq.n	17a78 <__hexnan+0xb0>
   17a02:	4608      	mov	r0, r1
   17a04:	9203      	str	r2, [sp, #12]
   17a06:	9102      	str	r1, [sp, #8]
   17a08:	f7ff fd92 	bl	17530 <__hexdig_fun>
   17a0c:	9902      	ldr	r1, [sp, #8]
   17a0e:	9a03      	ldr	r2, [sp, #12]
   17a10:	b9e8      	cbnz	r0, 17a4e <__hexnan+0x86>
   17a12:	2920      	cmp	r1, #32
   17a14:	d814      	bhi.n	17a40 <__hexnan+0x78>
   17a16:	9b00      	ldr	r3, [sp, #0]
   17a18:	42b3      	cmp	r3, r6
   17a1a:	daee      	bge.n	179fa <__hexnan+0x32>
   17a1c:	4544      	cmp	r4, r8
   17a1e:	d205      	bcs.n	17a2c <__hexnan+0x64>
   17a20:	2a07      	cmp	r2, #7
   17a22:	dc03      	bgt.n	17a2c <__hexnan+0x64>
   17a24:	4620      	mov	r0, r4
   17a26:	4641      	mov	r1, r8
   17a28:	f7ff ffbc 	bl	179a4 <L_shift>
   17a2c:	42bc      	cmp	r4, r7
   17a2e:	d921      	bls.n	17a74 <__hexnan+0xac>
   17a30:	f1a4 0804 	sub.w	r8, r4, #4
   17a34:	2200      	movs	r2, #0
   17a36:	f844 2c04 	str.w	r2, [r4, #-4]
   17a3a:	9600      	str	r6, [sp, #0]
   17a3c:	4644      	mov	r4, r8
   17a3e:	e7dc      	b.n	179fa <__hexnan+0x32>
   17a40:	2929      	cmp	r1, #41	; 0x29
   17a42:	d145      	bne.n	17ad0 <__hexnan+0x108>
   17a44:	f10a 0301 	add.w	r3, r10, #1
   17a48:	f8cb 3000 	str.w	r3, [r11]
   17a4c:	e014      	b.n	17a78 <__hexnan+0xb0>
   17a4e:	3201      	adds	r2, #1
   17a50:	2a08      	cmp	r2, #8
   17a52:	f106 0601 	add.w	r6, r6, #1
   17a56:	dd06      	ble.n	17a66 <__hexnan+0x9e>
   17a58:	42bc      	cmp	r4, r7
   17a5a:	d9ce      	bls.n	179fa <__hexnan+0x32>
   17a5c:	2200      	movs	r2, #0
   17a5e:	f844 2c04 	str.w	r2, [r4, #-4]
   17a62:	3c04      	subs	r4, #4
   17a64:	2201      	movs	r2, #1
   17a66:	6821      	ldr	r1, [r4, #0]
   17a68:	f000 000f 	and.w	r0, r0, #15
   17a6c:	ea40 1001 	orr.w	r0, r0, r1, lsl #4
   17a70:	6020      	str	r0, [r4, #0]
   17a72:	e7c2      	b.n	179fa <__hexnan+0x32>
   17a74:	2208      	movs	r2, #8
   17a76:	e7c0      	b.n	179fa <__hexnan+0x32>
   17a78:	b356      	cbz	r6, 17ad0 <__hexnan+0x108>
   17a7a:	4544      	cmp	r4, r8
   17a7c:	d205      	bcs.n	17a8a <__hexnan+0xc2>
   17a7e:	2a07      	cmp	r2, #7
   17a80:	dc03      	bgt.n	17a8a <__hexnan+0xc2>
   17a82:	4620      	mov	r0, r4
   17a84:	4641      	mov	r1, r8
   17a86:	f7ff ff8d 	bl	179a4 <L_shift>
   17a8a:	42bc      	cmp	r4, r7
   17a8c:	d90c      	bls.n	17aa8 <__hexnan+0xe0>
   17a8e:	463b      	mov	r3, r7
   17a90:	f854 2b04 	ldr.w	r2, [r4], #4
   17a94:	454c      	cmp	r4, r9
   17a96:	f843 2b04 	str.w	r2, [r3], #4
   17a9a:	d9f9      	bls.n	17a90 <__hexnan+0xc8>
   17a9c:	2200      	movs	r2, #0
   17a9e:	f843 2b04 	str.w	r2, [r3], #4
   17aa2:	454b      	cmp	r3, r9
   17aa4:	d9fa      	bls.n	17a9c <__hexnan+0xd4>
   17aa6:	e00b      	b.n	17ac0 <__hexnan+0xf8>
   17aa8:	9b01      	ldr	r3, [sp, #4]
   17aaa:	b14b      	cbz	r3, 17ac0 <__hexnan+0xf8>
   17aac:	f1c3 0620 	rsb	r6, r3, #32
   17ab0:	f855 2c04 	ldr.w	r2, [r5, #-4]
   17ab4:	f04f 33ff 	mov.w	r3, #4294967295
   17ab8:	40f3      	lsrs	r3, r6
   17aba:	4013      	ands	r3, r2
   17abc:	f845 3c04 	str.w	r3, [r5, #-4]
   17ac0:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   17ac4:	b933      	cbnz	r3, 17ad4 <__hexnan+0x10c>
   17ac6:	42bd      	cmp	r5, r7
   17ac8:	d1fa      	bne.n	17ac0 <__hexnan+0xf8>
   17aca:	2301      	movs	r3, #1
   17acc:	602b      	str	r3, [r5, #0]
   17ace:	e001      	b.n	17ad4 <__hexnan+0x10c>
   17ad0:	2004      	movs	r0, #4
   17ad2:	e000      	b.n	17ad6 <__hexnan+0x10e>
   17ad4:	2005      	movs	r0, #5
   17ad6:	b005      	add	sp, #20
   17ad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00017adc <__gettzinfo>:
   17adc:	4800      	ldr	r0, [pc, #0]	; (17ae0 <__gettzinfo+0x4>)
   17ade:	4770      	bx	lr
   17ae0:	10000244 	.word	0x10000244

00017ae4 <_isatty_r>:
   17ae4:	b538      	push	{r3, r4, r5, lr}
   17ae6:	4c06      	ldr	r4, [pc, #24]	; (17b00 <_isatty_r+0x1c>)
   17ae8:	2300      	movs	r3, #0
   17aea:	4605      	mov	r5, r0
   17aec:	4608      	mov	r0, r1
   17aee:	6023      	str	r3, [r4, #0]
   17af0:	f7e8 fff0 	bl	ad4 <__wrap__isatty>
   17af4:	1c43      	adds	r3, r0, #1
   17af6:	d102      	bne.n	17afe <_isatty_r+0x1a>
   17af8:	6823      	ldr	r3, [r4, #0]
   17afa:	b103      	cbz	r3, 17afe <_isatty_r+0x1a>
   17afc:	602b      	str	r3, [r5, #0]
   17afe:	bd38      	pop	{r3, r4, r5, pc}
   17b00:	10001b7c 	.word	0x10001b7c

00017b04 <iswalnum>:
   17b04:	b510      	push	{r4, lr}
   17b06:	4604      	mov	r4, r0
   17b08:	f000 f80a 	bl	17b20 <iswalpha>
   17b0c:	b930      	cbnz	r0, 17b1c <iswalnum+0x18>
   17b0e:	4620      	mov	r0, r4
   17b10:	f7fb fc63 	bl	133da <iswdigit>
   17b14:	3000      	adds	r0, #0
   17b16:	bf18      	it	ne
   17b18:	2001      	movne	r0, #1
   17b1a:	bd10      	pop	{r4, pc}
   17b1c:	2001      	movs	r0, #1
   17b1e:	bd10      	pop	{r4, pc}

00017b20 <iswalpha>:
   17b20:	28ff      	cmp	r0, #255	; 0xff
   17b22:	bf9f      	itttt	ls
   17b24:	4b04      	ldrls	r3, [pc, #16]	; (17b38 <iswalpha+0x18>)
   17b26:	681b      	ldrls	r3, [r3, #0]
   17b28:	18c0      	addls	r0, r0, r3
   17b2a:	7840      	ldrbls	r0, [r0, #1]
   17b2c:	bf94      	ite	ls
   17b2e:	f000 0003 	andls.w	r0, r0, #3
   17b32:	2000      	movhi	r0, #0
   17b34:	4770      	bx	lr
   17b36:	bf00      	nop
   17b38:	10000170 	.word	0x10000170

00017b3c <iswblank>:
   17b3c:	28ff      	cmp	r0, #255	; 0xff
   17b3e:	d80b      	bhi.n	17b58 <iswblank+0x1c>
   17b40:	4b07      	ldr	r3, [pc, #28]	; (17b60 <iswblank+0x24>)
   17b42:	681b      	ldr	r3, [r3, #0]
   17b44:	4403      	add	r3, r0
   17b46:	f993 3001 	ldrsb.w	r3, [r3, #1]
   17b4a:	2b00      	cmp	r3, #0
   17b4c:	db06      	blt.n	17b5c <iswblank+0x20>
   17b4e:	f1a0 0309 	sub.w	r3, r0, #9
   17b52:	4258      	negs	r0, r3
   17b54:	4158      	adcs	r0, r3
   17b56:	4770      	bx	lr
   17b58:	2000      	movs	r0, #0
   17b5a:	4770      	bx	lr
   17b5c:	2001      	movs	r0, #1
   17b5e:	4770      	bx	lr
   17b60:	10000170 	.word	0x10000170

00017b64 <iswcntrl>:
   17b64:	28ff      	cmp	r0, #255	; 0xff
   17b66:	bf9f      	itttt	ls
   17b68:	4b04      	ldrls	r3, [pc, #16]	; (17b7c <iswcntrl+0x18>)
   17b6a:	681b      	ldrls	r3, [r3, #0]
   17b6c:	18c0      	addls	r0, r0, r3
   17b6e:	7840      	ldrbls	r0, [r0, #1]
   17b70:	bf9a      	itte	ls
   17b72:	f000 0020 	andls.w	r0, r0, #32
   17b76:	b2c0      	uxtbls	r0, r0
   17b78:	2000      	movhi	r0, #0
   17b7a:	4770      	bx	lr
   17b7c:	10000170 	.word	0x10000170

00017b80 <labs>:
   17b80:	2800      	cmp	r0, #0
   17b82:	bfb8      	it	lt
   17b84:	4240      	neglt	r0, r0
   17b86:	4770      	bx	lr

00017b88 <_lseek_r>:
   17b88:	b538      	push	{r3, r4, r5, lr}
   17b8a:	4c07      	ldr	r4, [pc, #28]	; (17ba8 <_lseek_r+0x20>)
   17b8c:	4605      	mov	r5, r0
   17b8e:	2000      	movs	r0, #0
   17b90:	6020      	str	r0, [r4, #0]
   17b92:	4608      	mov	r0, r1
   17b94:	4611      	mov	r1, r2
   17b96:	461a      	mov	r2, r3
   17b98:	f7ea faf2 	bl	2180 <_lseek>
   17b9c:	1c43      	adds	r3, r0, #1
   17b9e:	d102      	bne.n	17ba6 <_lseek_r+0x1e>
   17ba0:	6823      	ldr	r3, [r4, #0]
   17ba2:	b103      	cbz	r3, 17ba6 <_lseek_r+0x1e>
   17ba4:	602b      	str	r3, [r5, #0]
   17ba6:	bd38      	pop	{r3, r4, r5, pc}
   17ba8:	10001b7c 	.word	0x10001b7c

00017bac <mbstowcs>:
   17bac:	b510      	push	{r4, lr}
   17bae:	b142      	cbz	r2, 17bc2 <mbstowcs+0x16>
   17bb0:	2300      	movs	r3, #0
   17bb2:	5ccc      	ldrb	r4, [r1, r3]
   17bb4:	f840 4023 	str.w	r4, [r0, r3, lsl #2]
   17bb8:	b124      	cbz	r4, 17bc4 <mbstowcs+0x18>
   17bba:	3301      	adds	r3, #1
   17bbc:	429a      	cmp	r2, r3
   17bbe:	d1f8      	bne.n	17bb2 <mbstowcs+0x6>
   17bc0:	e000      	b.n	17bc4 <mbstowcs+0x18>
   17bc2:	4613      	mov	r3, r2
   17bc4:	4618      	mov	r0, r3
   17bc6:	bd10      	pop	{r4, pc}

00017bc8 <_Balloc>:
   17bc8:	b570      	push	{r4, r5, r6, lr}
   17bca:	6a45      	ldr	r5, [r0, #36]	; 0x24
   17bcc:	4604      	mov	r4, r0
   17bce:	460e      	mov	r6, r1
   17bd0:	b93d      	cbnz	r5, 17be2 <_Balloc+0x1a>
   17bd2:	2010      	movs	r0, #16
   17bd4:	f7e8 ff84 	bl	ae0 <__wrap_malloc>
   17bd8:	6260      	str	r0, [r4, #36]	; 0x24
   17bda:	6045      	str	r5, [r0, #4]
   17bdc:	6085      	str	r5, [r0, #8]
   17bde:	6005      	str	r5, [r0, #0]
   17be0:	60c5      	str	r5, [r0, #12]
   17be2:	6a65      	ldr	r5, [r4, #36]	; 0x24
   17be4:	68eb      	ldr	r3, [r5, #12]
   17be6:	b143      	cbz	r3, 17bfa <_Balloc+0x32>
   17be8:	6a63      	ldr	r3, [r4, #36]	; 0x24
   17bea:	68db      	ldr	r3, [r3, #12]
   17bec:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
   17bf0:	b178      	cbz	r0, 17c12 <_Balloc+0x4a>
   17bf2:	6802      	ldr	r2, [r0, #0]
   17bf4:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
   17bf8:	e017      	b.n	17c2a <_Balloc+0x62>
   17bfa:	4620      	mov	r0, r4
   17bfc:	2104      	movs	r1, #4
   17bfe:	2221      	movs	r2, #33	; 0x21
   17c00:	f000 fbd7 	bl	183b2 <_calloc_r>
   17c04:	6a63      	ldr	r3, [r4, #36]	; 0x24
   17c06:	60e8      	str	r0, [r5, #12]
   17c08:	68db      	ldr	r3, [r3, #12]
   17c0a:	2b00      	cmp	r3, #0
   17c0c:	d1ec      	bne.n	17be8 <_Balloc+0x20>
   17c0e:	2000      	movs	r0, #0
   17c10:	bd70      	pop	{r4, r5, r6, pc}
   17c12:	2101      	movs	r1, #1
   17c14:	fa01 f506 	lsl.w	r5, r1, r6
   17c18:	1d6a      	adds	r2, r5, #5
   17c1a:	4620      	mov	r0, r4
   17c1c:	0092      	lsls	r2, r2, #2
   17c1e:	f000 fbc8 	bl	183b2 <_calloc_r>
   17c22:	2800      	cmp	r0, #0
   17c24:	d0f3      	beq.n	17c0e <_Balloc+0x46>
   17c26:	6046      	str	r6, [r0, #4]
   17c28:	6085      	str	r5, [r0, #8]
   17c2a:	2300      	movs	r3, #0
   17c2c:	6103      	str	r3, [r0, #16]
   17c2e:	60c3      	str	r3, [r0, #12]
   17c30:	bd70      	pop	{r4, r5, r6, pc}

00017c32 <_Bfree>:
   17c32:	b570      	push	{r4, r5, r6, lr}
   17c34:	6a44      	ldr	r4, [r0, #36]	; 0x24
   17c36:	4606      	mov	r6, r0
   17c38:	460d      	mov	r5, r1
   17c3a:	b93c      	cbnz	r4, 17c4c <_Bfree+0x1a>
   17c3c:	2010      	movs	r0, #16
   17c3e:	f7e8 ff4f 	bl	ae0 <__wrap_malloc>
   17c42:	6270      	str	r0, [r6, #36]	; 0x24
   17c44:	6044      	str	r4, [r0, #4]
   17c46:	6084      	str	r4, [r0, #8]
   17c48:	6004      	str	r4, [r0, #0]
   17c4a:	60c4      	str	r4, [r0, #12]
   17c4c:	b13d      	cbz	r5, 17c5e <_Bfree+0x2c>
   17c4e:	6a73      	ldr	r3, [r6, #36]	; 0x24
   17c50:	686a      	ldr	r2, [r5, #4]
   17c52:	68db      	ldr	r3, [r3, #12]
   17c54:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   17c58:	6029      	str	r1, [r5, #0]
   17c5a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   17c5e:	bd70      	pop	{r4, r5, r6, pc}

00017c60 <__multadd>:
   17c60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   17c64:	4606      	mov	r6, r0
   17c66:	460c      	mov	r4, r1
   17c68:	690f      	ldr	r7, [r1, #16]
   17c6a:	4698      	mov	r8, r3
   17c6c:	f101 0e14 	add.w	lr, r1, #20
   17c70:	2300      	movs	r3, #0
   17c72:	f8de 0000 	ldr.w	r0, [lr]
   17c76:	3301      	adds	r3, #1
   17c78:	b285      	uxth	r5, r0
   17c7a:	0c01      	lsrs	r1, r0, #16
   17c7c:	fb02 8505 	mla	r5, r2, r5, r8
   17c80:	4351      	muls	r1, r2
   17c82:	eb01 4115 	add.w	r1, r1, r5, lsr #16
   17c86:	b2ad      	uxth	r5, r5
   17c88:	ea4f 4811 	mov.w	r8, r1, lsr #16
   17c8c:	42bb      	cmp	r3, r7
   17c8e:	eb05 4101 	add.w	r1, r5, r1, lsl #16
   17c92:	f84e 1b04 	str.w	r1, [lr], #4
   17c96:	dbec      	blt.n	17c72 <__multadd+0x12>
   17c98:	f1b8 0f00 	cmp.w	r8, #0
   17c9c:	d01b      	beq.n	17cd6 <__multadd+0x76>
   17c9e:	68a3      	ldr	r3, [r4, #8]
   17ca0:	429f      	cmp	r7, r3
   17ca2:	db12      	blt.n	17cca <__multadd+0x6a>
   17ca4:	6861      	ldr	r1, [r4, #4]
   17ca6:	4630      	mov	r0, r6
   17ca8:	3101      	adds	r1, #1
   17caa:	f7ff ff8d 	bl	17bc8 <_Balloc>
   17cae:	4605      	mov	r5, r0
   17cb0:	6922      	ldr	r2, [r4, #16]
   17cb2:	f104 010c 	add.w	r1, r4, #12
   17cb6:	3202      	adds	r2, #2
   17cb8:	0092      	lsls	r2, r2, #2
   17cba:	300c      	adds	r0, #12
   17cbc:	f7fb fce6 	bl	1368c <memcpy>
   17cc0:	4621      	mov	r1, r4
   17cc2:	4630      	mov	r0, r6
   17cc4:	f7ff ffb5 	bl	17c32 <_Bfree>
   17cc8:	462c      	mov	r4, r5
   17cca:	eb04 0387 	add.w	r3, r4, r7, lsl #2
   17cce:	3701      	adds	r7, #1
   17cd0:	f8c3 8014 	str.w	r8, [r3, #20]
   17cd4:	6127      	str	r7, [r4, #16]
   17cd6:	4620      	mov	r0, r4
   17cd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00017cdc <__s2b>:
   17cdc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   17ce0:	4607      	mov	r7, r0
   17ce2:	4615      	mov	r5, r2
   17ce4:	4698      	mov	r8, r3
   17ce6:	2209      	movs	r2, #9
   17ce8:	3308      	adds	r3, #8
   17cea:	460c      	mov	r4, r1
   17cec:	fb93 f2f2 	sdiv	r2, r3, r2
   17cf0:	2100      	movs	r1, #0
   17cf2:	2301      	movs	r3, #1
   17cf4:	429a      	cmp	r2, r3
   17cf6:	dd02      	ble.n	17cfe <__s2b+0x22>
   17cf8:	005b      	lsls	r3, r3, #1
   17cfa:	3101      	adds	r1, #1
   17cfc:	e7fa      	b.n	17cf4 <__s2b+0x18>
   17cfe:	4638      	mov	r0, r7
   17d00:	f7ff ff62 	bl	17bc8 <_Balloc>
   17d04:	9b08      	ldr	r3, [sp, #32]
   17d06:	2d09      	cmp	r5, #9
   17d08:	6143      	str	r3, [r0, #20]
   17d0a:	f04f 0301 	mov.w	r3, #1
   17d0e:	4601      	mov	r1, r0
   17d10:	6103      	str	r3, [r0, #16]
   17d12:	dd10      	ble.n	17d36 <__s2b+0x5a>
   17d14:	f104 0609 	add.w	r6, r4, #9
   17d18:	46b1      	mov	r9, r6
   17d1a:	442c      	add	r4, r5
   17d1c:	f819 3b01 	ldrb.w	r3, [r9], #1
   17d20:	4638      	mov	r0, r7
   17d22:	220a      	movs	r2, #10
   17d24:	3b30      	subs	r3, #48	; 0x30
   17d26:	f7ff ff9b 	bl	17c60 <__multadd>
   17d2a:	45a1      	cmp	r9, r4
   17d2c:	4601      	mov	r1, r0
   17d2e:	d1f5      	bne.n	17d1c <__s2b+0x40>
   17d30:	1974      	adds	r4, r6, r5
   17d32:	3c08      	subs	r4, #8
   17d34:	e001      	b.n	17d3a <__s2b+0x5e>
   17d36:	340a      	adds	r4, #10
   17d38:	2509      	movs	r5, #9
   17d3a:	4626      	mov	r6, r4
   17d3c:	1b2b      	subs	r3, r5, r4
   17d3e:	4433      	add	r3, r6
   17d40:	4543      	cmp	r3, r8
   17d42:	da08      	bge.n	17d56 <__s2b+0x7a>
   17d44:	f816 3b01 	ldrb.w	r3, [r6], #1
   17d48:	4638      	mov	r0, r7
   17d4a:	220a      	movs	r2, #10
   17d4c:	3b30      	subs	r3, #48	; 0x30
   17d4e:	f7ff ff87 	bl	17c60 <__multadd>
   17d52:	4601      	mov	r1, r0
   17d54:	e7f2      	b.n	17d3c <__s2b+0x60>
   17d56:	4608      	mov	r0, r1
   17d58:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00017d5c <__hi0bits>:
   17d5c:	0c03      	lsrs	r3, r0, #16
   17d5e:	041b      	lsls	r3, r3, #16
   17d60:	b913      	cbnz	r3, 17d68 <__hi0bits+0xc>
   17d62:	0400      	lsls	r0, r0, #16
   17d64:	2310      	movs	r3, #16
   17d66:	e000      	b.n	17d6a <__hi0bits+0xe>
   17d68:	2300      	movs	r3, #0
   17d6a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   17d6e:	bf04      	itt	eq
   17d70:	0200      	lsleq	r0, r0, #8
   17d72:	3308      	addeq	r3, #8
   17d74:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   17d78:	bf04      	itt	eq
   17d7a:	0100      	lsleq	r0, r0, #4
   17d7c:	3304      	addeq	r3, #4
   17d7e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   17d82:	bf04      	itt	eq
   17d84:	0080      	lsleq	r0, r0, #2
   17d86:	3302      	addeq	r3, #2
   17d88:	2800      	cmp	r0, #0
   17d8a:	db03      	blt.n	17d94 <__hi0bits+0x38>
   17d8c:	0042      	lsls	r2, r0, #1
   17d8e:	d503      	bpl.n	17d98 <__hi0bits+0x3c>
   17d90:	1c58      	adds	r0, r3, #1
   17d92:	4770      	bx	lr
   17d94:	4618      	mov	r0, r3
   17d96:	4770      	bx	lr
   17d98:	2020      	movs	r0, #32
   17d9a:	4770      	bx	lr

00017d9c <__lo0bits>:
   17d9c:	6803      	ldr	r3, [r0, #0]
   17d9e:	f013 0207 	ands.w	r2, r3, #7
   17da2:	d00b      	beq.n	17dbc <__lo0bits+0x20>
   17da4:	07d9      	lsls	r1, r3, #31
   17da6:	d422      	bmi.n	17dee <__lo0bits+0x52>
   17da8:	079a      	lsls	r2, r3, #30
   17daa:	bf4b      	itete	mi
   17dac:	085b      	lsrmi	r3, r3, #1
   17dae:	089b      	lsrpl	r3, r3, #2
   17db0:	6003      	strmi	r3, [r0, #0]
   17db2:	6003      	strpl	r3, [r0, #0]
   17db4:	bf4c      	ite	mi
   17db6:	2001      	movmi	r0, #1
   17db8:	2002      	movpl	r0, #2
   17dba:	4770      	bx	lr
   17dbc:	b299      	uxth	r1, r3
   17dbe:	b909      	cbnz	r1, 17dc4 <__lo0bits+0x28>
   17dc0:	0c1b      	lsrs	r3, r3, #16
   17dc2:	2210      	movs	r2, #16
   17dc4:	f013 0fff 	tst.w	r3, #255	; 0xff
   17dc8:	bf04      	itt	eq
   17dca:	0a1b      	lsreq	r3, r3, #8
   17dcc:	3208      	addeq	r2, #8
   17dce:	0719      	lsls	r1, r3, #28
   17dd0:	bf04      	itt	eq
   17dd2:	091b      	lsreq	r3, r3, #4
   17dd4:	3204      	addeq	r2, #4
   17dd6:	0799      	lsls	r1, r3, #30
   17dd8:	bf04      	itt	eq
   17dda:	089b      	lsreq	r3, r3, #2
   17ddc:	3202      	addeq	r2, #2
   17dde:	07d9      	lsls	r1, r3, #31
   17de0:	d402      	bmi.n	17de8 <__lo0bits+0x4c>
   17de2:	085b      	lsrs	r3, r3, #1
   17de4:	d005      	beq.n	17df2 <__lo0bits+0x56>
   17de6:	3201      	adds	r2, #1
   17de8:	6003      	str	r3, [r0, #0]
   17dea:	4610      	mov	r0, r2
   17dec:	4770      	bx	lr
   17dee:	2000      	movs	r0, #0
   17df0:	4770      	bx	lr
   17df2:	2020      	movs	r0, #32
   17df4:	4770      	bx	lr

00017df6 <__i2b>:
   17df6:	b510      	push	{r4, lr}
   17df8:	460c      	mov	r4, r1
   17dfa:	2101      	movs	r1, #1
   17dfc:	f7ff fee4 	bl	17bc8 <_Balloc>
   17e00:	2201      	movs	r2, #1
   17e02:	6144      	str	r4, [r0, #20]
   17e04:	6102      	str	r2, [r0, #16]
   17e06:	bd10      	pop	{r4, pc}

00017e08 <__multiply>:
   17e08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
   17e0c:	4614      	mov	r4, r2
   17e0e:	690a      	ldr	r2, [r1, #16]
   17e10:	6923      	ldr	r3, [r4, #16]
   17e12:	4688      	mov	r8, r1
   17e14:	429a      	cmp	r2, r3
   17e16:	bfbe      	ittt	lt
   17e18:	460b      	movlt	r3, r1
   17e1a:	46a0      	movlt	r8, r4
   17e1c:	461c      	movlt	r4, r3
   17e1e:	f8d8 7010 	ldr.w	r7, [r8, #16]
   17e22:	f8d4 9010 	ldr.w	r9, [r4, #16]
   17e26:	f8d8 3008 	ldr.w	r3, [r8, #8]
   17e2a:	f8d8 1004 	ldr.w	r1, [r8, #4]
   17e2e:	eb07 0609 	add.w	r6, r7, r9
   17e32:	429e      	cmp	r6, r3
   17e34:	bfc8      	it	gt
   17e36:	3101      	addgt	r1, #1
   17e38:	f7ff fec6 	bl	17bc8 <_Balloc>
   17e3c:	f100 0514 	add.w	r5, r0, #20
   17e40:	462b      	mov	r3, r5
   17e42:	eb05 0c86 	add.w	r12, r5, r6, lsl #2
   17e46:	4563      	cmp	r3, r12
   17e48:	d203      	bcs.n	17e52 <__multiply+0x4a>
   17e4a:	2200      	movs	r2, #0
   17e4c:	f843 2b04 	str.w	r2, [r3], #4
   17e50:	e7f9      	b.n	17e46 <__multiply+0x3e>
   17e52:	f104 0214 	add.w	r2, r4, #20
   17e56:	f108 0114 	add.w	r1, r8, #20
   17e5a:	eb02 0389 	add.w	r3, r2, r9, lsl #2
   17e5e:	eb01 0787 	add.w	r7, r1, r7, lsl #2
   17e62:	9300      	str	r3, [sp, #0]
   17e64:	9b00      	ldr	r3, [sp, #0]
   17e66:	9201      	str	r2, [sp, #4]
   17e68:	429a      	cmp	r2, r3
   17e6a:	d257      	bcs.n	17f1c <__multiply+0x114>
   17e6c:	f8b2 b000 	ldrh.w	r11, [r2]
   17e70:	f1bb 0f00 	cmp.w	r11, #0
   17e74:	d023      	beq.n	17ebe <__multiply+0xb6>
   17e76:	4689      	mov	r9, r1
   17e78:	46ae      	mov	lr, r5
   17e7a:	f04f 0800 	mov.w	r8, #0
   17e7e:	f859 4b04 	ldr.w	r4, [r9], #4
   17e82:	f8be a000 	ldrh.w	r10, [lr]
   17e86:	b2a3      	uxth	r3, r4
   17e88:	fb0b a303 	mla	r3, r11, r3, r10
   17e8c:	ea4f 4a14 	mov.w	r10, r4, lsr #16
   17e90:	f8de 4000 	ldr.w	r4, [lr]
   17e94:	4443      	add	r3, r8
   17e96:	ea4f 4814 	mov.w	r8, r4, lsr #16
   17e9a:	fb0b 840a 	mla	r4, r11, r10, r8
   17e9e:	46f2      	mov	r10, lr
   17ea0:	eb04 4413 	add.w	r4, r4, r3, lsr #16
   17ea4:	b29b      	uxth	r3, r3
   17ea6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
   17eaa:	454f      	cmp	r7, r9
   17eac:	ea4f 4814 	mov.w	r8, r4, lsr #16
   17eb0:	f84a 3b04 	str.w	r3, [r10], #4
   17eb4:	d901      	bls.n	17eba <__multiply+0xb2>
   17eb6:	46d6      	mov	lr, r10
   17eb8:	e7e1      	b.n	17e7e <__multiply+0x76>
   17eba:	f8ce 8004 	str.w	r8, [lr, #4]
   17ebe:	9b01      	ldr	r3, [sp, #4]
   17ec0:	3204      	adds	r2, #4
   17ec2:	f8b3 a002 	ldrh.w	r10, [r3, #2]
   17ec6:	f1ba 0f00 	cmp.w	r10, #0
   17eca:	d021      	beq.n	17f10 <__multiply+0x108>
   17ecc:	462c      	mov	r4, r5
   17ece:	4689      	mov	r9, r1
   17ed0:	682b      	ldr	r3, [r5, #0]
   17ed2:	f04f 0800 	mov.w	r8, #0
   17ed6:	f8b9 e000 	ldrh.w	lr, [r9]
   17eda:	f8b4 b002 	ldrh.w	r11, [r4, #2]
   17ede:	b29b      	uxth	r3, r3
   17ee0:	fb0a be0e 	mla	lr, r10, lr, r11
   17ee4:	46a3      	mov	r11, r4
   17ee6:	44f0      	add	r8, lr
   17ee8:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   17eec:	f84b 3b04 	str.w	r3, [r11], #4
   17ef0:	f859 3b04 	ldr.w	r3, [r9], #4
   17ef4:	f8b4 e004 	ldrh.w	lr, [r4, #4]
   17ef8:	0c1b      	lsrs	r3, r3, #16
   17efa:	fb0a e303 	mla	r3, r10, r3, lr
   17efe:	45b9      	cmp	r9, r7
   17f00:	eb03 4318 	add.w	r3, r3, r8, lsr #16
   17f04:	ea4f 4813 	mov.w	r8, r3, lsr #16
   17f08:	d201      	bcs.n	17f0e <__multiply+0x106>
   17f0a:	465c      	mov	r4, r11
   17f0c:	e7e3      	b.n	17ed6 <__multiply+0xce>
   17f0e:	6063      	str	r3, [r4, #4]
   17f10:	3504      	adds	r5, #4
   17f12:	e7a7      	b.n	17e64 <__multiply+0x5c>
   17f14:	f85c 3d04 	ldr.w	r3, [r12, #-4]!
   17f18:	b913      	cbnz	r3, 17f20 <__multiply+0x118>
   17f1a:	3e01      	subs	r6, #1
   17f1c:	2e00      	cmp	r6, #0
   17f1e:	dcf9      	bgt.n	17f14 <__multiply+0x10c>
   17f20:	6106      	str	r6, [r0, #16]
   17f22:	b003      	add	sp, #12
   17f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

00017f28 <__pow5mult>:
   17f28:	f012 0303 	ands.w	r3, r2, #3
   17f2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   17f30:	4606      	mov	r6, r0
   17f32:	460f      	mov	r7, r1
   17f34:	4615      	mov	r5, r2
   17f36:	d007      	beq.n	17f48 <__pow5mult+0x20>
   17f38:	4a21      	ldr	r2, [pc, #132]	; (17fc0 <__pow5mult+0x98>)
   17f3a:	3b01      	subs	r3, #1
   17f3c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   17f40:	2300      	movs	r3, #0
   17f42:	f7ff fe8d 	bl	17c60 <__multadd>
   17f46:	4607      	mov	r7, r0
   17f48:	10ad      	asrs	r5, r5, #2
   17f4a:	d035      	beq.n	17fb8 <__pow5mult+0x90>
   17f4c:	6a74      	ldr	r4, [r6, #36]	; 0x24
   17f4e:	b93c      	cbnz	r4, 17f60 <__pow5mult+0x38>
   17f50:	2010      	movs	r0, #16
   17f52:	f7e8 fdc5 	bl	ae0 <__wrap_malloc>
   17f56:	6270      	str	r0, [r6, #36]	; 0x24
   17f58:	6044      	str	r4, [r0, #4]
   17f5a:	6084      	str	r4, [r0, #8]
   17f5c:	6004      	str	r4, [r0, #0]
   17f5e:	60c4      	str	r4, [r0, #12]
   17f60:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
   17f64:	f8d8 4008 	ldr.w	r4, [r8, #8]
   17f68:	b97c      	cbnz	r4, 17f8a <__pow5mult+0x62>
   17f6a:	4630      	mov	r0, r6
   17f6c:	f240 2171 	movw	r1, #625	; 0x271
   17f70:	f7ff ff41 	bl	17df6 <__i2b>
   17f74:	2300      	movs	r3, #0
   17f76:	f8c8 0008 	str.w	r0, [r8, #8]
   17f7a:	4604      	mov	r4, r0
   17f7c:	6003      	str	r3, [r0, #0]
   17f7e:	e004      	b.n	17f8a <__pow5mult+0x62>
   17f80:	106d      	asrs	r5, r5, #1
   17f82:	d019      	beq.n	17fb8 <__pow5mult+0x90>
   17f84:	6820      	ldr	r0, [r4, #0]
   17f86:	b170      	cbz	r0, 17fa6 <__pow5mult+0x7e>
   17f88:	4604      	mov	r4, r0
   17f8a:	07eb      	lsls	r3, r5, #31
   17f8c:	d5f8      	bpl.n	17f80 <__pow5mult+0x58>
   17f8e:	4639      	mov	r1, r7
   17f90:	4622      	mov	r2, r4
   17f92:	4630      	mov	r0, r6
   17f94:	f7ff ff38 	bl	17e08 <__multiply>
   17f98:	4680      	mov	r8, r0
   17f9a:	4639      	mov	r1, r7
   17f9c:	4630      	mov	r0, r6
   17f9e:	f7ff fe48 	bl	17c32 <_Bfree>
   17fa2:	4647      	mov	r7, r8
   17fa4:	e7ec      	b.n	17f80 <__pow5mult+0x58>
   17fa6:	4630      	mov	r0, r6
   17fa8:	4621      	mov	r1, r4
   17faa:	4622      	mov	r2, r4
   17fac:	f7ff ff2c 	bl	17e08 <__multiply>
   17fb0:	2300      	movs	r3, #0
   17fb2:	6020      	str	r0, [r4, #0]
   17fb4:	6003      	str	r3, [r0, #0]
   17fb6:	e7e7      	b.n	17f88 <__pow5mult+0x60>
   17fb8:	4638      	mov	r0, r7
   17fba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   17fbe:	bf00      	nop
   17fc0:	0001cbb8 	.word	0x0001cbb8

00017fc4 <__lshift>:
   17fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
   17fc8:	460c      	mov	r4, r1
   17fca:	4607      	mov	r7, r0
   17fcc:	4616      	mov	r6, r2
   17fce:	6923      	ldr	r3, [r4, #16]
   17fd0:	ea4f 1a62 	mov.w	r10, r2, asr #5
   17fd4:	eb0a 0903 	add.w	r9, r10, r3
   17fd8:	6849      	ldr	r1, [r1, #4]
   17fda:	68a3      	ldr	r3, [r4, #8]
   17fdc:	f109 0501 	add.w	r5, r9, #1
   17fe0:	429d      	cmp	r5, r3
   17fe2:	dd02      	ble.n	17fea <__lshift+0x26>
   17fe4:	3101      	adds	r1, #1
   17fe6:	005b      	lsls	r3, r3, #1
   17fe8:	e7fa      	b.n	17fe0 <__lshift+0x1c>
   17fea:	4638      	mov	r0, r7
   17fec:	f7ff fdec 	bl	17bc8 <_Balloc>
   17ff0:	4680      	mov	r8, r0
   17ff2:	f100 0114 	add.w	r1, r0, #20
   17ff6:	2300      	movs	r3, #0
   17ff8:	4553      	cmp	r3, r10
   17ffa:	da04      	bge.n	18006 <__lshift+0x42>
   17ffc:	2200      	movs	r2, #0
   17ffe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
   18002:	3301      	adds	r3, #1
   18004:	e7f8      	b.n	17ff8 <__lshift+0x34>
   18006:	ea2a 73ea 	bic.w	r3, r10, r10, asr #31
   1800a:	6920      	ldr	r0, [r4, #16]
   1800c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
   18010:	f016 021f 	ands.w	r2, r6, #31
   18014:	f104 0114 	add.w	r1, r4, #20
   18018:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
   1801c:	d014      	beq.n	18048 <__lshift+0x84>
   1801e:	f1c2 0c20 	rsb	r12, r2, #32
   18022:	2000      	movs	r0, #0
   18024:	680e      	ldr	r6, [r1, #0]
   18026:	469a      	mov	r10, r3
   18028:	4096      	lsls	r6, r2
   1802a:	4330      	orrs	r0, r6
   1802c:	f843 0b04 	str.w	r0, [r3], #4
   18030:	f851 0b04 	ldr.w	r0, [r1], #4
   18034:	4571      	cmp	r1, lr
   18036:	fa20 f00c 	lsr.w	r0, r0, r12
   1803a:	d3f3      	bcc.n	18024 <__lshift+0x60>
   1803c:	f8ca 0004 	str.w	r0, [r10, #4]
   18040:	b148      	cbz	r0, 18056 <__lshift+0x92>
   18042:	f109 0502 	add.w	r5, r9, #2
   18046:	e006      	b.n	18056 <__lshift+0x92>
   18048:	3b04      	subs	r3, #4
   1804a:	f851 2b04 	ldr.w	r2, [r1], #4
   1804e:	4571      	cmp	r1, lr
   18050:	f843 2f04 	str.w	r2, [r3, #4]!
   18054:	d3f9      	bcc.n	1804a <__lshift+0x86>
   18056:	3d01      	subs	r5, #1
   18058:	4638      	mov	r0, r7
   1805a:	f8c8 5010 	str.w	r5, [r8, #16]
   1805e:	4621      	mov	r1, r4
   18060:	f7ff fde7 	bl	17c32 <_Bfree>
   18064:	4640      	mov	r0, r8
   18066:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

0001806a <__mcmp>:
   1806a:	6903      	ldr	r3, [r0, #16]
   1806c:	690a      	ldr	r2, [r1, #16]
   1806e:	b510      	push	{r4, lr}
   18070:	1a9b      	subs	r3, r3, r2
   18072:	d111      	bne.n	18098 <__mcmp+0x2e>
   18074:	0092      	lsls	r2, r2, #2
   18076:	3014      	adds	r0, #20
   18078:	3114      	adds	r1, #20
   1807a:	1883      	adds	r3, r0, r2
   1807c:	440a      	add	r2, r1
   1807e:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   18082:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   18086:	428c      	cmp	r4, r1
   18088:	d002      	beq.n	18090 <__mcmp+0x26>
   1808a:	d307      	bcc.n	1809c <__mcmp+0x32>
   1808c:	2001      	movs	r0, #1
   1808e:	bd10      	pop	{r4, pc}
   18090:	4283      	cmp	r3, r0
   18092:	d8f4      	bhi.n	1807e <__mcmp+0x14>
   18094:	2000      	movs	r0, #0
   18096:	bd10      	pop	{r4, pc}
   18098:	4618      	mov	r0, r3
   1809a:	bd10      	pop	{r4, pc}
   1809c:	f04f 30ff 	mov.w	r0, #4294967295
   180a0:	bd10      	pop	{r4, pc}

000180a2 <__mdiff>:
   180a2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   180a6:	4607      	mov	r7, r0
   180a8:	460c      	mov	r4, r1
   180aa:	4608      	mov	r0, r1
   180ac:	4611      	mov	r1, r2
   180ae:	4615      	mov	r5, r2
   180b0:	f7ff ffdb 	bl	1806a <__mcmp>
   180b4:	1e06      	subs	r6, r0, #0
   180b6:	d108      	bne.n	180ca <__mdiff+0x28>
   180b8:	4638      	mov	r0, r7
   180ba:	4631      	mov	r1, r6
   180bc:	f7ff fd84 	bl	17bc8 <_Balloc>
   180c0:	2301      	movs	r3, #1
   180c2:	6103      	str	r3, [r0, #16]
   180c4:	6146      	str	r6, [r0, #20]
   180c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   180ca:	bfbc      	itt	lt
   180cc:	4623      	movlt	r3, r4
   180ce:	462c      	movlt	r4, r5
   180d0:	4638      	mov	r0, r7
   180d2:	6861      	ldr	r1, [r4, #4]
   180d4:	bfba      	itte	lt
   180d6:	461d      	movlt	r5, r3
   180d8:	2601      	movlt	r6, #1
   180da:	2600      	movge	r6, #0
   180dc:	f7ff fd74 	bl	17bc8 <_Balloc>
   180e0:	692b      	ldr	r3, [r5, #16]
   180e2:	60c6      	str	r6, [r0, #12]
   180e4:	6926      	ldr	r6, [r4, #16]
   180e6:	f105 0914 	add.w	r9, r5, #20
   180ea:	f104 0114 	add.w	r1, r4, #20
   180ee:	eb01 0786 	add.w	r7, r1, r6, lsl #2
   180f2:	eb09 0883 	add.w	r8, r9, r3, lsl #2
   180f6:	f100 0514 	add.w	r5, r0, #20
   180fa:	f04f 0c00 	mov.w	r12, #0
   180fe:	f851 2b04 	ldr.w	r2, [r1], #4
   18102:	f859 4b04 	ldr.w	r4, [r9], #4
   18106:	b293      	uxth	r3, r2
   18108:	449c      	add	r12, r3
   1810a:	b2a3      	uxth	r3, r4
   1810c:	0c24      	lsrs	r4, r4, #16
   1810e:	ebc3 030c 	rsb	r3, r3, r12
   18112:	ebc4 4212 	rsb	r2, r4, r2, lsr #16
   18116:	eb02 4223 	add.w	r2, r2, r3, asr #16
   1811a:	b29b      	uxth	r3, r3
   1811c:	ea4f 4c22 	mov.w	r12, r2, asr #16
   18120:	45c8      	cmp	r8, r9
   18122:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   18126:	468e      	mov	lr, r1
   18128:	f845 2b04 	str.w	r2, [r5], #4
   1812c:	d8e7      	bhi.n	180fe <__mdiff+0x5c>
   1812e:	45be      	cmp	lr, r7
   18130:	d20e      	bcs.n	18150 <__mdiff+0xae>
   18132:	f85e 3b04 	ldr.w	r3, [lr], #4
   18136:	b29a      	uxth	r2, r3
   18138:	4462      	add	r2, r12
   1813a:	0c1b      	lsrs	r3, r3, #16
   1813c:	eb03 4322 	add.w	r3, r3, r2, asr #16
   18140:	b292      	uxth	r2, r2
   18142:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   18146:	ea4f 4c23 	mov.w	r12, r3, asr #16
   1814a:	f845 2b04 	str.w	r2, [r5], #4
   1814e:	e7ee      	b.n	1812e <__mdiff+0x8c>
   18150:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   18154:	b90b      	cbnz	r3, 1815a <__mdiff+0xb8>
   18156:	3e01      	subs	r6, #1
   18158:	e7fa      	b.n	18150 <__mdiff+0xae>
   1815a:	6106      	str	r6, [r0, #16]
   1815c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00018160 <__ulp>:
   18160:	4b10      	ldr	r3, [pc, #64]	; (181a4 <__ulp+0x44>)
   18162:	400b      	ands	r3, r1
   18164:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   18168:	2b00      	cmp	r3, #0
   1816a:	dd02      	ble.n	18172 <__ulp+0x12>
   1816c:	2000      	movs	r0, #0
   1816e:	4619      	mov	r1, r3
   18170:	4770      	bx	lr
   18172:	425b      	negs	r3, r3
   18174:	151b      	asrs	r3, r3, #20
   18176:	2b13      	cmp	r3, #19
   18178:	f04f 0000 	mov.w	r0, #0
   1817c:	f04f 0100 	mov.w	r1, #0
   18180:	dc04      	bgt.n	1818c <__ulp+0x2c>
   18182:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   18186:	fa42 f103 	asr.w	r1, r2, r3
   1818a:	4770      	bx	lr
   1818c:	2b32      	cmp	r3, #50	; 0x32
   1818e:	f04f 0201 	mov.w	r2, #1
   18192:	bfce      	itee	gt
   18194:	4613      	movgt	r3, r2
   18196:	f1c3 0333 	rsble	r3, r3, #51	; 0x33
   1819a:	fa02 f303 	lslle.w	r3, r2, r3
   1819e:	4618      	mov	r0, r3
   181a0:	4770      	bx	lr
   181a2:	bf00      	nop
   181a4:	7ff00000 	.word	0x7ff00000

000181a8 <__b2d>:
   181a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   181ac:	6905      	ldr	r5, [r0, #16]
   181ae:	f100 0714 	add.w	r7, r0, #20
   181b2:	eb07 0585 	add.w	r5, r7, r5, lsl #2
   181b6:	f855 4c04 	ldr.w	r4, [r5, #-4]
   181ba:	4688      	mov	r8, r1
   181bc:	4620      	mov	r0, r4
   181be:	f7ff fdcd 	bl	17d5c <__hi0bits>
   181c2:	f1c0 0320 	rsb	r3, r0, #32
   181c6:	280a      	cmp	r0, #10
   181c8:	f1a5 0604 	sub.w	r6, r5, #4
   181cc:	f8c8 3000 	str.w	r3, [r8]
   181d0:	dc11      	bgt.n	181f6 <__b2d+0x4e>
   181d2:	f1c0 0e0b 	rsb	lr, r0, #11
   181d6:	fa24 f10e 	lsr.w	r1, r4, lr
   181da:	42be      	cmp	r6, r7
   181dc:	f041 537f 	orr.w	r3, r1, #1069547520	; 0x3fc00000
   181e0:	bf8c      	ite	hi
   181e2:	f855 1c08 	ldrhi.w	r1, [r5, #-8]
   181e6:	2100      	movls	r1, #0
   181e8:	3015      	adds	r0, #21
   181ea:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   181ee:	fa21 f10e 	lsr.w	r1, r1, lr
   181f2:	4084      	lsls	r4, r0
   181f4:	e01b      	b.n	1822e <__b2d+0x86>
   181f6:	42be      	cmp	r6, r7
   181f8:	bf86      	itte	hi
   181fa:	f1a5 0608 	subhi.w	r6, r5, #8
   181fe:	f855 1c08 	ldrhi.w	r1, [r5, #-8]
   18202:	2100      	movls	r1, #0
   18204:	f1b0 050b 	subs.w	r5, r0, #11
   18208:	d014      	beq.n	18234 <__b2d+0x8c>
   1820a:	40ac      	lsls	r4, r5
   1820c:	f1c0 002b 	rsb	r0, r0, #43	; 0x2b
   18210:	f044 547f 	orr.w	r4, r4, #1069547520	; 0x3fc00000
   18214:	f444 1440 	orr.w	r4, r4, #3145728	; 0x300000
   18218:	fa21 fe00 	lsr.w	lr, r1, r0
   1821c:	42be      	cmp	r6, r7
   1821e:	ea44 030e 	orr.w	r3, r4, lr
   18222:	bf8c      	ite	hi
   18224:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
   18228:	2400      	movls	r4, #0
   1822a:	40c4      	lsrs	r4, r0
   1822c:	40a9      	lsls	r1, r5
   1822e:	ea44 0201 	orr.w	r2, r4, r1
   18232:	e004      	b.n	1823e <__b2d+0x96>
   18234:	460a      	mov	r2, r1
   18236:	f044 537f 	orr.w	r3, r4, #1069547520	; 0x3fc00000
   1823a:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   1823e:	4610      	mov	r0, r2
   18240:	4619      	mov	r1, r3
   18242:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00018246 <__d2b>:
   18246:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1824a:	461c      	mov	r4, r3
   1824c:	2101      	movs	r1, #1
   1824e:	4615      	mov	r5, r2
   18250:	9f08      	ldr	r7, [sp, #32]
   18252:	9e09      	ldr	r6, [sp, #36]	; 0x24
   18254:	f7ff fcb8 	bl	17bc8 <_Balloc>
   18258:	f3c4 0213 	ubfx	r2, r4, #0, #20
   1825c:	f3c4 540a 	ubfx	r4, r4, #20, #11
   18260:	4680      	mov	r8, r0
   18262:	b10c      	cbz	r4, 18268 <__d2b+0x22>
   18264:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
   18268:	9201      	str	r2, [sp, #4]
   1826a:	b1ed      	cbz	r5, 182a8 <__d2b+0x62>
   1826c:	a802      	add	r0, sp, #8
   1826e:	f840 5d08 	str.w	r5, [r0, #-8]!
   18272:	f7ff fd93 	bl	17d9c <__lo0bits>
   18276:	9b00      	ldr	r3, [sp, #0]
   18278:	b150      	cbz	r0, 18290 <__d2b+0x4a>
   1827a:	9a01      	ldr	r2, [sp, #4]
   1827c:	f1c0 0120 	rsb	r1, r0, #32
   18280:	fa02 f101 	lsl.w	r1, r2, r1
   18284:	430b      	orrs	r3, r1
   18286:	40c2      	lsrs	r2, r0
   18288:	f8c8 3014 	str.w	r3, [r8, #20]
   1828c:	9201      	str	r2, [sp, #4]
   1828e:	e001      	b.n	18294 <__d2b+0x4e>
   18290:	f8c8 3014 	str.w	r3, [r8, #20]
   18294:	9b01      	ldr	r3, [sp, #4]
   18296:	2b00      	cmp	r3, #0
   18298:	bf14      	ite	ne
   1829a:	2502      	movne	r5, #2
   1829c:	2501      	moveq	r5, #1
   1829e:	f8c8 3018 	str.w	r3, [r8, #24]
   182a2:	f8c8 5010 	str.w	r5, [r8, #16]
   182a6:	e009      	b.n	182bc <__d2b+0x76>
   182a8:	a801      	add	r0, sp, #4
   182aa:	f7ff fd77 	bl	17d9c <__lo0bits>
   182ae:	9b01      	ldr	r3, [sp, #4]
   182b0:	2501      	movs	r5, #1
   182b2:	f8c8 3014 	str.w	r3, [r8, #20]
   182b6:	f8c8 5010 	str.w	r5, [r8, #16]
   182ba:	3020      	adds	r0, #32
   182bc:	b134      	cbz	r4, 182cc <__d2b+0x86>
   182be:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
   182c2:	4404      	add	r4, r0
   182c4:	603c      	str	r4, [r7, #0]
   182c6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   182ca:	e009      	b.n	182e0 <__d2b+0x9a>
   182cc:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   182d0:	eb08 0385 	add.w	r3, r8, r5, lsl #2
   182d4:	6038      	str	r0, [r7, #0]
   182d6:	6918      	ldr	r0, [r3, #16]
   182d8:	f7ff fd40 	bl	17d5c <__hi0bits>
   182dc:	ebc0 1045 	rsb	r0, r0, r5, lsl #5
   182e0:	6030      	str	r0, [r6, #0]
   182e2:	4640      	mov	r0, r8
   182e4:	b002      	add	sp, #8
   182e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000182ea <__ratio>:
   182ea:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   182ee:	4688      	mov	r8, r1
   182f0:	4669      	mov	r1, sp
   182f2:	4681      	mov	r9, r0
   182f4:	f7ff ff58 	bl	181a8 <__b2d>
   182f8:	460f      	mov	r7, r1
   182fa:	4606      	mov	r6, r0
   182fc:	a901      	add	r1, sp, #4
   182fe:	4640      	mov	r0, r8
   18300:	f7ff ff52 	bl	181a8 <__b2d>
   18304:	460d      	mov	r5, r1
   18306:	4604      	mov	r4, r0
   18308:	9a01      	ldr	r2, [sp, #4]
   1830a:	9b00      	ldr	r3, [sp, #0]
   1830c:	f8d8 1010 	ldr.w	r1, [r8, #16]
   18310:	1a9b      	subs	r3, r3, r2
   18312:	f8d9 2010 	ldr.w	r2, [r9, #16]
   18316:	4630      	mov	r0, r6
   18318:	1a52      	subs	r2, r2, r1
   1831a:	eb03 1342 	add.w	r3, r3, r2, lsl #5
   1831e:	2b00      	cmp	r3, #0
   18320:	bfcc      	ite	gt
   18322:	eb07 5703 	addgt.w	r7, r7, r3, lsl #20
   18326:	eba5 5503 	suble.w	r5, r5, r3, lsl #20
   1832a:	4639      	mov	r1, r7
   1832c:	4622      	mov	r2, r4
   1832e:	462b      	mov	r3, r5
   18330:	f7f9 fb9e 	bl	11a70 <__aeabi_ddiv>
   18334:	b003      	add	sp, #12
   18336:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0001833a <__copybits>:
   1833a:	3901      	subs	r1, #1
   1833c:	b510      	push	{r4, lr}
   1833e:	1149      	asrs	r1, r1, #5
   18340:	6914      	ldr	r4, [r2, #16]
   18342:	3101      	adds	r1, #1
   18344:	f102 0314 	add.w	r3, r2, #20
   18348:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   1834c:	eb03 0484 	add.w	r4, r3, r4, lsl #2
   18350:	42a3      	cmp	r3, r4
   18352:	4602      	mov	r2, r0
   18354:	d204      	bcs.n	18360 <__copybits+0x26>
   18356:	f853 2b04 	ldr.w	r2, [r3], #4
   1835a:	f840 2b04 	str.w	r2, [r0], #4
   1835e:	e7f7      	b.n	18350 <__copybits+0x16>
   18360:	428a      	cmp	r2, r1
   18362:	d203      	bcs.n	1836c <__copybits+0x32>
   18364:	2300      	movs	r3, #0
   18366:	f842 3b04 	str.w	r3, [r2], #4
   1836a:	e7f9      	b.n	18360 <__copybits+0x26>
   1836c:	bd10      	pop	{r4, pc}

0001836e <__any_on>:
   1836e:	f100 0214 	add.w	r2, r0, #20
   18372:	6900      	ldr	r0, [r0, #16]
   18374:	114b      	asrs	r3, r1, #5
   18376:	4283      	cmp	r3, r0
   18378:	b510      	push	{r4, lr}
   1837a:	dc0c      	bgt.n	18396 <__any_on+0x28>
   1837c:	da0c      	bge.n	18398 <__any_on+0x2a>
   1837e:	f011 011f 	ands.w	r1, r1, #31
   18382:	d009      	beq.n	18398 <__any_on+0x2a>
   18384:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
   18388:	fa24 f001 	lsr.w	r0, r4, r1
   1838c:	fa00 f101 	lsl.w	r1, r0, r1
   18390:	42a1      	cmp	r1, r4
   18392:	d10c      	bne.n	183ae <__any_on+0x40>
   18394:	e000      	b.n	18398 <__any_on+0x2a>
   18396:	4603      	mov	r3, r0
   18398:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   1839c:	4293      	cmp	r3, r2
   1839e:	d904      	bls.n	183aa <__any_on+0x3c>
   183a0:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   183a4:	2900      	cmp	r1, #0
   183a6:	d0f9      	beq.n	1839c <__any_on+0x2e>
   183a8:	e001      	b.n	183ae <__any_on+0x40>
   183aa:	2000      	movs	r0, #0
   183ac:	bd10      	pop	{r4, pc}
   183ae:	2001      	movs	r0, #1
   183b0:	bd10      	pop	{r4, pc}

000183b2 <_calloc_r>:
   183b2:	b538      	push	{r3, r4, r5, lr}
   183b4:	fb02 f401 	mul.w	r4, r2, r1
   183b8:	4621      	mov	r1, r4
   183ba:	f7fb f9d9 	bl	13770 <_malloc_r>
   183be:	4605      	mov	r5, r0
   183c0:	b118      	cbz	r0, 183ca <_calloc_r+0x18>
   183c2:	2100      	movs	r1, #0
   183c4:	4622      	mov	r2, r4
   183c6:	f7fb f987 	bl	136d8 <memset>
   183ca:	4628      	mov	r0, r5
   183cc:	bd38      	pop	{r3, r4, r5, pc}

000183ce <_realloc_r>:
   183ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   183d0:	4607      	mov	r7, r0
   183d2:	4615      	mov	r5, r2
   183d4:	460e      	mov	r6, r1
   183d6:	b921      	cbnz	r1, 183e2 <_realloc_r+0x14>
   183d8:	4611      	mov	r1, r2
   183da:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   183de:	f7fb b9c7 	b.w	13770 <_malloc_r>
   183e2:	b91a      	cbnz	r2, 183ec <_realloc_r+0x1e>
   183e4:	f7fb f980 	bl	136e8 <_free_r>
   183e8:	4628      	mov	r0, r5
   183ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   183ec:	f000 fbe2 	bl	18bb4 <_malloc_usable_size_r>
   183f0:	42a8      	cmp	r0, r5
   183f2:	d20e      	bcs.n	18412 <_realloc_r+0x44>
   183f4:	4638      	mov	r0, r7
   183f6:	4629      	mov	r1, r5
   183f8:	f7fb f9ba 	bl	13770 <_malloc_r>
   183fc:	4604      	mov	r4, r0
   183fe:	b150      	cbz	r0, 18416 <_realloc_r+0x48>
   18400:	4631      	mov	r1, r6
   18402:	462a      	mov	r2, r5
   18404:	f7fb f942 	bl	1368c <memcpy>
   18408:	4638      	mov	r0, r7
   1840a:	4631      	mov	r1, r6
   1840c:	f7fb f96c 	bl	136e8 <_free_r>
   18410:	e001      	b.n	18416 <_realloc_r+0x48>
   18412:	4630      	mov	r0, r6
   18414:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   18416:	4620      	mov	r0, r4
   18418:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0001841a <__ssputs_r>:
   1841a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
   1841e:	688e      	ldr	r6, [r1, #8]
   18420:	4682      	mov	r10, r0
   18422:	42b3      	cmp	r3, r6
   18424:	460c      	mov	r4, r1
   18426:	4690      	mov	r8, r2
   18428:	4699      	mov	r9, r3
   1842a:	d340      	bcc.n	184ae <__ssputs_r+0x94>
   1842c:	898a      	ldrh	r2, [r1, #12]
   1842e:	f412 6f90 	tst.w	r2, #1152	; 0x480
   18432:	d03a      	beq.n	184aa <__ssputs_r+0x90>
   18434:	6825      	ldr	r5, [r4, #0]
   18436:	6909      	ldr	r1, [r1, #16]
   18438:	2302      	movs	r3, #2
   1843a:	1a6f      	subs	r7, r5, r1
   1843c:	6965      	ldr	r5, [r4, #20]
   1843e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   18442:	fb95 f5f3 	sdiv	r5, r5, r3
   18446:	1c7b      	adds	r3, r7, #1
   18448:	444b      	add	r3, r9
   1844a:	429d      	cmp	r5, r3
   1844c:	bf38      	it	cc
   1844e:	461d      	movcc	r5, r3
   18450:	0553      	lsls	r3, r2, #21
   18452:	d50f      	bpl.n	18474 <__ssputs_r+0x5a>
   18454:	4629      	mov	r1, r5
   18456:	f7fb f98b 	bl	13770 <_malloc_r>
   1845a:	4606      	mov	r6, r0
   1845c:	b198      	cbz	r0, 18486 <__ssputs_r+0x6c>
   1845e:	6921      	ldr	r1, [r4, #16]
   18460:	463a      	mov	r2, r7
   18462:	f7fb f913 	bl	1368c <memcpy>
   18466:	89a3      	ldrh	r3, [r4, #12]
   18468:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   1846c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   18470:	81a3      	strh	r3, [r4, #12]
   18472:	e013      	b.n	1849c <__ssputs_r+0x82>
   18474:	462a      	mov	r2, r5
   18476:	f7ff ffaa 	bl	183ce <_realloc_r>
   1847a:	4606      	mov	r6, r0
   1847c:	b970      	cbnz	r0, 1849c <__ssputs_r+0x82>
   1847e:	4650      	mov	r0, r10
   18480:	6921      	ldr	r1, [r4, #16]
   18482:	f7fb f931 	bl	136e8 <_free_r>
   18486:	230c      	movs	r3, #12
   18488:	f8ca 3000 	str.w	r3, [r10]
   1848c:	89a3      	ldrh	r3, [r4, #12]
   1848e:	f04f 30ff 	mov.w	r0, #4294967295
   18492:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   18496:	81a3      	strh	r3, [r4, #12]
   18498:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
   1849c:	6126      	str	r6, [r4, #16]
   1849e:	443e      	add	r6, r7
   184a0:	6026      	str	r6, [r4, #0]
   184a2:	464e      	mov	r6, r9
   184a4:	6165      	str	r5, [r4, #20]
   184a6:	1bed      	subs	r5, r5, r7
   184a8:	60a5      	str	r5, [r4, #8]
   184aa:	45b1      	cmp	r9, r6
   184ac:	d200      	bcs.n	184b0 <__ssputs_r+0x96>
   184ae:	464e      	mov	r6, r9
   184b0:	4632      	mov	r2, r6
   184b2:	6820      	ldr	r0, [r4, #0]
   184b4:	4641      	mov	r1, r8
   184b6:	f7fb f8f4 	bl	136a2 <memmove>
   184ba:	68a3      	ldr	r3, [r4, #8]
   184bc:	2000      	movs	r0, #0
   184be:	1b9b      	subs	r3, r3, r6
   184c0:	60a3      	str	r3, [r4, #8]
   184c2:	6823      	ldr	r3, [r4, #0]
   184c4:	441e      	add	r6, r3
   184c6:	6026      	str	r6, [r4, #0]
   184c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}

000184cc <_svfiprintf_r>:
   184cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   184d0:	b09d      	sub	sp, #116	; 0x74
   184d2:	9303      	str	r3, [sp, #12]
   184d4:	898b      	ldrh	r3, [r1, #12]
   184d6:	4606      	mov	r6, r0
   184d8:	061c      	lsls	r4, r3, #24
   184da:	460d      	mov	r5, r1
   184dc:	4690      	mov	r8, r2
   184de:	d50c      	bpl.n	184fa <_svfiprintf_r+0x2e>
   184e0:	690b      	ldr	r3, [r1, #16]
   184e2:	b953      	cbnz	r3, 184fa <_svfiprintf_r+0x2e>
   184e4:	2140      	movs	r1, #64	; 0x40
   184e6:	f7fb f943 	bl	13770 <_malloc_r>
   184ea:	6028      	str	r0, [r5, #0]
   184ec:	6128      	str	r0, [r5, #16]
   184ee:	b910      	cbnz	r0, 184f6 <_svfiprintf_r+0x2a>
   184f0:	230c      	movs	r3, #12
   184f2:	6033      	str	r3, [r6, #0]
   184f4:	e0cc      	b.n	18690 <_svfiprintf_r+0x1c4>
   184f6:	2340      	movs	r3, #64	; 0x40
   184f8:	616b      	str	r3, [r5, #20]
   184fa:	2300      	movs	r3, #0
   184fc:	9309      	str	r3, [sp, #36]	; 0x24
   184fe:	2320      	movs	r3, #32
   18500:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
   18504:	2330      	movs	r3, #48	; 0x30
   18506:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
   1850a:	4643      	mov	r3, r8
   1850c:	461c      	mov	r4, r3
   1850e:	f813 2b01 	ldrb.w	r2, [r3], #1
   18512:	b91a      	cbnz	r2, 1851c <_svfiprintf_r+0x50>
   18514:	ebb4 0908 	subs.w	r9, r4, r8
   18518:	d00f      	beq.n	1853a <_svfiprintf_r+0x6e>
   1851a:	e002      	b.n	18522 <_svfiprintf_r+0x56>
   1851c:	2a25      	cmp	r2, #37	; 0x25
   1851e:	d1f5      	bne.n	1850c <_svfiprintf_r+0x40>
   18520:	e7f8      	b.n	18514 <_svfiprintf_r+0x48>
   18522:	4630      	mov	r0, r6
   18524:	4629      	mov	r1, r5
   18526:	4642      	mov	r2, r8
   18528:	464b      	mov	r3, r9
   1852a:	f7ff ff76 	bl	1841a <__ssputs_r>
   1852e:	3001      	adds	r0, #1
   18530:	f000 80a9 	beq.w	18686 <_svfiprintf_r+0x1ba>
   18534:	9b09      	ldr	r3, [sp, #36]	; 0x24
   18536:	444b      	add	r3, r9
   18538:	9309      	str	r3, [sp, #36]	; 0x24
   1853a:	7823      	ldrb	r3, [r4, #0]
   1853c:	2b00      	cmp	r3, #0
   1853e:	f000 80a2 	beq.w	18686 <_svfiprintf_r+0x1ba>
   18542:	2300      	movs	r3, #0
   18544:	f04f 32ff 	mov.w	r2, #4294967295
   18548:	9304      	str	r3, [sp, #16]
   1854a:	9307      	str	r3, [sp, #28]
   1854c:	9205      	str	r2, [sp, #20]
   1854e:	9306      	str	r3, [sp, #24]
   18550:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
   18554:	931a      	str	r3, [sp, #104]	; 0x68
   18556:	f104 0801 	add.w	r8, r4, #1
   1855a:	4644      	mov	r4, r8
   1855c:	f8df 9148 	ldr.w	r9, [pc, #328]	; 186a8 <_svfiprintf_r+0x1dc>
   18560:	7821      	ldrb	r1, [r4, #0]
   18562:	4648      	mov	r0, r9
   18564:	2205      	movs	r2, #5
   18566:	f7fb f873 	bl	13650 <memchr>
   1856a:	f108 0801 	add.w	r8, r8, #1
   1856e:	9b04      	ldr	r3, [sp, #16]
   18570:	b130      	cbz	r0, 18580 <_svfiprintf_r+0xb4>
   18572:	ebc9 0000 	rsb	r0, r9, r0
   18576:	2201      	movs	r2, #1
   18578:	4082      	lsls	r2, r0
   1857a:	4313      	orrs	r3, r2
   1857c:	9304      	str	r3, [sp, #16]
   1857e:	e7ec      	b.n	1855a <_svfiprintf_r+0x8e>
   18580:	06d8      	lsls	r0, r3, #27
   18582:	bf44      	itt	mi
   18584:	2220      	movmi	r2, #32
   18586:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   1858a:	0719      	lsls	r1, r3, #28
   1858c:	bf44      	itt	mi
   1858e:	222b      	movmi	r2, #43	; 0x2b
   18590:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
   18594:	7822      	ldrb	r2, [r4, #0]
   18596:	2a2a      	cmp	r2, #42	; 0x2a
   18598:	d002      	beq.n	185a0 <_svfiprintf_r+0xd4>
   1859a:	9907      	ldr	r1, [sp, #28]
   1859c:	4623      	mov	r3, r4
   1859e:	e00e      	b.n	185be <_svfiprintf_r+0xf2>
   185a0:	9a03      	ldr	r2, [sp, #12]
   185a2:	3401      	adds	r4, #1
   185a4:	1d11      	adds	r1, r2, #4
   185a6:	6812      	ldr	r2, [r2, #0]
   185a8:	9103      	str	r1, [sp, #12]
   185aa:	2a00      	cmp	r2, #0
   185ac:	bfbb      	ittet	lt
   185ae:	4252      	neglt	r2, r2
   185b0:	f043 0302 	orrlt.w	r3, r3, #2
   185b4:	9207      	strge	r2, [sp, #28]
   185b6:	9207      	strlt	r2, [sp, #28]
   185b8:	bfb8      	it	lt
   185ba:	9304      	strlt	r3, [sp, #16]
   185bc:	e00a      	b.n	185d4 <_svfiprintf_r+0x108>
   185be:	461c      	mov	r4, r3
   185c0:	7822      	ldrb	r2, [r4, #0]
   185c2:	3301      	adds	r3, #1
   185c4:	3a30      	subs	r2, #48	; 0x30
   185c6:	2a09      	cmp	r2, #9
   185c8:	d803      	bhi.n	185d2 <_svfiprintf_r+0x106>
   185ca:	200a      	movs	r0, #10
   185cc:	fb00 2101 	mla	r1, r0, r1, r2
   185d0:	e7f5      	b.n	185be <_svfiprintf_r+0xf2>
   185d2:	9107      	str	r1, [sp, #28]
   185d4:	7823      	ldrb	r3, [r4, #0]
   185d6:	2b2e      	cmp	r3, #46	; 0x2e
   185d8:	d11a      	bne.n	18610 <_svfiprintf_r+0x144>
   185da:	7863      	ldrb	r3, [r4, #1]
   185dc:	2b2a      	cmp	r3, #42	; 0x2a
   185de:	d10a      	bne.n	185f6 <_svfiprintf_r+0x12a>
   185e0:	9b03      	ldr	r3, [sp, #12]
   185e2:	3402      	adds	r4, #2
   185e4:	1d1a      	adds	r2, r3, #4
   185e6:	681b      	ldr	r3, [r3, #0]
   185e8:	9203      	str	r2, [sp, #12]
   185ea:	2b00      	cmp	r3, #0
   185ec:	bfb8      	it	lt
   185ee:	f04f 33ff 	movlt.w	r3, #4294967295
   185f2:	9305      	str	r3, [sp, #20]
   185f4:	e00c      	b.n	18610 <_svfiprintf_r+0x144>
   185f6:	1c61      	adds	r1, r4, #1
   185f8:	2200      	movs	r2, #0
   185fa:	460c      	mov	r4, r1
   185fc:	7823      	ldrb	r3, [r4, #0]
   185fe:	3101      	adds	r1, #1
   18600:	3b30      	subs	r3, #48	; 0x30
   18602:	2b09      	cmp	r3, #9
   18604:	d803      	bhi.n	1860e <_svfiprintf_r+0x142>
   18606:	200a      	movs	r0, #10
   18608:	fb00 3202 	mla	r2, r0, r2, r3
   1860c:	e7f5      	b.n	185fa <_svfiprintf_r+0x12e>
   1860e:	9205      	str	r2, [sp, #20]
   18610:	f8df 8098 	ldr.w	r8, [pc, #152]	; 186ac <_svfiprintf_r+0x1e0>
   18614:	7821      	ldrb	r1, [r4, #0]
   18616:	4640      	mov	r0, r8
   18618:	2203      	movs	r2, #3
   1861a:	f7fb f819 	bl	13650 <memchr>
   1861e:	b138      	cbz	r0, 18630 <_svfiprintf_r+0x164>
   18620:	9a04      	ldr	r2, [sp, #16]
   18622:	ebc8 0000 	rsb	r0, r8, r0
   18626:	2340      	movs	r3, #64	; 0x40
   18628:	4083      	lsls	r3, r0
   1862a:	4313      	orrs	r3, r2
   1862c:	9304      	str	r3, [sp, #16]
   1862e:	3401      	adds	r4, #1
   18630:	7821      	ldrb	r1, [r4, #0]
   18632:	481a      	ldr	r0, [pc, #104]	; (1869c <_svfiprintf_r+0x1d0>)
   18634:	2206      	movs	r2, #6
   18636:	f104 0801 	add.w	r8, r4, #1
   1863a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
   1863e:	f7fb f807 	bl	13650 <memchr>
   18642:	b188      	cbz	r0, 18668 <_svfiprintf_r+0x19c>
   18644:	4b16      	ldr	r3, [pc, #88]	; (186a0 <_svfiprintf_r+0x1d4>)
   18646:	b933      	cbnz	r3, 18656 <_svfiprintf_r+0x18a>
   18648:	9b03      	ldr	r3, [sp, #12]
   1864a:	3307      	adds	r3, #7
   1864c:	f023 0307 	bic.w	r3, r3, #7
   18650:	3308      	adds	r3, #8
   18652:	9303      	str	r3, [sp, #12]
   18654:	e013      	b.n	1867e <_svfiprintf_r+0x1b2>
   18656:	ab03      	add	r3, sp, #12
   18658:	9300      	str	r3, [sp, #0]
   1865a:	4630      	mov	r0, r6
   1865c:	a904      	add	r1, sp, #16
   1865e:	462a      	mov	r2, r5
   18660:	4b10      	ldr	r3, [pc, #64]	; (186a4 <_svfiprintf_r+0x1d8>)
   18662:	f3af 8000 	nop.w
   18666:	e007      	b.n	18678 <_svfiprintf_r+0x1ac>
   18668:	ab03      	add	r3, sp, #12
   1866a:	9300      	str	r3, [sp, #0]
   1866c:	4630      	mov	r0, r6
   1866e:	a904      	add	r1, sp, #16
   18670:	462a      	mov	r2, r5
   18672:	4b0c      	ldr	r3, [pc, #48]	; (186a4 <_svfiprintf_r+0x1d8>)
   18674:	f7fb fa86 	bl	13b84 <_printf_i>
   18678:	1c42      	adds	r2, r0, #1
   1867a:	4607      	mov	r7, r0
   1867c:	d003      	beq.n	18686 <_svfiprintf_r+0x1ba>
   1867e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   18680:	443b      	add	r3, r7
   18682:	9309      	str	r3, [sp, #36]	; 0x24
   18684:	e741      	b.n	1850a <_svfiprintf_r+0x3e>
   18686:	89ab      	ldrh	r3, [r5, #12]
   18688:	065b      	lsls	r3, r3, #25
   1868a:	d401      	bmi.n	18690 <_svfiprintf_r+0x1c4>
   1868c:	9809      	ldr	r0, [sp, #36]	; 0x24
   1868e:	e001      	b.n	18694 <_svfiprintf_r+0x1c8>
   18690:	f04f 30ff 	mov.w	r0, #4294967295
   18694:	b01d      	add	sp, #116	; 0x74
   18696:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1869a:	bf00      	nop
   1869c:	0001c754 	.word	0x0001c754
   186a0:	00000000 	.word	0x00000000
   186a4:	0001841b 	.word	0x0001841b
   186a8:	0001c74a 	.word	0x0001c74a
   186ac:	0001c750 	.word	0x0001c750

000186b0 <_sungetc_r>:
   186b0:	b538      	push	{r3, r4, r5, lr}
   186b2:	1c4b      	adds	r3, r1, #1
   186b4:	4614      	mov	r4, r2
   186b6:	d102      	bne.n	186be <_sungetc_r+0xe>
   186b8:	f04f 30ff 	mov.w	r0, #4294967295
   186bc:	bd38      	pop	{r3, r4, r5, pc}
   186be:	8993      	ldrh	r3, [r2, #12]
   186c0:	b2cd      	uxtb	r5, r1
   186c2:	f023 0320 	bic.w	r3, r3, #32
   186c6:	8193      	strh	r3, [r2, #12]
   186c8:	6b53      	ldr	r3, [r2, #52]	; 0x34
   186ca:	6852      	ldr	r2, [r2, #4]
   186cc:	b183      	cbz	r3, 186f0 <_sungetc_r+0x40>
   186ce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   186d0:	429a      	cmp	r2, r3
   186d2:	da07      	bge.n	186e4 <_sungetc_r+0x34>
   186d4:	6823      	ldr	r3, [r4, #0]
   186d6:	1e5a      	subs	r2, r3, #1
   186d8:	6022      	str	r2, [r4, #0]
   186da:	f803 5c01 	strb.w	r5, [r3, #-1]
   186de:	6863      	ldr	r3, [r4, #4]
   186e0:	3301      	adds	r3, #1
   186e2:	e01f      	b.n	18724 <_sungetc_r+0x74>
   186e4:	4621      	mov	r1, r4
   186e6:	f7fd fd43 	bl	16170 <__submore>
   186ea:	2800      	cmp	r0, #0
   186ec:	d0f2      	beq.n	186d4 <_sungetc_r+0x24>
   186ee:	e7e3      	b.n	186b8 <_sungetc_r+0x8>
   186f0:	6921      	ldr	r1, [r4, #16]
   186f2:	6823      	ldr	r3, [r4, #0]
   186f4:	b151      	cbz	r1, 1870c <_sungetc_r+0x5c>
   186f6:	428b      	cmp	r3, r1
   186f8:	d908      	bls.n	1870c <_sungetc_r+0x5c>
   186fa:	f813 0c01 	ldrb.w	r0, [r3, #-1]
   186fe:	42a8      	cmp	r0, r5
   18700:	d104      	bne.n	1870c <_sungetc_r+0x5c>
   18702:	3b01      	subs	r3, #1
   18704:	3201      	adds	r2, #1
   18706:	6023      	str	r3, [r4, #0]
   18708:	6062      	str	r2, [r4, #4]
   1870a:	bd38      	pop	{r3, r4, r5, pc}
   1870c:	63e3      	str	r3, [r4, #60]	; 0x3c
   1870e:	f104 0344 	add.w	r3, r4, #68	; 0x44
   18712:	6363      	str	r3, [r4, #52]	; 0x34
   18714:	2303      	movs	r3, #3
   18716:	63a3      	str	r3, [r4, #56]	; 0x38
   18718:	4623      	mov	r3, r4
   1871a:	6422      	str	r2, [r4, #64]	; 0x40
   1871c:	f803 5f46 	strb.w	r5, [r3, #70]!
   18720:	6023      	str	r3, [r4, #0]
   18722:	2301      	movs	r3, #1
   18724:	6063      	str	r3, [r4, #4]
   18726:	4628      	mov	r0, r5
   18728:	bd38      	pop	{r3, r4, r5, pc}

0001872a <__ssrefill_r>:
   1872a:	b510      	push	{r4, lr}
   1872c:	460c      	mov	r4, r1
   1872e:	6b49      	ldr	r1, [r1, #52]	; 0x34
   18730:	b169      	cbz	r1, 1874e <__ssrefill_r+0x24>
   18732:	f104 0344 	add.w	r3, r4, #68	; 0x44
   18736:	4299      	cmp	r1, r3
   18738:	d001      	beq.n	1873e <__ssrefill_r+0x14>
   1873a:	f7fa ffd5 	bl	136e8 <_free_r>
   1873e:	6c23      	ldr	r3, [r4, #64]	; 0x40
   18740:	2000      	movs	r0, #0
   18742:	6360      	str	r0, [r4, #52]	; 0x34
   18744:	6063      	str	r3, [r4, #4]
   18746:	b113      	cbz	r3, 1874e <__ssrefill_r+0x24>
   18748:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   1874a:	6023      	str	r3, [r4, #0]
   1874c:	bd10      	pop	{r4, pc}
   1874e:	6923      	ldr	r3, [r4, #16]
   18750:	f04f 30ff 	mov.w	r0, #4294967295
   18754:	6023      	str	r3, [r4, #0]
   18756:	2300      	movs	r3, #0
   18758:	6063      	str	r3, [r4, #4]
   1875a:	89a3      	ldrh	r3, [r4, #12]
   1875c:	f043 0320 	orr.w	r3, r3, #32
   18760:	81a3      	strh	r3, [r4, #12]
   18762:	bd10      	pop	{r4, pc}

00018764 <__ssvfiscanf_r>:
   18764:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
   18768:	4607      	mov	r7, r0
   1876a:	460c      	mov	r4, r1
   1876c:	4690      	mov	r8, r2
   1876e:	f5ad 7d24 	sub.w	sp, sp, #656	; 0x290
   18772:	9301      	str	r3, [sp, #4]
   18774:	2300      	movs	r3, #0
   18776:	9346      	str	r3, [sp, #280]	; 0x118
   18778:	9347      	str	r3, [sp, #284]	; 0x11c
   1877a:	4b9c      	ldr	r3, [pc, #624]	; (189ec <__ssvfiscanf_r+0x288>)
   1877c:	f10d 0a0c 	add.w	r10, sp, #12
   18780:	93a2      	str	r3, [sp, #648]	; 0x288
   18782:	4b9b      	ldr	r3, [pc, #620]	; (189f0 <__ssvfiscanf_r+0x28c>)
   18784:	f8cd a120 	str.w	r10, [sp, #288]	; 0x120
   18788:	93a3      	str	r3, [sp, #652]	; 0x28c
   1878a:	f898 5000 	ldrb.w	r5, [r8]
   1878e:	2d00      	cmp	r5, #0
   18790:	f000 8124 	beq.w	189dc <__ssvfiscanf_r+0x278>
   18794:	4997      	ldr	r1, [pc, #604]	; (189f4 <__ssvfiscanf_r+0x290>)
   18796:	680b      	ldr	r3, [r1, #0]
   18798:	4689      	mov	r9, r1
   1879a:	442b      	add	r3, r5
   1879c:	785b      	ldrb	r3, [r3, #1]
   1879e:	f003 0308 	and.w	r3, r3, #8
   187a2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
   187a6:	b1eb      	cbz	r3, 187e4 <__ssvfiscanf_r+0x80>
   187a8:	6863      	ldr	r3, [r4, #4]
   187aa:	2b00      	cmp	r3, #0
   187ac:	dd10      	ble.n	187d0 <__ssvfiscanf_r+0x6c>
   187ae:	6823      	ldr	r3, [r4, #0]
   187b0:	f8d9 1000 	ldr.w	r1, [r9]
   187b4:	781a      	ldrb	r2, [r3, #0]
   187b6:	440a      	add	r2, r1
   187b8:	7852      	ldrb	r2, [r2, #1]
   187ba:	0715      	lsls	r5, r2, #28
   187bc:	d50e      	bpl.n	187dc <__ssvfiscanf_r+0x78>
   187be:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   187c0:	3301      	adds	r3, #1
   187c2:	3201      	adds	r2, #1
   187c4:	9247      	str	r2, [sp, #284]	; 0x11c
   187c6:	6862      	ldr	r2, [r4, #4]
   187c8:	6023      	str	r3, [r4, #0]
   187ca:	3a01      	subs	r2, #1
   187cc:	6062      	str	r2, [r4, #4]
   187ce:	e7eb      	b.n	187a8 <__ssvfiscanf_r+0x44>
   187d0:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   187d2:	4638      	mov	r0, r7
   187d4:	4621      	mov	r1, r4
   187d6:	4798      	blx	r3
   187d8:	2800      	cmp	r0, #0
   187da:	d0e8      	beq.n	187ae <__ssvfiscanf_r+0x4a>
   187dc:	f108 0601 	add.w	r6, r8, #1
   187e0:	46b0      	mov	r8, r6
   187e2:	e7d2      	b.n	1878a <__ssvfiscanf_r+0x26>
   187e4:	2d25      	cmp	r5, #37	; 0x25
   187e6:	f108 0601 	add.w	r6, r8, #1
   187ea:	d14f      	bne.n	1888c <__ssvfiscanf_r+0x128>
   187ec:	9245      	str	r2, [sp, #276]	; 0x114
   187ee:	9243      	str	r2, [sp, #268]	; 0x10c
   187f0:	f898 3001 	ldrb.w	r3, [r8, #1]
   187f4:	2b2a      	cmp	r3, #42	; 0x2a
   187f6:	d103      	bne.n	18800 <__ssvfiscanf_r+0x9c>
   187f8:	2310      	movs	r3, #16
   187fa:	9343      	str	r3, [sp, #268]	; 0x10c
   187fc:	f108 0602 	add.w	r6, r8, #2
   18800:	7831      	ldrb	r1, [r6, #0]
   18802:	4635      	mov	r5, r6
   18804:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
   18808:	2b09      	cmp	r3, #9
   1880a:	f106 0601 	add.w	r6, r6, #1
   1880e:	d806      	bhi.n	1881e <__ssvfiscanf_r+0xba>
   18810:	9b45      	ldr	r3, [sp, #276]	; 0x114
   18812:	220a      	movs	r2, #10
   18814:	fb02 1303 	mla	r3, r2, r3, r1
   18818:	3b30      	subs	r3, #48	; 0x30
   1881a:	9345      	str	r3, [sp, #276]	; 0x114
   1881c:	e7f0      	b.n	18800 <__ssvfiscanf_r+0x9c>
   1881e:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 189fc <__ssvfiscanf_r+0x298>
   18822:	2203      	movs	r2, #3
   18824:	4640      	mov	r0, r8
   18826:	f7fa ff13 	bl	13650 <memchr>
   1882a:	b140      	cbz	r0, 1883e <__ssvfiscanf_r+0xda>
   1882c:	4635      	mov	r5, r6
   1882e:	2301      	movs	r3, #1
   18830:	ebc8 0000 	rsb	r0, r8, r0
   18834:	fa03 f200 	lsl.w	r2, r3, r0
   18838:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   1883a:	4313      	orrs	r3, r2
   1883c:	9343      	str	r3, [sp, #268]	; 0x10c
   1883e:	1c6e      	adds	r6, r5, #1
   18840:	782d      	ldrb	r5, [r5, #0]
   18842:	2d67      	cmp	r5, #103	; 0x67
   18844:	d80f      	bhi.n	18866 <__ssvfiscanf_r+0x102>
   18846:	2d65      	cmp	r5, #101	; 0x65
   18848:	d278      	bcs.n	1893c <__ssvfiscanf_r+0x1d8>
   1884a:	2d5b      	cmp	r5, #91	; 0x5b
   1884c:	d054      	beq.n	188f8 <__ssvfiscanf_r+0x194>
   1884e:	d805      	bhi.n	1885c <__ssvfiscanf_r+0xf8>
   18850:	2d00      	cmp	r5, #0
   18852:	f000 80c5 	beq.w	189e0 <__ssvfiscanf_r+0x27c>
   18856:	2d25      	cmp	r5, #37	; 0x25
   18858:	d018      	beq.n	1888c <__ssvfiscanf_r+0x128>
   1885a:	e071      	b.n	18940 <__ssvfiscanf_r+0x1dc>
   1885c:	2d63      	cmp	r5, #99	; 0x63
   1885e:	d057      	beq.n	18910 <__ssvfiscanf_r+0x1ac>
   18860:	2d64      	cmp	r5, #100	; 0x64
   18862:	d03f      	beq.n	188e4 <__ssvfiscanf_r+0x180>
   18864:	e06c      	b.n	18940 <__ssvfiscanf_r+0x1dc>
   18866:	2d70      	cmp	r5, #112	; 0x70
   18868:	d032      	beq.n	188d0 <__ssvfiscanf_r+0x16c>
   1886a:	d807      	bhi.n	1887c <__ssvfiscanf_r+0x118>
   1886c:	2d6e      	cmp	r5, #110	; 0x6e
   1886e:	d055      	beq.n	1891c <__ssvfiscanf_r+0x1b8>
   18870:	d83a      	bhi.n	188e8 <__ssvfiscanf_r+0x184>
   18872:	2d69      	cmp	r5, #105	; 0x69
   18874:	d164      	bne.n	18940 <__ssvfiscanf_r+0x1dc>
   18876:	2300      	movs	r3, #0
   18878:	9344      	str	r3, [sp, #272]	; 0x110
   1887a:	e03b      	b.n	188f4 <__ssvfiscanf_r+0x190>
   1887c:	2d75      	cmp	r5, #117	; 0x75
   1887e:	d031      	beq.n	188e4 <__ssvfiscanf_r+0x180>
   18880:	2d78      	cmp	r5, #120	; 0x78
   18882:	d029      	beq.n	188d8 <__ssvfiscanf_r+0x174>
   18884:	2d73      	cmp	r5, #115	; 0x73
   18886:	d15b      	bne.n	18940 <__ssvfiscanf_r+0x1dc>
   18888:	2302      	movs	r3, #2
   1888a:	e03f      	b.n	1890c <__ssvfiscanf_r+0x1a8>
   1888c:	6863      	ldr	r3, [r4, #4]
   1888e:	2b00      	cmp	r3, #0
   18890:	dd0d      	ble.n	188ae <__ssvfiscanf_r+0x14a>
   18892:	6823      	ldr	r3, [r4, #0]
   18894:	781a      	ldrb	r2, [r3, #0]
   18896:	42aa      	cmp	r2, r5
   18898:	f040 80a0 	bne.w	189dc <__ssvfiscanf_r+0x278>
   1889c:	3301      	adds	r3, #1
   1889e:	6862      	ldr	r2, [r4, #4]
   188a0:	6023      	str	r3, [r4, #0]
   188a2:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   188a4:	3a01      	subs	r2, #1
   188a6:	3301      	adds	r3, #1
   188a8:	6062      	str	r2, [r4, #4]
   188aa:	9347      	str	r3, [sp, #284]	; 0x11c
   188ac:	e798      	b.n	187e0 <__ssvfiscanf_r+0x7c>
   188ae:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   188b0:	4638      	mov	r0, r7
   188b2:	4621      	mov	r1, r4
   188b4:	4798      	blx	r3
   188b6:	2800      	cmp	r0, #0
   188b8:	d0eb      	beq.n	18892 <__ssvfiscanf_r+0x12e>
   188ba:	9846      	ldr	r0, [sp, #280]	; 0x118
   188bc:	2800      	cmp	r0, #0
   188be:	f000 808f 	beq.w	189e0 <__ssvfiscanf_r+0x27c>
   188c2:	89a3      	ldrh	r3, [r4, #12]
   188c4:	f013 0f40 	tst.w	r3, #64	; 0x40
   188c8:	bf18      	it	ne
   188ca:	f04f 30ff 	movne.w	r0, #4294967295
   188ce:	e089      	b.n	189e4 <__ssvfiscanf_r+0x280>
   188d0:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   188d2:	f043 0320 	orr.w	r3, r3, #32
   188d6:	9343      	str	r3, [sp, #268]	; 0x10c
   188d8:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   188da:	f443 7300 	orr.w	r3, r3, #512	; 0x200
   188de:	9343      	str	r3, [sp, #268]	; 0x10c
   188e0:	2310      	movs	r3, #16
   188e2:	e002      	b.n	188ea <__ssvfiscanf_r+0x186>
   188e4:	230a      	movs	r3, #10
   188e6:	e000      	b.n	188ea <__ssvfiscanf_r+0x186>
   188e8:	2308      	movs	r3, #8
   188ea:	2d6e      	cmp	r5, #110	; 0x6e
   188ec:	9344      	str	r3, [sp, #272]	; 0x110
   188ee:	dd01      	ble.n	188f4 <__ssvfiscanf_r+0x190>
   188f0:	2304      	movs	r3, #4
   188f2:	e00b      	b.n	1890c <__ssvfiscanf_r+0x1a8>
   188f4:	2303      	movs	r3, #3
   188f6:	e009      	b.n	1890c <__ssvfiscanf_r+0x1a8>
   188f8:	4631      	mov	r1, r6
   188fa:	4650      	mov	r0, r10
   188fc:	f7fb fe4c 	bl	14598 <__sccl>
   18900:	4606      	mov	r6, r0
   18902:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   18904:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   18908:	9343      	str	r3, [sp, #268]	; 0x10c
   1890a:	2301      	movs	r3, #1
   1890c:	9349      	str	r3, [sp, #292]	; 0x124
   1890e:	e01b      	b.n	18948 <__ssvfiscanf_r+0x1e4>
   18910:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   18912:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   18916:	9343      	str	r3, [sp, #268]	; 0x10c
   18918:	2300      	movs	r3, #0
   1891a:	e7f7      	b.n	1890c <__ssvfiscanf_r+0x1a8>
   1891c:	9a43      	ldr	r2, [sp, #268]	; 0x10c
   1891e:	06d0      	lsls	r0, r2, #27
   18920:	f53f af5e 	bmi.w	187e0 <__ssvfiscanf_r+0x7c>
   18924:	f012 0f01 	tst.w	r2, #1
   18928:	9a01      	ldr	r2, [sp, #4]
   1892a:	9b47      	ldr	r3, [sp, #284]	; 0x11c
   1892c:	f102 0104 	add.w	r1, r2, #4
   18930:	9101      	str	r1, [sp, #4]
   18932:	6812      	ldr	r2, [r2, #0]
   18934:	bf14      	ite	ne
   18936:	8013      	strhne	r3, [r2, #0]
   18938:	6013      	streq	r3, [r2, #0]
   1893a:	e751      	b.n	187e0 <__ssvfiscanf_r+0x7c>
   1893c:	2305      	movs	r3, #5
   1893e:	e7e5      	b.n	1890c <__ssvfiscanf_r+0x1a8>
   18940:	2303      	movs	r3, #3
   18942:	9349      	str	r3, [sp, #292]	; 0x124
   18944:	230a      	movs	r3, #10
   18946:	9344      	str	r3, [sp, #272]	; 0x110
   18948:	6863      	ldr	r3, [r4, #4]
   1894a:	2b00      	cmp	r3, #0
   1894c:	dd03      	ble.n	18956 <__ssvfiscanf_r+0x1f2>
   1894e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
   18950:	0659      	lsls	r1, r3, #25
   18952:	d511      	bpl.n	18978 <__ssvfiscanf_r+0x214>
   18954:	e018      	b.n	18988 <__ssvfiscanf_r+0x224>
   18956:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   18958:	4638      	mov	r0, r7
   1895a:	4621      	mov	r1, r4
   1895c:	4798      	blx	r3
   1895e:	2800      	cmp	r0, #0
   18960:	d0f5      	beq.n	1894e <__ssvfiscanf_r+0x1ea>
   18962:	e7aa      	b.n	188ba <__ssvfiscanf_r+0x156>
   18964:	9a47      	ldr	r2, [sp, #284]	; 0x11c
   18966:	3201      	adds	r2, #1
   18968:	9247      	str	r2, [sp, #284]	; 0x11c
   1896a:	6862      	ldr	r2, [r4, #4]
   1896c:	3a01      	subs	r2, #1
   1896e:	2a00      	cmp	r2, #0
   18970:	6062      	str	r2, [r4, #4]
   18972:	dd13      	ble.n	1899c <__ssvfiscanf_r+0x238>
   18974:	3301      	adds	r3, #1
   18976:	6023      	str	r3, [r4, #0]
   18978:	6823      	ldr	r3, [r4, #0]
   1897a:	f8d9 1000 	ldr.w	r1, [r9]
   1897e:	781a      	ldrb	r2, [r3, #0]
   18980:	440a      	add	r2, r1
   18982:	7852      	ldrb	r2, [r2, #1]
   18984:	0712      	lsls	r2, r2, #28
   18986:	d4ed      	bmi.n	18964 <__ssvfiscanf_r+0x200>
   18988:	9b49      	ldr	r3, [sp, #292]	; 0x124
   1898a:	2b02      	cmp	r3, #2
   1898c:	dc0d      	bgt.n	189aa <__ssvfiscanf_r+0x246>
   1898e:	4638      	mov	r0, r7
   18990:	a943      	add	r1, sp, #268	; 0x10c
   18992:	4622      	mov	r2, r4
   18994:	ab01      	add	r3, sp, #4
   18996:	f7fb fb89 	bl	140ac <_scanf_chars>
   1899a:	e019      	b.n	189d0 <__ssvfiscanf_r+0x26c>
   1899c:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   1899e:	4638      	mov	r0, r7
   189a0:	4621      	mov	r1, r4
   189a2:	4798      	blx	r3
   189a4:	2800      	cmp	r0, #0
   189a6:	d0e7      	beq.n	18978 <__ssvfiscanf_r+0x214>
   189a8:	e787      	b.n	188ba <__ssvfiscanf_r+0x156>
   189aa:	2b04      	cmp	r3, #4
   189ac:	dc06      	bgt.n	189bc <__ssvfiscanf_r+0x258>
   189ae:	4638      	mov	r0, r7
   189b0:	a943      	add	r1, sp, #268	; 0x10c
   189b2:	4622      	mov	r2, r4
   189b4:	ab01      	add	r3, sp, #4
   189b6:	f7fb fbd7 	bl	14168 <_scanf_i>
   189ba:	e009      	b.n	189d0 <__ssvfiscanf_r+0x26c>
   189bc:	4b0e      	ldr	r3, [pc, #56]	; (189f8 <__ssvfiscanf_r+0x294>)
   189be:	2b00      	cmp	r3, #0
   189c0:	f43f af0e 	beq.w	187e0 <__ssvfiscanf_r+0x7c>
   189c4:	4638      	mov	r0, r7
   189c6:	a943      	add	r1, sp, #268	; 0x10c
   189c8:	4622      	mov	r2, r4
   189ca:	ab01      	add	r3, sp, #4
   189cc:	f3af 8000 	nop.w
   189d0:	2801      	cmp	r0, #1
   189d2:	d003      	beq.n	189dc <__ssvfiscanf_r+0x278>
   189d4:	2802      	cmp	r0, #2
   189d6:	f47f af03 	bne.w	187e0 <__ssvfiscanf_r+0x7c>
   189da:	e76e      	b.n	188ba <__ssvfiscanf_r+0x156>
   189dc:	9846      	ldr	r0, [sp, #280]	; 0x118
   189de:	e001      	b.n	189e4 <__ssvfiscanf_r+0x280>
   189e0:	f04f 30ff 	mov.w	r0, #4294967295
   189e4:	f50d 7d24 	add.w	sp, sp, #656	; 0x290
   189e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
   189ec:	000186b1 	.word	0x000186b1
   189f0:	0001872b 	.word	0x0001872b
   189f4:	10000170 	.word	0x10000170
   189f8:	00000000 	.word	0x00000000
   189fc:	0001c750 	.word	0x0001c750

00018a00 <_read_r>:
   18a00:	b538      	push	{r3, r4, r5, lr}
   18a02:	4c07      	ldr	r4, [pc, #28]	; (18a20 <_read_r+0x20>)
   18a04:	4605      	mov	r5, r0
   18a06:	2000      	movs	r0, #0
   18a08:	6020      	str	r0, [r4, #0]
   18a0a:	4608      	mov	r0, r1
   18a0c:	4611      	mov	r1, r2
   18a0e:	461a      	mov	r2, r3
   18a10:	f7e9 fb82 	bl	2118 <_read>
   18a14:	1c43      	adds	r3, r0, #1
   18a16:	d102      	bne.n	18a1e <_read_r+0x1e>
   18a18:	6823      	ldr	r3, [r4, #0]
   18a1a:	b103      	cbz	r3, 18a1e <_read_r+0x1e>
   18a1c:	602b      	str	r3, [r5, #0]
   18a1e:	bd38      	pop	{r3, r4, r5, pc}
   18a20:	10001b7c 	.word	0x10001b7c

00018a24 <__fpclassifyd>:
   18a24:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   18a28:	b510      	push	{r4, lr}
   18a2a:	d01b      	beq.n	18a64 <__fpclassifyd+0x40>
   18a2c:	4a0f      	ldr	r2, [pc, #60]	; (18a6c <__fpclassifyd+0x48>)
   18a2e:	f5a1 1480 	sub.w	r4, r1, #1048576	; 0x100000
   18a32:	4294      	cmp	r4, r2
   18a34:	d910      	bls.n	18a58 <__fpclassifyd+0x34>
   18a36:	f101 41ff 	add.w	r1, r1, #2139095040	; 0x7f800000
   18a3a:	4a0c      	ldr	r2, [pc, #48]	; (18a6c <__fpclassifyd+0x48>)
   18a3c:	f501 01e0 	add.w	r1, r1, #7340032	; 0x700000
   18a40:	4291      	cmp	r1, r2
   18a42:	d909      	bls.n	18a58 <__fpclassifyd+0x34>
   18a44:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   18a48:	d308      	bcc.n	18a5c <__fpclassifyd+0x38>
   18a4a:	4a09      	ldr	r2, [pc, #36]	; (18a70 <__fpclassifyd+0x4c>)
   18a4c:	4293      	cmp	r3, r2
   18a4e:	d107      	bne.n	18a60 <__fpclassifyd+0x3c>
   18a50:	fab0 f080 	clz	r0, r0
   18a54:	0940      	lsrs	r0, r0, #5
   18a56:	bd10      	pop	{r4, pc}
   18a58:	2004      	movs	r0, #4
   18a5a:	bd10      	pop	{r4, pc}
   18a5c:	2003      	movs	r0, #3
   18a5e:	bd10      	pop	{r4, pc}
   18a60:	2000      	movs	r0, #0
   18a62:	bd10      	pop	{r4, pc}
   18a64:	2800      	cmp	r0, #0
   18a66:	d1e6      	bne.n	18a36 <__fpclassifyd+0x12>
   18a68:	2002      	movs	r0, #2
   18a6a:	bd10      	pop	{r4, pc}
   18a6c:	7fdfffff 	.word	0x7fdfffff
   18a70:	7ff00000 	.word	0x7ff00000

00018a74 <nanf>:
   18a74:	4800      	ldr	r0, [pc, #0]	; (18a78 <nanf+0x4>)
   18a76:	4770      	bx	lr
   18a78:	7fc00000 	.word	0x7fc00000

00018a7c <sniprintf>:
   18a7c:	b40c      	push	{r2, r3}
   18a7e:	b530      	push	{r4, r5, lr}
   18a80:	4b16      	ldr	r3, [pc, #88]	; (18adc <sniprintf+0x60>)
   18a82:	1e0c      	subs	r4, r1, #0
   18a84:	b09d      	sub	sp, #116	; 0x74
   18a86:	681d      	ldr	r5, [r3, #0]
   18a88:	da04      	bge.n	18a94 <sniprintf+0x18>
   18a8a:	238b      	movs	r3, #139	; 0x8b
   18a8c:	602b      	str	r3, [r5, #0]
   18a8e:	f04f 30ff 	mov.w	r0, #4294967295
   18a92:	e01e      	b.n	18ad2 <sniprintf+0x56>
   18a94:	f44f 7302 	mov.w	r3, #520	; 0x208
   18a98:	f8ad 3014 	strh.w	r3, [sp, #20]
   18a9c:	bf0c      	ite	eq
   18a9e:	4623      	moveq	r3, r4
   18aa0:	f104 33ff 	addne.w	r3, r4, #4294967295
   18aa4:	9304      	str	r3, [sp, #16]
   18aa6:	9307      	str	r3, [sp, #28]
   18aa8:	f64f 73ff 	movw	r3, #65535	; 0xffff
   18aac:	9002      	str	r0, [sp, #8]
   18aae:	9006      	str	r0, [sp, #24]
   18ab0:	f8ad 3016 	strh.w	r3, [sp, #22]
   18ab4:	4628      	mov	r0, r5
   18ab6:	ab21      	add	r3, sp, #132	; 0x84
   18ab8:	a902      	add	r1, sp, #8
   18aba:	9a20      	ldr	r2, [sp, #128]	; 0x80
   18abc:	9301      	str	r3, [sp, #4]
   18abe:	f7ff fd05 	bl	184cc <_svfiprintf_r>
   18ac2:	1c43      	adds	r3, r0, #1
   18ac4:	bfbc      	itt	lt
   18ac6:	238b      	movlt	r3, #139	; 0x8b
   18ac8:	602b      	strlt	r3, [r5, #0]
   18aca:	b114      	cbz	r4, 18ad2 <sniprintf+0x56>
   18acc:	9b02      	ldr	r3, [sp, #8]
   18ace:	2200      	movs	r2, #0
   18ad0:	701a      	strb	r2, [r3, #0]
   18ad2:	b01d      	add	sp, #116	; 0x74
   18ad4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   18ad8:	b002      	add	sp, #8
   18ada:	4770      	bx	lr
   18adc:	100001d4 	.word	0x100001d4

00018ae0 <strcpy>:
   18ae0:	4603      	mov	r3, r0
   18ae2:	f811 2b01 	ldrb.w	r2, [r1], #1
   18ae6:	f803 2b01 	strb.w	r2, [r3], #1
   18aea:	2a00      	cmp	r2, #0
   18aec:	d1f9      	bne.n	18ae2 <strcpy+0x2>
   18aee:	4770      	bx	lr

00018af0 <swprintf>:
   18af0:	b40c      	push	{r2, r3}
   18af2:	b530      	push	{r4, r5, lr}
   18af4:	4b17      	ldr	r3, [pc, #92]	; (18b54 <swprintf+0x64>)
   18af6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
   18afa:	b09d      	sub	sp, #116	; 0x74
   18afc:	460c      	mov	r4, r1
   18afe:	681d      	ldr	r5, [r3, #0]
   18b00:	d21f      	bcs.n	18b42 <swprintf+0x52>
   18b02:	f44f 7302 	mov.w	r3, #520	; 0x208
   18b06:	f8ad 3014 	strh.w	r3, [sp, #20]
   18b0a:	9002      	str	r0, [sp, #8]
   18b0c:	9006      	str	r0, [sp, #24]
   18b0e:	b121      	cbz	r1, 18b1a <swprintf+0x2a>
   18b10:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
   18b14:	3b01      	subs	r3, #1
   18b16:	009b      	lsls	r3, r3, #2
   18b18:	e000      	b.n	18b1c <swprintf+0x2c>
   18b1a:	460b      	mov	r3, r1
   18b1c:	9304      	str	r3, [sp, #16]
   18b1e:	9307      	str	r3, [sp, #28]
   18b20:	f64f 73ff 	movw	r3, #65535	; 0xffff
   18b24:	4628      	mov	r0, r5
   18b26:	f8ad 3016 	strh.w	r3, [sp, #22]
   18b2a:	a902      	add	r1, sp, #8
   18b2c:	ab21      	add	r3, sp, #132	; 0x84
   18b2e:	9a20      	ldr	r2, [sp, #128]	; 0x80
   18b30:	9301      	str	r3, [sp, #4]
   18b32:	f000 f8b9 	bl	18ca8 <_svfwprintf_r>
   18b36:	b124      	cbz	r4, 18b42 <swprintf+0x52>
   18b38:	9b02      	ldr	r3, [sp, #8]
   18b3a:	2200      	movs	r2, #0
   18b3c:	42a0      	cmp	r0, r4
   18b3e:	601a      	str	r2, [r3, #0]
   18b40:	d303      	bcc.n	18b4a <swprintf+0x5a>
   18b42:	238b      	movs	r3, #139	; 0x8b
   18b44:	602b      	str	r3, [r5, #0]
   18b46:	f04f 30ff 	mov.w	r0, #4294967295
   18b4a:	b01d      	add	sp, #116	; 0x74
   18b4c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   18b50:	b002      	add	sp, #8
   18b52:	4770      	bx	lr
   18b54:	100001d4 	.word	0x100001d4

00018b58 <wcscmp>:
   18b58:	1f02      	subs	r2, r0, #4
   18b5a:	f852 0f04 	ldr.w	r0, [r2, #4]!
   18b5e:	f851 3b04 	ldr.w	r3, [r1], #4
   18b62:	4298      	cmp	r0, r3
   18b64:	d102      	bne.n	18b6c <wcscmp+0x14>
   18b66:	2800      	cmp	r0, #0
   18b68:	d1f7      	bne.n	18b5a <wcscmp+0x2>
   18b6a:	e000      	b.n	18b6e <wcscmp+0x16>
   18b6c:	1ac0      	subs	r0, r0, r3
   18b6e:	4770      	bx	lr

00018b70 <wcscpy>:
   18b70:	2300      	movs	r3, #0
   18b72:	6003      	str	r3, [r0, #0]
   18b74:	4603      	mov	r3, r0
   18b76:	3904      	subs	r1, #4
   18b78:	f851 2f04 	ldr.w	r2, [r1, #4]!
   18b7c:	b112      	cbz	r2, 18b84 <wcscpy+0x14>
   18b7e:	f843 2b04 	str.w	r2, [r3], #4
   18b82:	e7f9      	b.n	18b78 <wcscpy+0x8>
   18b84:	601a      	str	r2, [r3, #0]
   18b86:	4770      	bx	lr

00018b88 <wcslcpy>:
   18b88:	b510      	push	{r4, lr}
   18b8a:	460b      	mov	r3, r1
   18b8c:	b152      	cbz	r2, 18ba4 <wcslcpy+0x1c>
   18b8e:	3a01      	subs	r2, #1
   18b90:	d006      	beq.n	18ba0 <wcslcpy+0x18>
   18b92:	f853 4b04 	ldr.w	r4, [r3], #4
   18b96:	f840 4b04 	str.w	r4, [r0], #4
   18b9a:	2c00      	cmp	r4, #0
   18b9c:	d1f7      	bne.n	18b8e <wcslcpy+0x6>
   18b9e:	e005      	b.n	18bac <wcslcpy+0x24>
   18ba0:	2200      	movs	r2, #0
   18ba2:	6002      	str	r2, [r0, #0]
   18ba4:	f853 2b04 	ldr.w	r2, [r3], #4
   18ba8:	2a00      	cmp	r2, #0
   18baa:	d1fb      	bne.n	18ba4 <wcslcpy+0x1c>
   18bac:	1a58      	subs	r0, r3, r1
   18bae:	1080      	asrs	r0, r0, #2
   18bb0:	3801      	subs	r0, #1
   18bb2:	bd10      	pop	{r4, pc}

00018bb4 <_malloc_usable_size_r>:
   18bb4:	f851 0c04 	ldr.w	r0, [r1, #-4]
   18bb8:	2800      	cmp	r0, #0
   18bba:	bfbe      	ittt	lt
   18bbc:	1809      	addlt	r1, r1, r0
   18bbe:	f851 3c04 	ldrlt.w	r3, [r1, #-4]
   18bc2:	18c0      	addlt	r0, r0, r3
   18bc4:	3804      	subs	r0, #4
   18bc6:	4770      	bx	lr

00018bc8 <wcvt>:
   18bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   18bcc:	461e      	mov	r6, r3
   18bce:	b089      	sub	sp, #36	; 0x24
   18bd0:	2b00      	cmp	r3, #0
   18bd2:	bfb8      	it	lt
   18bd4:	f106 4300 	addlt.w	r3, r6, #2147483648	; 0x80000000
   18bd8:	9914      	ldr	r1, [sp, #80]	; 0x50
   18bda:	bfb6      	itet	lt
   18bdc:	461e      	movlt	r6, r3
   18bde:	2300      	movge	r3, #0
   18be0:	232d      	movlt	r3, #45	; 0x2d
   18be2:	600b      	str	r3, [r1, #0]
   18be4:	9916      	ldr	r1, [sp, #88]	; 0x58
   18be6:	4614      	mov	r4, r2
   18be8:	f021 0720 	bic.w	r7, r1, #32
   18bec:	2f46      	cmp	r7, #70	; 0x46
   18bee:	9d12      	ldr	r5, [sp, #72]	; 0x48
   18bf0:	f8dd 9054 	ldr.w	r9, [sp, #84]	; 0x54
   18bf4:	f8dd b05c 	ldr.w	r11, [sp, #92]	; 0x5c
   18bf8:	d003      	beq.n	18c02 <wcvt+0x3a>
   18bfa:	2f45      	cmp	r7, #69	; 0x45
   18bfc:	d103      	bne.n	18c06 <wcvt+0x3e>
   18bfe:	3501      	adds	r5, #1
   18c00:	e001      	b.n	18c06 <wcvt+0x3e>
   18c02:	2303      	movs	r3, #3
   18c04:	e000      	b.n	18c08 <wcvt+0x40>
   18c06:	2302      	movs	r3, #2
   18c08:	e88d 0228 	stmia.w	sp, {r3, r5, r9}
   18c0c:	ab06      	add	r3, sp, #24
   18c0e:	9303      	str	r3, [sp, #12]
   18c10:	ab07      	add	r3, sp, #28
   18c12:	9304      	str	r3, [sp, #16]
   18c14:	4622      	mov	r2, r4
   18c16:	4633      	mov	r3, r6
   18c18:	f000 fe4e 	bl	198b8 <_dtoa_r>
   18c1c:	2f47      	cmp	r7, #71	; 0x47
   18c1e:	4680      	mov	r8, r0
   18c20:	d109      	bne.n	18c36 <wcvt+0x6e>
   18c22:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   18c24:	07db      	lsls	r3, r3, #31
   18c26:	d406      	bmi.n	18c36 <wcvt+0x6e>
   18c28:	9b07      	ldr	r3, [sp, #28]
   18c2a:	ebc8 0303 	rsb	r3, r8, r3
   18c2e:	f8cb 3000 	str.w	r3, [r11]
   18c32:	2300      	movs	r3, #0
   18c34:	e02f      	b.n	18c96 <wcvt+0xce>
   18c36:	2f46      	cmp	r7, #70	; 0x46
   18c38:	eb08 0a05 	add.w	r10, r8, r5
   18c3c:	d111      	bne.n	18c62 <wcvt+0x9a>
   18c3e:	f898 3000 	ldrb.w	r3, [r8]
   18c42:	2b30      	cmp	r3, #48	; 0x30
   18c44:	d10a      	bne.n	18c5c <wcvt+0x94>
   18c46:	4620      	mov	r0, r4
   18c48:	4631      	mov	r1, r6
   18c4a:	2200      	movs	r2, #0
   18c4c:	2300      	movs	r3, #0
   18c4e:	f7f9 f84d 	bl	11cec <__aeabi_dcmpeq>
   18c52:	b918      	cbnz	r0, 18c5c <wcvt+0x94>
   18c54:	f1c5 0501 	rsb	r5, r5, #1
   18c58:	f8c9 5000 	str.w	r5, [r9]
   18c5c:	f8d9 3000 	ldr.w	r3, [r9]
   18c60:	449a      	add	r10, r3
   18c62:	4620      	mov	r0, r4
   18c64:	4631      	mov	r1, r6
   18c66:	2200      	movs	r2, #0
   18c68:	2300      	movs	r3, #0
   18c6a:	f7f9 f83f 	bl	11cec <__aeabi_dcmpeq>
   18c6e:	b108      	cbz	r0, 18c74 <wcvt+0xac>
   18c70:	f8cd a01c 	str.w	r10, [sp, #28]
   18c74:	9b07      	ldr	r3, [sp, #28]
   18c76:	4553      	cmp	r3, r10
   18c78:	d2d6      	bcs.n	18c28 <wcvt+0x60>
   18c7a:	1c5a      	adds	r2, r3, #1
   18c7c:	9207      	str	r2, [sp, #28]
   18c7e:	2230      	movs	r2, #48	; 0x30
   18c80:	701a      	strb	r2, [r3, #0]
   18c82:	e7f7      	b.n	18c74 <wcvt+0xac>
   18c84:	9a19      	ldr	r2, [sp, #100]	; 0x64
   18c86:	4293      	cmp	r3, r2
   18c88:	da09      	bge.n	18c9e <wcvt+0xd6>
   18c8a:	f818 2003 	ldrb.w	r2, [r8, r3]
   18c8e:	9918      	ldr	r1, [sp, #96]	; 0x60
   18c90:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
   18c94:	3301      	adds	r3, #1
   18c96:	f8db 2000 	ldr.w	r2, [r11]
   18c9a:	4293      	cmp	r3, r2
   18c9c:	dbf2      	blt.n	18c84 <wcvt+0xbc>
   18c9e:	9818      	ldr	r0, [sp, #96]	; 0x60
   18ca0:	b009      	add	sp, #36	; 0x24
   18ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
	...

00018ca8 <_svfwprintf_r>:
   18ca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   18cac:	461d      	mov	r5, r3
   18cae:	b0d5      	sub	sp, #340	; 0x154
   18cb0:	2300      	movs	r3, #0
   18cb2:	468a      	mov	r10, r1
   18cb4:	931b      	str	r3, [sp, #108]	; 0x6c
   18cb6:	4606      	mov	r6, r0
   18cb8:	920e      	str	r2, [sp, #56]	; 0x38
   18cba:	f7fa fc13 	bl	134e4 <_localeconv_r>
   18cbe:	6803      	ldr	r3, [r0, #0]
   18cc0:	781b      	ldrb	r3, [r3, #0]
   18cc2:	9318      	str	r3, [sp, #96]	; 0x60
   18cc4:	f8ba 300c 	ldrh.w	r3, [r10, #12]
   18cc8:	061b      	lsls	r3, r3, #24
   18cca:	d514      	bpl.n	18cf6 <_svfwprintf_r+0x4e>
   18ccc:	f8da 3010 	ldr.w	r3, [r10, #16]
   18cd0:	b98b      	cbnz	r3, 18cf6 <_svfwprintf_r+0x4e>
   18cd2:	4630      	mov	r0, r6
   18cd4:	2140      	movs	r1, #64	; 0x40
   18cd6:	f7fa fd4b 	bl	13770 <_malloc_r>
   18cda:	f8ca 0000 	str.w	r0, [r10]
   18cde:	f8ca 0010 	str.w	r0, [r10, #16]
   18ce2:	b928      	cbnz	r0, 18cf0 <_svfwprintf_r+0x48>
   18ce4:	230c      	movs	r3, #12
   18ce6:	6033      	str	r3, [r6, #0]
   18ce8:	f04f 30ff 	mov.w	r0, #4294967295
   18cec:	f000 bd51 	b.w	19792 <_svfwprintf_r+0xaea>
   18cf0:	2340      	movs	r3, #64	; 0x40
   18cf2:	f8ca 3014 	str.w	r3, [r10, #20]
   18cf6:	2300      	movs	r3, #0
   18cf8:	2200      	movs	r2, #0
   18cfa:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
   18cfe:	2300      	movs	r3, #0
   18d00:	9311      	str	r3, [sp, #68]	; 0x44
   18d02:	9312      	str	r3, [sp, #72]	; 0x48
   18d04:	930f      	str	r3, [sp, #60]	; 0x3c
   18d06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   18d08:	461c      	mov	r4, r3
   18d0a:	f853 2b04 	ldr.w	r2, [r3], #4
   18d0e:	b922      	cbnz	r2, 18d1a <_svfwprintf_r+0x72>
   18d10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   18d12:	1ae3      	subs	r3, r4, r3
   18d14:	109f      	asrs	r7, r3, #2
   18d16:	d00e      	beq.n	18d36 <_svfwprintf_r+0x8e>
   18d18:	e002      	b.n	18d20 <_svfwprintf_r+0x78>
   18d1a:	2a25      	cmp	r2, #37	; 0x25
   18d1c:	d1f4      	bne.n	18d08 <_svfwprintf_r+0x60>
   18d1e:	e7f7      	b.n	18d10 <_svfwprintf_r+0x68>
   18d20:	4630      	mov	r0, r6
   18d22:	4651      	mov	r1, r10
   18d24:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   18d26:	f7ff fb78 	bl	1841a <__ssputs_r>
   18d2a:	3001      	adds	r0, #1
   18d2c:	f000 8528 	beq.w	19780 <_svfwprintf_r+0xad8>
   18d30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   18d32:	443b      	add	r3, r7
   18d34:	930f      	str	r3, [sp, #60]	; 0x3c
   18d36:	6823      	ldr	r3, [r4, #0]
   18d38:	2b00      	cmp	r3, #0
   18d3a:	f000 8521 	beq.w	19780 <_svfwprintf_r+0xad8>
   18d3e:	2300      	movs	r3, #0
   18d40:	1d22      	adds	r2, r4, #4
   18d42:	461c      	mov	r4, r3
   18d44:	9317      	str	r3, [sp, #92]	; 0x5c
   18d46:	f04f 3bff 	mov.w	r11, #4294967295
   18d4a:	930b      	str	r3, [sp, #44]	; 0x2c
   18d4c:	1d11      	adds	r1, r2, #4
   18d4e:	f8d2 8000 	ldr.w	r8, [r2]
   18d52:	910e      	str	r1, [sp, #56]	; 0x38
   18d54:	f1b8 0f63 	cmp.w	r8, #99	; 0x63
   18d58:	f000 80cb 	beq.w	18ef2 <_svfwprintf_r+0x24a>
   18d5c:	d837      	bhi.n	18dce <_svfwprintf_r+0x126>
   18d5e:	f1b8 0f30 	cmp.w	r8, #48	; 0x30
   18d62:	f000 80aa 	beq.w	18eba <_svfwprintf_r+0x212>
   18d66:	d81a      	bhi.n	18d9e <_svfwprintf_r+0xf6>
   18d68:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
   18d6c:	d073      	beq.n	18e56 <_svfwprintf_r+0x1ae>
   18d6e:	d80a      	bhi.n	18d86 <_svfwprintf_r+0xde>
   18d70:	f1b8 0f20 	cmp.w	r8, #32
   18d74:	d06b      	beq.n	18e4e <_svfwprintf_r+0x1a6>
   18d76:	f1b8 0f23 	cmp.w	r8, #35	; 0x23
   18d7a:	f040 82f6 	bne.w	1936a <_svfwprintf_r+0x6c2>
   18d7e:	f044 0401 	orr.w	r4, r4, #1
   18d82:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   18d84:	e7e2      	b.n	18d4c <_svfwprintf_r+0xa4>
   18d86:	f1b8 0f2d 	cmp.w	r8, #45	; 0x2d
   18d8a:	d06e      	beq.n	18e6a <_svfwprintf_r+0x1c2>
   18d8c:	f1b8 0f2e 	cmp.w	r8, #46	; 0x2e
   18d90:	d06e      	beq.n	18e70 <_svfwprintf_r+0x1c8>
   18d92:	f1b8 0f2b 	cmp.w	r8, #43	; 0x2b
   18d96:	f040 82e8 	bne.w	1936a <_svfwprintf_r+0x6c2>
   18d9a:	4643      	mov	r3, r8
   18d9c:	e7f1      	b.n	18d82 <_svfwprintf_r+0xda>
   18d9e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
   18da2:	f000 80d8 	beq.w	18f56 <_svfwprintf_r+0x2ae>
   18da6:	d806      	bhi.n	18db6 <_svfwprintf_r+0x10e>
   18da8:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   18dac:	f200 82dd 	bhi.w	1936a <_svfwprintf_r+0x6c2>
   18db0:	2200      	movs	r2, #0
   18db2:	920b      	str	r2, [sp, #44]	; 0x2c
   18db4:	e084      	b.n	18ec0 <_svfwprintf_r+0x218>
   18db6:	f1b8 0f4c 	cmp.w	r8, #76	; 0x4c
   18dba:	f000 8091 	beq.w	18ee0 <_svfwprintf_r+0x238>
   18dbe:	f1b8 0f58 	cmp.w	r8, #88	; 0x58
   18dc2:	d041      	beq.n	18e48 <_svfwprintf_r+0x1a0>
   18dc4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   18dc8:	f040 82cf 	bne.w	1936a <_svfwprintf_r+0x6c2>
   18dcc:	e0c3      	b.n	18f56 <_svfwprintf_r+0x2ae>
   18dce:	f1b8 0f6e 	cmp.w	r8, #110	; 0x6e
   18dd2:	f000 81d0 	beq.w	19176 <_svfwprintf_r+0x4ce>
   18dd6:	d810      	bhi.n	18dfa <_svfwprintf_r+0x152>
   18dd8:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   18ddc:	d804      	bhi.n	18de8 <_svfwprintf_r+0x140>
   18dde:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   18de2:	f0c0 809b 	bcc.w	18f1c <_svfwprintf_r+0x274>
   18de6:	e0b6      	b.n	18f56 <_svfwprintf_r+0x2ae>
   18de8:	f1b8 0f69 	cmp.w	r8, #105	; 0x69
   18dec:	f000 8096 	beq.w	18f1c <_svfwprintf_r+0x274>
   18df0:	d379      	bcc.n	18ee6 <_svfwprintf_r+0x23e>
   18df2:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
   18df6:	d079      	beq.n	18eec <_svfwprintf_r+0x244>
   18df8:	e2b7      	b.n	1936a <_svfwprintf_r+0x6c2>
   18dfa:	f1b8 0f71 	cmp.w	r8, #113	; 0x71
   18dfe:	d075      	beq.n	18eec <_svfwprintf_r+0x244>
   18e00:	d815      	bhi.n	18e2e <_svfwprintf_r+0x186>
   18e02:	f1b8 0f6f 	cmp.w	r8, #111	; 0x6f
   18e06:	f000 81ca 	beq.w	1919e <_svfwprintf_r+0x4f6>
   18e0a:	f1b8 0f70 	cmp.w	r8, #112	; 0x70
   18e0e:	f040 82ac 	bne.w	1936a <_svfwprintf_r+0x6c2>
   18e12:	2230      	movs	r2, #48	; 0x30
   18e14:	921c      	str	r2, [sp, #112]	; 0x70
   18e16:	4aa7      	ldr	r2, [pc, #668]	; (190b4 <_svfwprintf_r+0x40c>)
   18e18:	1d2b      	adds	r3, r5, #4
   18e1a:	2178      	movs	r1, #120	; 0x78
   18e1c:	9309      	str	r3, [sp, #36]	; 0x24
   18e1e:	9211      	str	r2, [sp, #68]	; 0x44
   18e20:	682b      	ldr	r3, [r5, #0]
   18e22:	f044 0402 	orr.w	r4, r4, #2
   18e26:	911d      	str	r1, [sp, #116]	; 0x74
   18e28:	2202      	movs	r2, #2
   18e2a:	4688      	mov	r8, r1
   18e2c:	e23d      	b.n	192aa <_svfwprintf_r+0x602>
   18e2e:	f1b8 0f75 	cmp.w	r8, #117	; 0x75
   18e32:	f000 8216 	beq.w	19262 <_svfwprintf_r+0x5ba>
   18e36:	f1b8 0f78 	cmp.w	r8, #120	; 0x78
   18e3a:	f000 821e 	beq.w	1927a <_svfwprintf_r+0x5d2>
   18e3e:	f1b8 0f73 	cmp.w	r8, #115	; 0x73
   18e42:	f040 8292 	bne.w	1936a <_svfwprintf_r+0x6c2>
   18e46:	e1b9      	b.n	191bc <_svfwprintf_r+0x514>
   18e48:	9317      	str	r3, [sp, #92]	; 0x5c
   18e4a:	4b9b      	ldr	r3, [pc, #620]	; (190b8 <_svfwprintf_r+0x410>)
   18e4c:	e217      	b.n	1927e <_svfwprintf_r+0x5d6>
   18e4e:	2b00      	cmp	r3, #0
   18e50:	bf08      	it	eq
   18e52:	2320      	moveq	r3, #32
   18e54:	e795      	b.n	18d82 <_svfwprintf_r+0xda>
   18e56:	6829      	ldr	r1, [r5, #0]
   18e58:	1d2a      	adds	r2, r5, #4
   18e5a:	2900      	cmp	r1, #0
   18e5c:	910b      	str	r1, [sp, #44]	; 0x2c
   18e5e:	db01      	blt.n	18e64 <_svfwprintf_r+0x1bc>
   18e60:	4615      	mov	r5, r2
   18e62:	e78e      	b.n	18d82 <_svfwprintf_r+0xda>
   18e64:	4615      	mov	r5, r2
   18e66:	4249      	negs	r1, r1
   18e68:	910b      	str	r1, [sp, #44]	; 0x2c
   18e6a:	f044 0404 	orr.w	r4, r4, #4
   18e6e:	e788      	b.n	18d82 <_svfwprintf_r+0xda>
   18e70:	990e      	ldr	r1, [sp, #56]	; 0x38
   18e72:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   18e74:	f8d1 8000 	ldr.w	r8, [r1]
   18e78:	3204      	adds	r2, #4
   18e7a:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
   18e7e:	d002      	beq.n	18e86 <_svfwprintf_r+0x1de>
   18e80:	f04f 0b00 	mov.w	r11, #0
   18e84:	e00b      	b.n	18e9e <_svfwprintf_r+0x1f6>
   18e86:	f8d5 b000 	ldr.w	r11, [r5]
   18e8a:	920e      	str	r2, [sp, #56]	; 0x38
   18e8c:	f1bb 0f00 	cmp.w	r11, #0
   18e90:	f105 0204 	add.w	r2, r5, #4
   18e94:	dae4      	bge.n	18e60 <_svfwprintf_r+0x1b8>
   18e96:	4615      	mov	r5, r2
   18e98:	f04f 3bff 	mov.w	r11, #4294967295
   18e9c:	e771      	b.n	18d82 <_svfwprintf_r+0xda>
   18e9e:	f1a8 0130 	sub.w	r1, r8, #48	; 0x30
   18ea2:	2909      	cmp	r1, #9
   18ea4:	d805      	bhi.n	18eb2 <_svfwprintf_r+0x20a>
   18ea6:	200a      	movs	r0, #10
   18ea8:	fb00 1b0b 	mla	r11, r0, r11, r1
   18eac:	f852 8b04 	ldr.w	r8, [r2], #4
   18eb0:	e7f5      	b.n	18e9e <_svfwprintf_r+0x1f6>
   18eb2:	ea4b 7beb 	orr.w	r11, r11, r11, asr #31
   18eb6:	920e      	str	r2, [sp, #56]	; 0x38
   18eb8:	e74c      	b.n	18d54 <_svfwprintf_r+0xac>
   18eba:	f044 0480 	orr.w	r4, r4, #128	; 0x80
   18ebe:	e760      	b.n	18d82 <_svfwprintf_r+0xda>
   18ec0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   18ec2:	220a      	movs	r2, #10
   18ec4:	fb02 8801 	mla	r8, r2, r1, r8
   18ec8:	f1a8 0230 	sub.w	r2, r8, #48	; 0x30
   18ecc:	920b      	str	r2, [sp, #44]	; 0x2c
   18ece:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   18ed0:	f852 8b04 	ldr.w	r8, [r2], #4
   18ed4:	920e      	str	r2, [sp, #56]	; 0x38
   18ed6:	f1a8 0230 	sub.w	r2, r8, #48	; 0x30
   18eda:	2a09      	cmp	r2, #9
   18edc:	d9f0      	bls.n	18ec0 <_svfwprintf_r+0x218>
   18ede:	e739      	b.n	18d54 <_svfwprintf_r+0xac>
   18ee0:	f044 0408 	orr.w	r4, r4, #8
   18ee4:	e74d      	b.n	18d82 <_svfwprintf_r+0xda>
   18ee6:	f044 0440 	orr.w	r4, r4, #64	; 0x40
   18eea:	e74a      	b.n	18d82 <_svfwprintf_r+0xda>
   18eec:	f044 0410 	orr.w	r4, r4, #16
   18ef0:	e747      	b.n	18d82 <_svfwprintf_r+0xda>
   18ef2:	9317      	str	r3, [sp, #92]	; 0x5c
   18ef4:	f014 0f10 	tst.w	r4, #16
   18ef8:	f105 0304 	add.w	r3, r5, #4
   18efc:	9309      	str	r3, [sp, #36]	; 0x24
   18efe:	d107      	bne.n	18f10 <_svfwprintf_r+0x268>
   18f00:	6828      	ldr	r0, [r5, #0]
   18f02:	f7f9 fd3d 	bl	12980 <btowc>
   18f06:	1c47      	adds	r7, r0, #1
   18f08:	f000 8179 	beq.w	191fe <_svfwprintf_r+0x556>
   18f0c:	902c      	str	r0, [sp, #176]	; 0xb0
   18f0e:	e001      	b.n	18f14 <_svfwprintf_r+0x26c>
   18f10:	682b      	ldr	r3, [r5, #0]
   18f12:	932c      	str	r3, [sp, #176]	; 0xb0
   18f14:	2000      	movs	r0, #0
   18f16:	902d      	str	r0, [sp, #180]	; 0xb4
   18f18:	9017      	str	r0, [sp, #92]	; 0x5c
   18f1a:	e22f      	b.n	1937c <_svfwprintf_r+0x6d4>
   18f1c:	f014 0f10 	tst.w	r4, #16
   18f20:	4621      	mov	r1, r4
   18f22:	9317      	str	r3, [sp, #92]	; 0x5c
   18f24:	f105 0204 	add.w	r2, r5, #4
   18f28:	d002      	beq.n	18f30 <_svfwprintf_r+0x288>
   18f2a:	9209      	str	r2, [sp, #36]	; 0x24
   18f2c:	682b      	ldr	r3, [r5, #0]
   18f2e:	e005      	b.n	18f3c <_svfwprintf_r+0x294>
   18f30:	682b      	ldr	r3, [r5, #0]
   18f32:	f014 0f40 	tst.w	r4, #64	; 0x40
   18f36:	9209      	str	r2, [sp, #36]	; 0x24
   18f38:	bf18      	it	ne
   18f3a:	b21b      	sxthne	r3, r3
   18f3c:	2b00      	cmp	r3, #0
   18f3e:	f280 81b8 	bge.w	192b2 <_svfwprintf_r+0x60a>
   18f42:	222d      	movs	r2, #45	; 0x2d
   18f44:	f1bb 3fff 	cmp.w	r11, #4294967295
   18f48:	f1c3 0300 	rsb	r3, r3, #0
   18f4c:	9217      	str	r2, [sp, #92]	; 0x5c
   18f4e:	f040 81d9 	bne.w	19304 <_svfwprintf_r+0x65c>
   18f52:	2201      	movs	r2, #1
   18f54:	e1b8      	b.n	192c8 <_svfwprintf_r+0x620>
   18f56:	3507      	adds	r5, #7
   18f58:	f025 0507 	bic.w	r5, r5, #7
   18f5c:	9317      	str	r3, [sp, #92]	; 0x5c
   18f5e:	f105 0308 	add.w	r3, r5, #8
   18f62:	940a      	str	r4, [sp, #40]	; 0x28
   18f64:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
   18f68:	9309      	str	r3, [sp, #36]	; 0x24
   18f6a:	e9d5 2300 	ldrd	r2, r3, [r5]
   18f6e:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
   18f72:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   18f76:	f7ff fd55 	bl	18a24 <__fpclassifyd>
   18f7a:	2801      	cmp	r0, #1
   18f7c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   18f80:	d113      	bne.n	18faa <_svfwprintf_r+0x302>
   18f82:	2200      	movs	r2, #0
   18f84:	2300      	movs	r3, #0
   18f86:	f7f8 febb 	bl	11d00 <__aeabi_dcmplt>
   18f8a:	b108      	cbz	r0, 18f90 <_svfwprintf_r+0x2e8>
   18f8c:	232d      	movs	r3, #45	; 0x2d
   18f8e:	9317      	str	r3, [sp, #92]	; 0x5c
   18f90:	4b4a      	ldr	r3, [pc, #296]	; (190bc <_svfwprintf_r+0x414>)
   18f92:	4a4b      	ldr	r2, [pc, #300]	; (190c0 <_svfwprintf_r+0x418>)
   18f94:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   18f98:	bf8c      	ite	hi
   18f9a:	4691      	movhi	r9, r2
   18f9c:	4699      	movls	r9, r3
   18f9e:	f024 0480 	bic.w	r4, r4, #128	; 0x80
   18fa2:	2700      	movs	r7, #0
   18fa4:	f04f 0b03 	mov.w	r11, #3
   18fa8:	e1f1      	b.n	1938e <_svfwprintf_r+0x6e6>
   18faa:	f7ff fd3b 	bl	18a24 <__fpclassifyd>
   18fae:	b910      	cbnz	r0, 18fb6 <_svfwprintf_r+0x30e>
   18fb0:	4b44      	ldr	r3, [pc, #272]	; (190c4 <_svfwprintf_r+0x41c>)
   18fb2:	4a45      	ldr	r2, [pc, #276]	; (190c8 <_svfwprintf_r+0x420>)
   18fb4:	e7ee      	b.n	18f94 <_svfwprintf_r+0x2ec>
   18fb6:	f1bb 3fff 	cmp.w	r11, #4294967295
   18fba:	d009      	beq.n	18fd0 <_svfwprintf_r+0x328>
   18fbc:	f028 0320 	bic.w	r3, r8, #32
   18fc0:	2b47      	cmp	r3, #71	; 0x47
   18fc2:	d107      	bne.n	18fd4 <_svfwprintf_r+0x32c>
   18fc4:	f1bb 0f00 	cmp.w	r11, #0
   18fc8:	bf08      	it	eq
   18fca:	f04f 0b01 	moveq.w	r11, #1
   18fce:	e001      	b.n	18fd4 <_svfwprintf_r+0x32c>
   18fd0:	f04f 0b06 	mov.w	r11, #6
   18fd4:	ab19      	add	r3, sp, #100	; 0x64
   18fd6:	9302      	str	r3, [sp, #8]
   18fd8:	ab1a      	add	r3, sp, #104	; 0x68
   18fda:	9303      	str	r3, [sp, #12]
   18fdc:	af2c      	add	r7, sp, #176	; 0xb0
   18fde:	2328      	movs	r3, #40	; 0x28
   18fe0:	f444 7480 	orr.w	r4, r4, #256	; 0x100
   18fe4:	ad1b      	add	r5, sp, #108	; 0x6c
   18fe6:	9307      	str	r3, [sp, #28]
   18fe8:	f8cd b000 	str.w	r11, [sp]
   18fec:	9401      	str	r4, [sp, #4]
   18fee:	f8cd 8010 	str.w	r8, [sp, #16]
   18ff2:	9505      	str	r5, [sp, #20]
   18ff4:	9706      	str	r7, [sp, #24]
   18ff6:	4630      	mov	r0, r6
   18ff8:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   18ffc:	f7ff fde4 	bl	18bc8 <wcvt>
   19000:	42b8      	cmp	r0, r7
   19002:	4681      	mov	r9, r0
   19004:	d11e      	bne.n	19044 <_svfwprintf_r+0x39c>
   19006:	991b      	ldr	r1, [sp, #108]	; 0x6c
   19008:	2928      	cmp	r1, #40	; 0x28
   1900a:	dd1b      	ble.n	19044 <_svfwprintf_r+0x39c>
   1900c:	4630      	mov	r0, r6
   1900e:	0089      	lsls	r1, r1, #2
   19010:	f7fa fbae 	bl	13770 <_malloc_r>
   19014:	4607      	mov	r7, r0
   19016:	2800      	cmp	r0, #0
   19018:	f000 80f1 	beq.w	191fe <_svfwprintf_r+0x556>
   1901c:	ab19      	add	r3, sp, #100	; 0x64
   1901e:	9302      	str	r3, [sp, #8]
   19020:	ab1a      	add	r3, sp, #104	; 0x68
   19022:	9303      	str	r3, [sp, #12]
   19024:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   19026:	9006      	str	r0, [sp, #24]
   19028:	9307      	str	r3, [sp, #28]
   1902a:	f8cd b000 	str.w	r11, [sp]
   1902e:	9401      	str	r4, [sp, #4]
   19030:	f8cd 8010 	str.w	r8, [sp, #16]
   19034:	9505      	str	r5, [sp, #20]
   19036:	4630      	mov	r0, r6
   19038:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   1903c:	f7ff fdc4 	bl	18bc8 <wcvt>
   19040:	4681      	mov	r9, r0
   19042:	e000      	b.n	19046 <_svfwprintf_r+0x39e>
   19044:	2700      	movs	r7, #0
   19046:	f028 0320 	bic.w	r3, r8, #32
   1904a:	2b47      	cmp	r3, #71	; 0x47
   1904c:	d107      	bne.n	1905e <_svfwprintf_r+0x3b6>
   1904e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   19050:	1cdd      	adds	r5, r3, #3
   19052:	db01      	blt.n	19058 <_svfwprintf_r+0x3b0>
   19054:	455b      	cmp	r3, r11
   19056:	dd69      	ble.n	1912c <_svfwprintf_r+0x484>
   19058:	f1a8 0802 	sub.w	r8, r8, #2
   1905c:	e002      	b.n	19064 <_svfwprintf_r+0x3bc>
   1905e:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   19062:	d84a      	bhi.n	190fa <_svfwprintf_r+0x452>
   19064:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   19066:	f8cd 8078 	str.w	r8, [sp, #120]	; 0x78
   1906a:	3b01      	subs	r3, #1
   1906c:	2b00      	cmp	r3, #0
   1906e:	931a      	str	r3, [sp, #104]	; 0x68
   19070:	bfba      	itte	lt
   19072:	425b      	neglt	r3, r3
   19074:	222d      	movlt	r2, #45	; 0x2d
   19076:	222b      	movge	r2, #43	; 0x2b
   19078:	2b09      	cmp	r3, #9
   1907a:	921f      	str	r2, [sp, #124]	; 0x7c
   1907c:	dd26      	ble.n	190cc <_svfwprintf_r+0x424>
   1907e:	a92c      	add	r1, sp, #176	; 0xb0
   19080:	220a      	movs	r2, #10
   19082:	fb93 f0f2 	sdiv	r0, r3, r2
   19086:	fb02 3310 	mls	r3, r2, r0, r3
   1908a:	2809      	cmp	r0, #9
   1908c:	f103 0330 	add.w	r3, r3, #48	; 0x30
   19090:	f841 3d04 	str.w	r3, [r1, #-4]!
   19094:	4603      	mov	r3, r0
   19096:	dcf3      	bgt.n	19080 <_svfwprintf_r+0x3d8>
   19098:	3330      	adds	r3, #48	; 0x30
   1909a:	1f0a      	subs	r2, r1, #4
   1909c:	f841 3c04 	str.w	r3, [r1, #-4]
   190a0:	a920      	add	r1, sp, #128	; 0x80
   190a2:	a82c      	add	r0, sp, #176	; 0xb0
   190a4:	4282      	cmp	r2, r0
   190a6:	460b      	mov	r3, r1
   190a8:	d215      	bcs.n	190d6 <_svfwprintf_r+0x42e>
   190aa:	f852 3b04 	ldr.w	r3, [r2], #4
   190ae:	f841 3b04 	str.w	r3, [r1], #4
   190b2:	e7f6      	b.n	190a2 <_svfwprintf_r+0x3fa>
   190b4:	0001ccc8 	.word	0x0001ccc8
   190b8:	0001cc84 	.word	0x0001cc84
   190bc:	0001cc44 	.word	0x0001cc44
   190c0:	0001cc54 	.word	0x0001cc54
   190c4:	0001cc64 	.word	0x0001cc64
   190c8:	0001cc74 	.word	0x0001cc74
   190cc:	2230      	movs	r2, #48	; 0x30
   190ce:	4413      	add	r3, r2
   190d0:	9321      	str	r3, [sp, #132]	; 0x84
   190d2:	9220      	str	r2, [sp, #128]	; 0x80
   190d4:	ab22      	add	r3, sp, #136	; 0x88
   190d6:	aa1e      	add	r2, sp, #120	; 0x78
   190d8:	1a9b      	subs	r3, r3, r2
   190da:	109b      	asrs	r3, r3, #2
   190dc:	9312      	str	r3, [sp, #72]	; 0x48
   190de:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   190e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
   190e2:	2b01      	cmp	r3, #1
   190e4:	eb02 0b03 	add.w	r11, r2, r3
   190e8:	dc03      	bgt.n	190f2 <_svfwprintf_r+0x44a>
   190ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   190ec:	f013 0301 	ands.w	r3, r3, #1
   190f0:	d038      	beq.n	19164 <_svfwprintf_r+0x4bc>
   190f2:	f10b 0b01 	add.w	r11, r11, #1
   190f6:	2300      	movs	r3, #0
   190f8:	e034      	b.n	19164 <_svfwprintf_r+0x4bc>
   190fa:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   190fe:	d118      	bne.n	19132 <_svfwprintf_r+0x48a>
   19100:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   19102:	2b00      	cmp	r3, #0
   19104:	dd09      	ble.n	1911a <_svfwprintf_r+0x472>
   19106:	f1bb 0f00 	cmp.w	r11, #0
   1910a:	d102      	bne.n	19112 <_svfwprintf_r+0x46a>
   1910c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   1910e:	07d0      	lsls	r0, r2, #31
   19110:	d522      	bpl.n	19158 <_svfwprintf_r+0x4b0>
   19112:	f10b 0b01 	add.w	r11, r11, #1
   19116:	445b      	add	r3, r11
   19118:	e01e      	b.n	19158 <_svfwprintf_r+0x4b0>
   1911a:	f1bb 0f00 	cmp.w	r11, #0
   1911e:	d102      	bne.n	19126 <_svfwprintf_r+0x47e>
   19120:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19122:	07d9      	lsls	r1, r3, #31
   19124:	d517      	bpl.n	19156 <_svfwprintf_r+0x4ae>
   19126:	f10b 0302 	add.w	r3, r11, #2
   1912a:	e015      	b.n	19158 <_svfwprintf_r+0x4b0>
   1912c:	2367      	movs	r3, #103	; 0x67
   1912e:	9310      	str	r3, [sp, #64]	; 0x40
   19130:	e001      	b.n	19136 <_svfwprintf_r+0x48e>
   19132:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
   19136:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   19138:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   1913a:	4293      	cmp	r3, r2
   1913c:	db04      	blt.n	19148 <_svfwprintf_r+0x4a0>
   1913e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   19140:	07d2      	lsls	r2, r2, #31
   19142:	d509      	bpl.n	19158 <_svfwprintf_r+0x4b0>
   19144:	3301      	adds	r3, #1
   19146:	e007      	b.n	19158 <_svfwprintf_r+0x4b0>
   19148:	2b00      	cmp	r3, #0
   1914a:	bfd4      	ite	le
   1914c:	f1c3 0302 	rsble	r3, r3, #2
   19150:	2301      	movgt	r3, #1
   19152:	4413      	add	r3, r2
   19154:	e000      	b.n	19158 <_svfwprintf_r+0x4b0>
   19156:	2301      	movs	r3, #1
   19158:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1915a:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
   1915e:	920a      	str	r2, [sp, #40]	; 0x28
   19160:	469b      	mov	r11, r3
   19162:	e000      	b.n	19166 <_svfwprintf_r+0x4be>
   19164:	930a      	str	r3, [sp, #40]	; 0x28
   19166:	9d19      	ldr	r5, [sp, #100]	; 0x64
   19168:	2d00      	cmp	r5, #0
   1916a:	f000 8112 	beq.w	19392 <_svfwprintf_r+0x6ea>
   1916e:	232d      	movs	r3, #45	; 0x2d
   19170:	9317      	str	r3, [sp, #92]	; 0x5c
   19172:	2500      	movs	r5, #0
   19174:	e10d      	b.n	19392 <_svfwprintf_r+0x6ea>
   19176:	f014 0f10 	tst.w	r4, #16
   1917a:	9317      	str	r3, [sp, #92]	; 0x5c
   1917c:	f105 0304 	add.w	r3, r5, #4
   19180:	d108      	bne.n	19194 <_svfwprintf_r+0x4ec>
   19182:	0667      	lsls	r7, r4, #25
   19184:	d506      	bpl.n	19194 <_svfwprintf_r+0x4ec>
   19186:	9309      	str	r3, [sp, #36]	; 0x24
   19188:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
   1918c:	682b      	ldr	r3, [r5, #0]
   1918e:	801a      	strh	r2, [r3, #0]
   19190:	9d09      	ldr	r5, [sp, #36]	; 0x24
   19192:	e5b8      	b.n	18d06 <_svfwprintf_r+0x5e>
   19194:	9309      	str	r3, [sp, #36]	; 0x24
   19196:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   19198:	682b      	ldr	r3, [r5, #0]
   1919a:	601a      	str	r2, [r3, #0]
   1919c:	e7f8      	b.n	19190 <_svfwprintf_r+0x4e8>
   1919e:	1d2b      	adds	r3, r5, #4
   191a0:	f014 0110 	ands.w	r1, r4, #16
   191a4:	9309      	str	r3, [sp, #36]	; 0x24
   191a6:	d002      	beq.n	191ae <_svfwprintf_r+0x506>
   191a8:	682b      	ldr	r3, [r5, #0]
   191aa:	2200      	movs	r2, #0
   191ac:	e07d      	b.n	192aa <_svfwprintf_r+0x602>
   191ae:	f014 0240 	ands.w	r2, r4, #64	; 0x40
   191b2:	d001      	beq.n	191b8 <_svfwprintf_r+0x510>
   191b4:	882b      	ldrh	r3, [r5, #0]
   191b6:	e7f8      	b.n	191aa <_svfwprintf_r+0x502>
   191b8:	682b      	ldr	r3, [r5, #0]
   191ba:	e076      	b.n	192aa <_svfwprintf_r+0x602>
   191bc:	1d2b      	adds	r3, r5, #4
   191be:	9309      	str	r3, [sp, #36]	; 0x24
   191c0:	f8d5 9000 	ldr.w	r9, [r5]
   191c4:	2300      	movs	r3, #0
   191c6:	06e5      	lsls	r5, r4, #27
   191c8:	9317      	str	r3, [sp, #92]	; 0x5c
   191ca:	d433      	bmi.n	19234 <_svfwprintf_r+0x58c>
   191cc:	f1bb 3fff 	cmp.w	r11, #4294967295
   191d0:	d009      	beq.n	191e6 <_svfwprintf_r+0x53e>
   191d2:	4648      	mov	r0, r9
   191d4:	4619      	mov	r1, r3
   191d6:	465a      	mov	r2, r11
   191d8:	465d      	mov	r5, r11
   191da:	f7fa fa39 	bl	13650 <memchr>
   191de:	b130      	cbz	r0, 191ee <_svfwprintf_r+0x546>
   191e0:	ebc9 0500 	rsb	r5, r9, r0
   191e4:	e003      	b.n	191ee <_svfwprintf_r+0x546>
   191e6:	4648      	mov	r0, r9
   191e8:	f7fb ffd6 	bl	15198 <strlen>
   191ec:	4605      	mov	r5, r0
   191ee:	2d27      	cmp	r5, #39	; 0x27
   191f0:	d90c      	bls.n	1920c <_svfwprintf_r+0x564>
   191f2:	1c69      	adds	r1, r5, #1
   191f4:	4630      	mov	r0, r6
   191f6:	0089      	lsls	r1, r1, #2
   191f8:	f7fa faba 	bl	13770 <_malloc_r>
   191fc:	b948      	cbnz	r0, 19212 <_svfwprintf_r+0x56a>
   191fe:	f8ba 300c 	ldrh.w	r3, [r10, #12]
   19202:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   19206:	f8aa 300c 	strh.w	r3, [r10, #12]
   1920a:	e2b9      	b.n	19780 <_svfwprintf_r+0xad8>
   1920c:	2700      	movs	r7, #0
   1920e:	a82c      	add	r0, sp, #176	; 0xb0
   19210:	e000      	b.n	19214 <_svfwprintf_r+0x56c>
   19212:	4607      	mov	r7, r0
   19214:	46ab      	mov	r11, r5
   19216:	2300      	movs	r3, #0
   19218:	42ab      	cmp	r3, r5
   1921a:	d005      	beq.n	19228 <_svfwprintf_r+0x580>
   1921c:	f819 2003 	ldrb.w	r2, [r9, r3]
   19220:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
   19224:	3301      	adds	r3, #1
   19226:	e7f7      	b.n	19218 <_svfwprintf_r+0x570>
   19228:	2500      	movs	r5, #0
   1922a:	f840 5023 	str.w	r5, [r0, r3, lsl #2]
   1922e:	4681      	mov	r9, r0
   19230:	950a      	str	r5, [sp, #40]	; 0x28
   19232:	e0ae      	b.n	19392 <_svfwprintf_r+0x6ea>
   19234:	f1bb 3fff 	cmp.w	r11, #4294967295
   19238:	4648      	mov	r0, r9
   1923a:	d00d      	beq.n	19258 <_svfwprintf_r+0x5b0>
   1923c:	2100      	movs	r1, #0
   1923e:	465a      	mov	r2, r11
   19240:	f7fd ffa0 	bl	17184 <wmemchr>
   19244:	2800      	cmp	r0, #0
   19246:	f000 80a1 	beq.w	1938c <_svfwprintf_r+0x6e4>
   1924a:	ebc9 0000 	rsb	r0, r9, r0
   1924e:	1080      	asrs	r0, r0, #2
   19250:	4583      	cmp	r11, r0
   19252:	bfa8      	it	ge
   19254:	4683      	movge	r11, r0
   19256:	e002      	b.n	1925e <_svfwprintf_r+0x5b6>
   19258:	f7fd fe04 	bl	16e64 <wcslen>
   1925c:	4683      	mov	r11, r0
   1925e:	2700      	movs	r7, #0
   19260:	e095      	b.n	1938e <_svfwprintf_r+0x6e6>
   19262:	1d2b      	adds	r3, r5, #4
   19264:	f014 0f10 	tst.w	r4, #16
   19268:	9309      	str	r3, [sp, #36]	; 0x24
   1926a:	d103      	bne.n	19274 <_svfwprintf_r+0x5cc>
   1926c:	0660      	lsls	r0, r4, #25
   1926e:	d501      	bpl.n	19274 <_svfwprintf_r+0x5cc>
   19270:	882b      	ldrh	r3, [r5, #0]
   19272:	e000      	b.n	19276 <_svfwprintf_r+0x5ce>
   19274:	682b      	ldr	r3, [r5, #0]
   19276:	2201      	movs	r2, #1
   19278:	e017      	b.n	192aa <_svfwprintf_r+0x602>
   1927a:	9317      	str	r3, [sp, #92]	; 0x5c
   1927c:	4baf      	ldr	r3, [pc, #700]	; (1953c <_svfwprintf_r+0x894>)
   1927e:	9311      	str	r3, [sp, #68]	; 0x44
   19280:	f014 0f10 	tst.w	r4, #16
   19284:	f105 0304 	add.w	r3, r5, #4
   19288:	9309      	str	r3, [sp, #36]	; 0x24
   1928a:	d103      	bne.n	19294 <_svfwprintf_r+0x5ec>
   1928c:	0661      	lsls	r1, r4, #25
   1928e:	d501      	bpl.n	19294 <_svfwprintf_r+0x5ec>
   19290:	882b      	ldrh	r3, [r5, #0]
   19292:	e000      	b.n	19296 <_svfwprintf_r+0x5ee>
   19294:	682b      	ldr	r3, [r5, #0]
   19296:	07e2      	lsls	r2, r4, #31
   19298:	d506      	bpl.n	192a8 <_svfwprintf_r+0x600>
   1929a:	b12b      	cbz	r3, 192a8 <_svfwprintf_r+0x600>
   1929c:	2230      	movs	r2, #48	; 0x30
   1929e:	921c      	str	r2, [sp, #112]	; 0x70
   192a0:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
   192a4:	f044 0402 	orr.w	r4, r4, #2
   192a8:	2202      	movs	r2, #2
   192aa:	2100      	movs	r1, #0
   192ac:	9117      	str	r1, [sp, #92]	; 0x5c
   192ae:	4621      	mov	r1, r4
   192b0:	e000      	b.n	192b4 <_svfwprintf_r+0x60c>
   192b2:	2201      	movs	r2, #1
   192b4:	f1bb 3fff 	cmp.w	r11, #4294967295
   192b8:	d006      	beq.n	192c8 <_svfwprintf_r+0x620>
   192ba:	f024 0480 	bic.w	r4, r4, #128	; 0x80
   192be:	b923      	cbnz	r3, 192ca <_svfwprintf_r+0x622>
   192c0:	f1bb 0f00 	cmp.w	r11, #0
   192c4:	d106      	bne.n	192d4 <_svfwprintf_r+0x62c>
   192c6:	e040      	b.n	1934a <_svfwprintf_r+0x6a2>
   192c8:	b123      	cbz	r3, 192d4 <_svfwprintf_r+0x62c>
   192ca:	2a01      	cmp	r2, #1
   192cc:	d01c      	beq.n	19308 <_svfwprintf_r+0x660>
   192ce:	2a02      	cmp	r2, #2
   192d0:	d02f      	beq.n	19332 <_svfwprintf_r+0x68a>
   192d2:	e004      	b.n	192de <_svfwprintf_r+0x636>
   192d4:	2a01      	cmp	r2, #1
   192d6:	d019      	beq.n	1930c <_svfwprintf_r+0x664>
   192d8:	2a02      	cmp	r2, #2
   192da:	d029      	beq.n	19330 <_svfwprintf_r+0x688>
   192dc:	2300      	movs	r3, #0
   192de:	aa54      	add	r2, sp, #336	; 0x150
   192e0:	f003 0107 	and.w	r1, r3, #7
   192e4:	3130      	adds	r1, #48	; 0x30
   192e6:	08db      	lsrs	r3, r3, #3
   192e8:	f842 1d04 	str.w	r1, [r2, #-4]!
   192ec:	d1f8      	bne.n	192e0 <_svfwprintf_r+0x638>
   192ee:	07e3      	lsls	r3, r4, #31
   192f0:	4691      	mov	r9, r2
   192f2:	d532      	bpl.n	1935a <_svfwprintf_r+0x6b2>
   192f4:	2930      	cmp	r1, #48	; 0x30
   192f6:	d030      	beq.n	1935a <_svfwprintf_r+0x6b2>
   192f8:	2330      	movs	r3, #48	; 0x30
   192fa:	f1a2 0904 	sub.w	r9, r2, #4
   192fe:	f842 3c04 	str.w	r3, [r2, #-4]
   19302:	e02a      	b.n	1935a <_svfwprintf_r+0x6b2>
   19304:	f024 0480 	bic.w	r4, r4, #128	; 0x80
   19308:	2b09      	cmp	r3, #9
   1930a:	d803      	bhi.n	19314 <_svfwprintf_r+0x66c>
   1930c:	3330      	adds	r3, #48	; 0x30
   1930e:	f50d 79a8 	add.w	r9, sp, #336	; 0x150
   19312:	e020      	b.n	19356 <_svfwprintf_r+0x6ae>
   19314:	f50d 79a8 	add.w	r9, sp, #336	; 0x150
   19318:	220a      	movs	r2, #10
   1931a:	fbb3 f1f2 	udiv	r1, r3, r2
   1931e:	fb02 3311 	mls	r3, r2, r1, r3
   19322:	3330      	adds	r3, #48	; 0x30
   19324:	f849 3d04 	str.w	r3, [r9, #-4]!
   19328:	460b      	mov	r3, r1
   1932a:	2900      	cmp	r1, #0
   1932c:	d1f4      	bne.n	19318 <_svfwprintf_r+0x670>
   1932e:	e014      	b.n	1935a <_svfwprintf_r+0x6b2>
   19330:	2300      	movs	r3, #0
   19332:	f50d 79a8 	add.w	r9, sp, #336	; 0x150
   19336:	9911      	ldr	r1, [sp, #68]	; 0x44
   19338:	f003 020f 	and.w	r2, r3, #15
   1933c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
   19340:	091b      	lsrs	r3, r3, #4
   19342:	f849 2d04 	str.w	r2, [r9, #-4]!
   19346:	d1f6      	bne.n	19336 <_svfwprintf_r+0x68e>
   19348:	e007      	b.n	1935a <_svfwprintf_r+0x6b2>
   1934a:	f50d 79a8 	add.w	r9, sp, #336	; 0x150
   1934e:	b922      	cbnz	r2, 1935a <_svfwprintf_r+0x6b2>
   19350:	07cf      	lsls	r7, r1, #31
   19352:	d502      	bpl.n	1935a <_svfwprintf_r+0x6b2>
   19354:	2330      	movs	r3, #48	; 0x30
   19356:	f849 3d04 	str.w	r3, [r9, #-4]!
   1935a:	ab54      	add	r3, sp, #336	; 0x150
   1935c:	465d      	mov	r5, r11
   1935e:	ebc9 0b03 	rsb	r11, r9, r3
   19362:	ea4f 0bab 	mov.w	r11, r11, asr #2
   19366:	2700      	movs	r7, #0
   19368:	e012      	b.n	19390 <_svfwprintf_r+0x6e8>
   1936a:	f1b8 0f00 	cmp.w	r8, #0
   1936e:	f000 8207 	beq.w	19780 <_svfwprintf_r+0xad8>
   19372:	2000      	movs	r0, #0
   19374:	f8cd 80b0 	str.w	r8, [sp, #176]	; 0xb0
   19378:	9017      	str	r0, [sp, #92]	; 0x5c
   1937a:	9509      	str	r5, [sp, #36]	; 0x24
   1937c:	4607      	mov	r7, r0
   1937e:	f04f 0b01 	mov.w	r11, #1
   19382:	4605      	mov	r5, r0
   19384:	900a      	str	r0, [sp, #40]	; 0x28
   19386:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
   1938a:	e002      	b.n	19392 <_svfwprintf_r+0x6ea>
   1938c:	4607      	mov	r7, r0
   1938e:	463d      	mov	r5, r7
   19390:	970a      	str	r7, [sp, #40]	; 0x28
   19392:	45ab      	cmp	r11, r5
   19394:	465b      	mov	r3, r11
   19396:	bfb8      	it	lt
   19398:	462b      	movlt	r3, r5
   1939a:	9310      	str	r3, [sp, #64]	; 0x40
   1939c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   1939e:	b113      	cbz	r3, 193a6 <_svfwprintf_r+0x6fe>
   193a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
   193a2:	3301      	adds	r3, #1
   193a4:	9310      	str	r3, [sp, #64]	; 0x40
   193a6:	f014 0302 	ands.w	r3, r4, #2
   193aa:	9313      	str	r3, [sp, #76]	; 0x4c
   193ac:	bf1e      	ittt	ne
   193ae:	9b10      	ldrne	r3, [sp, #64]	; 0x40
   193b0:	3302      	addne	r3, #2
   193b2:	9310      	strne	r3, [sp, #64]	; 0x40
   193b4:	f014 0384 	ands.w	r3, r4, #132	; 0x84
   193b8:	9314      	str	r3, [sp, #80]	; 0x50
   193ba:	d002      	beq.n	193c2 <_svfwprintf_r+0x71a>
   193bc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   193be:	b36b      	cbz	r3, 1941c <_svfwprintf_r+0x774>
   193c0:	e023      	b.n	1940a <_svfwprintf_r+0x762>
   193c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   193c4:	9a10      	ldr	r2, [sp, #64]	; 0x40
   193c6:	ebc2 0c03 	rsb	r12, r2, r3
   193ca:	f1bc 0f00 	cmp.w	r12, #0
   193ce:	ddf5      	ble.n	193bc <_svfwprintf_r+0x714>
   193d0:	f1bc 0f10 	cmp.w	r12, #16
   193d4:	dd0f      	ble.n	193f6 <_svfwprintf_r+0x74e>
   193d6:	4630      	mov	r0, r6
   193d8:	4651      	mov	r1, r10
   193da:	4a59      	ldr	r2, [pc, #356]	; (19540 <_svfwprintf_r+0x898>)
   193dc:	2340      	movs	r3, #64	; 0x40
   193de:	f8cd c054 	str.w	r12, [sp, #84]	; 0x54
   193e2:	f7ff f81a 	bl	1841a <__ssputs_r>
   193e6:	3001      	adds	r0, #1
   193e8:	f000 81c5 	beq.w	19776 <_svfwprintf_r+0xace>
   193ec:	f8dd c054 	ldr.w	r12, [sp, #84]	; 0x54
   193f0:	f1ac 0c10 	sub.w	r12, r12, #16
   193f4:	e7ec      	b.n	193d0 <_svfwprintf_r+0x728>
   193f6:	4630      	mov	r0, r6
   193f8:	4651      	mov	r1, r10
   193fa:	4a51      	ldr	r2, [pc, #324]	; (19540 <_svfwprintf_r+0x898>)
   193fc:	ea4f 038c 	mov.w	r3, r12, lsl #2
   19400:	f7ff f80b 	bl	1841a <__ssputs_r>
   19404:	3001      	adds	r0, #1
   19406:	d1d9      	bne.n	193bc <_svfwprintf_r+0x714>
   19408:	e1b5      	b.n	19776 <_svfwprintf_r+0xace>
   1940a:	4630      	mov	r0, r6
   1940c:	4651      	mov	r1, r10
   1940e:	aa17      	add	r2, sp, #92	; 0x5c
   19410:	2304      	movs	r3, #4
   19412:	f7ff f802 	bl	1841a <__ssputs_r>
   19416:	3001      	adds	r0, #1
   19418:	f000 81ad 	beq.w	19776 <_svfwprintf_r+0xace>
   1941c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   1941e:	b143      	cbz	r3, 19432 <_svfwprintf_r+0x78a>
   19420:	4630      	mov	r0, r6
   19422:	4651      	mov	r1, r10
   19424:	aa1c      	add	r2, sp, #112	; 0x70
   19426:	2308      	movs	r3, #8
   19428:	f7fe fff7 	bl	1841a <__ssputs_r>
   1942c:	3001      	adds	r0, #1
   1942e:	f000 81a2 	beq.w	19776 <_svfwprintf_r+0xace>
   19432:	9b14      	ldr	r3, [sp, #80]	; 0x50
   19434:	2b80      	cmp	r3, #128	; 0x80
   19436:	d106      	bne.n	19446 <_svfwprintf_r+0x79e>
   19438:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1943a:	9a10      	ldr	r2, [sp, #64]	; 0x40
   1943c:	ebc2 0c03 	rsb	r12, r2, r3
   19440:	f1bc 0f00 	cmp.w	r12, #0
   19444:	dc13      	bgt.n	1946e <_svfwprintf_r+0x7c6>
   19446:	ebcb 0505 	rsb	r5, r11, r5
   1944a:	2d00      	cmp	r5, #0
   1944c:	dc23      	bgt.n	19496 <_svfwprintf_r+0x7ee>
   1944e:	e02d      	b.n	194ac <_svfwprintf_r+0x804>
   19450:	4630      	mov	r0, r6
   19452:	4651      	mov	r1, r10
   19454:	4a3b      	ldr	r2, [pc, #236]	; (19544 <_svfwprintf_r+0x89c>)
   19456:	2340      	movs	r3, #64	; 0x40
   19458:	f8cd c04c 	str.w	r12, [sp, #76]	; 0x4c
   1945c:	f7fe ffdd 	bl	1841a <__ssputs_r>
   19460:	3001      	adds	r0, #1
   19462:	f000 8188 	beq.w	19776 <_svfwprintf_r+0xace>
   19466:	f8dd c04c 	ldr.w	r12, [sp, #76]	; 0x4c
   1946a:	f1ac 0c10 	sub.w	r12, r12, #16
   1946e:	f1bc 0f10 	cmp.w	r12, #16
   19472:	dced      	bgt.n	19450 <_svfwprintf_r+0x7a8>
   19474:	4630      	mov	r0, r6
   19476:	4651      	mov	r1, r10
   19478:	4a32      	ldr	r2, [pc, #200]	; (19544 <_svfwprintf_r+0x89c>)
   1947a:	ea4f 038c 	mov.w	r3, r12, lsl #2
   1947e:	f7fe ffcc 	bl	1841a <__ssputs_r>
   19482:	3001      	adds	r0, #1
   19484:	d1df      	bne.n	19446 <_svfwprintf_r+0x79e>
   19486:	e176      	b.n	19776 <_svfwprintf_r+0xace>
   19488:	2340      	movs	r3, #64	; 0x40
   1948a:	f7fe ffc6 	bl	1841a <__ssputs_r>
   1948e:	3001      	adds	r0, #1
   19490:	f000 8171 	beq.w	19776 <_svfwprintf_r+0xace>
   19494:	3d10      	subs	r5, #16
   19496:	2d10      	cmp	r5, #16
   19498:	4630      	mov	r0, r6
   1949a:	4651      	mov	r1, r10
   1949c:	4a29      	ldr	r2, [pc, #164]	; (19544 <_svfwprintf_r+0x89c>)
   1949e:	dcf3      	bgt.n	19488 <_svfwprintf_r+0x7e0>
   194a0:	00ab      	lsls	r3, r5, #2
   194a2:	f7fe ffba 	bl	1841a <__ssputs_r>
   194a6:	3001      	adds	r0, #1
   194a8:	f000 8165 	beq.w	19776 <_svfwprintf_r+0xace>
   194ac:	05e5      	lsls	r5, r4, #23
   194ae:	d405      	bmi.n	194bc <_svfwprintf_r+0x814>
   194b0:	4630      	mov	r0, r6
   194b2:	4651      	mov	r1, r10
   194b4:	464a      	mov	r2, r9
   194b6:	ea4f 038b 	mov.w	r3, r11, lsl #2
   194ba:	e02b      	b.n	19514 <_svfwprintf_r+0x86c>
   194bc:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   194c0:	f240 80f1 	bls.w	196a6 <_svfwprintf_r+0x9fe>
   194c4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   194c8:	2200      	movs	r2, #0
   194ca:	2300      	movs	r3, #0
   194cc:	f7f8 fc0e 	bl	11cec <__aeabi_dcmpeq>
   194d0:	2800      	cmp	r0, #0
   194d2:	d03b      	beq.n	1954c <_svfwprintf_r+0x8a4>
   194d4:	4630      	mov	r0, r6
   194d6:	4651      	mov	r1, r10
   194d8:	4a1b      	ldr	r2, [pc, #108]	; (19548 <_svfwprintf_r+0x8a0>)
   194da:	2304      	movs	r3, #4
   194dc:	f7fe ff9d 	bl	1841a <__ssputs_r>
   194e0:	3001      	adds	r0, #1
   194e2:	f000 8148 	beq.w	19776 <_svfwprintf_r+0xace>
   194e6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   194e8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   194ea:	429a      	cmp	r2, r3
   194ec:	da1b      	bge.n	19526 <_svfwprintf_r+0x87e>
   194ee:	4630      	mov	r0, r6
   194f0:	4651      	mov	r1, r10
   194f2:	aa18      	add	r2, sp, #96	; 0x60
   194f4:	2304      	movs	r3, #4
   194f6:	f7fe ff90 	bl	1841a <__ssputs_r>
   194fa:	3001      	adds	r0, #1
   194fc:	f000 813b 	beq.w	19776 <_svfwprintf_r+0xace>
   19500:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   19502:	3d01      	subs	r5, #1
   19504:	2d00      	cmp	r5, #0
   19506:	dd0a      	ble.n	1951e <_svfwprintf_r+0x876>
   19508:	2d10      	cmp	r5, #16
   1950a:	4630      	mov	r0, r6
   1950c:	4651      	mov	r1, r10
   1950e:	4a0d      	ldr	r2, [pc, #52]	; (19544 <_svfwprintf_r+0x89c>)
   19510:	dc0c      	bgt.n	1952c <_svfwprintf_r+0x884>
   19512:	00ab      	lsls	r3, r5, #2
   19514:	f7fe ff81 	bl	1841a <__ssputs_r>
   19518:	3001      	adds	r0, #1
   1951a:	f000 812c 	beq.w	19776 <_svfwprintf_r+0xace>
   1951e:	0764      	lsls	r4, r4, #29
   19520:	f100 8104 	bmi.w	1972c <_svfwprintf_r+0xa84>
   19524:	e107      	b.n	19736 <_svfwprintf_r+0xa8e>
   19526:	07e0      	lsls	r0, r4, #31
   19528:	d5f9      	bpl.n	1951e <_svfwprintf_r+0x876>
   1952a:	e7e0      	b.n	194ee <_svfwprintf_r+0x846>
   1952c:	2340      	movs	r3, #64	; 0x40
   1952e:	f7fe ff74 	bl	1841a <__ssputs_r>
   19532:	3001      	adds	r0, #1
   19534:	f000 811f 	beq.w	19776 <_svfwprintf_r+0xace>
   19538:	3d10      	subs	r5, #16
   1953a:	e7e5      	b.n	19508 <_svfwprintf_r+0x860>
   1953c:	0001ccc8 	.word	0x0001ccc8
   19540:	0001cc04 	.word	0x0001cc04
   19544:	0001cbc4 	.word	0x0001cbc4
   19548:	0001cd0c 	.word	0x0001cd0c
   1954c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   1954e:	2b00      	cmp	r3, #0
   19550:	dc32      	bgt.n	195b8 <_svfwprintf_r+0x910>
   19552:	4630      	mov	r0, r6
   19554:	4651      	mov	r1, r10
   19556:	4a90      	ldr	r2, [pc, #576]	; (19798 <_svfwprintf_r+0xaf0>)
   19558:	2304      	movs	r3, #4
   1955a:	f7fe ff5e 	bl	1841a <__ssputs_r>
   1955e:	3001      	adds	r0, #1
   19560:	f000 8109 	beq.w	19776 <_svfwprintf_r+0xace>
   19564:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   19566:	b91b      	cbnz	r3, 19570 <_svfwprintf_r+0x8c8>
   19568:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1956a:	b90b      	cbnz	r3, 19570 <_svfwprintf_r+0x8c8>
   1956c:	07e1      	lsls	r1, r4, #31
   1956e:	d5d6      	bpl.n	1951e <_svfwprintf_r+0x876>
   19570:	4630      	mov	r0, r6
   19572:	4651      	mov	r1, r10
   19574:	aa18      	add	r2, sp, #96	; 0x60
   19576:	2304      	movs	r3, #4
   19578:	f7fe ff4f 	bl	1841a <__ssputs_r>
   1957c:	3001      	adds	r0, #1
   1957e:	f000 80fa 	beq.w	19776 <_svfwprintf_r+0xace>
   19582:	9d1a      	ldr	r5, [sp, #104]	; 0x68
   19584:	426d      	negs	r5, r5
   19586:	2d00      	cmp	r5, #0
   19588:	dc0b      	bgt.n	195a2 <_svfwprintf_r+0x8fa>
   1958a:	4630      	mov	r0, r6
   1958c:	4651      	mov	r1, r10
   1958e:	464a      	mov	r2, r9
   19590:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   19592:	e0b3      	b.n	196fc <_svfwprintf_r+0xa54>
   19594:	2340      	movs	r3, #64	; 0x40
   19596:	f7fe ff40 	bl	1841a <__ssputs_r>
   1959a:	3001      	adds	r0, #1
   1959c:	f000 80eb 	beq.w	19776 <_svfwprintf_r+0xace>
   195a0:	3d10      	subs	r5, #16
   195a2:	2d10      	cmp	r5, #16
   195a4:	4630      	mov	r0, r6
   195a6:	4651      	mov	r1, r10
   195a8:	4a7c      	ldr	r2, [pc, #496]	; (1979c <_svfwprintf_r+0xaf4>)
   195aa:	dcf3      	bgt.n	19594 <_svfwprintf_r+0x8ec>
   195ac:	00ab      	lsls	r3, r5, #2
   195ae:	f7fe ff34 	bl	1841a <__ssputs_r>
   195b2:	3001      	adds	r0, #1
   195b4:	d1e9      	bne.n	1958a <_svfwprintf_r+0x8e2>
   195b6:	e0de      	b.n	19776 <_svfwprintf_r+0xace>
   195b8:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   195ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   195bc:	f345 051d 	sbfx	r5, r5, #0, #30
   195c0:	429d      	cmp	r5, r3
   195c2:	bfa8      	it	ge
   195c4:	461d      	movge	r5, r3
   195c6:	2d00      	cmp	r5, #0
   195c8:	dc07      	bgt.n	195da <_svfwprintf_r+0x932>
   195ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   195cc:	2d00      	cmp	r5, #0
   195ce:	bfa8      	it	ge
   195d0:	1b5b      	subge	r3, r3, r5
   195d2:	2b00      	cmp	r3, #0
   195d4:	461d      	mov	r5, r3
   195d6:	dc10      	bgt.n	195fa <_svfwprintf_r+0x952>
   195d8:	e01a      	b.n	19610 <_svfwprintf_r+0x968>
   195da:	4630      	mov	r0, r6
   195dc:	4651      	mov	r1, r10
   195de:	464a      	mov	r2, r9
   195e0:	00ab      	lsls	r3, r5, #2
   195e2:	f7fe ff1a 	bl	1841a <__ssputs_r>
   195e6:	3001      	adds	r0, #1
   195e8:	d1ef      	bne.n	195ca <_svfwprintf_r+0x922>
   195ea:	e0c4      	b.n	19776 <_svfwprintf_r+0xace>
   195ec:	2340      	movs	r3, #64	; 0x40
   195ee:	f7fe ff14 	bl	1841a <__ssputs_r>
   195f2:	3001      	adds	r0, #1
   195f4:	f000 80bf 	beq.w	19776 <_svfwprintf_r+0xace>
   195f8:	3d10      	subs	r5, #16
   195fa:	2d10      	cmp	r5, #16
   195fc:	4630      	mov	r0, r6
   195fe:	4651      	mov	r1, r10
   19600:	4a66      	ldr	r2, [pc, #408]	; (1979c <_svfwprintf_r+0xaf4>)
   19602:	dcf3      	bgt.n	195ec <_svfwprintf_r+0x944>
   19604:	00ab      	lsls	r3, r5, #2
   19606:	f7fe ff08 	bl	1841a <__ssputs_r>
   1960a:	3001      	adds	r0, #1
   1960c:	f000 80b3 	beq.w	19776 <_svfwprintf_r+0xace>
   19610:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19612:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   19614:	eb09 0583 	add.w	r5, r9, r3, lsl #2
   19618:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1961a:	429a      	cmp	r2, r3
   1961c:	db12      	blt.n	19644 <_svfwprintf_r+0x99c>
   1961e:	07e2      	lsls	r2, r4, #31
   19620:	d410      	bmi.n	19644 <_svfwprintf_r+0x99c>
   19622:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   19624:	991a      	ldr	r1, [sp, #104]	; 0x68
   19626:	eb09 0982 	add.w	r9, r9, r2, lsl #2
   1962a:	ebc5 0909 	rsb	r9, r5, r9
   1962e:	ea4f 03a9 	mov.w	r3, r9, asr #2
   19632:	ebc1 0902 	rsb	r9, r1, r2
   19636:	4599      	cmp	r9, r3
   19638:	bfa8      	it	ge
   1963a:	4699      	movge	r9, r3
   1963c:	f1b9 0f00 	cmp.w	r9, #0
   19640:	dc09      	bgt.n	19656 <_svfwprintf_r+0x9ae>
   19642:	e012      	b.n	1966a <_svfwprintf_r+0x9c2>
   19644:	4630      	mov	r0, r6
   19646:	4651      	mov	r1, r10
   19648:	aa18      	add	r2, sp, #96	; 0x60
   1964a:	2304      	movs	r3, #4
   1964c:	f7fe fee5 	bl	1841a <__ssputs_r>
   19650:	3001      	adds	r0, #1
   19652:	d1e6      	bne.n	19622 <_svfwprintf_r+0x97a>
   19654:	e08f      	b.n	19776 <_svfwprintf_r+0xace>
   19656:	4630      	mov	r0, r6
   19658:	4651      	mov	r1, r10
   1965a:	462a      	mov	r2, r5
   1965c:	ea4f 0389 	mov.w	r3, r9, lsl #2
   19660:	f7fe fedb 	bl	1841a <__ssputs_r>
   19664:	3001      	adds	r0, #1
   19666:	f000 8086 	beq.w	19776 <_svfwprintf_r+0xace>
   1966a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   1966c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   1966e:	f1b9 0f00 	cmp.w	r9, #0
   19672:	eba3 0302 	sub.w	r3, r3, r2
   19676:	bfb4      	ite	lt
   19678:	4699      	movlt	r9, r3
   1967a:	ebc9 0903 	rsbge	r9, r9, r3
   1967e:	f1b9 0f00 	cmp.w	r9, #0
   19682:	dc07      	bgt.n	19694 <_svfwprintf_r+0x9ec>
   19684:	e74b      	b.n	1951e <_svfwprintf_r+0x876>
   19686:	2340      	movs	r3, #64	; 0x40
   19688:	f7fe fec7 	bl	1841a <__ssputs_r>
   1968c:	3001      	adds	r0, #1
   1968e:	d072      	beq.n	19776 <_svfwprintf_r+0xace>
   19690:	f1a9 0910 	sub.w	r9, r9, #16
   19694:	f1b9 0f10 	cmp.w	r9, #16
   19698:	4630      	mov	r0, r6
   1969a:	4651      	mov	r1, r10
   1969c:	4a3f      	ldr	r2, [pc, #252]	; (1979c <_svfwprintf_r+0xaf4>)
   1969e:	dcf2      	bgt.n	19686 <_svfwprintf_r+0x9de>
   196a0:	ea4f 0389 	mov.w	r3, r9, lsl #2
   196a4:	e736      	b.n	19514 <_svfwprintf_r+0x86c>
   196a6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   196a8:	2b01      	cmp	r3, #1
   196aa:	dc01      	bgt.n	196b0 <_svfwprintf_r+0xa08>
   196ac:	07e3      	lsls	r3, r4, #31
   196ae:	d538      	bpl.n	19722 <_svfwprintf_r+0xa7a>
   196b0:	4630      	mov	r0, r6
   196b2:	4651      	mov	r1, r10
   196b4:	464a      	mov	r2, r9
   196b6:	2304      	movs	r3, #4
   196b8:	f7fe feaf 	bl	1841a <__ssputs_r>
   196bc:	3001      	adds	r0, #1
   196be:	d05a      	beq.n	19776 <_svfwprintf_r+0xace>
   196c0:	4630      	mov	r0, r6
   196c2:	4651      	mov	r1, r10
   196c4:	aa18      	add	r2, sp, #96	; 0x60
   196c6:	2304      	movs	r3, #4
   196c8:	f7fe fea7 	bl	1841a <__ssputs_r>
   196cc:	3001      	adds	r0, #1
   196ce:	d052      	beq.n	19776 <_svfwprintf_r+0xace>
   196d0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   196d4:	2200      	movs	r2, #0
   196d6:	2300      	movs	r3, #0
   196d8:	f7f8 fb08 	bl	11cec <__aeabi_dcmpeq>
   196dc:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
   196de:	b978      	cbnz	r0, 19700 <_svfwprintf_r+0xa58>
   196e0:	4630      	mov	r0, r6
   196e2:	4651      	mov	r1, r10
   196e4:	1e6b      	subs	r3, r5, #1
   196e6:	f109 0204 	add.w	r2, r9, #4
   196ea:	009b      	lsls	r3, r3, #2
   196ec:	f7fe fe95 	bl	1841a <__ssputs_r>
   196f0:	3001      	adds	r0, #1
   196f2:	d040      	beq.n	19776 <_svfwprintf_r+0xace>
   196f4:	4630      	mov	r0, r6
   196f6:	4651      	mov	r1, r10
   196f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   196fa:	aa1e      	add	r2, sp, #120	; 0x78
   196fc:	009b      	lsls	r3, r3, #2
   196fe:	e709      	b.n	19514 <_svfwprintf_r+0x86c>
   19700:	3d01      	subs	r5, #1
   19702:	2d00      	cmp	r5, #0
   19704:	ddf6      	ble.n	196f4 <_svfwprintf_r+0xa4c>
   19706:	2d10      	cmp	r5, #16
   19708:	4630      	mov	r0, r6
   1970a:	4651      	mov	r1, r10
   1970c:	4a23      	ldr	r2, [pc, #140]	; (1979c <_svfwprintf_r+0xaf4>)
   1970e:	dd06      	ble.n	1971e <_svfwprintf_r+0xa76>
   19710:	2340      	movs	r3, #64	; 0x40
   19712:	f7fe fe82 	bl	1841a <__ssputs_r>
   19716:	3001      	adds	r0, #1
   19718:	d02d      	beq.n	19776 <_svfwprintf_r+0xace>
   1971a:	3d10      	subs	r5, #16
   1971c:	e7f3      	b.n	19706 <_svfwprintf_r+0xa5e>
   1971e:	00ab      	lsls	r3, r5, #2
   19720:	e7e4      	b.n	196ec <_svfwprintf_r+0xa44>
   19722:	4630      	mov	r0, r6
   19724:	4651      	mov	r1, r10
   19726:	464a      	mov	r2, r9
   19728:	2304      	movs	r3, #4
   1972a:	e7df      	b.n	196ec <_svfwprintf_r+0xa44>
   1972c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1972e:	9a10      	ldr	r2, [sp, #64]	; 0x40
   19730:	1a9c      	subs	r4, r3, r2
   19732:	2c00      	cmp	r4, #0
   19734:	dc15      	bgt.n	19762 <_svfwprintf_r+0xaba>
   19736:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   19738:	9a10      	ldr	r2, [sp, #64]	; 0x40
   1973a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   1973c:	428a      	cmp	r2, r1
   1973e:	bfac      	ite	ge
   19740:	189b      	addge	r3, r3, r2
   19742:	185b      	addlt	r3, r3, r1
   19744:	930f      	str	r3, [sp, #60]	; 0x3c
   19746:	2f00      	cmp	r7, #0
   19748:	f43f ad22 	beq.w	19190 <_svfwprintf_r+0x4e8>
   1974c:	4630      	mov	r0, r6
   1974e:	4639      	mov	r1, r7
   19750:	f7f9 ffca 	bl	136e8 <_free_r>
   19754:	e51c      	b.n	19190 <_svfwprintf_r+0x4e8>
   19756:	2340      	movs	r3, #64	; 0x40
   19758:	f7fe fe5f 	bl	1841a <__ssputs_r>
   1975c:	3001      	adds	r0, #1
   1975e:	d00a      	beq.n	19776 <_svfwprintf_r+0xace>
   19760:	3c10      	subs	r4, #16
   19762:	2c10      	cmp	r4, #16
   19764:	4630      	mov	r0, r6
   19766:	4651      	mov	r1, r10
   19768:	4a0d      	ldr	r2, [pc, #52]	; (197a0 <_svfwprintf_r+0xaf8>)
   1976a:	dcf4      	bgt.n	19756 <_svfwprintf_r+0xaae>
   1976c:	00a3      	lsls	r3, r4, #2
   1976e:	f7fe fe54 	bl	1841a <__ssputs_r>
   19772:	3001      	adds	r0, #1
   19774:	d1df      	bne.n	19736 <_svfwprintf_r+0xa8e>
   19776:	b11f      	cbz	r7, 19780 <_svfwprintf_r+0xad8>
   19778:	4630      	mov	r0, r6
   1977a:	4639      	mov	r1, r7
   1977c:	f7f9 ffb4 	bl	136e8 <_free_r>
   19780:	f8ba 300c 	ldrh.w	r3, [r10, #12]
   19784:	f013 0f40 	tst.w	r3, #64	; 0x40
   19788:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   1978a:	bf18      	it	ne
   1978c:	f04f 33ff 	movne.w	r3, #4294967295
   19790:	4618      	mov	r0, r3
   19792:	b055      	add	sp, #340	; 0x154
   19794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
   19798:	0001cd0c 	.word	0x0001cd0c
   1979c:	0001cbc4 	.word	0x0001cbc4
   197a0:	0001cc04 	.word	0x0001cc04

000197a4 <quorem>:
   197a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
   197a8:	6903      	ldr	r3, [r0, #16]
   197aa:	690c      	ldr	r4, [r1, #16]
   197ac:	4680      	mov	r8, r0
   197ae:	42a3      	cmp	r3, r4
   197b0:	db7e      	blt.n	198b0 <quorem+0x10c>
   197b2:	3c01      	subs	r4, #1
   197b4:	f101 0714 	add.w	r7, r1, #20
   197b8:	ea4f 0e84 	mov.w	lr, r4, lsl #2
   197bc:	f100 0614 	add.w	r6, r0, #20
   197c0:	eb06 030e 	add.w	r3, r6, lr
   197c4:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
   197c8:	9301      	str	r3, [sp, #4]
   197ca:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
   197ce:	3501      	adds	r5, #1
   197d0:	fbb3 f5f5 	udiv	r5, r3, r5
   197d4:	eb07 090e 	add.w	r9, r7, lr
   197d8:	b3bd      	cbz	r5, 1984a <quorem+0xa6>
   197da:	f04f 0a00 	mov.w	r10, #0
   197de:	4638      	mov	r0, r7
   197e0:	46b4      	mov	r12, r6
   197e2:	46d3      	mov	r11, r10
   197e4:	f850 3b04 	ldr.w	r3, [r0], #4
   197e8:	b29a      	uxth	r2, r3
   197ea:	0c1b      	lsrs	r3, r3, #16
   197ec:	fb02 a205 	mla	r2, r2, r5, r10
   197f0:	436b      	muls	r3, r5
   197f2:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   197f6:	b292      	uxth	r2, r2
   197f8:	ebc2 0b0b 	rsb	r11, r2, r11
   197fc:	f8bc 2000 	ldrh.w	r2, [r12]
   19800:	ea4f 4a13 	mov.w	r10, r3, lsr #16
   19804:	445a      	add	r2, r11
   19806:	fa1f fb83 	uxth.w	r11, r3
   1980a:	f8dc 3000 	ldr.w	r3, [r12]
   1980e:	4548      	cmp	r0, r9
   19810:	ebcb 4313 	rsb	r3, r11, r3, lsr #16
   19814:	eb03 4322 	add.w	r3, r3, r2, asr #16
   19818:	b292      	uxth	r2, r2
   1981a:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   1981e:	ea4f 4b23 	mov.w	r11, r3, asr #16
   19822:	f84c 2b04 	str.w	r2, [r12], #4
   19826:	d9dd      	bls.n	197e4 <quorem+0x40>
   19828:	f856 300e 	ldr.w	r3, [r6, lr]
   1982c:	b96b      	cbnz	r3, 1984a <quorem+0xa6>
   1982e:	9b01      	ldr	r3, [sp, #4]
   19830:	3b04      	subs	r3, #4
   19832:	42b3      	cmp	r3, r6
   19834:	461a      	mov	r2, r3
   19836:	d802      	bhi.n	1983e <quorem+0x9a>
   19838:	f8c8 4010 	str.w	r4, [r8, #16]
   1983c:	e005      	b.n	1984a <quorem+0xa6>
   1983e:	6812      	ldr	r2, [r2, #0]
   19840:	3b04      	subs	r3, #4
   19842:	2a00      	cmp	r2, #0
   19844:	d1f8      	bne.n	19838 <quorem+0x94>
   19846:	3c01      	subs	r4, #1
   19848:	e7f3      	b.n	19832 <quorem+0x8e>
   1984a:	4640      	mov	r0, r8
   1984c:	f7fe fc0d 	bl	1806a <__mcmp>
   19850:	2800      	cmp	r0, #0
   19852:	db2b      	blt.n	198ac <quorem+0x108>
   19854:	4630      	mov	r0, r6
   19856:	3501      	adds	r5, #1
   19858:	f04f 0e00 	mov.w	lr, #0
   1985c:	f857 2b04 	ldr.w	r2, [r7], #4
   19860:	6803      	ldr	r3, [r0, #0]
   19862:	b291      	uxth	r1, r2
   19864:	ebc1 0e0e 	rsb	lr, r1, lr
   19868:	0c12      	lsrs	r2, r2, #16
   1986a:	b299      	uxth	r1, r3
   1986c:	4471      	add	r1, lr
   1986e:	ebc2 4313 	rsb	r3, r2, r3, lsr #16
   19872:	eb03 4321 	add.w	r3, r3, r1, asr #16
   19876:	b289      	uxth	r1, r1
   19878:	ea4f 4e23 	mov.w	lr, r3, asr #16
   1987c:	454f      	cmp	r7, r9
   1987e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
   19882:	f840 3b04 	str.w	r3, [r0], #4
   19886:	d9e9      	bls.n	1985c <quorem+0xb8>
   19888:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   1988c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   19890:	b962      	cbnz	r2, 198ac <quorem+0x108>
   19892:	3b04      	subs	r3, #4
   19894:	42b3      	cmp	r3, r6
   19896:	461a      	mov	r2, r3
   19898:	d802      	bhi.n	198a0 <quorem+0xfc>
   1989a:	f8c8 4010 	str.w	r4, [r8, #16]
   1989e:	e005      	b.n	198ac <quorem+0x108>
   198a0:	6812      	ldr	r2, [r2, #0]
   198a2:	3b04      	subs	r3, #4
   198a4:	2a00      	cmp	r2, #0
   198a6:	d1f8      	bne.n	1989a <quorem+0xf6>
   198a8:	3c01      	subs	r4, #1
   198aa:	e7f3      	b.n	19894 <quorem+0xf0>
   198ac:	4628      	mov	r0, r5
   198ae:	e000      	b.n	198b2 <quorem+0x10e>
   198b0:	2000      	movs	r0, #0
   198b2:	b003      	add	sp, #12
   198b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

000198b8 <_dtoa_r>:
   198b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
   198bc:	6a45      	ldr	r5, [r0, #36]	; 0x24
   198be:	b095      	sub	sp, #84	; 0x54
   198c0:	4682      	mov	r10, r0
   198c2:	9c21      	ldr	r4, [sp, #132]	; 0x84
   198c4:	e9cd 2302 	strd	r2, r3, [sp, #8]
   198c8:	b945      	cbnz	r5, 198dc <_dtoa_r+0x24>
   198ca:	2010      	movs	r0, #16
   198cc:	f7e7 f908 	bl	ae0 <__wrap_malloc>
   198d0:	f8ca 0024 	str.w	r0, [r10, #36]	; 0x24
   198d4:	6045      	str	r5, [r0, #4]
   198d6:	6085      	str	r5, [r0, #8]
   198d8:	6005      	str	r5, [r0, #0]
   198da:	60c5      	str	r5, [r0, #12]
   198dc:	f8da 3024 	ldr.w	r3, [r10, #36]	; 0x24
   198e0:	6819      	ldr	r1, [r3, #0]
   198e2:	b159      	cbz	r1, 198fc <_dtoa_r+0x44>
   198e4:	685a      	ldr	r2, [r3, #4]
   198e6:	2301      	movs	r3, #1
   198e8:	4093      	lsls	r3, r2
   198ea:	604a      	str	r2, [r1, #4]
   198ec:	608b      	str	r3, [r1, #8]
   198ee:	4650      	mov	r0, r10
   198f0:	f7fe f99f 	bl	17c32 <_Bfree>
   198f4:	f8da 3024 	ldr.w	r3, [r10, #36]	; 0x24
   198f8:	2200      	movs	r2, #0
   198fa:	601a      	str	r2, [r3, #0]
   198fc:	9b03      	ldr	r3, [sp, #12]
   198fe:	4aa2      	ldr	r2, [pc, #648]	; (19b88 <_dtoa_r+0x2d0>)
   19900:	2b00      	cmp	r3, #0
   19902:	bfbd      	ittte	lt
   19904:	2301      	movlt	r3, #1
   19906:	6023      	strlt	r3, [r4, #0]
   19908:	9b03      	ldrlt	r3, [sp, #12]
   1990a:	2300      	movge	r3, #0
   1990c:	bfbc      	itt	lt
   1990e:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
   19912:	9303      	strlt	r3, [sp, #12]
   19914:	9f03      	ldr	r7, [sp, #12]
   19916:	bfa8      	it	ge
   19918:	6023      	strge	r3, [r4, #0]
   1991a:	f027 4300 	bic.w	r3, r7, #2147483648	; 0x80000000
   1991e:	0d1b      	lsrs	r3, r3, #20
   19920:	051b      	lsls	r3, r3, #20
   19922:	4293      	cmp	r3, r2
   19924:	d11d      	bne.n	19962 <_dtoa_r+0xaa>
   19926:	f242 730f 	movw	r3, #9999	; 0x270f
   1992a:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1992c:	6013      	str	r3, [r2, #0]
   1992e:	9b02      	ldr	r3, [sp, #8]
   19930:	b943      	cbnz	r3, 19944 <_dtoa_r+0x8c>
   19932:	4a96      	ldr	r2, [pc, #600]	; (19b8c <_dtoa_r+0x2d4>)
   19934:	4b96      	ldr	r3, [pc, #600]	; (19b90 <_dtoa_r+0x2d8>)
   19936:	f3c7 0013 	ubfx	r0, r7, #0, #20
   1993a:	2800      	cmp	r0, #0
   1993c:	bf14      	ite	ne
   1993e:	4618      	movne	r0, r3
   19940:	4610      	moveq	r0, r2
   19942:	e000      	b.n	19946 <_dtoa_r+0x8e>
   19944:	4892      	ldr	r0, [pc, #584]	; (19b90 <_dtoa_r+0x2d8>)
   19946:	9b22      	ldr	r3, [sp, #136]	; 0x88
   19948:	2b00      	cmp	r3, #0
   1994a:	f000 8569 	beq.w	1a420 <_dtoa_r+0xb68>
   1994e:	78c3      	ldrb	r3, [r0, #3]
   19950:	b113      	cbz	r3, 19958 <_dtoa_r+0xa0>
   19952:	f100 0308 	add.w	r3, r0, #8
   19956:	e000      	b.n	1995a <_dtoa_r+0xa2>
   19958:	1cc3      	adds	r3, r0, #3
   1995a:	9a22      	ldr	r2, [sp, #136]	; 0x88
   1995c:	6013      	str	r3, [r2, #0]
   1995e:	f000 bd5f 	b.w	1a420 <_dtoa_r+0xb68>
   19962:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
   19966:	2200      	movs	r2, #0
   19968:	4620      	mov	r0, r4
   1996a:	4629      	mov	r1, r5
   1996c:	2300      	movs	r3, #0
   1996e:	f7f8 f9bd 	bl	11cec <__aeabi_dcmpeq>
   19972:	4680      	mov	r8, r0
   19974:	b158      	cbz	r0, 1998e <_dtoa_r+0xd6>
   19976:	9a20      	ldr	r2, [sp, #128]	; 0x80
   19978:	2301      	movs	r3, #1
   1997a:	6013      	str	r3, [r2, #0]
   1997c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1997e:	2b00      	cmp	r3, #0
   19980:	f000 853c 	beq.w	1a3fc <_dtoa_r+0xb44>
   19984:	4883      	ldr	r0, [pc, #524]	; (19b94 <_dtoa_r+0x2dc>)
   19986:	6018      	str	r0, [r3, #0]
   19988:	3801      	subs	r0, #1
   1998a:	f000 bd49 	b.w	1a420 <_dtoa_r+0xb68>
   1998e:	ab13      	add	r3, sp, #76	; 0x4c
   19990:	9300      	str	r3, [sp, #0]
   19992:	ab12      	add	r3, sp, #72	; 0x48
   19994:	9301      	str	r3, [sp, #4]
   19996:	4650      	mov	r0, r10
   19998:	4622      	mov	r2, r4
   1999a:	462b      	mov	r3, r5
   1999c:	f7fe fc53 	bl	18246 <__d2b>
   199a0:	f3c7 560a 	ubfx	r6, r7, #20, #11
   199a4:	9007      	str	r0, [sp, #28]
   199a6:	b15e      	cbz	r6, 199c0 <_dtoa_r+0x108>
   199a8:	f3c5 0313 	ubfx	r3, r5, #0, #20
   199ac:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   199b0:	4620      	mov	r0, r4
   199b2:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   199b6:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
   199ba:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
   199be:	e01d      	b.n	199fc <_dtoa_r+0x144>
   199c0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   199c2:	9e12      	ldr	r6, [sp, #72]	; 0x48
   199c4:	441e      	add	r6, r3
   199c6:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   199ca:	429e      	cmp	r6, r3
   199cc:	bfa1      	itttt	ge
   199ce:	9a02      	ldrge	r2, [sp, #8]
   199d0:	f206 4312 	addwge	r3, r6, #1042	; 0x412
   199d4:	fa22 f003 	lsrge.w	r0, r2, r3
   199d8:	4b6f      	ldrge	r3, [pc, #444]	; (19b98 <_dtoa_r+0x2e0>)
   199da:	bfb7      	itett	lt
   199dc:	4b6f      	ldrlt	r3, [pc, #444]	; (19b9c <_dtoa_r+0x2e4>)
   199de:	1b9b      	subge	r3, r3, r6
   199e0:	9a02      	ldrlt	r2, [sp, #8]
   199e2:	1b9b      	sublt	r3, r3, r6
   199e4:	bfaa      	itet	ge
   199e6:	409f      	lslge	r7, r3
   199e8:	fa02 f003 	lsllt.w	r0, r2, r3
   199ec:	4338      	orrge	r0, r7
   199ee:	f7f7 fe9f 	bl	11730 <__aeabi_ui2d>
   199f2:	2301      	movs	r3, #1
   199f4:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   199f8:	3e01      	subs	r6, #1
   199fa:	9311      	str	r3, [sp, #68]	; 0x44
   199fc:	2200      	movs	r2, #0
   199fe:	4b68      	ldr	r3, [pc, #416]	; (19ba0 <_dtoa_r+0x2e8>)
   19a00:	f7f7 fd58 	bl	114b4 <__aeabi_dsub>
   19a04:	a35a      	add	r3, pc, #360	; (adr r3, 19b70 <_dtoa_r+0x2b8>)
   19a06:	e9d3 2300 	ldrd	r2, r3, [r3]
   19a0a:	f7f7 ff07 	bl	1181c <__aeabi_dmul>
   19a0e:	a35a      	add	r3, pc, #360	; (adr r3, 19b78 <_dtoa_r+0x2c0>)
   19a10:	e9d3 2300 	ldrd	r2, r3, [r3]
   19a14:	f7f7 fd50 	bl	114b8 <__adddf3>
   19a18:	4604      	mov	r4, r0
   19a1a:	4630      	mov	r0, r6
   19a1c:	460d      	mov	r5, r1
   19a1e:	f7f7 fe97 	bl	11750 <__aeabi_i2d>
   19a22:	a357      	add	r3, pc, #348	; (adr r3, 19b80 <_dtoa_r+0x2c8>)
   19a24:	e9d3 2300 	ldrd	r2, r3, [r3]
   19a28:	f7f7 fef8 	bl	1181c <__aeabi_dmul>
   19a2c:	4602      	mov	r2, r0
   19a2e:	460b      	mov	r3, r1
   19a30:	4620      	mov	r0, r4
   19a32:	4629      	mov	r1, r5
   19a34:	f7f7 fd40 	bl	114b8 <__adddf3>
   19a38:	4604      	mov	r4, r0
   19a3a:	460d      	mov	r5, r1
   19a3c:	f7f8 f988 	bl	11d50 <__aeabi_d2iz>
   19a40:	4629      	mov	r1, r5
   19a42:	4683      	mov	r11, r0
   19a44:	2200      	movs	r2, #0
   19a46:	4620      	mov	r0, r4
   19a48:	2300      	movs	r3, #0
   19a4a:	f7f8 f959 	bl	11d00 <__aeabi_dcmplt>
   19a4e:	b158      	cbz	r0, 19a68 <_dtoa_r+0x1b0>
   19a50:	4658      	mov	r0, r11
   19a52:	f7f7 fe7d 	bl	11750 <__aeabi_i2d>
   19a56:	4602      	mov	r2, r0
   19a58:	460b      	mov	r3, r1
   19a5a:	4620      	mov	r0, r4
   19a5c:	4629      	mov	r1, r5
   19a5e:	f7f8 f945 	bl	11cec <__aeabi_dcmpeq>
   19a62:	b908      	cbnz	r0, 19a68 <_dtoa_r+0x1b0>
   19a64:	f10b 3bff 	add.w	r11, r11, #4294967295
   19a68:	f1bb 0f16 	cmp.w	r11, #22
   19a6c:	d80d      	bhi.n	19a8a <_dtoa_r+0x1d2>
   19a6e:	4b4d      	ldr	r3, [pc, #308]	; (19ba4 <_dtoa_r+0x2ec>)
   19a70:	eb03 03cb 	add.w	r3, r3, r11, lsl #3
   19a74:	e9d3 0100 	ldrd	r0, r1, [r3]
   19a78:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   19a7c:	f7f8 f95e 	bl	11d3c <__aeabi_dcmpgt>
   19a80:	b130      	cbz	r0, 19a90 <_dtoa_r+0x1d8>
   19a82:	f10b 3bff 	add.w	r11, r11, #4294967295
   19a86:	2300      	movs	r3, #0
   19a88:	e000      	b.n	19a8c <_dtoa_r+0x1d4>
   19a8a:	2301      	movs	r3, #1
   19a8c:	9310      	str	r3, [sp, #64]	; 0x40
   19a8e:	e000      	b.n	19a92 <_dtoa_r+0x1da>
   19a90:	9010      	str	r0, [sp, #64]	; 0x40
   19a92:	9b12      	ldr	r3, [sp, #72]	; 0x48
   19a94:	1b9e      	subs	r6, r3, r6
   19a96:	1e73      	subs	r3, r6, #1
   19a98:	930a      	str	r3, [sp, #40]	; 0x28
   19a9a:	bf45      	ittet	mi
   19a9c:	425b      	negmi	r3, r3
   19a9e:	9309      	strmi	r3, [sp, #36]	; 0x24
   19aa0:	2300      	movpl	r3, #0
   19aa2:	2300      	movmi	r3, #0
   19aa4:	bf4c      	ite	mi
   19aa6:	930a      	strmi	r3, [sp, #40]	; 0x28
   19aa8:	9309      	strpl	r3, [sp, #36]	; 0x24
   19aaa:	f1bb 0f00 	cmp.w	r11, #0
   19aae:	db07      	blt.n	19ac0 <_dtoa_r+0x208>
   19ab0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19ab2:	f8cd b034 	str.w	r11, [sp, #52]	; 0x34
   19ab6:	445b      	add	r3, r11
   19ab8:	930a      	str	r3, [sp, #40]	; 0x28
   19aba:	2300      	movs	r3, #0
   19abc:	930b      	str	r3, [sp, #44]	; 0x2c
   19abe:	e008      	b.n	19ad2 <_dtoa_r+0x21a>
   19ac0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   19ac2:	ebcb 0303 	rsb	r3, r11, r3
   19ac6:	9309      	str	r3, [sp, #36]	; 0x24
   19ac8:	f1cb 0300 	rsb	r3, r11, #0
   19acc:	930b      	str	r3, [sp, #44]	; 0x2c
   19ace:	2300      	movs	r3, #0
   19ad0:	930d      	str	r3, [sp, #52]	; 0x34
   19ad2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   19ad4:	2b09      	cmp	r3, #9
   19ad6:	d829      	bhi.n	19b2c <_dtoa_r+0x274>
   19ad8:	2b05      	cmp	r3, #5
   19ada:	bfc4      	itt	gt
   19adc:	3b04      	subgt	r3, #4
   19ade:	931e      	strgt	r3, [sp, #120]	; 0x78
   19ae0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   19ae2:	bfc8      	it	gt
   19ae4:	2500      	movgt	r5, #0
   19ae6:	f1a3 0302 	sub.w	r3, r3, #2
   19aea:	bfd8      	it	le
   19aec:	2501      	movle	r5, #1
   19aee:	2b03      	cmp	r3, #3
   19af0:	d821      	bhi.n	19b36 <_dtoa_r+0x27e>
   19af2:	e8df f003 	tbb	[pc, r3]
   19af6:	0e02      	.short	0x0e02
   19af8:	1004      	.short	0x1004
   19afa:	2300      	movs	r3, #0
   19afc:	e000      	b.n	19b00 <_dtoa_r+0x248>
   19afe:	2301      	movs	r3, #1
   19b00:	930c      	str	r3, [sp, #48]	; 0x30
   19b02:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   19b04:	2b00      	cmp	r3, #0
   19b06:	dc20      	bgt.n	19b4a <_dtoa_r+0x292>
   19b08:	2301      	movs	r3, #1
   19b0a:	9306      	str	r3, [sp, #24]
   19b0c:	9305      	str	r3, [sp, #20]
   19b0e:	461a      	mov	r2, r3
   19b10:	e019      	b.n	19b46 <_dtoa_r+0x28e>
   19b12:	2300      	movs	r3, #0
   19b14:	e000      	b.n	19b18 <_dtoa_r+0x260>
   19b16:	2301      	movs	r3, #1
   19b18:	930c      	str	r3, [sp, #48]	; 0x30
   19b1a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   19b1c:	445b      	add	r3, r11
   19b1e:	9306      	str	r3, [sp, #24]
   19b20:	3301      	adds	r3, #1
   19b22:	2b01      	cmp	r3, #1
   19b24:	9305      	str	r3, [sp, #20]
   19b26:	bfb8      	it	lt
   19b28:	2301      	movlt	r3, #1
   19b2a:	e011      	b.n	19b50 <_dtoa_r+0x298>
   19b2c:	2501      	movs	r5, #1
   19b2e:	2300      	movs	r3, #0
   19b30:	931e      	str	r3, [sp, #120]	; 0x78
   19b32:	950c      	str	r5, [sp, #48]	; 0x30
   19b34:	e001      	b.n	19b3a <_dtoa_r+0x282>
   19b36:	2301      	movs	r3, #1
   19b38:	930c      	str	r3, [sp, #48]	; 0x30
   19b3a:	f04f 33ff 	mov.w	r3, #4294967295
   19b3e:	9306      	str	r3, [sp, #24]
   19b40:	9305      	str	r3, [sp, #20]
   19b42:	2200      	movs	r2, #0
   19b44:	2312      	movs	r3, #18
   19b46:	921f      	str	r2, [sp, #124]	; 0x7c
   19b48:	e002      	b.n	19b50 <_dtoa_r+0x298>
   19b4a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   19b4c:	9306      	str	r3, [sp, #24]
   19b4e:	9305      	str	r3, [sp, #20]
   19b50:	f8da 4024 	ldr.w	r4, [r10, #36]	; 0x24
   19b54:	2200      	movs	r2, #0
   19b56:	6062      	str	r2, [r4, #4]
   19b58:	2104      	movs	r1, #4
   19b5a:	f101 0214 	add.w	r2, r1, #20
   19b5e:	429a      	cmp	r2, r3
   19b60:	d822      	bhi.n	19ba8 <_dtoa_r+0x2f0>
   19b62:	6862      	ldr	r2, [r4, #4]
   19b64:	0049      	lsls	r1, r1, #1
   19b66:	3201      	adds	r2, #1
   19b68:	6062      	str	r2, [r4, #4]
   19b6a:	e7f6      	b.n	19b5a <_dtoa_r+0x2a2>
   19b6c:	f3af 8000 	nop.w
   19b70:	636f4361 	.word	0x636f4361
   19b74:	3fd287a7 	.word	0x3fd287a7
   19b78:	8b60c8b3 	.word	0x8b60c8b3
   19b7c:	3fc68a28 	.word	0x3fc68a28
   19b80:	509f79fb 	.word	0x509f79fb
   19b84:	3fd34413 	.word	0x3fd34413
   19b88:	7ff00000 	.word	0x7ff00000
   19b8c:	0001cd14 	.word	0x0001cd14
   19b90:	0001cd1d 	.word	0x0001cd1d
   19b94:	0001c78f 	.word	0x0001c78f
   19b98:	fffffc0e 	.word	0xfffffc0e
   19b9c:	fffffbee 	.word	0xfffffbee
   19ba0:	3ff80000 	.word	0x3ff80000
   19ba4:	0001cac8 	.word	0x0001cac8
   19ba8:	4650      	mov	r0, r10
   19baa:	6861      	ldr	r1, [r4, #4]
   19bac:	f7fe f80c 	bl	17bc8 <_Balloc>
   19bb0:	f8da 3024 	ldr.w	r3, [r10, #36]	; 0x24
   19bb4:	6020      	str	r0, [r4, #0]
   19bb6:	681b      	ldr	r3, [r3, #0]
   19bb8:	9308      	str	r3, [sp, #32]
   19bba:	9b05      	ldr	r3, [sp, #20]
   19bbc:	2b0e      	cmp	r3, #14
   19bbe:	f200 8147 	bhi.w	19e50 <_dtoa_r+0x598>
   19bc2:	2d00      	cmp	r5, #0
   19bc4:	f000 8144 	beq.w	19e50 <_dtoa_r+0x598>
   19bc8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   19bcc:	f1bb 0f00 	cmp.w	r11, #0
   19bd0:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
   19bd4:	dd31      	ble.n	19c3a <_dtoa_r+0x382>
   19bd6:	4ab1      	ldr	r2, [pc, #708]	; (19e9c <_dtoa_r+0x5e4>)
   19bd8:	f00b 030f 	and.w	r3, r11, #15
   19bdc:	ea4f 162b 	mov.w	r6, r11, asr #4
   19be0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   19be4:	06f0      	lsls	r0, r6, #27
   19be6:	e9d3 4500 	ldrd	r4, r5, [r3]
   19bea:	d50c      	bpl.n	19c06 <_dtoa_r+0x34e>
   19bec:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   19bf0:	4bab      	ldr	r3, [pc, #684]	; (19ea0 <_dtoa_r+0x5e8>)
   19bf2:	f006 060f 	and.w	r6, r6, #15
   19bf6:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   19bfa:	f7f7 ff39 	bl	11a70 <__aeabi_ddiv>
   19bfe:	2703      	movs	r7, #3
   19c00:	e9cd 0102 	strd	r0, r1, [sp, #8]
   19c04:	e000      	b.n	19c08 <_dtoa_r+0x350>
   19c06:	2702      	movs	r7, #2
   19c08:	f8df 8294 	ldr.w	r8, [pc, #660]	; 19ea0 <_dtoa_r+0x5e8>
   19c0c:	b176      	cbz	r6, 19c2c <_dtoa_r+0x374>
   19c0e:	07f1      	lsls	r1, r6, #31
   19c10:	d508      	bpl.n	19c24 <_dtoa_r+0x36c>
   19c12:	e9d8 2300 	ldrd	r2, r3, [r8]
   19c16:	4620      	mov	r0, r4
   19c18:	4629      	mov	r1, r5
   19c1a:	f7f7 fdff 	bl	1181c <__aeabi_dmul>
   19c1e:	4604      	mov	r4, r0
   19c20:	460d      	mov	r5, r1
   19c22:	3701      	adds	r7, #1
   19c24:	1076      	asrs	r6, r6, #1
   19c26:	f108 0808 	add.w	r8, r8, #8
   19c2a:	e7ef      	b.n	19c0c <_dtoa_r+0x354>
   19c2c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   19c30:	4622      	mov	r2, r4
   19c32:	462b      	mov	r3, r5
   19c34:	f7f7 ff1c 	bl	11a70 <__aeabi_ddiv>
   19c38:	e01b      	b.n	19c72 <_dtoa_r+0x3ba>
   19c3a:	f1cb 0400 	rsb	r4, r11, #0
   19c3e:	b1dc      	cbz	r4, 19c78 <_dtoa_r+0x3c0>
   19c40:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   19c44:	4b95      	ldr	r3, [pc, #596]	; (19e9c <_dtoa_r+0x5e4>)
   19c46:	f004 020f 	and.w	r2, r4, #15
   19c4a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   19c4e:	e9d3 2300 	ldrd	r2, r3, [r3]
   19c52:	f7f7 fde3 	bl	1181c <__aeabi_dmul>
   19c56:	4d92      	ldr	r5, [pc, #584]	; (19ea0 <_dtoa_r+0x5e8>)
   19c58:	1124      	asrs	r4, r4, #4
   19c5a:	2702      	movs	r7, #2
   19c5c:	b14c      	cbz	r4, 19c72 <_dtoa_r+0x3ba>
   19c5e:	07e2      	lsls	r2, r4, #31
   19c60:	d504      	bpl.n	19c6c <_dtoa_r+0x3b4>
   19c62:	e9d5 2300 	ldrd	r2, r3, [r5]
   19c66:	3701      	adds	r7, #1
   19c68:	f7f7 fdd8 	bl	1181c <__aeabi_dmul>
   19c6c:	1064      	asrs	r4, r4, #1
   19c6e:	3508      	adds	r5, #8
   19c70:	e7f4      	b.n	19c5c <_dtoa_r+0x3a4>
   19c72:	e9cd 0102 	strd	r0, r1, [sp, #8]
   19c76:	e000      	b.n	19c7a <_dtoa_r+0x3c2>
   19c78:	2702      	movs	r7, #2
   19c7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   19c7c:	b1db      	cbz	r3, 19cb6 <_dtoa_r+0x3fe>
   19c7e:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
   19c82:	2200      	movs	r2, #0
   19c84:	4620      	mov	r0, r4
   19c86:	4629      	mov	r1, r5
   19c88:	4b86      	ldr	r3, [pc, #536]	; (19ea4 <_dtoa_r+0x5ec>)
   19c8a:	f7f8 f839 	bl	11d00 <__aeabi_dcmplt>
   19c8e:	b190      	cbz	r0, 19cb6 <_dtoa_r+0x3fe>
   19c90:	9b05      	ldr	r3, [sp, #20]
   19c92:	b183      	cbz	r3, 19cb6 <_dtoa_r+0x3fe>
   19c94:	9b06      	ldr	r3, [sp, #24]
   19c96:	2b00      	cmp	r3, #0
   19c98:	f340 80d6 	ble.w	19e48 <_dtoa_r+0x590>
   19c9c:	4629      	mov	r1, r5
   19c9e:	4620      	mov	r0, r4
   19ca0:	2200      	movs	r2, #0
   19ca2:	4b81      	ldr	r3, [pc, #516]	; (19ea8 <_dtoa_r+0x5f0>)
   19ca4:	f7f7 fdba 	bl	1181c <__aeabi_dmul>
   19ca8:	f10b 36ff 	add.w	r6, r11, #4294967295
   19cac:	e9cd 0102 	strd	r0, r1, [sp, #8]
   19cb0:	3701      	adds	r7, #1
   19cb2:	9d06      	ldr	r5, [sp, #24]
   19cb4:	e001      	b.n	19cba <_dtoa_r+0x402>
   19cb6:	465e      	mov	r6, r11
   19cb8:	9d05      	ldr	r5, [sp, #20]
   19cba:	4638      	mov	r0, r7
   19cbc:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
   19cc0:	f7f7 fd46 	bl	11750 <__aeabi_i2d>
   19cc4:	4642      	mov	r2, r8
   19cc6:	464b      	mov	r3, r9
   19cc8:	f7f7 fda8 	bl	1181c <__aeabi_dmul>
   19ccc:	4b77      	ldr	r3, [pc, #476]	; (19eac <_dtoa_r+0x5f4>)
   19cce:	2200      	movs	r2, #0
   19cd0:	f7f7 fbf2 	bl	114b8 <__adddf3>
   19cd4:	e9cd 0102 	strd	r0, r1, [sp, #8]
   19cd8:	9b03      	ldr	r3, [sp, #12]
   19cda:	f1a3 7450 	sub.w	r4, r3, #54525952	; 0x3400000
   19cde:	9403      	str	r4, [sp, #12]
   19ce0:	b9cd      	cbnz	r5, 19d16 <_dtoa_r+0x45e>
   19ce2:	4640      	mov	r0, r8
   19ce4:	4649      	mov	r1, r9
   19ce6:	2200      	movs	r2, #0
   19ce8:	4b71      	ldr	r3, [pc, #452]	; (19eb0 <_dtoa_r+0x5f8>)
   19cea:	f7f7 fbe3 	bl	114b4 <__aeabi_dsub>
   19cee:	9a02      	ldr	r2, [sp, #8]
   19cf0:	4623      	mov	r3, r4
   19cf2:	4680      	mov	r8, r0
   19cf4:	4689      	mov	r9, r1
   19cf6:	f7f8 f821 	bl	11d3c <__aeabi_dcmpgt>
   19cfa:	2800      	cmp	r0, #0
   19cfc:	f040 8240 	bne.w	1a180 <_dtoa_r+0x8c8>
   19d00:	4640      	mov	r0, r8
   19d02:	4649      	mov	r1, r9
   19d04:	9a02      	ldr	r2, [sp, #8]
   19d06:	f104 4300 	add.w	r3, r4, #2147483648	; 0x80000000
   19d0a:	f7f7 fff9 	bl	11d00 <__aeabi_dcmplt>
   19d0e:	2800      	cmp	r0, #0
   19d10:	f040 8230 	bne.w	1a174 <_dtoa_r+0x8bc>
   19d14:	e098      	b.n	19e48 <_dtoa_r+0x590>
   19d16:	4b61      	ldr	r3, [pc, #388]	; (19e9c <_dtoa_r+0x5e4>)
   19d18:	990c      	ldr	r1, [sp, #48]	; 0x30
   19d1a:	1e6a      	subs	r2, r5, #1
   19d1c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   19d20:	2900      	cmp	r1, #0
   19d22:	d047      	beq.n	19db4 <_dtoa_r+0x4fc>
   19d24:	e9d3 2300 	ldrd	r2, r3, [r3]
   19d28:	2000      	movs	r0, #0
   19d2a:	4962      	ldr	r1, [pc, #392]	; (19eb4 <_dtoa_r+0x5fc>)
   19d2c:	f7f7 fea0 	bl	11a70 <__aeabi_ddiv>
   19d30:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   19d34:	f7f7 fbbe 	bl	114b4 <__aeabi_dsub>
   19d38:	e9cd 0102 	strd	r0, r1, [sp, #8]
   19d3c:	9c08      	ldr	r4, [sp, #32]
   19d3e:	4649      	mov	r1, r9
   19d40:	4640      	mov	r0, r8
   19d42:	f7f8 f805 	bl	11d50 <__aeabi_d2iz>
   19d46:	4607      	mov	r7, r0
   19d48:	f7f7 fd02 	bl	11750 <__aeabi_i2d>
   19d4c:	4602      	mov	r2, r0
   19d4e:	460b      	mov	r3, r1
   19d50:	4640      	mov	r0, r8
   19d52:	4649      	mov	r1, r9
   19d54:	f7f7 fbae 	bl	114b4 <__aeabi_dsub>
   19d58:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   19d5c:	3730      	adds	r7, #48	; 0x30
   19d5e:	f804 7b01 	strb.w	r7, [r4], #1
   19d62:	4680      	mov	r8, r0
   19d64:	4689      	mov	r9, r1
   19d66:	f7f7 ffcb 	bl	11d00 <__aeabi_dcmplt>
   19d6a:	2800      	cmp	r0, #0
   19d6c:	f040 8337 	bne.w	1a3de <_dtoa_r+0xb26>
   19d70:	4642      	mov	r2, r8
   19d72:	464b      	mov	r3, r9
   19d74:	2000      	movs	r0, #0
   19d76:	494b      	ldr	r1, [pc, #300]	; (19ea4 <_dtoa_r+0x5ec>)
   19d78:	f7f7 fb9c 	bl	114b4 <__aeabi_dsub>
   19d7c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   19d80:	f7f7 ffbe 	bl	11d00 <__aeabi_dcmplt>
   19d84:	2800      	cmp	r0, #0
   19d86:	f040 80d0 	bne.w	19f2a <_dtoa_r+0x672>
   19d8a:	9b08      	ldr	r3, [sp, #32]
   19d8c:	1ae3      	subs	r3, r4, r3
   19d8e:	42ab      	cmp	r3, r5
   19d90:	da5a      	bge.n	19e48 <_dtoa_r+0x590>
   19d92:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   19d96:	2200      	movs	r2, #0
   19d98:	4b43      	ldr	r3, [pc, #268]	; (19ea8 <_dtoa_r+0x5f0>)
   19d9a:	f7f7 fd3f 	bl	1181c <__aeabi_dmul>
   19d9e:	2200      	movs	r2, #0
   19da0:	e9cd 0102 	strd	r0, r1, [sp, #8]
   19da4:	4b40      	ldr	r3, [pc, #256]	; (19ea8 <_dtoa_r+0x5f0>)
   19da6:	4640      	mov	r0, r8
   19da8:	4649      	mov	r1, r9
   19daa:	f7f7 fd37 	bl	1181c <__aeabi_dmul>
   19dae:	4680      	mov	r8, r0
   19db0:	4689      	mov	r9, r1
   19db2:	e7c4      	b.n	19d3e <_dtoa_r+0x486>
   19db4:	e9d3 0100 	ldrd	r0, r1, [r3]
   19db8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   19dbc:	f7f7 fd2e 	bl	1181c <__aeabi_dmul>
   19dc0:	9b08      	ldr	r3, [sp, #32]
   19dc2:	e9cd 0102 	strd	r0, r1, [sp, #8]
   19dc6:	195c      	adds	r4, r3, r5
   19dc8:	461d      	mov	r5, r3
   19dca:	4649      	mov	r1, r9
   19dcc:	4640      	mov	r0, r8
   19dce:	f7f7 ffbf 	bl	11d50 <__aeabi_d2iz>
   19dd2:	4607      	mov	r7, r0
   19dd4:	f7f7 fcbc 	bl	11750 <__aeabi_i2d>
   19dd8:	4602      	mov	r2, r0
   19dda:	460b      	mov	r3, r1
   19ddc:	4640      	mov	r0, r8
   19dde:	4649      	mov	r1, r9
   19de0:	f7f7 fb68 	bl	114b4 <__aeabi_dsub>
   19de4:	3730      	adds	r7, #48	; 0x30
   19de6:	f805 7b01 	strb.w	r7, [r5], #1
   19dea:	42a5      	cmp	r5, r4
   19dec:	4680      	mov	r8, r0
   19dee:	4689      	mov	r9, r1
   19df0:	d123      	bne.n	19e3a <_dtoa_r+0x582>
   19df2:	2200      	movs	r2, #0
   19df4:	4b2f      	ldr	r3, [pc, #188]	; (19eb4 <_dtoa_r+0x5fc>)
   19df6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   19dfa:	f7f7 fb5d 	bl	114b8 <__adddf3>
   19dfe:	4602      	mov	r2, r0
   19e00:	460b      	mov	r3, r1
   19e02:	4640      	mov	r0, r8
   19e04:	4649      	mov	r1, r9
   19e06:	f7f7 ff99 	bl	11d3c <__aeabi_dcmpgt>
   19e0a:	2800      	cmp	r0, #0
   19e0c:	f040 808d 	bne.w	19f2a <_dtoa_r+0x672>
   19e10:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   19e14:	2000      	movs	r0, #0
   19e16:	4927      	ldr	r1, [pc, #156]	; (19eb4 <_dtoa_r+0x5fc>)
   19e18:	f7f7 fb4c 	bl	114b4 <__aeabi_dsub>
   19e1c:	4602      	mov	r2, r0
   19e1e:	460b      	mov	r3, r1
   19e20:	4640      	mov	r0, r8
   19e22:	4649      	mov	r1, r9
   19e24:	f7f7 ff6c 	bl	11d00 <__aeabi_dcmplt>
   19e28:	b170      	cbz	r0, 19e48 <_dtoa_r+0x590>
   19e2a:	f814 3c01 	ldrb.w	r3, [r4, #-1]
   19e2e:	1e62      	subs	r2, r4, #1
   19e30:	2b30      	cmp	r3, #48	; 0x30
   19e32:	f040 82d4 	bne.w	1a3de <_dtoa_r+0xb26>
   19e36:	4614      	mov	r4, r2
   19e38:	e7f7      	b.n	19e2a <_dtoa_r+0x572>
   19e3a:	2200      	movs	r2, #0
   19e3c:	4b1a      	ldr	r3, [pc, #104]	; (19ea8 <_dtoa_r+0x5f0>)
   19e3e:	f7f7 fced 	bl	1181c <__aeabi_dmul>
   19e42:	4680      	mov	r8, r0
   19e44:	4689      	mov	r9, r1
   19e46:	e7c0      	b.n	19dca <_dtoa_r+0x512>
   19e48:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   19e4c:	e9cd 2302 	strd	r2, r3, [sp, #8]
   19e50:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   19e52:	2b00      	cmp	r3, #0
   19e54:	f2c0 808a 	blt.w	19f6c <_dtoa_r+0x6b4>
   19e58:	f1bb 0f0e 	cmp.w	r11, #14
   19e5c:	f300 8086 	bgt.w	19f6c <_dtoa_r+0x6b4>
   19e60:	4b0e      	ldr	r3, [pc, #56]	; (19e9c <_dtoa_r+0x5e4>)
   19e62:	eb03 03cb 	add.w	r3, r3, r11, lsl #3
   19e66:	e9d3 6700 	ldrd	r6, r7, [r3]
   19e6a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   19e6c:	2b00      	cmp	r3, #0
   19e6e:	da23      	bge.n	19eb8 <_dtoa_r+0x600>
   19e70:	9b05      	ldr	r3, [sp, #20]
   19e72:	2b00      	cmp	r3, #0
   19e74:	dc20      	bgt.n	19eb8 <_dtoa_r+0x600>
   19e76:	f040 817c 	bne.w	1a172 <_dtoa_r+0x8ba>
   19e7a:	4630      	mov	r0, r6
   19e7c:	2200      	movs	r2, #0
   19e7e:	4b0c      	ldr	r3, [pc, #48]	; (19eb0 <_dtoa_r+0x5f8>)
   19e80:	4639      	mov	r1, r7
   19e82:	f7f7 fccb 	bl	1181c <__aeabi_dmul>
   19e86:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   19e8a:	f7f7 ff4d 	bl	11d28 <__aeabi_dcmpge>
   19e8e:	9d05      	ldr	r5, [sp, #20]
   19e90:	462e      	mov	r6, r5
   19e92:	2800      	cmp	r0, #0
   19e94:	f040 816f 	bne.w	1a176 <_dtoa_r+0x8be>
   19e98:	e174      	b.n	1a184 <_dtoa_r+0x8cc>
   19e9a:	bf00      	nop
   19e9c:	0001cac8 	.word	0x0001cac8
   19ea0:	0001cb90 	.word	0x0001cb90
   19ea4:	3ff00000 	.word	0x3ff00000
   19ea8:	40240000 	.word	0x40240000
   19eac:	401c0000 	.word	0x401c0000
   19eb0:	40140000 	.word	0x40140000
   19eb4:	3fe00000 	.word	0x3fe00000
   19eb8:	9c08      	ldr	r4, [sp, #32]
   19eba:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
   19ebe:	4632      	mov	r2, r6
   19ec0:	463b      	mov	r3, r7
   19ec2:	4640      	mov	r0, r8
   19ec4:	4649      	mov	r1, r9
   19ec6:	f7f7 fdd3 	bl	11a70 <__aeabi_ddiv>
   19eca:	f7f7 ff41 	bl	11d50 <__aeabi_d2iz>
   19ece:	4605      	mov	r5, r0
   19ed0:	f7f7 fc3e 	bl	11750 <__aeabi_i2d>
   19ed4:	4632      	mov	r2, r6
   19ed6:	463b      	mov	r3, r7
   19ed8:	f7f7 fca0 	bl	1181c <__aeabi_dmul>
   19edc:	460b      	mov	r3, r1
   19ede:	4602      	mov	r2, r0
   19ee0:	4649      	mov	r1, r9
   19ee2:	4640      	mov	r0, r8
   19ee4:	f7f7 fae6 	bl	114b4 <__aeabi_dsub>
   19ee8:	f105 0e30 	add.w	lr, r5, #48	; 0x30
   19eec:	9b08      	ldr	r3, [sp, #32]
   19eee:	f804 eb01 	strb.w	lr, [r4], #1
   19ef2:	ebc3 0e04 	rsb	lr, r3, r4
   19ef6:	9b05      	ldr	r3, [sp, #20]
   19ef8:	459e      	cmp	lr, r3
   19efa:	d12a      	bne.n	19f52 <_dtoa_r+0x69a>
   19efc:	4602      	mov	r2, r0
   19efe:	460b      	mov	r3, r1
   19f00:	f7f7 fada 	bl	114b8 <__adddf3>
   19f04:	4632      	mov	r2, r6
   19f06:	463b      	mov	r3, r7
   19f08:	4680      	mov	r8, r0
   19f0a:	4689      	mov	r9, r1
   19f0c:	f7f7 ff16 	bl	11d3c <__aeabi_dcmpgt>
   19f10:	b970      	cbnz	r0, 19f30 <_dtoa_r+0x678>
   19f12:	4640      	mov	r0, r8
   19f14:	4649      	mov	r1, r9
   19f16:	4632      	mov	r2, r6
   19f18:	463b      	mov	r3, r7
   19f1a:	f7f7 fee7 	bl	11cec <__aeabi_dcmpeq>
   19f1e:	2800      	cmp	r0, #0
   19f20:	f000 825e 	beq.w	1a3e0 <_dtoa_r+0xb28>
   19f24:	07eb      	lsls	r3, r5, #31
   19f26:	d403      	bmi.n	19f30 <_dtoa_r+0x678>
   19f28:	e25a      	b.n	1a3e0 <_dtoa_r+0xb28>
   19f2a:	46b3      	mov	r11, r6
   19f2c:	e000      	b.n	19f30 <_dtoa_r+0x678>
   19f2e:	461c      	mov	r4, r3
   19f30:	f814 2c01 	ldrb.w	r2, [r4, #-1]
   19f34:	1e63      	subs	r3, r4, #1
   19f36:	2a39      	cmp	r2, #57	; 0x39
   19f38:	d107      	bne.n	19f4a <_dtoa_r+0x692>
   19f3a:	9a08      	ldr	r2, [sp, #32]
   19f3c:	4293      	cmp	r3, r2
   19f3e:	d1f6      	bne.n	19f2e <_dtoa_r+0x676>
   19f40:	2330      	movs	r3, #48	; 0x30
   19f42:	7013      	strb	r3, [r2, #0]
   19f44:	4613      	mov	r3, r2
   19f46:	f10b 0b01 	add.w	r11, r11, #1
   19f4a:	781a      	ldrb	r2, [r3, #0]
   19f4c:	3201      	adds	r2, #1
   19f4e:	701a      	strb	r2, [r3, #0]
   19f50:	e246      	b.n	1a3e0 <_dtoa_r+0xb28>
   19f52:	2200      	movs	r2, #0
   19f54:	4ba3      	ldr	r3, [pc, #652]	; (1a1e4 <_dtoa_r+0x92c>)
   19f56:	f7f7 fc61 	bl	1181c <__aeabi_dmul>
   19f5a:	2200      	movs	r2, #0
   19f5c:	2300      	movs	r3, #0
   19f5e:	4680      	mov	r8, r0
   19f60:	4689      	mov	r9, r1
   19f62:	f7f7 fec3 	bl	11cec <__aeabi_dcmpeq>
   19f66:	2800      	cmp	r0, #0
   19f68:	d0a9      	beq.n	19ebe <_dtoa_r+0x606>
   19f6a:	e239      	b.n	1a3e0 <_dtoa_r+0xb28>
   19f6c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   19f6e:	2a00      	cmp	r2, #0
   19f70:	d032      	beq.n	19fd8 <_dtoa_r+0x720>
   19f72:	9a1e      	ldr	r2, [sp, #120]	; 0x78
   19f74:	2a01      	cmp	r2, #1
   19f76:	dc0a      	bgt.n	19f8e <_dtoa_r+0x6d6>
   19f78:	9a11      	ldr	r2, [sp, #68]	; 0x44
   19f7a:	b112      	cbz	r2, 19f82 <_dtoa_r+0x6ca>
   19f7c:	f203 4333 	addw	r3, r3, #1075	; 0x433
   19f80:	e002      	b.n	19f88 <_dtoa_r+0x6d0>
   19f82:	9b12      	ldr	r3, [sp, #72]	; 0x48
   19f84:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   19f88:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   19f8a:	9c09      	ldr	r4, [sp, #36]	; 0x24
   19f8c:	e018      	b.n	19fc0 <_dtoa_r+0x708>
   19f8e:	9b05      	ldr	r3, [sp, #20]
   19f90:	1e5d      	subs	r5, r3, #1
   19f92:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   19f94:	42ab      	cmp	r3, r5
   19f96:	bfb7      	itett	lt
   19f98:	9b0b      	ldrlt	r3, [sp, #44]	; 0x2c
   19f9a:	1b5d      	subge	r5, r3, r5
   19f9c:	1aea      	sublt	r2, r5, r3
   19f9e:	9b0d      	ldrlt	r3, [sp, #52]	; 0x34
   19fa0:	bfbe      	ittt	lt
   19fa2:	950b      	strlt	r5, [sp, #44]	; 0x2c
   19fa4:	189b      	addlt	r3, r3, r2
   19fa6:	930d      	strlt	r3, [sp, #52]	; 0x34
   19fa8:	9b05      	ldr	r3, [sp, #20]
   19faa:	bfb8      	it	lt
   19fac:	2500      	movlt	r5, #0
   19fae:	2b00      	cmp	r3, #0
   19fb0:	bfb9      	ittee	lt
   19fb2:	9b09      	ldrlt	r3, [sp, #36]	; 0x24
   19fb4:	9a05      	ldrlt	r2, [sp, #20]
   19fb6:	9c09      	ldrge	r4, [sp, #36]	; 0x24
   19fb8:	9b05      	ldrge	r3, [sp, #20]
   19fba:	bfbc      	itt	lt
   19fbc:	1a9c      	sublt	r4, r3, r2
   19fbe:	2300      	movlt	r3, #0
   19fc0:	9a09      	ldr	r2, [sp, #36]	; 0x24
   19fc2:	4650      	mov	r0, r10
   19fc4:	441a      	add	r2, r3
   19fc6:	9209      	str	r2, [sp, #36]	; 0x24
   19fc8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   19fca:	2101      	movs	r1, #1
   19fcc:	441a      	add	r2, r3
   19fce:	920a      	str	r2, [sp, #40]	; 0x28
   19fd0:	f7fd ff11 	bl	17df6 <__i2b>
   19fd4:	4606      	mov	r6, r0
   19fd6:	e002      	b.n	19fde <_dtoa_r+0x726>
   19fd8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   19fda:	9c09      	ldr	r4, [sp, #36]	; 0x24
   19fdc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   19fde:	b164      	cbz	r4, 19ffa <_dtoa_r+0x742>
   19fe0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   19fe2:	2b00      	cmp	r3, #0
   19fe4:	dd09      	ble.n	19ffa <_dtoa_r+0x742>
   19fe6:	42a3      	cmp	r3, r4
   19fe8:	bfa8      	it	ge
   19fea:	4623      	movge	r3, r4
   19fec:	9a09      	ldr	r2, [sp, #36]	; 0x24
   19fee:	1ae4      	subs	r4, r4, r3
   19ff0:	1ad2      	subs	r2, r2, r3
   19ff2:	9209      	str	r2, [sp, #36]	; 0x24
   19ff4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   19ff6:	1ad3      	subs	r3, r2, r3
   19ff8:	930a      	str	r3, [sp, #40]	; 0x28
   19ffa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   19ffc:	2b00      	cmp	r3, #0
   19ffe:	dd20      	ble.n	1a042 <_dtoa_r+0x78a>
   1a000:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1a002:	b1c3      	cbz	r3, 1a036 <_dtoa_r+0x77e>
   1a004:	2d00      	cmp	r5, #0
   1a006:	dd10      	ble.n	1a02a <_dtoa_r+0x772>
   1a008:	4631      	mov	r1, r6
   1a00a:	462a      	mov	r2, r5
   1a00c:	4650      	mov	r0, r10
   1a00e:	f7fd ff8b 	bl	17f28 <__pow5mult>
   1a012:	4606      	mov	r6, r0
   1a014:	9a07      	ldr	r2, [sp, #28]
   1a016:	4631      	mov	r1, r6
   1a018:	4650      	mov	r0, r10
   1a01a:	f7fd fef5 	bl	17e08 <__multiply>
   1a01e:	4607      	mov	r7, r0
   1a020:	9907      	ldr	r1, [sp, #28]
   1a022:	4650      	mov	r0, r10
   1a024:	f7fd fe05 	bl	17c32 <_Bfree>
   1a028:	9707      	str	r7, [sp, #28]
   1a02a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1a02c:	1b5a      	subs	r2, r3, r5
   1a02e:	d008      	beq.n	1a042 <_dtoa_r+0x78a>
   1a030:	4650      	mov	r0, r10
   1a032:	9907      	ldr	r1, [sp, #28]
   1a034:	e002      	b.n	1a03c <_dtoa_r+0x784>
   1a036:	4650      	mov	r0, r10
   1a038:	9907      	ldr	r1, [sp, #28]
   1a03a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   1a03c:	f7fd ff74 	bl	17f28 <__pow5mult>
   1a040:	9007      	str	r0, [sp, #28]
   1a042:	4650      	mov	r0, r10
   1a044:	2101      	movs	r1, #1
   1a046:	f7fd fed6 	bl	17df6 <__i2b>
   1a04a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1a04c:	4605      	mov	r5, r0
   1a04e:	2b00      	cmp	r3, #0
   1a050:	dd0a      	ble.n	1a068 <_dtoa_r+0x7b0>
   1a052:	4629      	mov	r1, r5
   1a054:	461a      	mov	r2, r3
   1a056:	4650      	mov	r0, r10
   1a058:	f7fd ff66 	bl	17f28 <__pow5mult>
   1a05c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1a05e:	4605      	mov	r5, r0
   1a060:	2b01      	cmp	r3, #1
   1a062:	dd04      	ble.n	1a06e <_dtoa_r+0x7b6>
   1a064:	2700      	movs	r7, #0
   1a066:	e01b      	b.n	1a0a0 <_dtoa_r+0x7e8>
   1a068:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1a06a:	2b01      	cmp	r3, #1
   1a06c:	dc13      	bgt.n	1a096 <_dtoa_r+0x7de>
   1a06e:	9b02      	ldr	r3, [sp, #8]
   1a070:	b98b      	cbnz	r3, 1a096 <_dtoa_r+0x7de>
   1a072:	9b03      	ldr	r3, [sp, #12]
   1a074:	f3c3 0313 	ubfx	r3, r3, #0, #20
   1a078:	b97b      	cbnz	r3, 1a09a <_dtoa_r+0x7e2>
   1a07a:	9b03      	ldr	r3, [sp, #12]
   1a07c:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
   1a080:	0d3f      	lsrs	r7, r7, #20
   1a082:	053f      	lsls	r7, r7, #20
   1a084:	b157      	cbz	r7, 1a09c <_dtoa_r+0x7e4>
   1a086:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1a088:	2701      	movs	r7, #1
   1a08a:	3301      	adds	r3, #1
   1a08c:	9309      	str	r3, [sp, #36]	; 0x24
   1a08e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a090:	3301      	adds	r3, #1
   1a092:	930a      	str	r3, [sp, #40]	; 0x28
   1a094:	e002      	b.n	1a09c <_dtoa_r+0x7e4>
   1a096:	2700      	movs	r7, #0
   1a098:	e000      	b.n	1a09c <_dtoa_r+0x7e4>
   1a09a:	9f02      	ldr	r7, [sp, #8]
   1a09c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   1a09e:	b143      	cbz	r3, 1a0b2 <_dtoa_r+0x7fa>
   1a0a0:	692b      	ldr	r3, [r5, #16]
   1a0a2:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   1a0a6:	6918      	ldr	r0, [r3, #16]
   1a0a8:	f7fd fe58 	bl	17d5c <__hi0bits>
   1a0ac:	f1c0 0020 	rsb	r0, r0, #32
   1a0b0:	e000      	b.n	1a0b4 <_dtoa_r+0x7fc>
   1a0b2:	2001      	movs	r0, #1
   1a0b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a0b6:	4418      	add	r0, r3
   1a0b8:	f010 001f 	ands.w	r0, r0, #31
   1a0bc:	d008      	beq.n	1a0d0 <_dtoa_r+0x818>
   1a0be:	f1c0 0320 	rsb	r3, r0, #32
   1a0c2:	2b04      	cmp	r3, #4
   1a0c4:	dd02      	ble.n	1a0cc <_dtoa_r+0x814>
   1a0c6:	f1c0 001c 	rsb	r0, r0, #28
   1a0ca:	e002      	b.n	1a0d2 <_dtoa_r+0x81a>
   1a0cc:	d008      	beq.n	1a0e0 <_dtoa_r+0x828>
   1a0ce:	4618      	mov	r0, r3
   1a0d0:	301c      	adds	r0, #28
   1a0d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1a0d4:	4404      	add	r4, r0
   1a0d6:	4403      	add	r3, r0
   1a0d8:	9309      	str	r3, [sp, #36]	; 0x24
   1a0da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a0dc:	4403      	add	r3, r0
   1a0de:	930a      	str	r3, [sp, #40]	; 0x28
   1a0e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   1a0e2:	2b00      	cmp	r3, #0
   1a0e4:	dd05      	ble.n	1a0f2 <_dtoa_r+0x83a>
   1a0e6:	4650      	mov	r0, r10
   1a0e8:	9907      	ldr	r1, [sp, #28]
   1a0ea:	461a      	mov	r2, r3
   1a0ec:	f7fd ff6a 	bl	17fc4 <__lshift>
   1a0f0:	9007      	str	r0, [sp, #28]
   1a0f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   1a0f4:	2b00      	cmp	r3, #0
   1a0f6:	dd05      	ble.n	1a104 <_dtoa_r+0x84c>
   1a0f8:	4629      	mov	r1, r5
   1a0fa:	4650      	mov	r0, r10
   1a0fc:	461a      	mov	r2, r3
   1a0fe:	f7fd ff61 	bl	17fc4 <__lshift>
   1a102:	4605      	mov	r5, r0
   1a104:	9b10      	ldr	r3, [sp, #64]	; 0x40
   1a106:	b1eb      	cbz	r3, 1a144 <_dtoa_r+0x88c>
   1a108:	9807      	ldr	r0, [sp, #28]
   1a10a:	4629      	mov	r1, r5
   1a10c:	f7fd ffad 	bl	1806a <__mcmp>
   1a110:	2800      	cmp	r0, #0
   1a112:	da17      	bge.n	1a144 <_dtoa_r+0x88c>
   1a114:	2300      	movs	r3, #0
   1a116:	4650      	mov	r0, r10
   1a118:	9907      	ldr	r1, [sp, #28]
   1a11a:	220a      	movs	r2, #10
   1a11c:	f7fd fda0 	bl	17c60 <__multadd>
   1a120:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1a122:	f10b 3bff 	add.w	r11, r11, #4294967295
   1a126:	9007      	str	r0, [sp, #28]
   1a128:	2b00      	cmp	r3, #0
   1a12a:	f000 816b 	beq.w	1a404 <_dtoa_r+0xb4c>
   1a12e:	4631      	mov	r1, r6
   1a130:	2300      	movs	r3, #0
   1a132:	4650      	mov	r0, r10
   1a134:	220a      	movs	r2, #10
   1a136:	f7fd fd93 	bl	17c60 <__multadd>
   1a13a:	9b06      	ldr	r3, [sp, #24]
   1a13c:	4606      	mov	r6, r0
   1a13e:	2b00      	cmp	r3, #0
   1a140:	dc33      	bgt.n	1a1aa <_dtoa_r+0x8f2>
   1a142:	e168      	b.n	1a416 <_dtoa_r+0xb5e>
   1a144:	9b05      	ldr	r3, [sp, #20]
   1a146:	2b00      	cmp	r3, #0
   1a148:	dc26      	bgt.n	1a198 <_dtoa_r+0x8e0>
   1a14a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1a14c:	2b02      	cmp	r3, #2
   1a14e:	dd23      	ble.n	1a198 <_dtoa_r+0x8e0>
   1a150:	9b05      	ldr	r3, [sp, #20]
   1a152:	9306      	str	r3, [sp, #24]
   1a154:	9b06      	ldr	r3, [sp, #24]
   1a156:	b973      	cbnz	r3, 1a176 <_dtoa_r+0x8be>
   1a158:	4629      	mov	r1, r5
   1a15a:	2205      	movs	r2, #5
   1a15c:	4650      	mov	r0, r10
   1a15e:	f7fd fd7f 	bl	17c60 <__multadd>
   1a162:	4605      	mov	r5, r0
   1a164:	9807      	ldr	r0, [sp, #28]
   1a166:	4629      	mov	r1, r5
   1a168:	f7fd ff7f 	bl	1806a <__mcmp>
   1a16c:	2800      	cmp	r0, #0
   1a16e:	dc09      	bgt.n	1a184 <_dtoa_r+0x8cc>
   1a170:	e001      	b.n	1a176 <_dtoa_r+0x8be>
   1a172:	2500      	movs	r5, #0
   1a174:	462e      	mov	r6, r5
   1a176:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   1a178:	9c08      	ldr	r4, [sp, #32]
   1a17a:	ea6f 0b03 	mvn.w	r11, r3
   1a17e:	e008      	b.n	1a192 <_dtoa_r+0x8da>
   1a180:	46b3      	mov	r11, r6
   1a182:	462e      	mov	r6, r5
   1a184:	9b08      	ldr	r3, [sp, #32]
   1a186:	9a08      	ldr	r2, [sp, #32]
   1a188:	1c5c      	adds	r4, r3, #1
   1a18a:	2331      	movs	r3, #49	; 0x31
   1a18c:	7013      	strb	r3, [r2, #0]
   1a18e:	f10b 0b01 	add.w	r11, r11, #1
   1a192:	46b1      	mov	r9, r6
   1a194:	2600      	movs	r6, #0
   1a196:	e10f      	b.n	1a3b8 <_dtoa_r+0xb00>
   1a198:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   1a19a:	b923      	cbnz	r3, 1a1a6 <_dtoa_r+0x8ee>
   1a19c:	9b05      	ldr	r3, [sp, #20]
   1a19e:	9306      	str	r3, [sp, #24]
   1a1a0:	9f08      	ldr	r7, [sp, #32]
   1a1a2:	9c07      	ldr	r4, [sp, #28]
   1a1a4:	e0c9      	b.n	1a33a <_dtoa_r+0xa82>
   1a1a6:	9b05      	ldr	r3, [sp, #20]
   1a1a8:	9306      	str	r3, [sp, #24]
   1a1aa:	2c00      	cmp	r4, #0
   1a1ac:	dd05      	ble.n	1a1ba <_dtoa_r+0x902>
   1a1ae:	4631      	mov	r1, r6
   1a1b0:	4650      	mov	r0, r10
   1a1b2:	4622      	mov	r2, r4
   1a1b4:	f7fd ff06 	bl	17fc4 <__lshift>
   1a1b8:	4606      	mov	r6, r0
   1a1ba:	b1af      	cbz	r7, 1a1e8 <_dtoa_r+0x930>
   1a1bc:	6871      	ldr	r1, [r6, #4]
   1a1be:	4650      	mov	r0, r10
   1a1c0:	f7fd fd02 	bl	17bc8 <_Balloc>
   1a1c4:	4604      	mov	r4, r0
   1a1c6:	6932      	ldr	r2, [r6, #16]
   1a1c8:	f106 010c 	add.w	r1, r6, #12
   1a1cc:	3202      	adds	r2, #2
   1a1ce:	0092      	lsls	r2, r2, #2
   1a1d0:	300c      	adds	r0, #12
   1a1d2:	f7f9 fa5b 	bl	1368c <memcpy>
   1a1d6:	4650      	mov	r0, r10
   1a1d8:	4621      	mov	r1, r4
   1a1da:	2201      	movs	r2, #1
   1a1dc:	f7fd fef2 	bl	17fc4 <__lshift>
   1a1e0:	4681      	mov	r9, r0
   1a1e2:	e002      	b.n	1a1ea <_dtoa_r+0x932>
   1a1e4:	40240000 	.word	0x40240000
   1a1e8:	46b1      	mov	r9, r6
   1a1ea:	9f08      	ldr	r7, [sp, #32]
   1a1ec:	9c07      	ldr	r4, [sp, #28]
   1a1ee:	4629      	mov	r1, r5
   1a1f0:	4620      	mov	r0, r4
   1a1f2:	f7ff fad7 	bl	197a4 <quorem>
   1a1f6:	4631      	mov	r1, r6
   1a1f8:	9009      	str	r0, [sp, #36]	; 0x24
   1a1fa:	f100 0830 	add.w	r8, r0, #48	; 0x30
   1a1fe:	4620      	mov	r0, r4
   1a200:	f7fd ff33 	bl	1806a <__mcmp>
   1a204:	464a      	mov	r2, r9
   1a206:	9005      	str	r0, [sp, #20]
   1a208:	4629      	mov	r1, r5
   1a20a:	4650      	mov	r0, r10
   1a20c:	f7fd ff49 	bl	180a2 <__mdiff>
   1a210:	68c2      	ldr	r2, [r0, #12]
   1a212:	4603      	mov	r3, r0
   1a214:	b93a      	cbnz	r2, 1a226 <_dtoa_r+0x96e>
   1a216:	4619      	mov	r1, r3
   1a218:	4620      	mov	r0, r4
   1a21a:	9307      	str	r3, [sp, #28]
   1a21c:	f7fd ff25 	bl	1806a <__mcmp>
   1a220:	9b07      	ldr	r3, [sp, #28]
   1a222:	4602      	mov	r2, r0
   1a224:	e000      	b.n	1a228 <_dtoa_r+0x970>
   1a226:	2201      	movs	r2, #1
   1a228:	4650      	mov	r0, r10
   1a22a:	4619      	mov	r1, r3
   1a22c:	9207      	str	r2, [sp, #28]
   1a22e:	f7fd fd00 	bl	17c32 <_Bfree>
   1a232:	9a07      	ldr	r2, [sp, #28]
   1a234:	b992      	cbnz	r2, 1a25c <_dtoa_r+0x9a4>
   1a236:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1a238:	b983      	cbnz	r3, 1a25c <_dtoa_r+0x9a4>
   1a23a:	9b02      	ldr	r3, [sp, #8]
   1a23c:	f003 0301 	and.w	r3, r3, #1
   1a240:	b963      	cbnz	r3, 1a25c <_dtoa_r+0x9a4>
   1a242:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   1a246:	463b      	mov	r3, r7
   1a248:	9407      	str	r4, [sp, #28]
   1a24a:	d03e      	beq.n	1a2ca <_dtoa_r+0xa12>
   1a24c:	9b05      	ldr	r3, [sp, #20]
   1a24e:	1c7c      	adds	r4, r7, #1
   1a250:	2b00      	cmp	r3, #0
   1a252:	bfc4      	itt	gt
   1a254:	9b09      	ldrgt	r3, [sp, #36]	; 0x24
   1a256:	f103 0831 	addgt.w	r8, r3, #49	; 0x31
   1a25a:	e03d      	b.n	1a2d8 <_dtoa_r+0xa20>
   1a25c:	9b05      	ldr	r3, [sp, #20]
   1a25e:	2b00      	cmp	r3, #0
   1a260:	da04      	bge.n	1a26c <_dtoa_r+0x9b4>
   1a262:	2a00      	cmp	r2, #0
   1a264:	46c4      	mov	r12, r8
   1a266:	9407      	str	r4, [sp, #28]
   1a268:	dc08      	bgt.n	1a27c <_dtoa_r+0x9c4>
   1a26a:	e021      	b.n	1a2b0 <_dtoa_r+0x9f8>
   1a26c:	d124      	bne.n	1a2b8 <_dtoa_r+0xa00>
   1a26e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1a270:	bb13      	cbnz	r3, 1a2b8 <_dtoa_r+0xa00>
   1a272:	9b02      	ldr	r3, [sp, #8]
   1a274:	f003 0301 	and.w	r3, r3, #1
   1a278:	b9f3      	cbnz	r3, 1a2b8 <_dtoa_r+0xa00>
   1a27a:	e7f2      	b.n	1a262 <_dtoa_r+0x9aa>
   1a27c:	4621      	mov	r1, r4
   1a27e:	2201      	movs	r2, #1
   1a280:	4650      	mov	r0, r10
   1a282:	9705      	str	r7, [sp, #20]
   1a284:	f8cd 8008 	str.w	r8, [sp, #8]
   1a288:	f7fd fe9c 	bl	17fc4 <__lshift>
   1a28c:	4629      	mov	r1, r5
   1a28e:	9007      	str	r0, [sp, #28]
   1a290:	f7fd feeb 	bl	1806a <__mcmp>
   1a294:	2800      	cmp	r0, #0
   1a296:	f8dd c008 	ldr.w	r12, [sp, #8]
   1a29a:	9b05      	ldr	r3, [sp, #20]
   1a29c:	dc03      	bgt.n	1a2a6 <_dtoa_r+0x9ee>
   1a29e:	d107      	bne.n	1a2b0 <_dtoa_r+0x9f8>
   1a2a0:	f018 0f01 	tst.w	r8, #1
   1a2a4:	d004      	beq.n	1a2b0 <_dtoa_r+0x9f8>
   1a2a6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   1a2aa:	d00e      	beq.n	1a2ca <_dtoa_r+0xa12>
   1a2ac:	f108 0c01 	add.w	r12, r8, #1
   1a2b0:	1c7c      	adds	r4, r7, #1
   1a2b2:	f887 c000 	strb.w	r12, [r7]
   1a2b6:	e07f      	b.n	1a3b8 <_dtoa_r+0xb00>
   1a2b8:	2a00      	cmp	r2, #0
   1a2ba:	f107 0201 	add.w	r2, r7, #1
   1a2be:	dd0e      	ble.n	1a2de <_dtoa_r+0xa26>
   1a2c0:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   1a2c4:	463b      	mov	r3, r7
   1a2c6:	9407      	str	r4, [sp, #28]
   1a2c8:	d103      	bne.n	1a2d2 <_dtoa_r+0xa1a>
   1a2ca:	2239      	movs	r2, #57	; 0x39
   1a2cc:	3701      	adds	r7, #1
   1a2ce:	701a      	strb	r2, [r3, #0]
   1a2d0:	e057      	b.n	1a382 <_dtoa_r+0xaca>
   1a2d2:	4614      	mov	r4, r2
   1a2d4:	f108 0801 	add.w	r8, r8, #1
   1a2d8:	f887 8000 	strb.w	r8, [r7]
   1a2dc:	e06c      	b.n	1a3b8 <_dtoa_r+0xb00>
   1a2de:	9b08      	ldr	r3, [sp, #32]
   1a2e0:	4617      	mov	r7, r2
   1a2e2:	1ad3      	subs	r3, r2, r3
   1a2e4:	f802 8c01 	strb.w	r8, [r2, #-1]
   1a2e8:	9a06      	ldr	r2, [sp, #24]
   1a2ea:	4293      	cmp	r3, r2
   1a2ec:	d03a      	beq.n	1a364 <_dtoa_r+0xaac>
   1a2ee:	4621      	mov	r1, r4
   1a2f0:	220a      	movs	r2, #10
   1a2f2:	2300      	movs	r3, #0
   1a2f4:	4650      	mov	r0, r10
   1a2f6:	f7fd fcb3 	bl	17c60 <__multadd>
   1a2fa:	454e      	cmp	r6, r9
   1a2fc:	4604      	mov	r4, r0
   1a2fe:	4631      	mov	r1, r6
   1a300:	4650      	mov	r0, r10
   1a302:	f04f 020a 	mov.w	r2, #10
   1a306:	f04f 0300 	mov.w	r3, #0
   1a30a:	d104      	bne.n	1a316 <_dtoa_r+0xa5e>
   1a30c:	f7fd fca8 	bl	17c60 <__multadd>
   1a310:	4606      	mov	r6, r0
   1a312:	4681      	mov	r9, r0
   1a314:	e76b      	b.n	1a1ee <_dtoa_r+0x936>
   1a316:	f7fd fca3 	bl	17c60 <__multadd>
   1a31a:	4649      	mov	r1, r9
   1a31c:	4606      	mov	r6, r0
   1a31e:	220a      	movs	r2, #10
   1a320:	4650      	mov	r0, r10
   1a322:	2300      	movs	r3, #0
   1a324:	f7fd fc9c 	bl	17c60 <__multadd>
   1a328:	4681      	mov	r9, r0
   1a32a:	e760      	b.n	1a1ee <_dtoa_r+0x936>
   1a32c:	4621      	mov	r1, r4
   1a32e:	4650      	mov	r0, r10
   1a330:	220a      	movs	r2, #10
   1a332:	2300      	movs	r3, #0
   1a334:	f7fd fc94 	bl	17c60 <__multadd>
   1a338:	4604      	mov	r4, r0
   1a33a:	4620      	mov	r0, r4
   1a33c:	4629      	mov	r1, r5
   1a33e:	f7ff fa31 	bl	197a4 <quorem>
   1a342:	9b08      	ldr	r3, [sp, #32]
   1a344:	f100 0830 	add.w	r8, r0, #48	; 0x30
   1a348:	f807 8b01 	strb.w	r8, [r7], #1
   1a34c:	9a06      	ldr	r2, [sp, #24]
   1a34e:	1afb      	subs	r3, r7, r3
   1a350:	4293      	cmp	r3, r2
   1a352:	dbeb      	blt.n	1a32c <_dtoa_r+0xa74>
   1a354:	9b08      	ldr	r3, [sp, #32]
   1a356:	46b1      	mov	r9, r6
   1a358:	2a01      	cmp	r2, #1
   1a35a:	bfac      	ite	ge
   1a35c:	189b      	addge	r3, r3, r2
   1a35e:	3301      	addlt	r3, #1
   1a360:	461f      	mov	r7, r3
   1a362:	2600      	movs	r6, #0
   1a364:	4621      	mov	r1, r4
   1a366:	2201      	movs	r2, #1
   1a368:	4650      	mov	r0, r10
   1a36a:	f7fd fe2b 	bl	17fc4 <__lshift>
   1a36e:	4629      	mov	r1, r5
   1a370:	9007      	str	r0, [sp, #28]
   1a372:	f7fd fe7a 	bl	1806a <__mcmp>
   1a376:	2800      	cmp	r0, #0
   1a378:	dc03      	bgt.n	1a382 <_dtoa_r+0xaca>
   1a37a:	d115      	bne.n	1a3a8 <_dtoa_r+0xaf0>
   1a37c:	f018 0f01 	tst.w	r8, #1
   1a380:	d012      	beq.n	1a3a8 <_dtoa_r+0xaf0>
   1a382:	463c      	mov	r4, r7
   1a384:	f814 3c01 	ldrb.w	r3, [r4, #-1]
   1a388:	1e62      	subs	r2, r4, #1
   1a38a:	2b39      	cmp	r3, #57	; 0x39
   1a38c:	d109      	bne.n	1a3a2 <_dtoa_r+0xaea>
   1a38e:	9b08      	ldr	r3, [sp, #32]
   1a390:	429a      	cmp	r2, r3
   1a392:	d104      	bne.n	1a39e <_dtoa_r+0xae6>
   1a394:	f10b 0b01 	add.w	r11, r11, #1
   1a398:	2331      	movs	r3, #49	; 0x31
   1a39a:	9a08      	ldr	r2, [sp, #32]
   1a39c:	e002      	b.n	1a3a4 <_dtoa_r+0xaec>
   1a39e:	4614      	mov	r4, r2
   1a3a0:	e7f0      	b.n	1a384 <_dtoa_r+0xacc>
   1a3a2:	3301      	adds	r3, #1
   1a3a4:	7013      	strb	r3, [r2, #0]
   1a3a6:	e007      	b.n	1a3b8 <_dtoa_r+0xb00>
   1a3a8:	463c      	mov	r4, r7
   1a3aa:	f814 3c01 	ldrb.w	r3, [r4, #-1]
   1a3ae:	1e62      	subs	r2, r4, #1
   1a3b0:	2b30      	cmp	r3, #48	; 0x30
   1a3b2:	d101      	bne.n	1a3b8 <_dtoa_r+0xb00>
   1a3b4:	4614      	mov	r4, r2
   1a3b6:	e7f8      	b.n	1a3aa <_dtoa_r+0xaf2>
   1a3b8:	4650      	mov	r0, r10
   1a3ba:	4629      	mov	r1, r5
   1a3bc:	f7fd fc39 	bl	17c32 <_Bfree>
   1a3c0:	f1b9 0f00 	cmp.w	r9, #0
   1a3c4:	d00c      	beq.n	1a3e0 <_dtoa_r+0xb28>
   1a3c6:	b12e      	cbz	r6, 1a3d4 <_dtoa_r+0xb1c>
   1a3c8:	454e      	cmp	r6, r9
   1a3ca:	d003      	beq.n	1a3d4 <_dtoa_r+0xb1c>
   1a3cc:	4650      	mov	r0, r10
   1a3ce:	4631      	mov	r1, r6
   1a3d0:	f7fd fc2f 	bl	17c32 <_Bfree>
   1a3d4:	4650      	mov	r0, r10
   1a3d6:	4649      	mov	r1, r9
   1a3d8:	f7fd fc2b 	bl	17c32 <_Bfree>
   1a3dc:	e000      	b.n	1a3e0 <_dtoa_r+0xb28>
   1a3de:	46b3      	mov	r11, r6
   1a3e0:	4650      	mov	r0, r10
   1a3e2:	9907      	ldr	r1, [sp, #28]
   1a3e4:	f7fd fc25 	bl	17c32 <_Bfree>
   1a3e8:	2300      	movs	r3, #0
   1a3ea:	9a20      	ldr	r2, [sp, #128]	; 0x80
   1a3ec:	7023      	strb	r3, [r4, #0]
   1a3ee:	f10b 0301 	add.w	r3, r11, #1
   1a3f2:	6013      	str	r3, [r2, #0]
   1a3f4:	9b22      	ldr	r3, [sp, #136]	; 0x88
   1a3f6:	b11b      	cbz	r3, 1a400 <_dtoa_r+0xb48>
   1a3f8:	601c      	str	r4, [r3, #0]
   1a3fa:	e001      	b.n	1a400 <_dtoa_r+0xb48>
   1a3fc:	480a      	ldr	r0, [pc, #40]	; (1a428 <_dtoa_r+0xb70>)
   1a3fe:	e00f      	b.n	1a420 <_dtoa_r+0xb68>
   1a400:	9808      	ldr	r0, [sp, #32]
   1a402:	e00d      	b.n	1a420 <_dtoa_r+0xb68>
   1a404:	9b06      	ldr	r3, [sp, #24]
   1a406:	2b00      	cmp	r3, #0
   1a408:	f73f aeca 	bgt.w	1a1a0 <_dtoa_r+0x8e8>
   1a40c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1a40e:	2b02      	cmp	r3, #2
   1a410:	f73f aea0 	bgt.w	1a154 <_dtoa_r+0x89c>
   1a414:	e6c4      	b.n	1a1a0 <_dtoa_r+0x8e8>
   1a416:	9b1e      	ldr	r3, [sp, #120]	; 0x78
   1a418:	2b02      	cmp	r3, #2
   1a41a:	f73f ae9b 	bgt.w	1a154 <_dtoa_r+0x89c>
   1a41e:	e6c4      	b.n	1a1aa <_dtoa_r+0x8f2>
   1a420:	b015      	add	sp, #84	; 0x54
   1a422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
   1a426:	bf00      	nop
   1a428:	0001c78e 	.word	0x0001c78e
   1a42c:	f3af 8000 	nop.w

0001a430 <__aeabi_d2uiz>:
   1a430:	004a      	lsls	r2, r1, #1
   1a432:	d211      	bcs.n	1a458 <__aeabi_d2uiz+0x28>
   1a434:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   1a438:	d211      	bcs.n	1a45e <__aeabi_d2uiz+0x2e>
   1a43a:	d50d      	bpl.n	1a458 <__aeabi_d2uiz+0x28>
   1a43c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   1a440:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1a444:	d40e      	bmi.n	1a464 <__aeabi_d2uiz+0x34>
   1a446:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1a44a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   1a44e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   1a452:	fa23 f002 	lsr.w	r0, r3, r2
   1a456:	4770      	bx	lr
   1a458:	f04f 0000 	mov.w	r0, #0
   1a45c:	4770      	bx	lr
   1a45e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1a462:	d102      	bne.n	1a46a <__aeabi_d2uiz+0x3a>
   1a464:	f04f 30ff 	mov.w	r0, #4294967295
   1a468:	4770      	bx	lr
   1a46a:	f04f 0000 	mov.w	r0, #0
   1a46e:	4770      	bx	lr

0001a470 <__aeabi_d2f>:
   1a470:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1a474:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   1a478:	bf24      	itt	cs
   1a47a:	f5b3 1c00 	subscs.w	r12, r3, #2097152	; 0x200000
   1a47e:	f1dc 5cfe 	rsbscs	r12, r12, #532676608	; 0x1fc00000
   1a482:	d90d      	bls.n	1a4a0 <__aeabi_d2f+0x30>
   1a484:	f001 4c00 	and.w	r12, r1, #2147483648	; 0x80000000
   1a488:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   1a48c:	ea4c 7050 	orr.w	r0, r12, r0, lsr #29
   1a490:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   1a494:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   1a498:	bf08      	it	eq
   1a49a:	f020 0001 	biceq.w	r0, r0, #1
   1a49e:	4770      	bx	lr
   1a4a0:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   1a4a4:	d121      	bne.n	1a4ea <__aeabi_d2f+0x7a>
   1a4a6:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   1a4aa:	bfbc      	itt	lt
   1a4ac:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   1a4b0:	4770      	bxlt	lr
   1a4b2:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1a4b6:	ea4f 5252 	mov.w	r2, r2, lsr #21
   1a4ba:	f1c2 0218 	rsb	r2, r2, #24
   1a4be:	f1c2 0c20 	rsb	r12, r2, #32
   1a4c2:	fa10 f30c 	lsls.w	r3, r0, r12
   1a4c6:	fa20 f002 	lsr.w	r0, r0, r2
   1a4ca:	bf18      	it	ne
   1a4cc:	f040 0001 	orrne.w	r0, r0, #1
   1a4d0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1a4d4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   1a4d8:	fa03 fc0c 	lsl.w	r12, r3, r12
   1a4dc:	ea40 000c 	orr.w	r0, r0, r12
   1a4e0:	fa23 f302 	lsr.w	r3, r3, r2
   1a4e4:	ea4f 0343 	mov.w	r3, r3, lsl #1
   1a4e8:	e7cc      	b.n	1a484 <__aeabi_d2f+0x14>
   1a4ea:	ea7f 5362 	mvns.w	r3, r2, asr #21
   1a4ee:	d107      	bne.n	1a500 <__aeabi_d2f+0x90>
   1a4f0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   1a4f4:	bf1e      	ittt	ne
   1a4f6:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   1a4fa:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   1a4fe:	4770      	bxne	lr
   1a500:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   1a504:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1a508:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   1a50c:	4770      	bx	lr
   1a50e:	bf00      	nop

0001a510 <_init>:
   1a510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1a512:	bf00      	nop
   1a514:	bcf8      	pop	{r3, r4, r5, r6, r7}
   1a516:	bc08      	pop	{r3}
   1a518:	469e      	mov	lr, r3
   1a51a:	4770      	bx	lr

0001a51c <_fini>:
   1a51c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1a51e:	bf00      	nop
   1a520:	bcf8      	pop	{r3, r4, r5, r6, r7}
   1a522:	bc08      	pop	{r3}
   1a524:	469e      	mov	lr, r3
   1a526:	4770      	bx	lr
   1a528:	25206425 	.word	0x25206425
   1a52c:	00000064 	.word	0x00000064
   1a530:	6c756f63 	.word	0x6c756f63
   1a534:	6f6e2064 	.word	0x6f6e2064
   1a538:	69702074 	.word	0x69702074
   1a53c:	74756f6e 	.word	0x74756f6e
   1a540:	00000000 	.word	0x00000000
   1a544:	6d6e6970 	.word	0x6d6e6970
   1a548:	6d207061 	.word	0x6d207061
   1a54c:	6d2d7369 	.word	0x6d2d7369
   1a550:	68637461 	.word	0x68637461
   1a554:	00000000 	.word	0x00000000
   1a558:	6d6e6970 	.word	0x6d6e6970
   1a55c:	6e207061 	.word	0x6e207061
   1a560:	6620746f 	.word	0x6620746f
   1a564:	646e756f 	.word	0x646e756f
   1a568:	726f6620 	.word	0x726f6620
   1a56c:	72657020 	.word	0x72657020
   1a570:	65687069 	.word	0x65687069
   1a574:	006c6172 	.word	0x006c6172
   1a578:	736e6970 	.word	0x736e6970
   1a57c:	206e6f20 	.word	0x206e6f20
   1a580:	73696874 	.word	0x73696874
   1a584:	726f7020 	.word	0x726f7020
   1a588:	61632074 	.word	0x61632074
   1a58c:	746f6e6e 	.word	0x746f6e6e
   1a590:	6e656720 	.word	0x6e656720
   1a594:	74617265 	.word	0x74617265
   1a598:	6e692065 	.word	0x6e692065
   1a59c:	72726574 	.word	0x72726574
   1a5a0:	73747075 	.word	0x73747075
   1a5a4:	00000000 	.word	0x00000000

0001a5a8 <PinMap_PWM>:
   1a5a8:	2009c032 00000001 00000002 2009c034     2.. ........4.. 
   1a5b8:	00000002 00000002 2009c035 00000003     ........5.. ....
   1a5c8:	00000002 2009c037 00000004 00000002     ....7.. ........
   1a5d8:	2009c038 00000005 00000002 2009c03a     8.. ........:.. 
   1a5e8:	00000006 00000002 2009c040 00000001     ........@.. ....
   1a5f8:	00000001 2009c041 00000002 00000001     ....A.. ........
   1a608:	2009c042 00000003 00000001 2009c043     B.. ........C.. 
   1a618:	00000004 00000001 2009c044 00000005     ........D.. ....
   1a628:	00000001 2009c045 00000006 00000001     ....E.. ........
   1a638:	2009c079 00000002 00000003 2009c07a     y.. ........z.. 
   1a648:	00000003 00000003 ffffffff ffffffff     ................
   1a658:	00000000                                ....

0001a65c <PinMap_UART_RTS>:
   1a65c:	2009c016 40010000 00000001 2009c047     ... ...@....G.. 
   1a66c:	40010000 00000002 ffffffff ffffffff     ...@............
   1a67c:	00000000                                ....

0001a680 <PinMap_UART_RX>:
   1a680:	2009c001 4009c000 00000002 2009c003     ... ...@....... 
   1a690:	4000c000 00000001 2009c00b 40098000     ...@....... ...@
   1a6a0:	00000001 2009c010 40010000 00000001     ....... ...@....
   1a6b0:	2009c01a 4009c000 00000003 2009c041     ... ...@....A.. 
   1a6c0:	40010000 00000002 2009c049 40098000     ...@....I.. ...@
   1a6d0:	00000002 2009c09d 4009c000 00000003     ....... ...@....
   1a6e0:	ffffffff ffffffff 00000000              ............

0001a6ec <PinMap_UART_TX>:
   1a6ec:	2009c000 4009c000 00000002 2009c002     ... ...@....... 
   1a6fc:	4000c000 00000001 2009c00a 40098000     ...@....... ...@
   1a70c:	00000001 2009c00f 40010000 00000001     ....... ...@....
   1a71c:	2009c019 4009c000 00000003 2009c040     ... ...@....@.. 
   1a72c:	40010000 00000002 2009c048 40098000     ...@....H.. ...@
   1a73c:	00000002 2009c09c 4009c000 00000003     ....... ...@....
   1a74c:	ffffffff ffffffff 00000000              ............

0001a758 <PinMap_UART_CTS>:
   1a758:	2009c011 40010000 00000001 2009c042     ... ...@....B.. 
   1a768:	40010000 00000002 ffffffff ffffffff     ...@............
	...

0001a780 <vtable for mbed::FileBase>:
	...
   1a788:	00001c85 00001cb5                       ........

0001a790 <vtable for mbed::FileLike>:
	...
   1a798:	00000b01 00000b01 00000b01 00000b01     ................
   1a7a8:	00000b01 00000b01 00001d51 00000000     ........Q.......
   1a7b8:	00000000 fffffffc 00000000 00000000     ................
	...

0001a7d0 <vtable for mbed::InterruptIn>:
	...
   1a7d8:	00001eb1 00001ec9                       ........

0001a7e0 <__stdin_name>:
   1a7e0:	6474732f 00006e69                       /stdin..

0001a7e8 <__stderr_name>:
   1a7e8:	6474732f 00727265                       /stderr.

0001a7f0 <__stdout_name>:
   1a7f0:	6474732f 0074756f                       /stdout.

0001a7f8 <vtable for mbed::FileHandle>:
	...
   1a800:	00000b01 00000b01 00000b01 00000b01     ................
   1a810:	00000b01 00000b01 00001d51 00000000     ........Q.......
	...
   1a828:	0070253a 65637845 6f697470 0000006e     :%p.Exception...

0001a838 <vtable for mbed::SerialBase>:
	...
   1a840:	00000129 00000161                       )...a...

0001a848 <vtable for mbed::Serial>:
	...
   1a850:	0000012d 000001ed 000022bd 000022c9     -........"..."..
   1a860:	ffffffb8 00000000 00002309 00002305     .........#...#..
   1a870:	00002335 00002365 00002361 00002369     5#..e#..a#..i#..
   1a880:	0000236d 00000151 00000215 000022cd     m#..Q........"..
   1a890:	000022c1 ffffffb4 00000000 00000159     ."..........Y...
   1a8a0:	0000021d 00000000                       ........

0001a8a8 <vtable for mbed::Stream>:
	...
   1a8b0:	00002309 00002305 00002335 00002365     .#...#..5#..e#..
   1a8c0:	00002361 00002369 0000236d 00000000     a#..i#..m#......
   1a8d0:	00000000 00000b01 00000b01 fffffffc     ................
	...
   1a8f0:	00002b77 00000000                       w+......

0001a8f8 <vtable for mbed::Ticker>:
	...
   1a900:	00000285 000002a1 00002405 00000000     .........$......

0001a910 <vtable for mbed::TimerEvent>:
	...
   1a920:	00000b01 00000000                       ........

0001a928 <vtable for std::basic_ios<char, std::char_traits<char> >>:
   1a928:	00000000 0001a96c 0000269d 000026c5     ....l....&...&..

0001a938 <vtable for std::basic_ios<wchar_t, std::char_traits<wchar_t> >>:
   1a938:	00000000 0001a9ac 000026b1 000026d7     .........&...&..

0001a948 <typeinfo name for std::basic_ios<wchar_t, std::char_traits<wchar_t> >>:
   1a948:	62397453 63697361 736f695f 74537749     St9basic_iosIwSt
   1a958:	68633131 745f7261 74696172 45774973     11char_traitsIwE
   1a968:	00000045                                E...

0001a96c <typeinfo for std::basic_ios<char, std::char_traits<char> >>:
   1a96c:	0001c228 0001a978 0001c340              (...x...@...

0001a978 <typeinfo name for std::basic_ios<char, std::char_traits<char> >>:
   1a978:	62397453 63697361 736f695f 74536349     St9basic_iosIcSt
   1a988:	68633131 745f7261 74696172 45634973     11char_traitsIcE
   1a998:	61620045 5f636973 3a736f69 656c633a     E.basic_ios::cle
   1a9a8:	00007261                                ar..

0001a9ac <typeinfo for std::basic_ios<wchar_t, std::char_traits<wchar_t> >>:
   1a9ac:	0001c228 0001a948 0001c340              (...H...@...

0001a9b8 <vtable for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >>:
   1a9b8:	00000000 0001aa44 000028d9 000028ff     ....D....(...(..
   1a9c8:	0000e1a7 0000e1a9 0000295f 0000286f     ........_)..o(..
   1a9d8:	00002953 0000e1e1 00002a8f 0000291f     S).......*...)..
   1a9e8:	00002911 00002933 00002a83 00002ab1     .)..3)...*...*..

0001a9f8 <vtable for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >>:
   1a9f8:	00000000 0001aa38 000028c5 000028ed     ....8....(...(..
   1aa08:	0000e20f 0000e211 0000299f 00002899     .........)...(..
   1aa18:	00002959 0000e249 000029ed 00002a27     Y)..I....)..'*..
   1aa28:	000029df 00002a3b 00002a5b 00002ad5     .)..;*..[*...*..

0001aa38 <typeinfo for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >>:
   1aa38:	0001c228 0001aa50 0001be18              (...P.......

0001aa44 <typeinfo for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >>:
   1aa44:	0001c228 0001aa86 0001be4c              (.......L...

0001aa50 <typeinfo name for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >>:
   1aa50:	5f5f394e 5f756e67 31787863 64747338     N9__gnu_cxx18std
   1aa60:	735f6f69 5f636e79 656c6966 49667562     io_sync_filebufI
   1aa70:	31745377 61686331 72745f72 73746961     wSt11char_traits
   1aa80:	45457749 394e0045                                IwEEE.

0001aa86 <typeinfo name for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >>:
   1aa86:	5f5f394e 5f756e67 31787863 64747338     N9__gnu_cxx18std
   1aa96:	735f6f69 5f636e79 656c6966 49667562     io_sync_filebufI
   1aaa6:	31745363 61686331 72745f72 73746961     cSt11char_traits
   1aab6:	45456349 c1600045                                IcEEE.

0001aabc <typeinfo for std::ctype_base>:
   1aabc:	0001c160 0001aac4                       `.......

0001aac4 <typeinfo name for std::ctype_base>:
   1aac4:	30317453 70797463 61625f65 00006573     St10ctype_base..

0001aad4 <typeinfo for std::money_base>:
   1aad4:	0001c160 0001aadc                       `.......

0001aadc <typeinfo name for std::money_base>:
   1aadc:	30317453 656e6f6d 61625f79 00006573     St10money_base..

0001aaec <typeinfo for std::messages_base>:
   1aaec:	0001c160 0001aaf4                       `.......

0001aaf4 <typeinfo name for std::messages_base>:
   1aaf4:	33317453 7373656d 73656761 7361625f     St13messages_bas
   1ab04:	00000065                                e...

0001ab08 <typeinfo for std::codecvt_base>:
   1ab08:	0001c160 0001ab10                       `.......

0001ab10 <typeinfo name for std::codecvt_base>:
   1ab10:	32317453 65646f63 5f747663 65736162     St12codecvt_base
   1ab20:	00000000                                ....

0001ab24 <typeinfo for std::time_base>:
   1ab24:	0001c160 0001ab2c                       `...,...

0001ab2c <typeinfo name for std::time_base>:
   1ab2c:	74397453 5f656d69 65736162 00000000     St9time_base....
   1ab3c:	00000000                                ....

0001ab40 <vtable for std::collate<wchar_t>>:
   1ab40:	00000000 0001adb8 00002f1d 00002f39     ........./..9/..
   1ab50:	00002f9b 0000301d 00002c13 00000000     ./...0...,......

0001ab60 <vtable for std::__ctype_abstract_base<wchar_t>>:
   1ab60:	00000000 0001b0c8 00000000 00000000     ................
   1ab70:	00000b01 00000b01 00000b01 00000b01     ................
   1ab80:	00000b01 00000b01 00000b01 00000b01     ................
   1ab90:	00000b01 00000b01 00000b01 00000b01     ................

0001aba0 <vtable for std::numpunct<wchar_t>>:
   1aba0:	00000000 0001b13c 00010a01 00010a21     ....<.......!...
   1abb0:	00002bfd 00002c03 00002c4d 00002cd9     .+...,..M,...,..
   1abc0:	00002ced 00000000                       .,......

0001abc8 <vtable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1abc8:	00000000 0001af18 00002dd5 00002e93     .........-......
   1abd8:	00006e0f 00006dd9 000072b5 000075b9     .n...m...r...u..
   1abe8:	000078bd 00007ce1 00008069 00006945     .x...|..i...Ei..
   1abf8:	000069d5 00006a65 000078f3 00000000     .i..ej...x......

0001ac08 <vtable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1ac08:	00000000 0001ae78 00002de9 00002ea5     ....x....-......
   1ac18:	00004737 00004839 00004981 00004b59     7G..9H...I..YK..
   1ac28:	00004ca9 00004e59 0000500d 000049a7     .L..YN...P...I..

0001ac38 <vtable for std::__timepunct_cache<wchar_t>>:
   1ac38:	00000000 0001adf0 00002dfd 00002eb7     .........-......

0001ac48 <vtable for std::__timepunct<wchar_t>>:
   1ac48:	00000000 0001b0bc 00002f4d 00002f89     ........M/.../..

0001ac58 <vtable for std::moneypunct<wchar_t, true>>:
   1ac58:	00000000 0001b054 00010779 00010799     ....T...y.......
   1ac68:	00002b9b 00002ba1 00002c39 00002c9d     .+...+..9,...,..
   1ac78:	00002cb1 00002cc5 00002ba7 00002bad     .,...,...+...+..
   1ac88:	00002bd5 00000000                       .+......

0001ac90 <vtable for std::moneypunct<wchar_t, false>>:
   1ac90:	00000000 0001ae58 000107ad 000107cd     ....X...........
   1aca0:	00002b39 00002b3f 00002c25 00002c61     9+..?+..%,..a,..
   1acb0:	00002c75 00002c89 00002b45 00002b4b     u,...,..E+..K+..
   1acc0:	00002b73 00000000                       s+......

0001acc8 <vtable for std::messages<wchar_t>>:
   1acc8:	00000000 0001af78 00002eed 00002f09     ....x......../..
   1acd8:	00002c0d 00010a41 00002c11 00000000     .,..A....,......

0001ace8 <vtable for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>>:
   1ace8:	00000000 0001afb8 00000000 00000000     ................
   1acf8:	00000b01 00000b01 00000b01 00000b01     ................
   1ad08:	00000b01 00000b01 00000b01 00000000     ................

0001ad18 <vtable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1ad18:	00000000 0001b074 00002d79 00002e5d     ....t...y-..]...
   1ad28:	000064bd 00006559                       .d..Ye..

0001ad30 <vtable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1ad30:	00000000 0001b028 00002d8d 00002e6f     ....(....-..o...
   1ad40:	0000440d 000044e1                       .D...D..

0001ad48 <vtable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1ad48:	00000000 0001b01c 00002e11 00002ec9     ................
   1ad58:	0000503b 00000000                       ;P......

0001ad60 <vtable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1ad60:	00000000 0001adfc 00002e25 00002edb     ........%.......
   1ad70:	00002c09 00005a15 00005a89 00005afd     .,...Z...Z...Z..
   1ad80:	00005ba7 00005c51                       .[..Q\..

0001ad88 <vtable for std::__moneypunct_cache<wchar_t, false>>:
   1ad88:	00000000 0001ae84 00002d01 00002e39     .........-..9...

0001ad98 <vtable for std::__moneypunct_cache<wchar_t, true>>:
   1ad98:	00000000 0001af0c 00002d3d 00002e4b     ........=-..K...

0001ada8 <vtable for std::__numpunct_cache<wchar_t>>:
   1ada8:	00000000 0001b034 00002da1 00002e81     ....4....-......

0001adb8 <typeinfo for std::collate<wchar_t>>:
   1adb8:	0001c228 0001aee8 0001c4d8              (...........

0001adc4 <typeinfo name for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>>:
   1adc4:	33327453 6f635f5f 76636564 62615f74     St23__codecvt_ab
   1add4:	61727473 625f7463 49657361 30316377     stract_baseIwc10
   1ade4:	73626d5f 65746174 0045745f              _mbstate_tE.

0001adf0 <typeinfo for std::__timepunct_cache<wchar_t>>:
   1adf0:	0001c228 0001af24 0001c4d8              (...$.......

0001adfc <typeinfo for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1adfc:	0001c1f8 0001b17b 00000000 00000002     ....{...........
   1ae0c:	0001c4d8 00000002 0001ab24 00000002     ........$.......

0001ae1c <typeinfo name for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1ae1c:	6d397453 79656e6f 7475705f 74537749     St9money_putIwSt
   1ae2c:	736f3931 61657274 6675626d 6574695f     19ostreambuf_ite
   1ae3c:	6f746172 53774972 63313174 5f726168     ratorIwSt11char_
   1ae4c:	69617274 77497374 00454545              traitsIwEEE.

0001ae58 <typeinfo for std::moneypunct<wchar_t, false>>:
   1ae58:	0001c1f8 0001b124 00000000 00000002     ....$...........
   1ae68:	0001c4d8 00000002 0001aad4 00000002     ................

0001ae78 <typeinfo for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1ae78:	0001c228 0001aeae 0001c4d8              (...........

0001ae84 <typeinfo for std::__moneypunct_cache<wchar_t, false>>:
   1ae84:	0001c228 0001ae90 0001c4d8              (...........

0001ae90 <typeinfo name for std::__moneypunct_cache<wchar_t, false>>:
   1ae90:	38317453 6f6d5f5f 7079656e 74636e75     St18__moneypunct
   1aea0:	6361635f 77496568 4530624c 74530045              _cacheIwLb0EE.

0001aeae <typeinfo name for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1aeae:	6e377453 705f6d75 77497475 39317453     St7num_putIwSt19
   1aebe:	7274736f 626d6165 695f6675 61726574     ostreambuf_itera
   1aece:	49726f74 31745377 61686331 72745f72     torIwSt11char_tr
   1aede:	73746961 45457749 74530045                       aitsIwEEE.

0001aee8 <typeinfo name for std::collate<wchar_t>>:
   1aee8:	63377453 616c6c6f 77496574 74530045              St7collateIwE.

0001aef6 <typeinfo name for std::moneypunct<wchar_t, true>>:
   1aef6:	30317453 656e6f6d 6e757079 77497463     St10moneypunctIw
   1af06:	4531624c c2280045                                Lb1EE.

0001af0c <typeinfo for std::__moneypunct_cache<wchar_t, true>>:
   1af0c:	0001c228 0001af98 0001c4d8              (...........

0001af18 <typeinfo for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1af18:	0001c228 0001af3d 0001c4d8              (...=.......

0001af24 <typeinfo name for std::__timepunct_cache<wchar_t>>:
   1af24:	37317453 69745f5f 7570656d 5f74636e     St17__timepunct_
   1af34:	68636163 45774965 37745300                       cacheIwE.

0001af3d <typeinfo name for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1af3d:	6e377453 675f6d75 77497465 39317453     St7num_getIwSt19
   1af4d:	72747369 626d6165 695f6675 61726574     istreambuf_itera
   1af5d:	49726f74 31745377 61686331 72745f72     torIwSt11char_tr
   1af6d:	73746961 45457749 f8000045                       aitsIwEEE..

0001af78 <typeinfo for std::messages<wchar_t>>:
   1af78:	0001c1f8 0001afd8 00000000 00000002     ................
   1af88:	0001c4d8 00000002 0001aaec 00000002     ................

0001af98 <typeinfo name for std::__moneypunct_cache<wchar_t, true>>:
   1af98:	38317453 6f6d5f5f 7079656e 74636e75     St18__moneypunct
   1afa8:	6361635f 77496568 4531624c 00000045     _cacheIwLb1EE...

0001afb8 <typeinfo for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>>:
   1afb8:	0001c1f8 0001adc4 00000000 00000002     ................
   1afc8:	0001c4d8 00000002 0001ab08 00000002     ................

0001afd8 <typeinfo name for std::messages<wchar_t>>:
   1afd8:	6d387453 61737365 49736567 53004577              St8messagesIwE.

0001afe7 <typeinfo name for std::__numpunct_cache<wchar_t>>:
   1afe7:	36317453 756e5f5f 6e75706d 635f7463     St16__numpunct_c
   1aff7:	65686361 00457749                       acheIwE.

0001afff <typeinfo name for std::__ctype_abstract_base<wchar_t>>:
   1afff:	31327453 74635f5f 5f657079 74736261     St21__ctype_abst
   1b00f:	74636172 7361625f 45774965 01c22800              ract_baseIwE.

0001b01c <typeinfo for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1b01c:	0001c228 0001b080 0001c4d8              (...........

0001b028 <typeinfo for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1b028:	0001c228 0001ae1c 0001c4d8              (...........

0001b034 <typeinfo for std::__numpunct_cache<wchar_t>>:
   1b034:	0001c228 0001afe7 0001c4d8              (...........

0001b040 <typeinfo name for std::__timepunct<wchar_t>>:
   1b040:	31317453 69745f5f 7570656d 4974636e     St11__timepunctI
   1b050:	00004577                                wE..

0001b054 <typeinfo for std::moneypunct<wchar_t, true>>:
   1b054:	0001c1f8 0001aef6 00000000 00000002     ................
   1b064:	0001c4d8 00000002 0001aad4 00000002     ................

0001b074 <typeinfo for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1b074:	0001c228 0001b0e8 0001c4d8              (...........

0001b080 <typeinfo name for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1b080:	74387453 5f656d69 49747570 31745377     St8time_putIwSt1
   1b090:	74736f39 6d616572 5f667562 72657469     9ostreambuf_iter
   1b0a0:	726f7461 74537749 68633131 745f7261     atorIwSt11char_t
   1b0b0:	74696172 45774973 00004545              raitsIwEEE..

0001b0bc <typeinfo for std::__timepunct<wchar_t>>:
   1b0bc:	0001c228 0001b040 0001c4d8              (...@.......

0001b0c8 <typeinfo for std::__ctype_abstract_base<wchar_t>>:
   1b0c8:	0001c1f8 0001afff 00000000 00000002     ................
   1b0d8:	0001c4d8 00000002 0001aabc 00000002     ................

0001b0e8 <typeinfo name for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1b0e8:	6d397453 79656e6f 7465675f 74537749     St9money_getIwSt
   1b0f8:	73693931 61657274 6675626d 6574695f     19istreambuf_ite
   1b108:	6f746172 53774972 63313174 5f726168     ratorIwSt11char_
   1b118:	69617274 77497374 00454545              traitsIwEEE.

0001b124 <typeinfo name for std::moneypunct<wchar_t, false>>:
   1b124:	30317453 656e6f6d 6e757079 77497463     St10moneypunctIw
   1b134:	4530624c 00000045                       Lb0EE...

0001b13c <typeinfo for std::numpunct<wchar_t>>:
   1b13c:	0001c228 0001b16c 0001c4d8 49534f50     (...l.......POSI
   1b14c:	2e250058 00664c2a 252f6d25 79252f64     X.%.*Lf.%m/%d/%y
   1b15c:	3a482500 25004d25 4d253a48 0053253a     .%H:%M.%H:%M:%S.

0001b16c <typeinfo name for std::numpunct<wchar_t>>:
   1b16c:	6e387453 75706d75 4974636e 53004577              St8numpunctIwE.

0001b17b <typeinfo name for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >>:
   1b17b:	74387453 5f656d69 49746567 31745377     St8time_getIwSt1
   1b18b:	74736939 6d616572 5f667562 72657469     9istreambuf_iter
   1b19b:	726f7461 74537749 68633131 745f7261     atorIwSt11char_t
   1b1ab:	74696172 45774973 41004545 4d50004d     raitsIwEEE.AM.PM
   1b1bb:	6e755300 00796164 646e6f4d 54007961     .Sunday.Monday.T
   1b1cb:	64736575 57007961 656e6465 79616473     uesday.Wednesday
   1b1db:	75685400 61647372 72460079 79616469     .Thursday.Friday
   1b1eb:	74615300 61647275 75530079 6f4d006e     .Saturday.Sun.Mo
   1b1fb:	7554006e 65570065 68540064 72460075     n.Tue.Wed.Thu.Fr
   1b20b:	61530069 614a0074 7261756e 65460079     i.Sat.January.Fe
   1b21b:	61757262 4d007972 68637261 72704100     bruary.March.Apr
   1b22b:	4d006c69 4a007961 00656e75 796c754a     il.May.June.July
   1b23b:	67754100 00747375 74706553 65626d65     .August.Septembe
   1b24b:	634f0072 65626f74 6f4e0072 626d6576     r.October.Novemb
   1b25b:	44007265 6d656365 00726562 006e614a     er.December.Jan.
   1b26b:	00626546 0072614d 00727041 006e754a     Feb.Mar.Apr.Jun.
   1b27b:	006c754a 00677541 00706553 0074634f     Jul.Aug.Sep.Oct.
   1b28b:	00766f4e 00636544 00002500 00006d00     Nov.Dec..%...m..
   1b29b:	00002f00 00002500 00006400 00002f00     ./...%...d.../..
   1b2ab:	00002500 00007900 00000000 00002500     .%...y.......%..
   1b2bb:	00004800 00003a00 00002500 00004d00     .H...:...%...M..
   1b2cb:	00003a00 00002500 00005300 00000000     .:...%...S......
   1b2db:	00004100 00004d00 00000000 00005000     .A...M.......P..
   1b2eb:	00004d00 00000000 00005300 00007500     .M.......S...u..
   1b2fb:	00006e00 00006400 00006100 00007900     .n...d...a...y..
   1b30b:	00000000 00004d00 00006f00 00006e00     .....M...o...n..
   1b31b:	00006400 00006100 00007900 00000000     .d...a...y......
   1b32b:	00005400 00007500 00006500 00007300     .T...u...e...s..
   1b33b:	00006400 00006100 00007900 00000000     .d...a...y......
   1b34b:	00005700 00006500 00006400 00006e00     .W...e...d...n..
   1b35b:	00006500 00007300 00006400 00006100     .e...s...d...a..
   1b36b:	00007900 00000000 00005400 00006800     .y.......T...h..
   1b37b:	00007500 00007200 00007300 00006400     .u...r...s...d..
   1b38b:	00006100 00007900 00000000 00004600     .a...y.......F..
   1b39b:	00007200 00006900 00006400 00006100     .r...i...d...a..
   1b3ab:	00007900 00000000 00005300 00006100     .y.......S...a..
   1b3bb:	00007400 00007500 00007200 00006400     .t...u...r...d..
   1b3cb:	00006100 00007900 00000000 00005300     .a...y.......S..
   1b3db:	00007500 00006e00 00000000 00004d00     .u...n.......M..
   1b3eb:	00006f00 00006e00 00000000 00005400     .o...n.......T..
   1b3fb:	00007500 00006500 00000000 00005700     .u...e.......W..
   1b40b:	00006500 00006400 00000000 00005400     .e...d.......T..
   1b41b:	00006800 00007500 00000000 00004600     .h...u.......F..
   1b42b:	00007200 00006900 00000000 00005300     .r...i.......S..
   1b43b:	00006100 00007400 00000000 00004a00     .a...t.......J..
   1b44b:	00006100 00006e00 00007500 00006100     .a...n...u...a..
   1b45b:	00007200 00007900 00000000 00004600     .r...y.......F..
   1b46b:	00006500 00006200 00007200 00007500     .e...b...r...u..
   1b47b:	00006100 00007200 00007900 00000000     .a...r...y......
   1b48b:	00004d00 00006100 00007200 00006300     .M...a...r...c..
   1b49b:	00006800 00000000 00004100 00007000     .h.......A...p..
   1b4ab:	00007200 00006900 00006c00 00000000     .r...i...l......
   1b4bb:	00004d00 00006100 00007900 00000000     .M...a...y......
   1b4cb:	00004a00 00007500 00006e00 00006500     .J...u...n...e..
   1b4db:	00000000 00004a00 00007500 00006c00     .....J...u...l..
   1b4eb:	00007900 00000000 00004100 00007500     .y.......A...u..
   1b4fb:	00006700 00007500 00007300 00007400     .g...u...s...t..
   1b50b:	00000000 00005300 00006500 00007000     .....S...e...p..
   1b51b:	00007400 00006500 00006d00 00006200     .t...e...m...b..
   1b52b:	00006500 00007200 00000000 00004f00     .e...r.......O..
   1b53b:	00006300 00007400 00006f00 00006200     .c...t...o...b..
   1b54b:	00006500 00007200 00000000 00004e00     .e...r.......N..
   1b55b:	00006f00 00007600 00006500 00006d00     .o...v...e...m..
   1b56b:	00006200 00006500 00007200 00000000     .b...e...r......
   1b57b:	00004400 00006500 00006300 00006500     .D...e...c...e..
   1b58b:	00006d00 00006200 00006500 00007200     .m...b...e...r..
   1b59b:	00000000 00004a00 00006100 00006e00     .....J...a...n..
   1b5ab:	00000000 00004600 00006500 00006200     .....F...e...b..
   1b5bb:	00000000 00004d00 00006100 00007200     .....M...a...r..
   1b5cb:	00000000 00004100 00007000 00007200     .....A...p...r..
   1b5db:	00000000 00004a00 00007500 00006e00     .....J...u...n..
   1b5eb:	00000000 00004a00 00007500 00006c00     .....J...u...l..
   1b5fb:	00000000 00004100 00007500 00006700     .....A...u...g..
   1b60b:	00000000 00005300 00006500 00007000     .....S...e...p..
   1b61b:	00000000 00004f00 00006300 00007400     .....O...c...t..
   1b62b:	00000000 00004e00 00006f00 00007600     .....N...o...v..
   1b63b:	00000000 00004400 00006500 00006300     .....D...e...c..
   1b64b:	00000000 01c22800                                .....

0001b650 <typeinfo for std::codecvt<wchar_t, char, _mbstate_t>>:
   1b650:	0001c228 0001b65c 0001afb8              (...\.......

0001b65c <typeinfo name for std::codecvt<wchar_t, char, _mbstate_t>>:
   1b65c:	63377453 6365646f 77497476 5f303163     St7codecvtIwc10_
   1b66c:	7473626d 5f657461 00004574              mbstate_tE..

0001b678 <vtable for std::codecvt<wchar_t, char, _mbstate_t>>:
   1b678:	00000000 0001b650 00008869 0000888d     ....P...i.......
   1b688:	0000865d 00008823 00008713 00008779     ]...#.......y...
   1b698:	0000882b 0000878b 00008787 00000000     +...............

0001b6a8 <vtable for std::codecvt<char, char, _mbstate_t>>:
   1b6a8:	00000000 0001b6f4 00008831 00008855     ........1...U...
   1b6b8:	000087e7 000087f5 000087fd 0000880b     ................
   1b6c8:	0000880f 00008813 0000881f 00000000     ................

0001b6d8 <typeinfo name for std::codecvt<char, char, _mbstate_t>>:
   1b6d8:	63377453 6365646f 63497476 5f303163     St7codecvtIcc10_
   1b6e8:	7473626d 5f657461 00004574              mbstate_tE..

0001b6f4 <typeinfo for std::codecvt<char, char, _mbstate_t>>:
   1b6f4:	0001c228 0001b6d8 0001bc10              (...........

0001b700 <vtable for std::collate<char>>:
   1b700:	00000000 0001bb88 00008cc9 00008ce5     ................
   1b710:	00008d47 00008dc1 000089bf 00000000     G...............

0001b720 <vtable for std::numpunct<char>>:
   1b720:	00000000 0001bb60 00010931 00010951     ....`...1...Q...
   1b730:	000089a5 000089ad 00008a71 00008a85     ........q.......
   1b740:	00008a99 00000000                       ........

0001b748 <vtable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >>:
   1b748:	00000000 0001bac0 00008b81 00008c3f     ............?...
   1b758:	0000cbcb 0000cb95 0000d08d 0000d3a5     ................
   1b768:	0000d6bd 0000daf9 0000de95 0000c6e5     ................
   1b778:	0000c775 0000c805 0000d6f3 00000000     u...............

0001b788 <vtable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >>:
   1b788:	00000000 0001b9b0 00008b95 00008c51     ............Q...
   1b798:	00009f51 00009f29 0000a187 0000a371     Q...).......q...
   1b7a8:	0000a4cd 0000a693 0000a85d 0000a1af     ........].......

0001b7b8 <vtable for std::__timepunct_cache<char>>:
   1b7b8:	00000000 0001bbc0 00008ba9 00008c63     ............c...

0001b7c8 <vtable for std::__timepunct<char>>:
   1b7c8:	00000000 0001baec 00008cf9 00008d35     ............5...

0001b7d8 <vtable for std::moneypunct<char, true>>:
   1b7d8:	00000000 0001bb34 000105e9 00010609     ....4...........
   1b7e8:	00008943 00008949 00008a21 00008a35     C...I...!...5...
   1b7f8:	00008a49 00008a5d 0000894f 00008955     I...]...O...U...
   1b808:	0000897d 00000000                       }.......

0001b810 <vtable for std::moneypunct<char, false>>:
   1b810:	00000000 0001bba0 0001061d 0001063d     ............=...
   1b820:	000088e1 000088e7 000089d1 000089e5     ................
   1b830:	000089f9 00008a0d 000088ed 000088f3     ................
   1b840:	0000891b 00000000                       ........

0001b848 <vtable for std::messages<char>>:
   1b848:	00000000 0001bcb8 00008c99 00008cb5     ................
   1b858:	000089b9 00010a33 000089bd 00000000     ....3...........

0001b868 <vtable for std::__codecvt_abstract_base<char, char, _mbstate_t>>:
   1b868:	00000000 0001bc10 00000000 00000000     ................
   1b878:	00000b01 00000b01 00000b01 00000b01     ................
   1b888:	00000b01 00000b01 00000b01 00000000     ................

0001b898 <vtable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >>:
   1b898:	00000000 0001bb94 00008b25 00008c09     ........%.......
   1b8a8:	0000c239 0000c2d5                       9.......

0001b8b0 <vtable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >>:
   1b8b0:	00000000 0001bb54 00008b39 00008c1b     ....T...9.......
   1b8c0:	0000ad15 0000aded                       ........

0001b8c8 <vtable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >>:
   1b8c8:	00000000 0001bb7c 00008bbd 00008c75     ....|.......u...
   1b8d8:	00009d4d 00000000                       M.......

0001b8e0 <vtable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >>:
   1b8e0:	00000000 0001bbcc 00008bd1 00008c87     ................
   1b8f0:	000089b5 0000b781 0000b7f5 0000b869     ............i...
   1b900:	0000b913 0000b9bd                       ........

0001b908 <vtable for std::__moneypunct_cache<char, false>>:
   1b908:	00000000 0001ba40 00008aad 00008be5     ....@...........

0001b918 <vtable for std::__moneypunct_cache<char, true>>:
   1b918:	00000000 0001bab4 00008ae9 00008bf7     ................

0001b928 <vtable for std::__numpunct_cache<char>>:
   1b928:	00000000 0001bbec 00008b4d 00008c2d     ........M...-...

0001b938 <typeinfo name for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >>:
   1b938:	6e377453 705f6d75 63497475 39317453     St7num_putIcSt19
   1b948:	7274736f 626d6165 695f6675 61726574     ostreambuf_itera
   1b958:	49726f74 31745363 61686331 72745f72     torIcSt11char_tr
   1b968:	73746961 45456349 74530045                       aitsIcEEE.

0001b972 <typeinfo name for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >>:
   1b972:	6d397453 79656e6f 7475705f 74536349     St9money_putIcSt
   1b982:	736f3931 61657274 6675626d 6574695f     19ostreambuf_ite
   1b992:	6f746172 53634972 63313174 5f726168     ratorIcSt11char_
   1b9a2:	69617274 63497374 00454545 c2280000              traitsIcEEE...

0001b9b0 <typeinfo for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >>:
   1b9b0:	0001c228 0001b938 0001c4d8              (...8.......

0001b9bc <typeinfo name for std::__moneypunct_cache<char, false>>:
   1b9bc:	38317453 6f6d5f5f 7079656e 74636e75     St18__moneypunct
   1b9cc:	6361635f 63496568 4530624c 74530045              _cacheIcLb0EE.

0001b9da <typeinfo name for std::__numpunct_cache<char>>:
   1b9da:	36317453 756e5f5f 6e75706d 635f7463     St16__numpunct_c
   1b9ea:	65686361 00456349                       acheIcE.

0001b9f2 <typeinfo name for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >>:
   1b9f2:	74387453 5f656d69 49747570 31745363     St8time_putIcSt1
   1ba02:	74736f39 6d616572 5f667562 72657469     9ostreambuf_iter
   1ba12:	726f7461 74536349 68633131 745f7261     atorIcSt11char_t
   1ba22:	74696172 45634973 53004545                       raitsIcEEE.

0001ba2d <typeinfo name for std::__timepunct<char>>:
   1ba2d:	31317453 69745f5f 7570656d 4974636e     St11__timepunctI
   1ba3d:	28004563                                         cE.

0001ba40 <typeinfo for std::__moneypunct_cache<char, false>>:
   1ba40:	0001c228 0001b9bc 0001c4d8              (...........

0001ba4c <typeinfo name for std::__codecvt_abstract_base<char, char, _mbstate_t>>:
   1ba4c:	33327453 6f635f5f 76636564 62615f74     St23__codecvt_ab
   1ba5c:	61727473 625f7463 49657361 30316363     stract_baseIcc10
   1ba6c:	73626d5f 65746174 0045745f              _mbstate_tE.

0001ba78 <typeinfo name for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >>:
   1ba78:	6d397453 79656e6f 7465675f 74536349     St9money_getIcSt
   1ba88:	73693931 61657274 6675626d 6574695f     19istreambuf_ite
   1ba98:	6f746172 53634972 63313174 5f726168     ratorIcSt11char_
   1baa8:	69617274 63497374 00454545              traitsIcEEE.

0001bab4 <typeinfo for std::__moneypunct_cache<char, true>>:
   1bab4:	0001c228 0001bacc 0001c4d8              (...........

0001bac0 <typeinfo for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >>:
   1bac0:	0001c228 0001baf8 0001c4d8              (...........

0001bacc <typeinfo name for std::__moneypunct_cache<char, true>>:
   1bacc:	38317453 6f6d5f5f 7079656e 74636e75     St18__moneypunct
   1badc:	6361635f 63496568 4531624c 00000045     _cacheIcLb1EE...

0001baec <typeinfo for std::__timepunct<char>>:
   1baec:	0001c228 0001ba2d 0001c4d8              (...-.......

0001baf8 <typeinfo name for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >>:
   1baf8:	6e377453 675f6d75 63497465 39317453     St7num_getIcSt19
   1bb08:	72747369 626d6165 695f6675 61726574     istreambuf_itera
   1bb18:	49726f74 31745363 61686331 72745f72     torIcSt11char_tr
   1bb28:	73746961 45456349 00000045              aitsIcEEE...

0001bb34 <typeinfo for std::moneypunct<char, true>>:
   1bb34:	0001c1f8 0001bc79 00000000 00000002     ....y...........
   1bb44:	0001c4d8 00000002 0001aad4 00000002     ................

0001bb54 <typeinfo for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >>:
   1bb54:	0001c228 0001b972 0001c4d8              (...r.......

0001bb60 <typeinfo for std::numpunct<char>>:
   1bb60:	0001c228 0001bb6c 0001c4d8              (...l.......

0001bb6c <typeinfo name for std::numpunct<char>>:
   1bb6c:	6e387453 75706d75 4974636e 00004563     St8numpunctIcE..

0001bb7c <typeinfo for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >>:
   1bb7c:	0001c228 0001b9f2 0001c4d8              (...........

0001bb88 <typeinfo for std::collate<char>>:
   1bb88:	0001c228 0001bc6b 0001c4d8              (...k.......

0001bb94 <typeinfo for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >>:
   1bb94:	0001c228 0001ba78 0001c4d8              (...x.......

0001bba0 <typeinfo for std::moneypunct<char, false>>:
   1bba0:	0001c1f8 0001bbf8 00000000 00000002     ................
   1bbb0:	0001c4d8 00000002 0001aad4 00000002     ................

0001bbc0 <typeinfo for std::__timepunct_cache<char>>:
   1bbc0:	0001c228 0001bc9e 0001c4d8              (...........

0001bbcc <typeinfo for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >>:
   1bbcc:	0001c1f8 0001bc30 00000000 00000002     ....0...........
   1bbdc:	0001c4d8 00000002 0001ab24 00000002     ........$.......

0001bbec <typeinfo for std::__numpunct_cache<char>>:
   1bbec:	0001c228 0001b9da 0001c4d8              (...........

0001bbf8 <typeinfo name for std::moneypunct<char, false>>:
   1bbf8:	30317453 656e6f6d 6e757079 63497463     St10moneypunctIc
   1bc08:	4530624c 00000045                       Lb0EE...

0001bc10 <typeinfo for std::__codecvt_abstract_base<char, char, _mbstate_t>>:
   1bc10:	0001c1f8 0001ba4c 00000000 00000002     ....L...........
   1bc20:	0001c4d8 00000002 0001ab08 00000002     ................

0001bc30 <typeinfo name for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >>:
   1bc30:	74387453 5f656d69 49746567 31745363     St8time_getIcSt1
   1bc40:	74736939 6d616572 5f667562 72657469     9istreambuf_iter
   1bc50:	726f7461 74536349 68633131 745f7261     atorIcSt11char_t
   1bc60:	74696172 45634973 53004545                       raitsIcEEE.

0001bc6b <typeinfo name for std::collate<char>>:
   1bc6b:	63377453 616c6c6f 63496574 74530045              St7collateIcE.

0001bc79 <typeinfo name for std::moneypunct<char, true>>:
   1bc79:	30317453 656e6f6d 6e757079 63497463     St10moneypunctIc
   1bc89:	4531624c 74530045                                Lb1EE.

0001bc8f <typeinfo name for std::messages<char>>:
   1bc8f:	6d387453 61737365 49736567 53004563              St8messagesIcE.

0001bc9e <typeinfo name for std::__timepunct_cache<char>>:
   1bc9e:	37317453 69745f5f 7570656d 5f74636e     St17__timepunct_
   1bcae:	68636163 45634965 c1f80000                       cacheIcE..

0001bcb8 <typeinfo for std::messages<char>>:
   1bcb8:	0001c1f8 0001bc8f 00000000 00000002     ................
   1bcc8:	0001c4d8 00000002 0001aaec 00000002     ................

0001bcd8 <VTT for std::istream>:
   1bcd8:	0001bcec 0001bd00                       ........

0001bce0 <vtable for std::istream>:
   1bce0:	00000008 00000000 0001bd60 0000e09d     ........`.......
   1bcf0:	0000e0af fffffff8 fffffff8 0001bd60     ............`...
   1bd00:	0000e0a5 0000e0c1                       ........

0001bd08 <VTT for std::basic_istream<wchar_t, std::char_traits<wchar_t> >>:
   1bd08:	0001bd1c 0001bd30                       ....0...

0001bd10 <vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >>:
   1bd10:	00000008 00000000 0001bd7c 0000e171     ........|...q...
   1bd20:	0000e183 fffffff8 fffffff8 0001bd7c     ............|...
   1bd30:	0000e179 0000e195                       y.......

0001bd38 <typeinfo name for std::basic_istream<wchar_t, std::char_traits<wchar_t> >>:
   1bd38:	33317453 69736162 73695f63 61657274     St13basic_istrea
   1bd48:	5377496d 63313174 5f726168 69617274     mIwSt11char_trai
   1bd58:	77497374 00004545                       tsIwEE..

0001bd60 <typeinfo for std::istream>:
   1bd60:	0001c1f8 0001bd78 00000000 00000001     ....x...........
   1bd70:	0001a96c fffff403                       l.......

0001bd78 <typeinfo name for std::istream>:
   1bd78:	00006953                                Si..

0001bd7c <typeinfo for std::basic_istream<wchar_t, std::char_traits<wchar_t> >>:
   1bd7c:	0001c1f8 0001bd38 00000000 00000001     ....8...........
   1bd8c:	0001a9ac fffff403 00000000              ............

0001bd98 <vtable for std::basic_streambuf<char, std::char_traits<char> >>:
   1bd98:	00000000 0001be4c 0000e261 0000e291     ....L...a.......
   1bda8:	0000e1a7 0000e1a9 0000e1ab 0000e1c1     ................
   1bdb8:	0000e1dd 0000e1e1 0000e375 0000e1e5     ........u.......
   1bdc8:	0000e1eb 0000e203 0000e2b5 0000e209     ................

0001bdd8 <vtable for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >>:
   1bdd8:	00000000 0001be18 0000e279 0000e2a3     ........y.......
   1bde8:	0000e20f 0000e211 0000e213 0000e229     ............)...
   1bdf8:	0000e245 0000e249 0000e3c7 0000e24d     E...I.......M...
   1be08:	0000e35d 0000e253 0000e307 0000e259     ]...S.......Y...

0001be18 <typeinfo for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >>:
   1be18:	0001c160 0001be20                       `... ...

0001be20 <typeinfo name for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >>:
   1be20:	35317453 69736162 74735f63 6d616572     St15basic_stream
   1be30:	49667562 31745377 61686331 72745f72     bufIwSt11char_tr
   1be40:	73746961 45457749 00000000              aitsIwEE....

0001be4c <typeinfo for std::basic_streambuf<char, std::char_traits<char> >>:
   1be4c:	0001c160 0001be54                       `...T...

0001be54 <typeinfo name for std::basic_streambuf<char, std::char_traits<char> >>:
   1be54:	35317453 69736162 74735f63 6d616572     St15basic_stream
   1be64:	49667562 31745363 61686331 72745f72     bufIcSt11char_tr
   1be74:	73746961 45456349 00000000              aitsIcEE....

0001be80 <VTT for std::ostream>:
   1be80:	0001be94 0001bea8                       ........

0001be88 <vtable for std::ostream>:
   1be88:	00000004 00000000 0001bef8 0000e581     ................
   1be98:	0000e593 fffffffc fffffffc 0001bef8     ................
   1bea8:	0000e589 0000e5a5                       ........

0001beb0 <VTT for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >>:
   1beb0:	0001bec4 0001bed8                       ........

0001beb8 <vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >>:
   1beb8:	00000004 00000000 0001bee0 0000e66d     ............m...
   1bec8:	0000e67f fffffffc fffffffc 0001bee0     ................
   1bed8:	0000e675 0000e691                       u.......

0001bee0 <typeinfo for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >>:
   1bee0:	0001c1f8 0001bf13 00000000 00000001     ................
   1bef0:	0001a9ac fffff403                       ........

0001bef8 <typeinfo for std::ostream>:
   1bef8:	0001c1f8 0001bf10 00000000 00000001     ................
   1bf08:	0001a96c fffff403                       l.......

0001bf10 <typeinfo name for std::ostream>:
   1bf10:	53006f53                                         So.

0001bf13 <typeinfo name for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >>:
   1bf13:	33317453 69736162 736f5f63 61657274     St13basic_ostrea
   1bf23:	5377496d 63313174 5f726168 69617274     mIwSt11char_trai
   1bf33:	77497374 25004545 5f203a73 736f705f     tsIwEE.%s: __pos
   1bf43:	68772820 20686369 25207369 2029757a      (which is %zu) 
   1bf53:	6874203e 3e2d7369 657a6973 28202928     > this->size() (
   1bf63:	63696877 73692068 757a2520 61620029     which is %zu).ba
   1bf73:	5f636973 69727473 3a3a676e 203a7461     sic_string::at: 
   1bf83:	206e5f5f 69687728 69206863 7a252073     __n (which is %z
   1bf93:	3e202975 6874203d 3e2d7369 657a6973     u) >= this->size
   1bfa3:	28202928 63696877 73692068 757a2520     () (which is %zu
   1bfb3:	61620029 5f636973 69727473 3a3a676e     ).basic_string::
   1bfc3:	79706f63 73616200 735f6369 6e697274     copy.basic_strin
   1bfd3:	633a3a67 61706d6f 62006572 63697361     g::compare.basic
   1bfe3:	7274735f 3a676e69 5f535f3a 61657263     _string::_S_crea
   1bff3:	62006574 63697361 7274735f 3a676e69     te.basic_string:
   1c003:	6172653a 62006573 63697361 7274735f     :erase.basic_str
   1c013:	3a676e69 5f4d5f3a 6c706572 5f656361     ing::_M_replace_
   1c023:	00787561 69736162 74735f63 676e6972     aux.basic_string
   1c033:	6e693a3a 74726573 73616200 735f6369     ::insert.basic_s
   1c043:	6e697274 723a3a67 616c7065 62006563     tring::replace.b
   1c053:	63697361 7274735f 3a676e69 7373613a     asic_string::ass
   1c063:	006e6769 69736162 74735f63 676e6972     ign.basic_string
   1c073:	70613a3a 646e6570 73616200 735f6369     ::append.basic_s
   1c083:	6e697274 723a3a67 7a697365 61620065     tring::resize.ba
   1c093:	5f636973 69727473 3a3a676e 635f535f     sic_string::_S_c
   1c0a3:	74736e6f 74637572 6c756e20 6f6e206c     onstruct null no
   1c0b3:	61762074 0064696c 69736162 74735f63     t valid.basic_st
   1c0c3:	676e6972 61623a3a 5f636973 69727473     ring::basic_stri
   1c0d3:	6200676e 63697361 7274735f 3a676e69     ng.basic_string:
   1c0e3:	6275733a 00727473 20746f6e 756f6e65     :substr.not enou
   1c0f3:	73206867 65636170 726f6620 726f6620     gh space for for
   1c103:	2074616d 61707865 6f69736e 5028206e     mat expansion (P
   1c113:	7361656c 75732065 74696d62 6c756620     lease submit ful
   1c123:	7562206c 65722067 74726f70 20746120     l bug report at 
   1c133:	70747468 672f2f3a 672e6363 6f2e756e     http://gcc.gnu.o
   1c143:	622f6772 2e736775 6c6d7468 200a3a29     rg/bugs.html):. 
   1c153:	00202020 00000000                                   ..

0001c158 <vtable for __cxxabiv1::__class_type_info>:
   1c158:	00000000 0001c188 0000f795 0000f7a9     ................
   1c168:	000111ab 000111af 0000f7d3 0000f753     ............S...
   1c178:	0000f7bb 0000f7fd 0000f787 00000000     ................

0001c188 <typeinfo for __cxxabiv1::__class_type_info>:
   1c188:	0001c228 0001c194 0001c590              (...........

0001c194 <typeinfo name for __cxxabiv1::__class_type_info>:
   1c194:	5f30314e 7878635f 76696261 5f373131     N10__cxxabiv117_
   1c1a4:	616c635f 745f7373 5f657079 6f666e69     _class_type_info
   1c1b4:	00000045                                E...

0001c1b8 <typeinfo for __cxxabiv1::__vmi_class_type_info>:
   1c1b8:	0001c228 0001c1c4 0001c188              (...........

0001c1c4 <typeinfo name for __cxxabiv1::__vmi_class_type_info>:
   1c1c4:	5f30314e 7878635f 76696261 5f313231     N10__cxxabiv121_
   1c1d4:	696d765f 616c635f 745f7373 5f657079     _vmi_class_type_
   1c1e4:	6f666e69 00000045 00000000              infoE.......

0001c1f0 <vtable for __cxxabiv1::__vmi_class_type_info>:
   1c1f0:	00000000 0001c1b8 0000f835 0000f849     ........5...I...
   1c200:	000111ab 000111af 0000f7d3 0000f753     ............S...
   1c210:	0000fb7f 0000f8fb 0000f85b 00000000     ........[.......

0001c220 <vtable for __cxxabiv1::__si_class_type_info>:
   1c220:	00000000 0001c250 0000fcad 0000fcc1     ....P...........
   1c230:	000111ab 000111af 0000f7d3 0000f753     ............S...
   1c240:	0000fd87 0000fd0b 0000fcd3 00000000     ................

0001c250 <typeinfo for __cxxabiv1::__si_class_type_info>:
   1c250:	0001c228 0001c25c 0001c188              (...\.......

0001c25c <typeinfo name for __cxxabiv1::__si_class_type_info>:
   1c25c:	5f30314e 7878635f 76696261 5f303231     N10__cxxabiv120_
   1c26c:	5f69735f 73616c63 79745f73 695f6570     _si_class_type_i
   1c27c:	456f666e 35745300                                nfoE.

0001c281 <typeinfo name for std::ctype<wchar_t>>:
   1c281:	63357453 65707974 00457749 f8000000              St5ctypeIwE....

0001c290 <typeinfo for std::ctype<char>>:
   1c290:	0001c1f8 0001c2f0 00000000 00000002     ................
   1c2a0:	0001c4d8 00000002 0001aabc 00000002     ................

0001c2b0 <typeinfo for std::ctype<wchar_t>>:
   1c2b0:	0001c228 0001c281 0001b0c8 00000000     (...............

0001c2c0 <vtable for std::ctype<char>>:
   1c2c0:	00000000 0001c290 0000fdb9 0000fde1     ................
   1c2d0:	00010831 00010841 00010861 00010871     1...A...a...q...
   1c2e0:	0000fdb1 0000fe03 0000fdb5 0000fdf3     ................

0001c2f0 <typeinfo name for std::ctype<char>>:
   1c2f0:	63357453 65707974 00456349 00000000     St5ctypeIcE.....

0001c300 <vtable for std::ctype<wchar_t>>:
   1c300:	00000000 0001c2b0 0000fe15 0000fe39     ............9...
   1c310:	000112d9 00011311 00011355 0001137f     ........U.......
   1c320:	00011299 0001129f 000112b9 000112bf     ................
   1c330:	000113a9 000113b1 000113cd 000113ef     ................

0001c340 <typeinfo for std::ios_base>:
   1c340:	0001c160 0001c348                       `...H...

0001c348 <typeinfo name for std::ios_base>:
   1c348:	69387453 625f736f 00657361 00000000     St8ios_base.....

0001c358 <vtable for std::ios_base>:
   1c358:	00000000 0001c340 0000ff35 0000ff6d     ....@...5...m...

0001c368 <std::money_base::_S_default_pattern>:
   1c368:	04000302 58782b2d 33323130 37363534     ....-+xX01234567
   1c378:	62613938 66656463 33323130 37363534     89abcdef01234567
   1c388:	42413938 46454443 782b2d00 32313058     89ABCDEF.-+xX012
   1c398:	36353433 61393837 65646362 43424166     3456789abcdefABC
   1c3a8:	00464544 3231302d 36353433 00393837     DEF.-0123456789.
   1c3b8:	00544d47 00545348 54534b41 54535000     GMT.HST.AKST.PST
   1c3c8:	54534d00 54534300 54534500 54534100     .MST.CST.EST.AST
   1c3d8:	54534e00 54454300 54534900 54454500     .NST.CET.IST.EET
   1c3e8:	54534a00 00000000 00000047 0000004d     .JST....G...M...
   1c3f8:	00000054 00000000 00000048 00000053     T.......H...S...
   1c408:	00000054 00000000 00000041 0000004b     T.......A...K...
   1c418:	00000053 00000054 00000000 00000050     S...T.......P...
   1c428:	00000053 00000054 00000000 0000004d     S...T.......M...
   1c438:	00000053 00000054 00000000 00000043     S...T.......C...
   1c448:	00000053 00000054 00000000 00000045     S...T.......E...
   1c458:	00000053 00000054 00000000 00000041     S...T.......A...
   1c468:	00000053 00000054 00000000 0000004e     S...T.......N...
   1c478:	00000053 00000054 00000000 00000043     S...T.......C...
   1c488:	00000045 00000054 00000000 00000049     E...T.......I...
   1c498:	00000053 00000054 00000000 00000045     S...T.......E...
   1c4a8:	00000045 00000054 00000000 0000004a     E...T.......J...
   1c4b8:	00000053 00000054 00000000              S...T.......

0001c4c4 <typeinfo name for std::locale::facet>:
   1c4c4:	3674534e 61636f6c 6635656c 74656361     NSt6locale5facet
   1c4d4:	00000045                                E...

0001c4d8 <typeinfo for std::locale::facet>:
   1c4d8:	0001c160 0001c4c4                       `.......

0001c4e0 <std::locale::facet::_S_c_name>:
   1c4e0:	4c250043 6f6c0066 656c6163 61663a3a     C.%Lf.locale::fa
   1c4f0:	3a746563 5f535f3a 61657263 635f6574     cet::_S_create_c
   1c500:	636f6c5f 20656c61 656d616e 746f6e20     _locale name not
   1c510:	6c617620 4c006469 54435f43 00455059      valid.LC_CTYPE.
   1c520:	4e5f434c 52454d55 4c004349 49545f43     LC_NUMERIC.LC_TI
   1c530:	4c00454d 4f435f43 54414c4c 434c0045     ME.LC_COLLATE.LC
   1c540:	4e4f4d5f 52415445 434c0059 53454d5f     _MONETARY.LC_MES
   1c550:	45474153 72740053 66006575 65736c61     SAGES.true.false
   1c560:	00000000 00000074 00000072 00000075     ....t...r...u...
   1c570:	00000065 00000000 00000066 00000061     e.......f...a...
   1c580:	0000006c 00000073 00000065 00000000     l...s...e.......

0001c590 <typeinfo for std::type_info>:
   1c590:	0001c160 0001c598                       `.......

0001c598 <typeinfo name for std::type_info>:
   1c598:	74397453 5f657079 6f666e69 61707300     St9type_info.spa
   1c5a8:	70006563 746e6972 746e6300 75006c72     ce.print.cntrl.u
   1c5b8:	72657070 776f6c00 61007265 6168706c     pper.lower.alpha
   1c5c8:	6e757000 78007463 69676964 6c610074     .punct.xdigit.al
   1c5d8:	006d756e 70617267 20000068                       num.graph.

0001c5e2 <_ctype_>:
   1c5e2:	20202000 20202020 28282020 20282828     .         ((((( 
   1c5f2:	20202020 20202020 20202020 20202020                     
   1c602:	10108820 10101010 10101010 10101010      ...............
   1c612:	04040410 04040404 10040404 10101010     ................
   1c622:	41411010 41414141 01010101 01010101     ..AAAAAA........
   1c632:	01010101 01010101 01010101 10101010     ................
   1c642:	42421010 42424242 02020202 02020202     ..BBBBBB........
   1c652:	02020202 02020202 02020202 10101010     ................
   1c662:	00000020 00000000 00000000 00000000      ...............
	...

0001c6e4 <__sf_fake_stdin>:
	...

0001c704 <__sf_fake_stdout>:
	...

0001c724 <__sf_fake_stderr>:
	...

0001c744 <_global_impure_ptr>:
   1c744:	10000174 2d23002e 00202b30 004c6c68     t.....#-0+ .hlL.
   1c754:	45676665 30004746 34333231 38373635     efgEFG.012345678
   1c764:	63626139 00666564 0001c78a 0001c78d     9abcdef.........
   1c774:	0001c790 61462d41 3938662d 33323130     ....A-Fa-f890123
   1c784:	37363534 2d2b005d 00303000 25005878     4567].+-.00.xX.%
   1c794:	2a2e2573 73250064 2a2e3025 002b0064     s%.*d.%s%0.*d.+.
   1c7a4:	00643225 64322e25 322e252f 2e252f64     %2d.%.2d/%.2d/%.
   1c7b4:	25006432 5900756c 2d6d252d 2e006425     2d.%lu.Y-%m-%d..
   1c7c4:	2500752a 0064332e 64322e25 322e253a     *u.%.3d.%.2d:%.2
   1c7d4:	2e253a64 25006432 6c33302b 322e2564     d:%.2d.%+03ld%.2
   1c7e4:	0000646c                                ld..

0001c7e8 <fpi.5242>:
   1c7e8:	00000035 fffffbce 000003cb 00000001     5...............
   1c7f8:	00000000 0000666e                       ....nf..

0001c800 <tinytens>:
   1c800:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   1c810:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   1c820:	64ac6f43 11680628                       Co.d(.h.

0001c828 <fpinan.5278>:
   1c828:	00000034 fffffbce 000003cb 00000001     4...............
   1c838:	00000000 25206125 65252062 3a482520     ....%a %b %e %H:
   1c848:	253a4d25 59252053 20612500 25206225     %M:%S %Y.%a %b %
   1c858:	48252065 3a4d253a 25205325 5925205a     e %H:%M:%S %Z %Y
   1c868:	00646d00 253a4925 53253a4d 00702520     .md.%I:%M:%S %p.

0001c878 <_C_time_locale>:
   1c878:	0001b267 0001b26b 0001b26f 0001b273     g...k...o...s...
   1c888:	0001b22e 0001b277 0001b27b 0001b27f     ....w...{.......
   1c898:	0001b283 0001b287 0001b28b 0001b28f     ................
   1c8a8:	0001b211 0001b219 0001b222 0001b228     ........"...(...
   1c8b8:	0001b22e 0001b232 0001b237 0001b23c     ....2...7...<...
   1c8c8:	0001b243 0001b24d 0001b255 0001b25e     C...M...U...^...
   1c8d8:	0001b1f5 0001b1f9 0001b1fd 0001b201     ................
   1c8e8:	0001b205 0001b209 0001b20d 0001b1bc     ................
   1c8f8:	0001b1c3 0001b1ca 0001b1d2 0001b1dc     ................
   1c908:	0001b1e5 0001b1ec 0001b163 0001b154     ........c...T...
   1c918:	0001c83c 0001b1b6 0001b1b9 0001c851     <...........Q...
   1c928:	0001b211 0001b219 0001b222 0001b228     ........"...(...
   1c938:	0001b22e 0001b232 0001b237 0001b23c     ....2...7...<...
   1c948:	0001b243 0001b24d 0001b255 0001b25e     C...M...U...^...
   1c958:	0001c869 0001c86c 0001c156 0001c156     i...l...V...V...
   1c968:	0001c156 0001c156 0001c156 00000025     V...V...V...%...
   1c978:	00000073 00000025 0000002e 0000002a     s...%.......*...
   1c988:	00000064 00000000 00000025 00000073     d.......%...s...
   1c998:	00000025 00000030 0000002e 0000002a     %...0.......*...
   1c9a8:	00000064 00000000 00000025 00000032     d.......%...2...
   1c9b8:	00000064 00000000 00000025 0000002e     d.......%.......
   1c9c8:	00000032 00000064 0000002f 00000025     2...d.../...%...
   1c9d8:	0000002e 00000032 00000064 0000002f     ....2...d.../...
   1c9e8:	00000025 0000002e 00000032 00000064     %.......2...d...
   1c9f8:	00000000 00000025 0000006c 00000075     ....%...l...u...
   1ca08:	00000000 00000059 0000002d 00000025     ....Y...-...%...
   1ca18:	0000006d 0000002d 00000025 00000064     m...-...%...d...
   1ca28:	00000000 0000002e 0000002a 00000075     ........*...u...
   1ca38:	00000000 00000025 0000002e 00000033     ....%.......3...
   1ca48:	00000064 00000000 00000025 0000002e     d.......%.......
   1ca58:	00000032 00000064 0000003a 00000025     2...d...:...%...
   1ca68:	0000002e 00000032 00000064 0000003a     ....2...d...:...
   1ca78:	00000025 0000002e 00000032 00000064     %.......2...d...
   1ca88:	00000000 00000025 0000002b 00000030     ....%...+...0...
   1ca98:	00000033 0000006c 00000064 00000025     3...l...d...%...
   1caa8:	0000002e 00000032 0000006c 00000064     ....2...l...d...
   1cab8:	00000000 6e616c62 0000006b 00000000     ....blank.......

0001cac8 <__mprec_tens>:
   1cac8:	00000000 3ff00000 00000000 40240000     .......?......$@
   1cad8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   1cae8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   1caf8:	00000000 412e8480 00000000 416312d0     .......A......cA
   1cb08:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   1cb18:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   1cb28:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   1cb38:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   1cb48:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   1cb58:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   1cb68:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   1cb78:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   1cb88:	79d99db4 44ea7843                       ...yCx.D

0001cb90 <__mprec_bigtens>:
   1cb90:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   1cba0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   1cbb0:	7f73bf3c 75154fdd                       <.s..O.u

0001cbb8 <p05.5277>:
   1cbb8:	00000005 00000019 0000007d              ........}...

0001cbc4 <zeroes.6760>:
   1cbc4:	00000030 00000030 00000030 00000030     0...0...0...0...
   1cbd4:	00000030 00000030 00000030 00000030     0...0...0...0...
   1cbe4:	00000030 00000030 00000030 00000030     0...0...0...0...
   1cbf4:	00000030 00000030 00000030 00000030     0...0...0...0...

0001cc04 <blanks.6759>:
   1cc04:	00000020 00000020 00000020 00000020      ... ... ... ...
   1cc14:	00000020 00000020 00000020 00000020      ... ... ... ...
   1cc24:	00000020 00000020 00000020 00000020      ... ... ... ...
   1cc34:	00000020 00000020 00000020 00000020      ... ... ... ...
   1cc44:	00000049 0000004e 00000046 00000000     I...N...F.......
   1cc54:	00000069 0000006e 00000066 00000000     i...n...f.......
   1cc64:	0000004e 00000041 0000004e 00000000     N...A...N.......
   1cc74:	0000006e 00000061 0000006e 00000000     n...a...n.......
   1cc84:	00000030 00000031 00000032 00000033     0...1...2...3...
   1cc94:	00000034 00000035 00000036 00000037     4...5...6...7...
   1cca4:	00000038 00000039 00000041 00000042     8...9...A...B...
   1ccb4:	00000043 00000044 00000045 00000046     C...D...E...F...
   1ccc4:	00000000 00000030 00000031 00000032     ....0...1...2...
   1ccd4:	00000033 00000034 00000035 00000036     3...4...5...6...
   1cce4:	00000037 00000038 00000039 00000061     7...8...9...a...
   1ccf4:	00000062 00000063 00000064 00000065     b...c...d...e...
   1cd04:	00000066 00000000 00000030 00000000     f.......0.......
   1cd14:	69666e49 7974696e 4e614e00 00000000     Infinity.NaN....

0001cd24 <__EH_FRAME_BEGIN__>:
   1cd24:	00000010 00000000 00527a01 010e7c02     .........zR..|..
   1cd34:	000d0c1b 00000010 00000018 ffff7b02     .............{..
   1cd44:	00000014 00000000                       ........

0001cd4c <__FRAME_END__>:
   1cd4c:	00000000                                ....
